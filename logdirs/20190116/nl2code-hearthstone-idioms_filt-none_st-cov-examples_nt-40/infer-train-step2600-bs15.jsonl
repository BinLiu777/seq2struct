{"beams": [{"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -0.016483206301927567, -0.000194549560546875, -4.9591064453125e-05, -0.0018998360028490424, -3.24249267578125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.0012674329336732626, -0.00020909305021632463, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000522613525390625, -0.000156402587890625, -2.0265538296371233e-06, -2.264974000354414e-06, -3.576278118089249e-07, -3.576278118089249e-07], "score": -0.04733269868302159, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -4.274029731750488, -0.004540788941085339, -0.001750946044921875, -4.57763671875e-05, -0.013220906257629395, -2.09808349609375e-05, 0.0, -0.0001735687255859375, -5.7220458984375e-06, -0.0019768476486206055, -0.00015568731760140508, 0.0, -2.86102294921875e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0008373260498046875, -0.000217437744140625, -1.6689272115399945e-06, -2.264974000354414e-06, -2.3841855067985307e-07, -3.576278118089249e-07], "score": -4.323424127070581, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "weapon", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroyweapon(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Destroyweapon", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -5.506609916687012, -0.17234690487384796, -0.009965880773961544, -0.0477142333984375, -4.76837158203125e-05, -0.016943693161010742, -1.33514404296875e-05, 0.0, -0.0001983642578125, -9.5367431640625e-06, -0.0016533136367797852, -0.00020670889352913946, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.0007343292236328125, -0.000171661376953125, -1.7881362737171003e-06, -2.622600959512056e-06, -3.576278118089249e-07, -4.768370445162873e-07], "score": -5.773966389824693, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "<UNK>", "weapon", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>weapon(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "<UNK>weapon", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -5.886157989501953, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -0.016483206301927567, -0.000194549560546875, -4.9591064453125e-05, -0.0018998360028490424, -3.24249267578125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.0012674329336732626, -0.00020909305021632463, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000522613525390625, -0.000156402587890625, -2.0265538296371233e-06, -2.264974000354414e-06, -3.576278118089249e-07, -3.576278118089249e-07], "score": -5.930548471136717, "choice_history": [77, 145, "Acidic", "<UNK>", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class Acidic<UNK>Ooze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "Acidic<UNK>Ooze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -6.015531539916992, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -0.016483206301927567, -0.000194549560546875, -4.9591064453125e-05, -0.0018998360028490424, -3.24249267578125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.0012674329336732626, -0.00020909305021632463, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000522613525390625, -0.000156402587890625, -2.0265538296371233e-06, -2.264974000354414e-06, -3.576278118089249e-07, -3.576278118089249e-07], "score": -6.060399289213819, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "<UNK> Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -6.292361736297607, -0.00029404606902971864, -1.064501702785492e-06, -7.748586540401448e-06, -5.960462772236497e-07, -9.5367431640625e-06, -0.000396728515625, -3.814697265625e-06, -3.0517578125e-05, -1.52587890625e-05, -2.288818359375e-05, -0.000247955322265625, -2.09808349609375e-05, -7.62939453125e-06, -0.002506331307813525, -7.498254853999242e-05, -0.0002896651567425579, -9.477137791691348e-05, -0.00014019012451171875, -1.9073486328125e-06, -3.814697265625e-05, -1.52587890625e-05, -0.000354766845703125, -0.0024566650390625, -3.24249267578125e-05, -1.52587890625e-05, -0.0031082623172551394, -4.887576324108522e-06, -0.0010852813720703125, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001506805419921875, -5.9604644775390625e-06, -7.62939453125e-06, -0.000438690185546875, -7.62939453125e-06, -0.009084437973797321, -0.01653890684247017, -0.000194549560546875, -4.9591064453125e-05, -0.0018962596077471972, -3.24249267578125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.0012674329336732626, -0.00021100039884913713, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005245208740234375, -0.0001583099365234375, -2.0265538296371233e-06, -2.264974000354414e-06, -3.576278118089249e-07, -3.576278118089249e-07], "score": -6.337653633760453, "choice_history": [77, 145, "Acidic", "Swamp", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwamp<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwamp<UNK>", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -6.436984062194824, -0.00011431922757765278, -0.0005168914794921875, -4.57763671875e-05, -0.0020455094054341316, -2.288818359375e-05, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.0013282297877594829, -0.00015699861978646368, 0.0, -4.38690185546875e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.00049591064453125, -0.0002040863037109375, -2.0265538296371233e-06, -2.3841830625315197e-06, -3.576278118089249e-07, -3.576278118089249e-07], "score": -6.468476209170831, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(DestroyDestroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "DestroyDestroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -6.557741641998291, -0.0004997196956537664, -0.029123306274414062, -4.00543212890625e-05, -0.002036087680608034, -9.5367431640625e-06, 0.0, -0.0001087188720703125, -3.814697265625e-06, -0.0015361307887360454, -0.00021743772958870977, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0003871917724609375, -7.2479248046875e-05, -1.6689270978531567e-06, -4.291525328881107e-06, -3.576278118089249e-07, -4.768370445162873e-07], "score": -6.609134203224983, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -6.018832206726074, -0.00012969970703125, -2.288818359375e-05, -0.9850314855575562, -2.0265579223632812e-06, -3.814697265625e-06, 0.0, -0.0009406805038452148, -2.3841855067985307e-07, -0.0010280609130859375, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001163482666015625, -1.1563301086425781e-05, -9.5367431640625e-06, -0.0004253387451171875, -1.52587890625e-05, -0.026346998289227486, -0.015851518139243126, -0.000293731689453125, -5.340576171875e-05, -0.002503989962860942, -1.71661376953125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -0.0015703438548371196, -0.0001999139494728297, 0.0, -4.57763671875e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0031108856201171875, -0.000331878662109375, -1.4543350516760256e-05, -4.768370445162873e-07, -1.0728830375228426e-06, -1.1920928244535389e-07], "score": -7.067008252534002, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 213, 75, 164, "MURLOC", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Destroy(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -6.018832206726074, -0.00012969970703125, -2.288818359375e-05, -1.2219547033309937, -9.179100743494928e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009120702743530273, -1.311301275563892e-06, -0.0027980804443359375, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.00030517578125, -9.655952453613281e-06, -5.7220458984375e-06, -0.0003414154052734375, -9.5367431640625e-06, -0.02324683591723442, -0.01676158420741558, -0.000293731689453125, -5.340576171875e-05, -0.002382396487519145, -1.71661376953125e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -0.0015792845515534282, -0.00019943711231462657, 0.0, -4.57763671875e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0016994476318359375, -0.000244140625, -7.86776035965886e-06, -7.152555099310121e-07, -7.152555099310121e-07, -2.3841855067985307e-07], "score": -7.301967394931438, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 213, 75, 164, "PIRATE", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Destroy(), WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "PIRATE", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -7.141849517822266, -8.880697714630514e-05, -0.1470623016357422, -0.0001068115234375, -0.036638498306274414, -1.1444091796875e-05, 0.0, -0.0002689361572265625, -9.5367431640625e-06, -0.0015604496002197266, -0.00018393993377685547, 0.0, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -0.000736236572265625, -9.34600830078125e-05, -8.344642310476047e-07, -6.198863957251888e-06, -2.3841855067985307e-07, -8.344646857949556e-07], "score": -7.34595598270343, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Draw", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Draw", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -7.187676429748535, -0.00012028217315673828, -0.2324666976928711, -8.392333984375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001697540283203125, -2.0265579223632812e-06, -3.814697265625e-06, -0.000240325927734375, -3.814697265625e-06, -0.007544712163507938, -0.010631680488586426, -0.0001678466796875, -4.57763671875e-05, -0.0021718721836805344, -2.09808349609375e-05, 0.0, -5.91278076171875e-05, -1.9073486328125e-06, -0.0010634654900059104, -0.00019764895841944963, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.00048065185546875, -0.0001316070556640625, -2.0265533748897724e-06, -2.622600959512056e-06, -3.576278118089249e-07, -3.576278118089249e-07], "score": -7.45585319699876, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "RARE", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, RARE=Battlecry(Destroy(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "RARE", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -5.506609916687012, -1.972969889640808, -0.006133058574050665, -0.0073413848876953125, -6.67572021484375e-05, -0.005156753119081259, -5.841255187988281e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, -0.0011621711309999228, -0.00017166136240120977, 0.0, -3.0517578125e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0005283355712890625, -0.00014495849609375, -1.6689270978531567e-06, -3.576272320060525e-06, -3.576278118089249e-07, -4.768370445162873e-07], "score": -7.517751092903325, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "<UNK>", "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "<UNK>Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -0.016483206301927567, -0.000194549560546875, -4.9591064453125e-05, -0.0018998360028490424, -3.24249267578125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -7.551525592803955, -0.00017868258873932064, -9.5367431640625e-06, 0.0, -2.1576881408691406e-05, 0.0, -3.814697265625e-06, -0.000385284423828125, -0.0001392364501953125, -1.3113002523823525e-06, -5.602820692729438e-06, -2.3841855067985307e-07, -5.960462772236497e-07], "score": -7.597409290701336, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -6.951424598693848, -0.0049114227294921875, -0.002300262451171875, -0.000396728515625, -0.0009002685546875, -3.814697265625e-06, -1.9073486328125e-06, -0.0016514062881469727, -1.3470649719238281e-05, -1.1444091796875e-05, -0.0029163360595703125, -3.814697265625e-06, -0.013054018840193748, -0.015184079296886921, -0.0005397796630859375, -0.000278472900390625, -0.003204226028174162, -1.33514404296875e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.0007761585293337703, -0.00042462346027605236, 0.0, -0.018736839294433594, -4.76837158203125e-05, 0.0, 0.0, -1.2806601524353027, -4.780292510986328e-05, -1.1920928244535389e-07, -0.0965261459350586, -0.0016155242919921875, -1.71661376953125e-05, -0.0033871978521347046, -0.07649178057909012, -0.3927001953125, 0.0, -0.13907121121883392, -0.0001035928726196289, -0.0008678436279296875, -3.814697265625e-06, 0.0, -5.340576171875e-05, 0.0, -4.57763671875e-05, -0.017045974731445312, -0.001201629638671875, -4.2436004150658846e-05, -4.768370445162873e-07, -9.536738616588991e-07, 0.0], "score": -9.042304714958611, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 43, 188, 206, 48, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 63, 171, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=(Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())), MinionSelector(Destroy(),\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "AcidicSwampOoze", "hole2": [{"value": {"args": [{"s": "Acidic Swamp Ooze", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"elts": [{"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "WeaponSelector", "hole1": {"id": "EnemyPlayer", "_type": "Name"}, "_type": "Template19"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Destroy", "_type": "Template25"}, {"hole0": "EnemyPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Tuple"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}], "index": 0}
{"beams": [{"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -0.15684330463409424, -1.9073486328125e-06, -0.00040435791015625, -0.0001049041748046875, -3.814697265625e-05, -6.103515625e-05, 0.0, -4.57763671875e-05, -0.0007250286871567369, -0.0012116432189941406, -9.5367431640625e-06, -0.06212139129638672, -0.0013370513916015625, -6.4849853515625e-05, -0.002201080322265625, -5.7220458984375e-06, 0.0, -0.005718231201171875, -7.62939453125e-06, -0.0006475448608398438, -0.0002307891845703125, -0.00021564960479736328, -6.866455078125e-05, -0.09430217742919922, -8.58306884765625e-05, -6.67572021484375e-05, -0.0002346038818359375, -0.0002117156982421875, -7.62939453125e-06, -0.027652740478515625, -0.00038909912109375, -1.9073486328125e-06, -0.000194549560546875, -5.14984130859375e-05, -0.0001678466796875, 0.0, -0.0001430511474609375, 0.0, -0.00020599365234375, -1.52587890625e-05, -7.2479248046875e-05, 0.0, -0.012799263000488281, 0.0, -0.00104522705078125, -0.0001125335693359375, -0.00012791156768798828, 0.0], "score": -0.7089951119526106, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -2.2567195892333984, -2.288818359375e-05, -1.33514404296875e-05, -0.0001392364501953125, -5.7220458984375e-06, -0.017238616943359375, -1.52587890625e-05, -0.010491371154785156, -0.006816864013671875, -0.000339508056640625, -1.9073486328125e-06, -0.0003814697265625, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -5.4001808166503906e-05, -1.9073486328125e-06, -0.11734068393707275, -1.9073486328125e-06, -0.0001239776611328125, -0.00067138671875, -5.14984130859375e-05, -0.0003032684326171875, -1.9073486328125e-06, -0.0001735687255859375, -0.0005469271563924849, -0.0018486976623535156, -7.62939453125e-06, -0.0751485824584961, -0.0017566680908203125, -8.0108642578125e-05, -0.0024785995483398438, -4.00543212890625e-05, 0.0, -0.0005283355712890625, -3.814697265625e-06, -0.0011272430419921875, -0.00012969970703125, -6.115436553955078e-05, -5.340576171875e-05, -0.05077850818634033, -3.635883331298828e-05, -8.20159912109375e-05, -0.0001544952392578125, -0.00019931793212890625, -5.7220458984375e-06], "score": -2.8850753359986285, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -0.15684330463409424, -1.9073486328125e-06, -0.00040435791015625, -0.0001049041748046875, -3.814697265625e-05, -6.103515625e-05, 0.0, -4.57763671875e-05, -0.0007250286871567369, -0.0012116432189941406, -9.5367431640625e-06, -0.06212139129638672, -0.0013370513916015625, -6.4849853515625e-05, -0.002201080322265625, -5.7220458984375e-06, 0.0, -0.005718231201171875, -7.62939453125e-06, -0.0006475448608398438, -0.0002307891845703125, -0.00021564960479736328, -6.866455078125e-05, -2.542482376098633, -3.814697265625e-05, -0.0013275146484375, -0.0001773834228515625, -0.00020599365234375, -1.52587890625e-05, -0.04055023193359375, -0.000202178955078125, 0.0, -0.000171661376953125, -2.09808349609375e-05, -0.0001316070556640625, 0.0, -0.0001621246337890625, 0.0, -0.0001544952392578125, -1.52587890625e-05, -7.43865966796875e-05, 0.0, -0.012661933898925781, 0.0, -0.0009593963623046875, -0.000110626220703125, -0.00012218952178955078, 0.0], "score": -3.1706907830341535, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_attack()), self)\n        self.target.taunt = True\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -0.15684330463409424, -1.9073486328125e-06, -0.00040435791015625, -0.0001049041748046875, -3.814697265625e-05, -6.103515625e-05, 0.0, -4.57763671875e-05, -0.0007250286871567369, -0.0012116432189941406, -9.5367431640625e-06, -3.2360944747924805, -0.000919342041015625, -0.0625779777765274, -2.264974000354414e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0001010894775390625, -5.7220458984375e-06, -0.20958995819091797, -0.0013980865478515625, -5.14984130859375e-05, -0.0032444000244140625, 0.0, -0.013171195983886719, 0.0, -0.0001354217529296875, 0.0, -5.7220458984375e-05, -2.288818359375e-05, -4.1961669921875e-05, 0.0, -0.017192840576171875, 0.0, -0.0007295608520507812, -9.918212890625e-05, -0.00010502338409423828, 0.0], "score": -4.044102930195997, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "full", "<EOS>", 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n        self.target.taunt = True\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 0, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -3.4745569229125977, 0.0, -5.7220458984375e-06, -0.000125885009765625, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -0.0004425048828125, -0.06027102470397949, -0.0006219148635864258, -1.1444091796875e-05, -0.25225353240966797, -0.0013456344604492188, -4.57763671875e-05, -0.002216339111328125, -3.814697265625e-06, 0.0, -0.012531280517578125, -7.62939453125e-06, -0.000698089599609375, -0.000202178955078125, -0.0002765655517578125, -6.866455078125e-05, -0.0978614091873169, -8.58306884765625e-05, -8.20159912109375e-05, -0.00025177001953125, -0.00022792816162109375, -5.7220458984375e-06, -0.029275894165039062, -0.000400543212890625, -1.9073486328125e-06, -0.0002384185791015625, -4.76837158203125e-05, -0.0001850128173828125, 0.0, -0.0001773834228515625, 0.0, -0.00023651123046875, -1.52587890625e-05, -6.4849853515625e-05, 0.0, -0.017879486083984375, 0.0, -0.00235748291015625, -0.0001049041748046875, -0.00015461444854736328, 0.0], "score": -4.29441286166206, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -0.15684330463409424, -1.9073486328125e-06, -0.00040435791015625, -0.0001049041748046875, -3.814697265625e-05, -6.103515625e-05, 0.0, -4.57763671875e-05, -0.0007250286871567369, -0.0012116432189941406, -9.5367431640625e-06, -0.06212139129638672, -0.0013370513916015625, -6.4849853515625e-05, -0.002201080322265625, -5.7220458984375e-06, 0.0, -0.005718231201171875, -7.62939453125e-06, -0.0006475448608398438, -0.0002307891845703125, -0.00021564960479736328, -6.866455078125e-05, -0.09430217742919922, -8.58306884765625e-05, -6.67572021484375e-05, -0.0002346038818359375, -0.0002117156982421875, -7.62939453125e-06, -4.16691780090332, -0.0002727508544921875, -0.0002689361572265625, -9.5367431640625e-06, -6.4849853515625e-05, -3.814697265625e-06, -9.1552734375e-05, -1.52587890625e-05, -7.748603820800781e-06, -3.814697265625e-06, -0.3800276517868042, 0.0, -0.000156402587890625, -5.53131103515625e-05, -4.57763671875e-05, -0.0011882781982421875, 0.0, -9.1552734375e-05, -0.0007331348606385291, -0.0018471479415893555, -5.7220458984375e-06, -0.08271026611328125, -0.0002117156982421875, -5.7220458984375e-05, -0.00165557861328125, -8.392333984375e-05, 0.0, -0.0004138946533203125, -7.62939453125e-06, -0.0012569427490234375, -0.0001373291015625, -6.687641143798828e-05, -4.57763671875e-05, -0.04975903034210205, -3.826618194580078e-05, -0.000102996826171875, -0.0001277923583984375, -0.00018978118896484375, -5.7220458984375e-06], "score": -5.3546935378365035, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.5817229747772217, -3.218649908376392e-06, -0.0008329529664479196, -7.62939453125e-06, -0.035980224609375, -0.0031566619873046875, -0.7710437774658203, -0.000789642333984375, -0.000156402587890625, -5.7220458984375e-06, -0.026045799255371094, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0065517425537109375, -1.33514404296875e-05, -0.0045528411865234375, 0.0, -0.0012598037719726562, -5.7220458984375e-06, -0.00013566017150878906, 0.0, -0.06704163551330566, 0.0, -0.0021256208419799805, -3.814697265625e-06, -0.0006923675537109375, -0.009881019592285156, -3.4332275390625e-05, -0.00022125244140625, -3.814697265625e-06, -0.007171630859375, 0.0, -0.0003795623779296875, 0.0, -0.05537700653076172, 0.0, -0.08212566375732422, -2.288818359375e-05, -8.20159912109375e-05, 0.0, -0.009624481201171875, -1.9073486328125e-06, -0.0031690597534179688, -5.7220458984375e-06, -0.00030231475830078125, -1.9073486328125e-06, -0.0001068115234375, -0.05994892120361328, -0.00244140625, -0.00426483154296875, -7.2479248046875e-05, -0.003200531005859375, 0.0, -0.009467124938964844, -0.012574195861816406, -3.24249267578125e-05, -0.2978830337524414, -1.71661376953125e-05, -0.20105242729187012, 0.0, -0.5750026702880859, 0.0, -3.814697265625e-06, -0.18095016479492188, -0.000415802001953125, -4.76837158203125e-05, -3.62396240234375e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.35428714752197266, 0.0, -1.9073486328125e-06, -0.05356121063232422, -0.00019073486328125, -4.76837158203125e-05, -4.38690185546875e-05, -0.0004825592041015625, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.151199340820312e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.07038402557373047, 0.0, -1.33514404296875e-05, -0.0001125335693359375, -1.71661376953125e-05, -0.000457763671875, 0.0, -4.57763671875e-05, -0.0009068192448467016, -0.000647425651550293, -9.5367431640625e-06, -0.041062355041503906, -0.000858306884765625, -6.4849853515625e-05, -0.0021982192993164062, -0.0003223419189453125, 0.0, -0.000377655029296875, -5.7220458984375e-06, -0.0018100738525390625, -4.1961669921875e-05, -5.543231964111328e-05, -2.09808349609375e-05, -0.05816185474395752, -2.8848648071289062e-05, -0.000209808349609375, -0.0001983642578125, -0.00030612945556640625, -3.814697265625e-06], "score": -5.718263435435112, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 11, 205, 53, 133, "targets", "<EOS>", 218, 97, 166, 25, 133, "target", "<EOS>", "increase_health", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            target.increase_health(2)\n            self.target.increase_health(2)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "test": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"comparators": [{"id": "targets", "_type": "Name"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "In"}], "_type": "Compare"}], "_type": "BoolOp"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.5817229747772217, -3.218649908376392e-06, -0.0008329529664479196, -7.62939453125e-06, -0.035980224609375, -0.0031566619873046875, -0.631770133972168, -5.53131103515625e-05, -0.09889507293701172, -1.9073486328125e-06, -0.00028228759765625, 0.0, -0.8715496063232422, -7.62939453125e-06, -0.05805206298828125, -1.9073486328125e-06, -0.0029458999633789062, -5.7220458984375e-06, -0.000110626220703125, 0.0, -0.10109817981719971, 0.0, -0.007245659828186035, -1.9073486328125e-06, -0.0005474090576171875, -0.0643911361694336, -1.9073486328125e-05, -0.0011920928955078125, -3.814697265625e-06, -0.028238296508789062, 0.0, -0.00089263916015625, 0.0, -0.05620574951171875, 0.0, -0.007853507995605469, -0.05708122253417969, -3.814697265625e-06, -0.1472949981689453, 0.0, -0.23211967945098877, 0.0, -0.05403900146484375, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-05, -3.24249267578125e-05, -0.0010433197021484375, -1.9073486328125e-06, -0.000946044921875, -0.0024350546300411224, -3.635883331298828e-05, -3.814697265625e-06, -0.06763935089111328, -0.0003261566162109375, -7.82012939453125e-05, -0.0022640228271484375, -0.0037384033203125, 0.0, -8.20159912109375e-05, -1.33514404296875e-05, -0.00231170654296875, -1.9073486328125e-05, -5.352497100830078e-05, -9.5367431640625e-06, -0.1306849718093872, -3.647804260253906e-05, -0.0001316070556640625, -0.000209808349609375, -0.0005598068237304688, -1.9073486328125e-06, -0.008453369140625, -0.0062274932861328125, -3.814697265625e-06, -0.10694599151611328, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00177001953125, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.208038330078125, 0.0, -8.7738037109375e-05, -0.000118255615234375, -2.86102294921875e-05, -0.0002994537353515625, 0.0, -4.76837158203125e-05, -0.0008969171904027462, -0.0003877878189086914, -5.7220458984375e-06, -0.04583263397216797, -0.0003185272216796875, -6.103515625e-05, -0.0024099349975585938, -0.00040435791015625, 0.0, -0.00032806396484375, -5.7220458984375e-06, -0.0022325515747070312, -2.86102294921875e-05, -4.971027374267578e-05, -2.09808349609375e-05, -0.14190208911895752, -5.733966827392578e-05, -0.000247955322265625, -0.0002422332763671875, -0.000934600830078125, -1.9073486328125e-06], "score": -5.897599465238493, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 21, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 217, 97, 166, 25, 133, "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        if self.target.card.minion_type is MINION_TYPE.DEMON:\n            target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "test": {"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.9337642192840576, -2.503394853192731e-06, -0.0006307363510131836, -3.814697265625e-06, -0.030368804931640625, -0.002033233642578125, -0.3899402618408203, -6.866455078125e-05, -0.11060047149658203, -1.9073486328125e-06, -0.0003070831298828125, 0.0, -0.7832822799682617, -7.62939453125e-06, -0.10608577728271484, -1.9073486328125e-06, -0.0018310546875, -3.814697265625e-06, -0.0001049041748046875, 0.0, -0.10303318500518799, 0.0, -0.008814454078674316, -1.9073486328125e-06, -0.0005950927734375, -0.06037712097167969, -2.09808349609375e-05, -0.0011348724365234375, -3.814697265625e-06, -0.02325439453125, 0.0, -0.0008487701416015625, 0.0, -0.05678367614746094, 0.0, -0.007607460021972656, -0.05770301818847656, -3.814697265625e-06, -0.15367889404296875, 0.0, -0.24109375476837158, 0.0, -0.05343818664550781, -1.9073486328125e-06, -9.5367431640625e-06, -7.43865966796875e-05, -3.24249267578125e-05, -0.001125335693359375, -1.9073486328125e-06, -0.0009918212890625, -0.0024375570937991142, -3.635883331298828e-05, -3.814697265625e-06, -0.06816387176513672, -0.0003509521484375, -8.0108642578125e-05, -0.0022840499877929688, -0.003742218017578125, 0.0, -8.20159912109375e-05, -1.33514404296875e-05, -0.0022974014282226562, -1.9073486328125e-05, -5.352497100830078e-05, -9.5367431640625e-06, -0.12553131580352783, -3.457069396972656e-05, -0.000125885009765625, -0.00020599365234375, -0.0005407333374023438, -1.9073486328125e-06, -0.009153366088867188, -0.006134033203125, -3.814697265625e-06, -0.10152053833007812, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0017385482788085938, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.2024240493774414, 0.0, -8.7738037109375e-05, -0.00011444091796875, -2.86102294921875e-05, -0.0002956390380859375, 0.0, -4.76837158203125e-05, -0.0009015661780722439, -0.0003877878189086914, -5.7220458984375e-06, -0.04549694061279297, -0.000335693359375, -6.103515625e-05, -0.0024328231811523438, -0.0003986358642578125, 0.0, -0.00032806396484375, -5.7220458984375e-06, -0.0021810531616210938, -2.86102294921875e-05, -4.971027374267578e-05, -2.09808349609375e-05, -0.13670647144317627, -5.543231964111328e-05, -0.00023651123046875, -0.00023651123046875, -0.0009164810180664062, -1.9073486328125e-06], "score": -5.960873571599215, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 89, 122, 21, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 217, 97, 166, 25, 133, "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if self.target.card.minion_type is MINION_TYPE.DEMON:\n            target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "test": {"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.9337642192840576, -2.503394853192731e-06, -0.0006307363510131836, -3.814697265625e-06, -0.030368804931640625, -0.002033233642578125, -1.1488094329833984, -0.0007114410400390625, -0.0001773834228515625, -5.7220458984375e-06, -0.021866798400878906, -3.814697265625e-06, -0.00012969970703125, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0066356658935546875, -1.52587890625e-05, -0.008150100708007812, 0.0, -0.00112152099609375, -5.7220458984375e-06, -0.00013184547424316406, 0.0, -0.058641791343688965, 0.0, -0.002297520637512207, -5.7220458984375e-06, -0.000701904296875, -0.009581565856933594, -3.814697265625e-05, -0.0001983642578125, -3.814697265625e-06, -0.00592041015625, 0.0, -0.0003833770751953125, 0.0, -0.05608177185058594, 0.0, -0.06838417053222656, -2.288818359375e-05, -8.58306884765625e-05, 0.0, -0.00971221923828125, -1.9073486328125e-06, -0.0030498504638671875, -5.7220458984375e-06, -0.0003108978271484375, -1.9073486328125e-06, -0.0001068115234375, -0.06007957458496094, -0.0024394989013671875, -0.004240989685058594, -7.2479248046875e-05, -0.0032806396484375, 0.0, -0.009275436401367188, -0.01218414306640625, -3.0517578125e-05, -0.3312864303588867, -1.71661376953125e-05, -0.2029416561126709, 0.0, -0.5758810043334961, 0.0, -3.814697265625e-06, -0.1764545440673828, -0.0004100799560546875, -4.57763671875e-05, -3.62396240234375e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001354217529296875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.35233211517333984, 0.0, -1.9073486328125e-06, -0.05441570281982422, -0.0002193450927734375, -4.76837158203125e-05, -4.57763671875e-05, -0.00051116943359375, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.151199340820312e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.07125377655029297, 0.0, -1.33514404296875e-05, -0.000110626220703125, -1.71661376953125e-05, -0.000453948974609375, 0.0, -4.57763671875e-05, -0.0009030045475810766, -0.0006531476974487305, -9.5367431640625e-06, -0.04117012023925781, -0.0008716583251953125, -6.4849853515625e-05, -0.0022020339965820312, -0.0003185272216796875, 0.0, -0.0003795623779296875, -5.7220458984375e-06, -0.0018014907836914062, -4.38690185546875e-05, -5.543231964111328e-05, -2.09808349609375e-05, -0.05798923969268799, -2.8848648071289062e-05, -0.000213623046875, -0.0001983642578125, -0.00030612945556640625, -3.814697265625e-06], "score": -6.448624978624132, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 89, 122, 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 11, 205, 53, 133, "targets", "<EOS>", 218, 97, 166, 25, 133, "target", "<EOS>", "increase_health", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            target.increase_health(2)\n            self.target.increase_health(2)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "test": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"comparators": [{"id": "targets", "_type": "Name"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "In"}], "_type": "Compare"}], "_type": "BoolOp"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.5817229747772217, -3.218649908376392e-06, -0.0008329529664479196, -7.62939453125e-06, -0.035980224609375, -0.0031566619873046875, -0.631770133972168, -5.53131103515625e-05, -0.09889507293701172, -1.9073486328125e-06, -0.00028228759765625, 0.0, -0.8276576995849609, -1.9073486328125e-06, -0.006232261657714844, 0.0, -0.00011646747589111328, 0.0, -0.7663793563842773, 0.0, -0.0002117156982421875, -0.1791973114013672, -2.86102294921875e-05, -0.006926536560058594, -1.9073486328125e-06, -0.08325004577636719, 0.0, -0.001384735107421875, 0.0, -0.05004405975341797, 0.0, -0.007077217102050781, -0.061199188232421875, -3.814697265625e-06, -0.16291522979736328, 0.0, -0.18099188804626465, 0.0, -0.05695152282714844, -1.9073486328125e-06, -9.5367431640625e-06, -8.0108642578125e-05, -3.4332275390625e-05, -0.0011234283447265625, -1.9073486328125e-06, -0.0008087158203125, -0.002518379595130682, -3.635883331298828e-05, -3.814697265625e-06, -0.07689571380615234, -0.000270843505859375, -7.82012939453125e-05, -0.0023221969604492188, -0.00408935546875, 0.0, -8.0108642578125e-05, -1.33514404296875e-05, -0.0023651123046875, -1.71661376953125e-05, -5.352497100830078e-05, -7.62939453125e-06, -0.12943947315216064, -3.647804260253906e-05, -0.000125885009765625, -0.0002079010009765625, -0.000568389892578125, -1.9073486328125e-06, -0.008594512939453125, -0.006359100341796875, -3.814697265625e-06, -0.10783863067626953, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0017480850219726562, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.20658588409423828, 0.0, -8.7738037109375e-05, -0.0001163482666015625, -2.86102294921875e-05, -0.00029754638671875, 0.0, -4.76837158203125e-05, -0.0009004931780509651, -0.0003858804702758789, -5.7220458984375e-06, -0.04633808135986328, -0.0003147125244140625, -6.103515625e-05, -0.0024290084838867188, -0.00040435791015625, 0.0, -0.00032806396484375, -5.7220458984375e-06, -0.002246856689453125, -2.86102294921875e-05, -4.971027374267578e-05, -2.09808349609375e-05, -0.13925087451934814, -5.543231964111328e-05, -0.0002422332763671875, -0.0002384185791015625, -0.0009307861328125, -1.9073486328125e-06], "score": -6.603271845927559, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 21, 114, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 217, 97, 166, 25, 133, "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        if self.target.minion_type is MINION_TYPE.DEMON:\n            target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "test": {"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.9337642192840576, -2.503394853192731e-06, -0.0006307363510131836, -3.814697265625e-06, -0.030368804931640625, -0.002033233642578125, -0.3899402618408203, -6.866455078125e-05, -0.11060047149658203, -1.9073486328125e-06, -0.0003070831298828125, 0.0, -0.8429470062255859, -1.9073486328125e-06, -0.005852699279785156, 0.0, -0.00012028217315673828, 0.0, -0.7552633285522461, 0.0, -0.0001964569091796875, -0.17408275604248047, -3.24249267578125e-05, -0.007025718688964844, -1.9073486328125e-06, -0.06998729705810547, 0.0, -0.0012969970703125, 0.0, -0.04932594299316406, 0.0, -0.006846427917480469, -0.06162261962890625, -3.814697265625e-06, -0.17528247833251953, 0.0, -0.18519675731658936, 0.0, -0.05611705780029297, -1.9073486328125e-06, -9.5367431640625e-06, -7.82012939453125e-05, -3.4332275390625e-05, -0.0011997222900390625, -1.9073486328125e-06, -0.0008602142333984375, -0.002521477174013853, -3.635883331298828e-05, -3.814697265625e-06, -0.0779123306274414, -0.0002918243408203125, -8.0108642578125e-05, -0.002349853515625, -0.004093170166015625, 0.0, -8.0108642578125e-05, -1.33514404296875e-05, -0.0023508071899414062, -1.71661376953125e-05, -5.352497100830078e-05, -7.62939453125e-06, -0.12458336353302002, -3.457069396972656e-05, -0.0001201629638671875, -0.00020599365234375, -0.0005512237548828125, -1.9073486328125e-06, -0.009347915649414062, -0.0062580108642578125, -5.7220458984375e-06, -0.10279464721679688, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0017232894897460938, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.2012462615966797, 0.0, -8.7738037109375e-05, -0.00011444091796875, -2.86102294921875e-05, -0.000293731689453125, 0.0, -4.76837158203125e-05, -0.0009052613750100136, -0.0003858804702758789, -5.7220458984375e-06, -0.04604911804199219, -0.000331878662109375, -6.29425048828125e-05, -0.0024518966674804688, -0.000400543212890625, 0.0, -0.00032806396484375, -5.7220458984375e-06, -0.002201080322265625, -2.86102294921875e-05, -4.971027374267578e-05, -2.09808349609375e-05, -0.13428032398223877, -5.352497100830078e-05, -0.0002307891845703125, -0.0002346038818359375, -0.0009126663208007812, -1.9073486328125e-06], "score": -6.7001628518009895, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 89, 122, 21, 114, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 217, 97, 166, 25, 133, "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if self.target.minion_type is MINION_TYPE.DEMON:\n            target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "current_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "test": {"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.5817229747772217, -3.218649908376392e-06, -0.0008329529664479196, -7.62939453125e-06, -0.035980224609375, -0.0031566619873046875, -0.7710437774658203, -0.000789642333984375, -0.000156402587890625, -5.7220458984375e-06, -0.026045799255371094, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0065517425537109375, -1.33514404296875e-05, -0.0045528411865234375, 0.0, -0.0012598037719726562, -5.7220458984375e-06, -0.00013566017150878906, 0.0, -0.06704163551330566, 0.0, -0.0021256208419799805, -3.814697265625e-06, -0.0006923675537109375, -0.009881019592285156, -3.4332275390625e-05, -0.00022125244140625, -3.814697265625e-06, -0.007171630859375, 0.0, -0.0003795623779296875, 0.0, -0.05537700653076172, 0.0, -0.08212566375732422, -2.288818359375e-05, -8.20159912109375e-05, 0.0, -0.009624481201171875, -1.9073486328125e-06, -0.0031690597534179688, -5.7220458984375e-06, -0.00030231475830078125, -1.9073486328125e-06, -0.0001068115234375, -0.05994892120361328, -0.00244140625, -0.00426483154296875, -7.2479248046875e-05, -0.003200531005859375, 0.0, -0.009467124938964844, -0.012574195861816406, -3.24249267578125e-05, -1.3576412200927734, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0010929107666015625, -3.814697265625e-06, -1.3470649719238281e-05, -3.814697265625e-06, -0.37896060943603516, 0.0, -1.9073486328125e-06, -0.9630641937255859, -8.58306884765625e-05, -9.72747802734375e-05, -3.0517578125e-05, 0.0, -1.1444091796875e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.1563301086425781e-05, -5.7220458984375e-06, -0.5328923463821411, 0.0, -1.9073486328125e-06, -0.04446601867675781, -0.0001659393310546875, -3.4332275390625e-05, -4.76837158203125e-05, -0.0005435943603515625, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -4.4345855712890625e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -0.02661418914794922, 0.0, -1.52587890625e-05, -0.0001316070556640625, -1.9073486328125e-05, -0.000247955322265625, 0.0, -4.1961669921875e-05, -0.00081335857976228, -0.0006301403045654297, -7.62939453125e-06, -0.045510292053222656, -0.0007572174072265625, -6.4849853515625e-05, -0.002288818359375, -0.000286102294921875, 0.0, -0.000377655029296875, -5.7220458984375e-06, -0.0017595291137695312, -4.00543212890625e-05, -5.161762237548828e-05, -2.288818359375e-05, -0.05824291706085205, -3.075599670410156e-05, -0.00016021728515625, -0.0001926422119140625, -0.00033664703369140625, -3.814697265625e-06], "score": -7.293617534126717, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 11, 205, 53, 133, "targets", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.increase_health(2)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "test": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"comparators": [{"id": "targets", "_type": "Name"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "In"}], "_type": "Compare"}], "_type": "BoolOp"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.5817229747772217, -3.218649908376392e-06, -0.0008329529664479196, -7.62939453125e-06, -0.035980224609375, -0.0031566619873046875, -0.631770133972168, -5.53131103515625e-05, -0.09889507293701172, -1.9073486328125e-06, -0.00028228759765625, 0.0, -0.8715496063232422, -7.62939453125e-06, -0.05805206298828125, -1.9073486328125e-06, -0.0029458999633789062, -5.7220458984375e-06, -0.000110626220703125, 0.0, -0.10109817981719971, 0.0, -0.007245659828186035, -1.9073486328125e-06, -0.0005474090576171875, -0.0643911361694336, -1.9073486328125e-05, -0.0011920928955078125, -3.814697265625e-06, -0.028238296508789062, 0.0, -0.00089263916015625, 0.0, -0.05620574951171875, 0.0, -0.007853507995605469, -0.05708122253417969, -3.814697265625e-06, -0.1472949981689453, 0.0, -0.23211967945098877, 0.0, -0.05403900146484375, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-05, -3.24249267578125e-05, -0.0010433197021484375, -1.9073486328125e-06, -0.000946044921875, -0.0024350546300411224, -3.635883331298828e-05, -3.814697265625e-06, -0.06763935089111328, -0.0003261566162109375, -7.82012939453125e-05, -0.0022640228271484375, -0.0037384033203125, 0.0, -8.20159912109375e-05, -1.33514404296875e-05, -0.00231170654296875, -1.9073486328125e-05, -5.352497100830078e-05, -9.5367431640625e-06, -0.1306849718093872, -3.647804260253906e-05, -0.0001316070556640625, -0.000209808349609375, -0.0005598068237304688, -1.9073486328125e-06, -0.008453369140625, -0.0062274932861328125, -3.814697265625e-06, -0.10694599151611328, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.00177001953125, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.208038330078125, 0.0, -8.7738037109375e-05, -0.000118255615234375, -2.86102294921875e-05, -0.0002994537353515625, 0.0, -4.76837158203125e-05, -0.0008969171904027462, -0.0003877878189086914, -5.7220458984375e-06, -0.04583263397216797, -0.0003185272216796875, -6.103515625e-05, -0.0024099349975585938, -0.00040435791015625, 0.0, -0.00032806396484375, -5.7220458984375e-06, -0.0022325515747070312, -2.86102294921875e-05, -4.971027374267578e-05, -2.09808349609375e-05, -2.3068294525146484, -3.0517578125e-05, -0.013916015625, -0.00018310546875, -0.0007772445678710938, -3.814697265625e-06], "score": -8.075953490125578, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 21, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 217, 97, 166, 25, 133, "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        if self.target.card.minion_type is MINION_TYPE.DEMON:\n            target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_attack()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "test": {"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -1.562119483947754, -3.814697265625e-06, -2.6702880859375e-05, -0.0070552825927734375, -1.52587890625e-05, -0.06671929359436035, -2.0265579223632812e-06, -0.0008535385131835938, -6.866455078125e-05, -0.0001773834228515625, -3.0517578125e-05, -0.0005550384521484375, -1.9073486328125e-06, -0.004907369613647461, 0.0, -0.01787865161895752, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.32503700256347656, -3.62396240234375e-05, -0.01686859130859375, -0.007878905162215233, 0.0, -0.5817229747772217, -3.218649908376392e-06, -0.0008329529664479196, -7.62939453125e-06, -0.035980224609375, -0.0031566619873046875, -0.7710437774658203, -0.000789642333984375, -0.000156402587890625, -5.7220458984375e-06, -0.026045799255371094, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0065517425537109375, -1.33514404296875e-05, -0.0045528411865234375, 0.0, -0.0012598037719726562, -5.7220458984375e-06, -0.00013566017150878906, 0.0, -0.06704163551330566, 0.0, -0.0021256208419799805, -3.814697265625e-06, -0.0006923675537109375, -0.009881019592285156, -3.4332275390625e-05, -0.00022125244140625, -3.814697265625e-06, -0.007171630859375, 0.0, -0.0003795623779296875, 0.0, -0.05537700653076172, 0.0, -0.08212566375732422, -2.288818359375e-05, -8.20159912109375e-05, 0.0, -0.009624481201171875, -1.9073486328125e-06, -0.0031690597534179688, -5.7220458984375e-06, -0.00030231475830078125, -1.9073486328125e-06, -0.0001068115234375, -0.05994892120361328, -0.00244140625, -0.00426483154296875, -7.2479248046875e-05, -0.003200531005859375, 0.0, -0.009467124938964844, -0.012574195861816406, -3.24249267578125e-05, -1.3576412200927734, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0010929107666015625, -3.814697265625e-06, -1.3470649719238281e-05, -3.814697265625e-06, -0.37896060943603516, 0.0, -1.9073486328125e-06, -0.6414947509765625, -5.7220458984375e-06, -0.47662782669067383, 0.0, -0.0001506805419921875, -0.00030517578125, -0.042349815368652344, 0.0, -7.05718994140625e-05, 0.0, -0.02177715301513672, -1.33514404296875e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.0683488845825195, 0.0, -0.0008449554443359375, -0.000133514404296875, -0.000125885009765625, -0.0128936767578125, 0.0, -0.0002765655517578125, -0.0017478464869782329, -0.0003072023391723633, -7.62939453125e-06, -0.10344696044921875, -9.34600830078125e-05, -4.76837158203125e-05, -0.0005130767822265625, -0.001514434814453125, 0.0, -0.000522613525390625, -5.7220458984375e-06, -0.014462471008300781, -4.57763671875e-05, -6.115436553955078e-05, -2.86102294921875e-05, -0.3180379867553711, -0.000102996826171875, -0.000736236572265625, -0.00042724609375, -0.0010671615600585938, -3.814697265625e-06, -0.0047054290771484375, -0.0055942535400390625, -3.814697265625e-06, -0.4024028778076172, -1.9073486328125e-06, -2.288818359375e-05, -3.814697265625e-06, -0.005728721618652344, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.3381776809692383, 0.0, -0.000133514404296875, -0.0002384185791015625, -4.76837158203125e-05, -0.0005435943603515625, 0.0, -0.000110626220703125, -0.0007646048907190561, -0.00028061866760253906, -5.7220458984375e-06, -0.055487632751464844, -0.000148773193359375, -5.14984130859375e-05, -0.0012416839599609375, -0.00098419189453125, 0.0, -0.0004177093505859375, -5.7220458984375e-06, -0.008091926574707031, -2.09808349609375e-05, -4.38690185546875e-05, -2.6702880859375e-05, -0.30179691314697266, -0.00011646747589111328, -0.0006866455078125, -0.0004291534423828125, -0.001209259033203125, -1.9073486328125e-06], "score": -9.451519181627411, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 17, 104, 42, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 49, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 11, 205, 53, 133, "targets", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.other_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(self)\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n        else:\n            self.target.heal(player.effective_heal_power(self.target.\n                calculate_max_health()), self)\n", "model_output": {"hole0": "AncestralHealing", "hole2": [{"value": {"args": [{"s": "Ancestral Healing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "test": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"comparators": [{"id": "targets", "_type": "Name"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "In"}], "_type": "Compare"}], "_type": "BoolOp"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 1}
{"beams": [{"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.117507815361023, 0.0, -0.1163492202758789, -0.6550874710083008, -0.6140737533569336, -0.011363029479980469, -0.001003265380859375, -2.09808349609375e-05, -0.000339508056640625, -1.9073486328125e-06, -0.013022780418395996, 0.0, -0.0006580352783203125, -0.11049461364746094, -0.00012969970703125, 0.0, -0.002437591552734375, 0.0, -0.0006705522537231445, 0.0, -0.004439830780029297, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, 0.0, -0.014034595340490341, -5.61460001335945e-05, -0.01502227783203125, -0.13954639434814453, -4.9591064453125e-05, -7.62939453125e-06, -0.010653665289282799, -3.576278118089249e-07, -0.0019873380661010742, -1.1920922133867862e-06, -0.0001983642578125, -0.00029754638671875, -0.0036163330078125, -3.814697265625e-06, -9.5367431640625e-06, -0.0004500150680541992, 0.0, -0.0002841949462890625, -0.0006580352783203125, -7.62939453125e-06, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -4.1961669921875e-05, -0.000152587890625, -8.96453857421875e-05, -1.52587890625e-05, -0.000400304765207693, 0.0, -0.0001964569091796875, -0.0003910064697265625, -1.9073486328125e-05, -0.00021970267698634416, 0.0, -9.1552734375e-05, -1.9073486328125e-05, -4.38690185546875e-05, -4.9591064453125e-05, -0.0006923675537109375, -1.71661376953125e-05, -5.53131103515625e-05, -3.814697265625e-05, -0.0049800872802734375, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.352455627871677e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0033931732177734375, 0.0, -0.0025691986083984375, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.495546793099493e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -3.1357790610183542, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -0.8064913749694824, 0.0, -0.08254241943359375, -0.4168415069580078, -0.0059947967529296875, -0.0006885528564453125, -3.62396240234375e-05, -0.0006256103515625, 0.0, -0.010985016822814941, 0.0, -0.0017118453979492188, -0.07383155822753906, -0.000202178955078125, -1.9073486328125e-06, -0.002410888671875, 0.0, -0.0007001161575317383, 0.0, -0.004699110984802246, 0.0, -3.814697265625e-05, -5.91278076171875e-05, 0.0, -0.0070769707672297955, -1.3351351299206726e-05, -0.03319740295410156, -0.11586380004882812, -3.62396240234375e-05, -9.5367431640625e-06, -0.006519064772874117, -2.3841855067985307e-07, -0.0024451017379760742, -3.576278118089249e-07, -0.00018310546875, -0.000278472900390625, -0.00377655029296875, -3.814697265625e-06, -9.5367431640625e-06, -0.00045037269592285156, 0.0, -0.0002689361572265625, -0.000308990478515625, -9.5367431640625e-06, 0.0, -0.0004215240478515625, 0.0, -4.1961669921875e-05, -0.0001506805419921875, -0.0001010894775390625, -1.52587890625e-05, -0.00043582916259765625, 0.0, -0.00025177001953125, -0.000396728515625, -1.9073486328125e-05, -0.00024092194507829845, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.0006732940673828125, -1.71661376953125e-05, -5.340576171875e-05, -3.814697265625e-05, -0.0051326751708984375, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.412058817455545e-05, -2.0265579223632812e-06, -0.000579833984375, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033702850341796875, 0.0, -0.002513885498046875, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.483625864144415e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -3.503189444790138, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.335870623588562, -0.004067420959472656, -0.0002727508544921875, -0.000377655029296875, -0.000164031982421875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.3667259216308594, -2.47955322265625e-05, -0.005817413330078125, -1.71661376953125e-05, -0.0037946701049804688, 0.0, -0.0011941194534301758, 0.0, -0.0031294822692871094, 0.0, -0.026963353157043457, -0.0002117156982421875, -0.8462342023849487, 0.0, -0.08026123046875, -0.4259471893310547, -0.0061740875244140625, -0.0006961822509765625, -3.4332275390625e-05, -0.0006046295166015625, 0.0, -0.011042237281799316, 0.0, -0.001796722412109375, -0.06959724426269531, -0.00022125244140625, -1.9073486328125e-06, -0.0023708343505859375, 0.0, -0.0007010698318481445, 0.0, -0.004680991172790527, 0.0, -3.814697265625e-05, -5.91278076171875e-05, 0.0, -0.007080427836626768, -1.3351351299206726e-05, -0.0335845947265625, -0.1166238784790039, -3.62396240234375e-05, -9.5367431640625e-06, -0.006516800262033939, -2.3841855067985307e-07, -0.002447962760925293, -3.576278118089249e-07, -0.00018310546875, -0.000278472900390625, -0.0037670135498046875, -3.814697265625e-06, -9.5367431640625e-06, -0.00044846534729003906, 0.0, -0.00026702880859375, -0.0003185272216796875, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -4.1961669921875e-05, -0.000152587890625, -0.0001010894775390625, -1.52587890625e-05, -0.00043404102325439453, 0.0, -0.000244140625, -0.000396728515625, -1.9073486328125e-05, -0.0002392530150245875, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.0006771087646484375, -1.71661376953125e-05, -5.340576171875e-05, -3.814697265625e-05, -0.005123138427734375, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.4001382522983477e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033721923828125, 0.0, -0.0025157928466796875, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.483625864144415e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -3.672352195503578, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -1.136521816253662, -0.0007448196411132812, -0.0003108978271484375, -0.0008935928344726562, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.5066509246826172, -2.6702880859375e-05, -0.0046901702880859375, -2.288818359375e-05, -0.003116607666015625, 0.0, -0.0011636018753051758, 0.0, -0.004313826560974121, 0.0, -0.023987889289855957, -0.00019073486328125, -0.8084765672683716, 0.0, -0.07505130767822266, -6.866455078125e-05, -0.00075531005859375, -1.33514404296875e-05, -0.0004444122314453125, 0.0, -0.010288357734680176, 0.0, -0.0017070770263671875, -0.07329845428466797, -0.0004177093505859375, -1.9073486328125e-06, -0.0023193359375, 0.0, -0.000790715217590332, 0.0, -0.005032896995544434, 0.0, -4.1961669921875e-05, -5.7220458984375e-05, 0.0, -0.007600181736052036, -1.1920858014491387e-05, -0.037567138671875, -0.10564422607421875, -3.4332275390625e-05, -9.5367431640625e-06, -0.006518232170492411, -1.1920928244535389e-07, -0.002478361129760742, -3.576278118089249e-07, -0.0001850128173828125, -0.0002803802490234375, -0.003696441650390625, -3.814697265625e-06, -9.5367431640625e-06, -0.00044655799865722656, 0.0, -0.0002651214599609375, -0.0003204345703125, -7.62939453125e-06, 0.0, -0.00042724609375, 0.0, -4.1961669921875e-05, -0.000156402587890625, -9.918212890625e-05, -1.52587890625e-05, -0.0004341602325439453, 0.0, -0.000232696533203125, -0.0003948211669921875, -1.9073486328125e-05, -0.0002355575270485133, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.00067901611328125, -1.71661376953125e-05, -5.14984130859375e-05, -3.814697265625e-05, -0.005096435546875, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.376296758186072e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003360748291015625, 0.0, -0.0025005340576171875, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -4.7517629897164895, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.335870623588562, -0.004067420959472656, -0.0002727508544921875, -0.000377655029296875, -0.000164031982421875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.3667259216308594, -2.47955322265625e-05, -0.005817413330078125, -1.71661376953125e-05, -0.0037946701049804688, 0.0, -0.0011941194534301758, 0.0, -0.0031294822692871094, 0.0, -0.026963353157043457, -0.0002117156982421875, -1.0942047834396362, -0.0008306503295898438, -0.0004138946533203125, -0.0008001327514648438, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000518798828125, -1.9073486328125e-06, -0.5248174667358398, -2.288818359375e-05, -0.0045928955078125, -2.288818359375e-05, -0.0031232833862304688, 0.0, -0.0011845827102661133, 0.0, -0.004310965538024902, 0.0, -0.023087620735168457, -0.0002040863037109375, -0.8023016452789307, 0.0, -0.07494258880615234, -7.05718994140625e-05, -0.0008182525634765625, -1.33514404296875e-05, -0.0004520416259765625, 0.0, -0.010324716567993164, 0.0, -0.001712799072265625, -0.07344436645507812, -0.000423431396484375, -1.9073486328125e-06, -0.002300262451171875, 0.0, -0.000790715217590332, 0.0, -0.005042433738708496, 0.0, -4.1961669921875e-05, -5.7220458984375e-05, 0.0, -0.007595413364470005, -1.2040065485052764e-05, -0.03772544860839844, -0.10569286346435547, -3.4332275390625e-05, -9.5367431640625e-06, -0.006521450821310282, -1.1920928244535389e-07, -0.002478361129760742, -3.576278118089249e-07, -0.0001850128173828125, -0.0002803802490234375, -0.00370025634765625, -3.814697265625e-06, -9.5367431640625e-06, -0.00044655799865722656, 0.0, -0.0002651214599609375, -0.0003261566162109375, -7.62939453125e-06, 0.0, -0.00042724609375, 0.0, -4.1961669921875e-05, -0.000156402587890625, -9.72747802734375e-05, -1.52587890625e-05, -0.0004322528839111328, 0.0, -0.0002288818359375, -0.0003948211669921875, -1.9073486328125e-05, -0.00023567672178614885, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.0006809234619140625, -1.71661376953125e-05, -5.14984130859375e-05, -3.814697265625e-05, -0.0050907135009765625, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.3643765568267554e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003360748291015625, 0.0, -0.00250244140625, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -4.846447948165341, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -1.062382698059082, -5.7220458984375e-06, -0.0097198486328125, 0.0, -0.005634307861328125, 0.0, -0.1648792028427124, -1.9073486328125e-06, -1.194549798965454, 0.0, -0.13163280487060547, -0.5615339279174805, -0.0071506500244140625, -0.00054168701171875, -3.24249267578125e-05, -0.0003833770751953125, 0.0, -0.010071635246276855, 0.0, -0.00148773193359375, -0.06786346435546875, -0.0001468658447265625, -1.9073486328125e-06, -0.00217437744140625, 0.0, -0.0006657838821411133, 0.0, -0.004684805870056152, 0.0, -4.00543212890625e-05, -6.29425048828125e-05, 0.0, -0.006873122416436672, -1.3708974620385561e-05, -0.03162574768066406, -0.11576366424560547, -3.814697265625e-05, -9.5367431640625e-06, -0.0063864910043776035, -2.3841855067985307e-07, -0.00232696533203125, -3.576278118089249e-07, -0.00017547607421875, -0.0002727508544921875, -0.003940582275390625, -3.814697265625e-06, -9.5367431640625e-06, -0.00045239925384521484, 0.0, -0.00026702880859375, -0.0003261566162109375, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -4.38690185546875e-05, -0.0001544952392578125, -9.918212890625e-05, -1.52587890625e-05, -0.00041878223419189453, 0.0, -0.0002422332763671875, -0.0003948211669921875, -1.9073486328125e-05, -0.0002374648756813258, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.0006771087646484375, -1.71661376953125e-05, -5.340576171875e-05, -3.814697265625e-05, -0.00510406494140625, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.4001382522983477e-05, -2.0265579223632812e-06, -0.000579833984375, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003376007080078125, 0.0, -0.002521514892578125, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.483625864144415e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -4.851809846018938, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 71, 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -1.995272159576416, -0.0043659210205078125, -0.0002384185791015625, -0.0013217926025390625, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003681182861328125, -1.9073486328125e-06, -0.5373220443725586, -3.0517578125e-05, -0.004566192626953125, -2.09808349609375e-05, -0.0030002593994140625, 0.0, -0.0011979341506958008, 0.0, -0.0031789541244506836, 0.0, -0.026409268379211426, -0.0001697540283203125, -0.8476580381393433, 0.0, -0.07920265197753906, -7.05718994140625e-05, -0.00074005126953125, -1.33514404296875e-05, -0.0004119873046875, 0.0, -0.010343790054321289, 0.0, -0.0016431808471679688, -0.08044624328613281, -0.0004711151123046875, -1.9073486328125e-06, -0.0022430419921875, 0.0, -0.0007935762405395508, 0.0, -0.005074024200439453, 0.0, -4.1961669921875e-05, -5.7220458984375e-05, 0.0, -0.007618897594511509, -1.1920858014491387e-05, -0.03809356689453125, -0.10551261901855469, -3.4332275390625e-05, -9.5367431640625e-06, -0.006518232170492411, -1.1920928244535389e-07, -0.0024802684783935547, -3.576278118089249e-07, -0.0001850128173828125, -0.00028228759765625, -0.0036983489990234375, -3.814697265625e-06, -9.5367431640625e-06, -0.00044655799865722656, 0.0, -0.0002651214599609375, -0.0003261566162109375, -7.62939453125e-06, 0.0, -0.00042724609375, 0.0, -4.1961669921875e-05, -0.000156402587890625, -9.72747802734375e-05, -1.52587890625e-05, -0.0004341602325439453, 0.0, -0.0002288818359375, -0.0003948211669921875, -1.9073486328125e-05, -0.00023567672178614885, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.0006809234619140625, -1.71661376953125e-05, -5.14984130859375e-05, -3.814697265625e-05, -0.0050907135009765625, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.3643765568267554e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003360748291015625, 0.0, -0.00250244140625, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -5.697047594735459, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.335870623588562, -0.004067420959472656, -0.0002727508544921875, -0.000377655029296875, -0.000164031982421875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.3667259216308594, -2.47955322265625e-05, -0.005817413330078125, -1.71661376953125e-05, -0.0037946701049804688, 0.0, -0.0011941194534301758, 0.0, -0.0031294822692871094, 0.0, -0.026963353157043457, -0.0002117156982421875, -1.9088352918624878, -0.0054073333740234375, -0.0003833770751953125, -0.0010013580322265625, -7.43865966796875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.00041961669921875, -1.9073486328125e-06, -0.5437898635864258, -2.6702880859375e-05, -0.0044994354248046875, -2.09808349609375e-05, -0.00308990478515625, 0.0, -0.0012036561965942383, 0.0, -0.003420233726501465, 0.0, -0.02534496784210205, -0.00018310546875, -0.8387198448181152, 0.0, -0.0773935317993164, -7.2479248046875e-05, -0.000782012939453125, -1.33514404296875e-05, -0.000423431396484375, 0.0, -0.010327696800231934, 0.0, -0.001708984375, -0.076751708984375, -0.000461578369140625, -1.9073486328125e-06, -0.0022563934326171875, 0.0, -0.0007973909378051758, 0.0, -0.005046367645263672, 0.0, -4.1961669921875e-05, -5.7220458984375e-05, 0.0, -0.007596486248075962, -1.1920858014491387e-05, -0.03813743591308594, -0.10573673248291016, -3.4332275390625e-05, -9.5367431640625e-06, -0.0065194242633879185, -1.1920928244535389e-07, -0.0024802684783935547, -3.576278118089249e-07, -0.0001850128173828125, -0.00028228759765625, -0.0036983489990234375, -3.814697265625e-06, -9.5367431640625e-06, -0.00044655799865722656, 0.0, -0.0002651214599609375, -0.000331878662109375, -7.62939453125e-06, 0.0, -0.0004291534423828125, 0.0, -4.38690185546875e-05, -0.0001583099365234375, -9.72747802734375e-05, -1.52587890625e-05, -0.0004322528839111328, 0.0, -0.000225067138671875, -0.0003948211669921875, -1.9073486328125e-05, -0.00023388858244288713, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.000682830810546875, -1.71661376953125e-05, -5.14984130859375e-05, -3.814697265625e-05, -0.0050868988037109375, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.352455627871677e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033626556396484375, 0.0, -0.00250244140625, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -5.728541735360459, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Huffer(), hearthbreaker.cards.minions.\n            hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -1.136521816253662, -0.0007448196411132812, -0.0003108978271484375, -0.0008935928344726562, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.9302921295166016, -7.62939453125e-06, -0.013427734375, 0.0, -0.006602287292480469, 0.0, -0.16384446620941162, -1.9073486328125e-06, -1.2739571332931519, 0.0, -0.11136436462402344, -6.67572021484375e-05, -0.0004901885986328125, -1.52587890625e-05, -0.0004100799560546875, 0.0, -0.008209943771362305, 0.0, -0.0013360977172851562, -0.03417491912841797, -0.0002536773681640625, -1.9073486328125e-06, -0.0022449493408203125, 0.0, -0.0007697343826293945, 0.0, -0.004845142364501953, 0.0, -4.1961669921875e-05, -6.29425048828125e-05, 0.0, -0.007123105227947235, -1.2397689715726301e-05, -0.03629302978515625, -0.10805034637451172, -3.4332275390625e-05, -9.5367431640625e-06, -0.006442176643759012, -1.1920928244535389e-07, -0.0024611949920654297, -3.576278118089249e-07, -0.00018310546875, -0.000278472900390625, -0.0037097930908203125, -3.814697265625e-06, -9.5367431640625e-06, -0.00044846534729003906, 0.0, -0.00026702880859375, -0.0003261566162109375, -7.62939453125e-06, 0.0, -0.00042724609375, 0.0, -4.38690185546875e-05, -0.0001583099365234375, -9.72747802734375e-05, -1.52587890625e-05, -0.0004322528839111328, 0.0, -0.0002288818359375, -0.0003948211669921875, -1.9073486328125e-05, -0.00023376937315333635, 0.0, -8.96453857421875e-05, -1.71661376953125e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.0006809234619140625, -1.71661376953125e-05, -5.340576171875e-05, -3.814697265625e-05, -0.0050868988037109375, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.3643765568267554e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033664703369140625, 0.0, -0.002506256103515625, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "score": -5.7818369891310155, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -1.136521816253662, -0.0007448196411132812, -0.0003108978271484375, -0.0008935928344726562, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.5066509246826172, -2.6702880859375e-05, -0.0046901702880859375, -2.288818359375e-05, -0.003116607666015625, 0.0, -0.0011636018753051758, 0.0, -0.004313826560974121, 0.0, -0.023987889289855957, -0.00019073486328125, -1.1444226503372192, -0.000701904296875, -0.0003204345703125, -0.0008821487426757812, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00040435791015625, -1.9073486328125e-06, -0.5009450912475586, -2.6702880859375e-05, -0.00469207763671875, -2.288818359375e-05, -0.003192901611328125, 0.0, -0.0011445283889770508, 0.0, -0.004245162010192871, 0.0, -0.023929715156555176, -0.0001888275146484375, -0.808371901512146, 0.0, -0.05453968048095703, -0.000949859619140625, -5.7220458984375e-06, -0.3191556930541992, 0.0, -0.006576418876647949, 0.0, -0.00507354736328125, -0.0023593902587890625, -0.0027713775634765625, -5.7220458984375e-06, -0.015623092651367188, 0.0, -0.0010766983032226562, 0.0, -0.004331707954406738, 0.0, -9.5367431640625e-05, -0.00029754638671875, 0.0, -0.013829701580107212, -8.4638240878121e-06, -0.025867462158203125, -0.10084819793701172, -3.4332275390625e-05, -1.1444091796875e-05, -0.006483067758381367, -1.1920928244535389e-07, -0.0025670528411865234, -3.576278118089249e-07, -0.00019073486328125, -0.000286102294921875, -0.00339508056640625, -5.7220458984375e-06, -7.62939453125e-06, -0.0005431175231933594, 0.0, -0.0003337860107421875, -0.0002002716064453125, -2.09808349609375e-05, 0.0, -0.0003948211669921875, 0.0, -3.814697265625e-05, -0.0001277923583984375, -0.000316619873046875, -2.288818359375e-05, -0.0006470680236816406, 0.0, -0.000518798828125, -0.00042724609375, -2.09808349609375e-05, -0.00031626224517822266, 0.0, -9.34600830078125e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-05, -0.0006275177001953125, -1.52587890625e-05, -5.340576171875e-05, -3.62396240234375e-05, -0.0051059722900390625, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.614708425127901e-05, -2.0265579223632812e-06, -0.000583648681640625, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003345489501953125, 0.0, -0.0024127960205078125, -1.9073486328125e-06, -0.0002498626708984375, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -6.669597870008083, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.335870623588562, -0.004067420959472656, -0.0002727508544921875, -0.000377655029296875, -0.000164031982421875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.3667259216308594, -2.47955322265625e-05, -0.005817413330078125, -1.71661376953125e-05, -0.0037946701049804688, 0.0, -0.0011941194534301758, 0.0, -0.0031294822692871094, 0.0, -0.026963353157043457, -0.0002117156982421875, -1.0942047834396362, -0.0008306503295898438, -0.0004138946533203125, -0.0008001327514648438, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000518798828125, -1.9073486328125e-06, -0.5248174667358398, -2.288818359375e-05, -0.0045928955078125, -2.288818359375e-05, -0.0031232833862304688, 0.0, -0.0011845827102661133, 0.0, -0.004310965538024902, 0.0, -0.023087620735168457, -0.0002040863037109375, -1.1582510471343994, -0.0007076263427734375, -0.0003108978271484375, -0.0009279251098632812, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003986358642578125, -1.9073486328125e-06, -0.49542236328125, -2.86102294921875e-05, -0.0047245025634765625, -2.288818359375e-05, -0.0031633377075195312, 0.0, -0.0011483430862426758, 0.0, -0.004158377647399902, 0.0, -0.024067044258117676, -0.0001850128173828125, -0.8089022636413574, 0.0, -0.05451488494873047, -0.0009403228759765625, -5.7220458984375e-06, -0.3194313049316406, 0.0, -0.006574511528015137, 0.0, -0.005059242248535156, -0.0023250579833984375, -0.0029697418212890625, -5.7220458984375e-06, -0.013607978820800781, 0.0, -0.0010690689086914062, 0.0, -0.004234433174133301, 0.0, -9.1552734375e-05, -0.0002994537353515625, 0.0, -0.013617509044706821, -8.4638240878121e-06, -0.025997161865234375, -0.10152435302734375, -3.4332275390625e-05, -1.1444091796875e-05, -0.006478418596088886, -1.1920928244535389e-07, -0.0025671720504760742, -3.576278118089249e-07, -0.00019073486328125, -0.000286102294921875, -0.003387451171875, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005279779434204102, 0.0, -0.000331878662109375, -0.0002040863037109375, -2.09808349609375e-05, 0.0, -0.000396728515625, 0.0, -3.814697265625e-05, -0.000125885009765625, -0.000286102294921875, -2.288818359375e-05, -0.0006338357925415039, 0.0, -0.0005016326904296875, -0.00042724609375, -2.09808349609375e-05, -0.00031244754791259766, 0.0, -9.34600830078125e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-05, -0.000629425048828125, -1.52587890625e-05, -5.340576171875e-05, -3.62396240234375e-05, -0.0051136016845703125, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.602787859970704e-05, -2.0265579223632812e-06, -0.0005817413330078125, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033435821533203125, 0.0, -0.002414703369140625, -1.9073486328125e-06, -0.00025177001953125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -6.777813798089419, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Leokk", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -1.136521816253662, -0.0007448196411132812, -0.0003108978271484375, -0.0008935928344726562, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.9302921295166016, -7.62939453125e-06, -0.013427734375, 0.0, -0.006602287292480469, 0.0, -0.16384446620941162, -1.9073486328125e-06, -1.0919417142868042, -0.00042057037353515625, -0.01688671112060547, -0.000476837158203125, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00045013427734375, -1.9073486328125e-06, -0.1696624755859375, -9.5367431640625e-06, -0.007836341857910156, 0.0, -0.003162384033203125, 0.0, -0.09741342067718506, -1.9073486328125e-06, -0.9775453805923462, -0.00040721893310546875, -0.19385242462158203, -0.0008449554443359375, -1.1444091796875e-05, -0.15951156616210938, 0.0, -0.006255149841308594, 0.0, -0.0021314620971679688, -0.0029506683349609375, -0.0015583038330078125, -3.814697265625e-06, -0.0152130126953125, 0.0, -0.00089263916015625, 0.0, -0.003982663154602051, 0.0, -8.392333984375e-05, -0.00037384033203125, 0.0, -0.014541978016495705, -7.986990567587782e-06, -0.021205902099609375, -0.1074991226196289, -3.4332275390625e-05, -1.1444091796875e-05, -0.00642942450940609, -1.1920928244535389e-07, -0.002572774887084961, -3.576278118089249e-07, -0.00019073486328125, -0.00028228759765625, -0.003360748291015625, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005298852920532227, 0.0, -0.000331878662109375, -0.00020599365234375, -2.09808349609375e-05, 0.0, -0.000396728515625, 0.0, -3.814697265625e-05, -0.0001277923583984375, -0.000286102294921875, -2.09808349609375e-05, -0.0006405115127563477, 0.0, -0.000499725341796875, -0.0004253387451171875, -2.09808349609375e-05, -0.0003106593794655055, 0.0, -9.34600830078125e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-05, -0.000629425048828125, -1.52587890625e-05, -5.340576171875e-05, -3.62396240234375e-05, -0.00510406494140625, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.614708425127901e-05, -2.0265579223632812e-06, -0.0005817413330078125, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003353118896484375, 0.0, -0.0024204254150390625, -1.9073486328125e-06, -0.0002498626708984375, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -7.089689620082872, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter(), hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.335870623588562, -0.004067420959472656, -0.0002727508544921875, -0.000377655029296875, -0.000164031982421875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.3667259216308594, -2.47955322265625e-05, -0.005817413330078125, -1.71661376953125e-05, -0.0037946701049804688, 0.0, -0.0011941194534301758, 0.0, -0.0031294822692871094, 0.0, -0.026963353157043457, -0.0002117156982421875, -1.0942047834396362, -0.0008306503295898438, -0.0004138946533203125, -0.0008001327514648438, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000518798828125, -1.9073486328125e-06, -0.9031305313110352, -7.62939453125e-06, -0.01409912109375, 0.0, -0.0065898895263671875, 0.0, -0.15765893459320068, -1.9073486328125e-06, -1.0392035245895386, -0.00040912628173828125, -0.01856517791748047, -0.0004825592041015625, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0004444122314453125, -1.9073486328125e-06, -0.17354202270507812, -9.5367431640625e-06, -0.007714271545410156, 0.0, -0.0031938552856445312, 0.0, -0.096885085105896, -1.9073486328125e-06, -0.981458306312561, -0.00041103363037109375, -0.18703460693359375, -0.000823974609375, -1.1444091796875e-05, -0.1632986068725586, 0.0, -0.0062808990478515625, 0.0, -0.0021181106567382812, -0.00293731689453125, -0.0016965866088867188, -3.814697265625e-06, -0.012788772583007812, 0.0, -0.0008878707885742188, 0.0, -0.0038949251174926758, 0.0, -8.0108642578125e-05, -0.000377655029296875, 0.0, -0.014316313900053501, -7.986990567587782e-06, -0.021329879760742188, -0.1084890365600586, -3.4332275390625e-05, -1.1444091796875e-05, -0.0064239404164254665, -1.1920928244535389e-07, -0.0025728940963745117, -3.576278118089249e-07, -0.00019073486328125, -0.00028228759765625, -0.003353118896484375, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005147457122802734, 0.0, -0.00032806396484375, -0.000209808349609375, -2.09808349609375e-05, 0.0, -0.0003986358642578125, 0.0, -3.814697265625e-05, -0.000125885009765625, -0.0002536773681640625, -2.09808349609375e-05, -0.0006263256072998047, 0.0, -0.00048065185546875, -0.0004253387451171875, -2.09808349609375e-05, -0.00030696389148943126, 0.0, -9.34600830078125e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-05, -0.0006313323974609375, -1.52587890625e-05, -5.340576171875e-05, -3.62396240234375e-05, -0.0051136016845703125, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.602787859970704e-05, -2.0265579223632812e-06, -0.0005817413330078125, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033512115478515625, 0.0, -0.0024242401123046875, -1.9073486328125e-06, -0.0002498626708984375, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -7.091783410651196, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter(), hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.1528338193893433, -0.0017499923706054688, -0.0002346038818359375, -0.0010519027709960938, -5.340576171875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.4284543991088867, -3.24249267578125e-05, -0.0058956146240234375, -2.09808349609375e-05, -0.003101348876953125, 0.0, -0.0010529756546020508, 0.0, -0.00447690486907959, 0.0, -0.023940205574035645, -0.0001964569091796875, -1.136521816253662, -0.0007448196411132812, -0.0003108978271484375, -0.0008935928344726562, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -0.5066509246826172, -2.6702880859375e-05, -0.0046901702880859375, -2.288818359375e-05, -0.003116607666015625, 0.0, -0.0011636018753051758, 0.0, -0.004313826560974121, 0.0, -0.023987889289855957, -0.00019073486328125, -1.1444226503372192, -0.000701904296875, -0.0003204345703125, -0.0008821487426757812, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.00040435791015625, -1.9073486328125e-06, -0.5009450912475586, -2.6702880859375e-05, -0.00469207763671875, -2.288818359375e-05, -0.003192901611328125, 0.0, -0.0011445283889770508, 0.0, -0.004245162010192871, 0.0, -0.023929715156555176, -0.0001888275146484375, -1.1413511037826538, -0.0006732940673828125, -0.07371711730957031, -0.0030670166015625, -5.7220458984375e-06, -0.4466266632080078, -1.9073486328125e-06, -0.007133007049560547, 0.0, -0.0036153793334960938, -0.00213623046875, -0.0020971298217773438, -5.7220458984375e-06, -0.016759872436523438, 0.0, -0.0010499954223632812, 0.0, -0.005067944526672363, 0.0, -0.0001163482666015625, -0.000377655029296875, 0.0, -0.01556812971830368, -8.702239938429557e-06, -0.0241851806640625, -0.09375476837158203, -3.62396240234375e-05, -9.5367431640625e-06, -0.0064474246464669704, -1.1920928244535389e-07, -0.002580404281616211, -3.576278118089249e-07, -0.000186920166015625, -0.00028228759765625, -0.0034275054931640625, -7.62939453125e-06, -7.62939453125e-06, -0.0005983114242553711, 0.0, -0.0003337860107421875, -0.000186920166015625, -2.288818359375e-05, 0.0, -0.0003871917724609375, -1.9073486328125e-06, -3.814697265625e-05, -0.0001316070556640625, -0.0004138946533203125, -2.6702880859375e-05, -0.0006763935089111328, 0.0, -0.0005741119384765625, -0.00042724609375, -2.09808349609375e-05, -0.0003255605697631836, 0.0, -9.5367431640625e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.91278076171875e-05, -0.000621795654296875, -1.52587890625e-05, -5.340576171875e-05, -3.62396240234375e-05, -0.00505828857421875, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.6266289902850986e-05, -2.0265579223632812e-06, -0.0005817413330078125, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.0033550262451171875, 0.0, -0.00240325927734375, -1.9073486328125e-06, -0.0002498626708984375, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -7.145319109579695, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Misha(), hearthbreaker.\n            cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.335870623588562, -0.004067420959472656, -0.0002727508544921875, -0.000377655029296875, -0.000164031982421875, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.3667259216308594, -2.47955322265625e-05, -0.005817413330078125, -1.71661376953125e-05, -0.0037946701049804688, 0.0, -0.0011941194534301758, 0.0, -0.0031294822692871094, 0.0, -0.026963353157043457, -0.0002117156982421875, -1.0942047834396362, -0.0008306503295898438, -0.0004138946533203125, -0.0008001327514648438, -4.9591064453125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000518798828125, -1.9073486328125e-06, -0.5248174667358398, -2.288818359375e-05, -0.0045928955078125, -2.288818359375e-05, -0.0031232833862304688, 0.0, -0.0011845827102661133, 0.0, -0.004310965538024902, 0.0, -0.023087620735168457, -0.0002040863037109375, -1.1582510471343994, -0.0007076263427734375, -0.0003108978271484375, -0.0009279251098632812, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003986358642578125, -1.9073486328125e-06, -0.49542236328125, -2.86102294921875e-05, -0.0047245025634765625, -2.288818359375e-05, -0.0031633377075195312, 0.0, -0.0011483430862426758, 0.0, -0.004158377647399902, 0.0, -0.024067044258117676, -0.0001850128173828125, -1.14149808883667, -0.00067138671875, -0.07202625274658203, -0.0030364990234375, -5.7220458984375e-06, -0.44685935974121094, -1.9073486328125e-06, -0.007130146026611328, 0.0, -0.0036029815673828125, -0.0021190643310546875, -0.002178192138671875, -5.7220458984375e-06, -0.015459060668945312, 0.0, -0.00104522705078125, 0.0, -0.004881024360656738, 0.0, -0.0001087188720703125, -0.0003814697265625, 0.0, -0.015347711741924286, -8.702239938429557e-06, -0.02419281005859375, -0.0946054458618164, -3.4332275390625e-05, -9.5367431640625e-06, -0.0064519545994699, -1.1920928244535389e-07, -0.0025794506072998047, -3.576278118089249e-07, -0.000186920166015625, -0.00028228759765625, -0.0034160614013671875, -7.62939453125e-06, -7.62939453125e-06, -0.0005773305892944336, 0.0, -0.0003337860107421875, -0.0001926422119140625, -2.09808349609375e-05, 0.0, -0.0003910064697265625, -1.9073486328125e-06, -3.814697265625e-05, -0.00012969970703125, -0.0003795623779296875, -2.47955322265625e-05, -0.0006639957427978516, 0.0, -0.0005550384521484375, -0.00042724609375, -2.09808349609375e-05, -0.0003237724304199219, 0.0, -9.5367431640625e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.91278076171875e-05, -0.0006237030029296875, -1.52587890625e-05, -5.340576171875e-05, -3.62396240234375e-05, -0.00506591796875, -3.814697265625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.6266289902850986e-05, -2.0265579223632812e-06, -0.0005817413330078125, 0.0, -0.0001068115234375, -1.9073486328125e-06, -0.003353118896484375, 0.0, -0.002407073974609375, -1.9073486328125e-06, -0.0002498626708984375, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -5.4717049351893365e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006049869698472321, -2.09808349609375e-05], "score": -7.25198615135826, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Huffer", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Misha", "<EOS>", 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Huffer(), hearthbreaker\n            .cards.minions.hunter.Misha(), hearthbreaker.cards.minions.\n            hunter.Misha(), hearthbreaker.cards.minions.hunter.Misha()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "AnimalCompanion", "hole2": [{"hole0": "Animal Companion", "hole2": "HUNTER", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"elts": [{"func": {"attr": "Huffer", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, {"func": {"attr": "Misha", "value": {"attr": "hunter", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "List"}, "_type": "Assign"}, {"targets": [{"id": "card", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "card", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 2}
{"beams": [{"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0012798309326171875, 0.0, -0.0006618499755859375, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -0.000788569450378418, -7.62939453125e-05, -1.71661376953125e-05, -0.000701904296875, -0.0001583099365234375, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.001300811767578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.00013506400864571333, -1.1920928244535389e-07, -0.00052642822265625, -0.0019168853759765625, -0.00078582763671875, -1.9073486328125e-06, -0.0002576112747192383, -3.814697265625e-06], "score": -0.033156244951719316, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -4.9081034660339355, 0.0, -0.00014495849609375, -1.33514404296875e-05, -0.05525493621826172, -9.5367431640625e-06, -4.76837158203125e-05, 0.0, -0.0023270845413208008, 0.0, -0.0010547637939453125, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.288818359375e-05, -8.0108642578125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0003681182861328125, 0.0, -0.00022709369659423828, -4.57763671875e-05, -0.0008231401443481445, -7.2479248046875e-05, -1.9073486328125e-05, -0.0007266998291015625, -0.000164031982421875, -5.7220458984375e-05, 0.0, -4.7922130761435255e-05, 0.0, -0.00029754638671875, 0.0, -1.9073486328125e-06, -0.0013027191162109375, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.0001378058223053813, -1.1920928244535389e-07, -0.0005340576171875, -0.0018711090087890625, -0.000789642333984375, -1.9073486328125e-06, -0.00025475025177001953, -3.814697265625e-06], "score": -4.9888109852852764, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for targets in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "targets", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -6.014184951782227, -0.00023651123046875, -0.0021172761917114258, -7.62939453125e-06, -0.000247955322265625, -2.288818359375e-05, -7.629387255292386e-06, 0.0, -4.9591064453125e-05, -4.57763671875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.3589828085969202e-05, -0.0037975311279296875, -5.7220458984375e-06, -0.0025787353515625, -0.0004730224609375, -6.29425048828125e-05, -3.24249267578125e-05, -0.00862729549407959, -5.7220458984375e-06, -0.0001659393310546875, -3.0517578125e-05, -0.000179290771484375, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.001251220703125, 0.0, -0.0006580352783203125, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -7.05718994140625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -0.0007790327072143555, -7.82012939453125e-05, -1.71661376953125e-05, -0.000705718994140625, -0.0001583099365234375, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.001300811767578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.0001351832179352641, -1.1920928244535389e-07, -0.00052642822265625, -0.001911163330078125, -0.00078582763671875, -1.9073486328125e-06, -0.0002576112747192383, -3.814697265625e-06], "score": -6.045203297336961, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "HUNTER", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0012798309326171875, 0.0, -0.0006618499755859375, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -0.000788569450378418, -7.62939453125e-05, -1.71661376953125e-05, -0.000701904296875, -0.0001583099365234375, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.001300811767578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.00013506400864571333, -1.1920928244535389e-07, -0.00052642822265625, -6.363055229187012, -0.000911712646484375, -1.9073486328125e-06, -0.00017547607421875, -3.814697265625e-06], "score": -6.39433833857202, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -6.763668060302734, -0.000156402587890625, -0.0006046295166015625, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.005602836608886719, -0.000247955322265625, -0.00020802021026611328, 0.0, -0.0005321502685546875, 0.0, -1.9073486328125e-05, -0.37105274200439453, -7.62939453125e-06, -1.9073486328125e-05, -8.58306884765625e-05, -4.1961669921875e-05, -0.00017392630979884416, -3.814697265625e-06, -0.000690460205078125, -0.0003070831298828125, -0.0003261566162109375, -1.9073486328125e-06, -0.00015366077423095703, -3.814697265625e-06], "score": -7.155091493403063, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -6.018176078796387, -0.001697540283203125, -0.00091552734375, -0.0001354217529296875, -0.0003204345703125, -0.000732421875, -2.09808349609375e-05, -0.00011169639765284956, -5.9604644775390625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.86102294921875e-05, 0.0, -0.0003072023391723633, 0.0, -0.000408172607421875, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001983642578125, 0.0, -0.000209808349609375, -3.62396240234375e-05, -0.0009946823120117188, -0.000133514404296875, -0.000545501708984375, -3.0517578125e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.0006345510482788086, 0.0, -0.08074259757995605, -1.9073486328125e-06, -3.814697265625e-05, -1.71661376953125e-05, -4.1961669921875e-05, -0.001140594482421875, 0.0, -0.0001316070556640625, 0.0, -0.0016231536865234375, 0.0, -0.8132649660110474, -9.5367431640625e-06, -0.02180349826812744, -1.9073486328125e-06, -0.15837383270263672, -0.0003070831298828125, -2.288818359375e-05, 0.0, -0.008532524108886719, 0.0, -0.004172325134277344, 0.0, -0.0008068084716796875, 0.0, -0.00049591064453125, -0.039966583251953125, -4.57763671875e-05, -0.00012969970703125, -3.814697265625e-06, -8.9764449512586e-05, 0.0, -0.00024235248565673828, 0.0, -1.9073486328125e-06, -0.00119781494140625, -5.7220458984375e-06, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-05, -0.00017130360356532037, -2.1457672119140625e-06, -0.0006198883056640625, -0.001972198486328125, -0.001094818115234375, -1.9073486328125e-06, -0.00020802021026611328, -3.814697265625e-06], "score": -7.171091284455372, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0012798309326171875, 0.0, -0.0006618499755859375, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -0.000788569450378418, -7.62939453125e-05, -1.71661376953125e-05, -0.000701904296875, -0.0001583099365234375, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -7.153192520141602, -0.10640811920166016, -7.62939453125e-06, -0.0005855560302734375, -3.814697265625e-06], "score": -7.288335769489834, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(1, self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -6.018176078796387, -0.001697540283203125, -0.00091552734375, -0.0001354217529296875, -0.0003204345703125, -0.000732421875, -2.09808349609375e-05, -0.00011169639765284956, -5.9604644775390625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.0001850128173828125, 0.0, -2.86102294921875e-05, 0.0, -0.0003072023391723633, 0.0, -0.000408172607421875, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001983642578125, 0.0, -0.000209808349609375, -3.62396240234375e-05, -0.0009946823120117188, -0.000133514404296875, -0.000545501708984375, -3.0517578125e-05, -5.14984130859375e-05, -3.814697265625e-06, -0.0006345510482788086, 0.0, -0.08074259757995605, -1.9073486328125e-06, -3.814697265625e-05, -1.71661376953125e-05, -4.1961669921875e-05, -0.001140594482421875, 0.0, -0.0001316070556640625, 0.0, -0.0016231536865234375, 0.0, -0.5938445329666138, -1.52587890625e-05, -0.16379153728485107, -1.9073486328125e-05, -0.3454008102416992, -0.00054168701171875, -2.288818359375e-05, 0.0, -0.012740135192871094, 0.0, -0.0064220428466796875, 0.0, -0.0008382797241210938, 0.0, -0.0002803802490234375, -0.05994415283203125, -4.9591064453125e-05, -0.0001220703125, -3.814697265625e-06, -7.84396324888803e-05, 0.0, -0.00024044513702392578, 0.0, -1.9073486328125e-06, -0.00115966796875, -5.7220458984375e-06, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-05, -0.00017201885930262506, -2.1457672119140625e-06, -0.000629425048828125, -0.0019664764404296875, -0.0011234283447265625, -1.9073486328125e-06, -0.00020420551300048828, -3.814697265625e-06], "score": -7.307168330915204, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -7.820892333984375, 0.0, -0.0021953582763671875, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.33514404296875e-05, -6.4849853515625e-05, 0.0, -1.52587890625e-05, 0.0, -0.000118255615234375, 0.0, -0.0003070831298828125, -6.67572021484375e-05, -0.0007405281066894531, -7.05718994140625e-05, -1.52587890625e-05, -0.000698089599609375, -0.000148773193359375, -5.53131103515625e-05, 0.0, -4.565715789794922e-05, 0.0, -0.0003070831298828125, 0.0, -1.9073486328125e-06, -0.001293182373046875, -5.7220458984375e-06, -5.7220458984375e-06, -5.53131103515625e-05, -1.9073486328125e-05, -0.00013422958727460355, -2.0265579223632812e-06, -0.0005207061767578125, -0.00196075439453125, -0.000774383544921875, -1.9073486328125e-06, -0.00026619434356689453, -3.814697265625e-06], "score": -7.854095785862057, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "range", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in range.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "range", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -7.871520042419434, -9.5367431640625e-06, -0.000152587890625, -1.52587890625e-05, -1.1086458471254446e-05, 0.0, -6.67572021484375e-05, -7.2479248046875e-05, -2.47955322265625e-05, -2.110004425048828e-05, -1.1920896213268861e-05, -0.00461578369140625, -5.7220458984375e-06, -0.0026607513427734375, -0.000518798828125, -5.91278076171875e-05, -2.86102294921875e-05, -0.009156584739685059, -5.7220458984375e-06, -0.000164031982421875, -3.62396240234375e-05, -0.0001583099365234375, -7.62939453125e-06, -9.918212890625e-05, 0.0, -0.0011997222900390625, 0.0, -0.000667572021484375, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.000354766845703125, 0.0, -0.0002269744873046875, -4.76837158203125e-05, -0.0008001327514648438, -7.82012939453125e-05, -1.9073486328125e-05, -0.0006999969482421875, -0.000156402587890625, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.0012950897216796875, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.00013494479935616255, -1.1920928244535389e-07, -0.000522613525390625, -0.0019283294677734375, -0.000782012939453125, -1.9073486328125e-06, -0.0002576112747192383, -3.814697265625e-06], "score": -7.9047212292751325, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "EPIC", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0012798309326171875, 0.0, -0.0006618499755859375, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -7.9276933670043945, 0.0, -0.011409759521484375, -0.00014495849609375, -4.76837158203125e-05, -0.0001697540283203125, 0.0, -0.0001351833197986707, 0.0, -0.0009870529174804688, 0.0, -1.9073486328125e-06, -0.00283050537109375, -5.7220458984375e-06, -7.62939453125e-06, -8.58306884765625e-05, -1.71661376953125e-05, -0.0001431701675755903, -2.0265579223632812e-06, -0.00057220458984375, -0.0013408660888671875, -0.0009326934814453125, -1.9073486328125e-06, -0.0002766847610473633, -3.814697265625e-06], "score": -7.972797482126964, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "game", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.game):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "game", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -6.763668060302734, -0.000156402587890625, -0.0006046295166015625, -3.814697265625e-06, -0.0001010894775390625, -3.814697265625e-06, -0.005602836608886719, -0.000247955322265625, -0.00020802021026611328, 0.0, -0.0005321502685546875, 0.0, -1.9073486328125e-05, -1.253880500793457, -0.09092140197753906, -1.1444091796875e-05, -0.0003337860107421875, -1.1444091796875e-05], "score": -8.127382009346377, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -7.081510543823242, -0.040205955505371094, -0.007129669189453125, -0.000331878662109375, -0.000125885009765625, -3.814697265625e-06, -0.07981300354003906, -9.5367431640625e-06, -0.0007734298706054688, -5.7220458984375e-06, -0.0003833770751953125, 0.0, -1.1444091796875e-05, -0.05358695983886719, -0.000171661376953125, -0.0008182525634765625, -1.33514404296875e-05, -0.03945350646972656, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.00122833251953125, 0.0, -0.0004596710205078125, -1.33514404296875e-05, -0.27883076667785645, -1.9073486328125e-05, -2.47955322265625e-05, -0.037886619567871094, -1.9073486328125e-06, -0.006282806396484375, 0.0, -0.0002142190933227539, 0.0, -0.0010662078857421875, 0.0, 0.0, -0.006900787353515625, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -2.09808349609375e-05, -0.0001249313063453883, 0.0, -0.00051116943359375, -0.0022754669189453125, -0.00079345703125, -1.9073486328125e-06, -0.00031387805938720703, -3.814697265625e-06, -7.62939453125e-06, -0.12847328186035156, -8.20159912109375e-05, -0.6235828399658203, -1.1444091796875e-05, -4.76837158203125e-05, 0.0, -0.0043468475341796875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0005321502685546875, 0.0, 0.0, -0.004962921142578125, -5.7220458984375e-06, -3.814697265625e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.0001717804407235235, 0.0, -0.0009670257568359375, -0.000446319580078125, -0.000316619873046875, -1.9073486328125e-06, -0.00016510486602783203, -3.814697265625e-06], "score": -8.416642992638856, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 13, 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target is not game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        else:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0012798309326171875, 0.0, -0.0006618499755859375, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -0.000788569450378418, -7.62939453125e-05, -1.71661376953125e-05, -0.000701904296875, -0.0001583099365234375, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.001300811767578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.00013506400864571333, -1.1920928244535389e-07, -0.00052642822265625, -0.0019168853759765625, -7.3698625564575195, -3.814697265625e-06, -0.03700065612792969, -3.814697265625e-06, -0.3080282211303711, -0.3904992341995239, 0.0, -1.6623307466506958, 0.0], "score": -9.799836127954954, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 45, 104, 17, 104, 42, "hero", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), player.hero.<UNK>)\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"attr": "<UNK>", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -7.498411655426025, -4.0531158447265625e-06, -0.0008611679077148438, -6.4849853515625e-05, -0.0018062591552734375, -1.33514404296875e-05, -0.0345379114151001, -1.9073486328125e-06, -5.53131103515625e-05, -0.0029668807983398438, -7.62939453125e-06, -0.000248525058850646, -2.0265579223632812e-06, -0.00682830810546875, -0.00064849853515625, -1.1444091796875e-05, -5.7220458984375e-06, -0.04906177520751953, -0.004334154538810253, -4.5299530029296875e-06, -0.000476837158203125, -0.0038995742797851562, -0.10109996795654297, -0.0013036727905273438, -5.14984130859375e-05, -3.814697265625e-06, -4.57763671875e-05, 0.0, -0.004829883575439453, 0.0, -0.0011434555053710938, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.009169697761535645, 0.0, -0.002834320068359375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0002002716064453125, 0.0, -0.0001888275146484375, -2.47955322265625e-05, -0.009070634841918945, -7.82012939453125e-05, -0.00157928466796875, -8.7738037109375e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.00025844573974609375, 0.0, -1.1422033309936523, 0.0, -5.340576171875e-05, -0.3653841018676758, -1.9073486328125e-06, -1.33514404296875e-05, -0.000110626220703125, -3.0517578125e-05, -0.00020289322128519416, -1.1920928244535389e-07, -0.0004940032958984375, -0.0015506744384765625, -0.0024471282958984375, -3.814697265625e-06, -0.0008221864700317383, -1.9073486328125e-06, -0.5049905776977539, -0.06254386901855469, -0.3009767532348633, -0.01250302791595459, -3.0517578125e-05, -0.057898521423339844, -0.000751495361328125, -0.026228904724121094, -0.0031598806381225586, -1.1444091796875e-05], "score": -10.232677225720003, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(1)):\n            targets = copy.copy(game.other_player.minions)\n            targets.damage(player.effective_spell_damage(1), self)\n            player.draw()\n            player.draw()\n", "model_output": {"hole0": "ArcaneExplosion", "hole2": [{"hole0": "Arcane Explosion", "hole2": "MAGE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 3}
{"beams": [{"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -0.0025472640991210938, -0.000888824462890625, -0.0002574920654296875, -5.53131103515625e-05, -7.05718994140625e-05, -5.14984130859375e-05, -0.006500481627881527, -2.861022494471399e-06, -0.000186920166015625, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003350971674080938, -2.50339189733495e-06, -2.09808349609375e-05, -0.00072479248046875, -7.62939453125e-06, -0.00016879255417734385, -3.4570680327306036e-06, -4.76837158203125e-05, -0.0020580291748046875, -0.0001926422119140625, -0.001361846923828125, -7.05718994140625e-05, -0.0008542536525055766, -2.0265579223632812e-06], "score": -0.02919005302101141, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -0.0025472640991210938, -0.000888824462890625, -0.0002574920654296875, -5.53131103515625e-05, -7.05718994140625e-05, -5.14984130859375e-05, -5.224321365356445, -6.437291176553117e-06, -0.0010614395141601562, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.00026333320420235395, -2.3841830625315197e-06, -2.86102294921875e-05, -0.0008573532104492188, -7.62939453125e-06, -0.00017379794735461473, -3.576277322281385e-06, -4.76837158203125e-05, -0.00246429443359375, -0.000255584716796875, -0.0015468597412109375, -8.392333984375e-05, -0.0009094475535675883, -2.0265579223632812e-06], "score": -5.248431552475722, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -6.278261184692383, -3.814697265625e-06, -0.0006275177001953125, 0.0, -2.121916077157948e-05, 0.0, -3.62396240234375e-05, -0.000446319580078125, -2.47955322265625e-05, -5.257129669189453e-05, -1.0728796951298136e-05, -0.0024547576904296875, -0.0009021759033203125, -0.000247955322265625, -6.67572021484375e-05, -7.43865966796875e-05, -5.7220458984375e-05, -0.00730240298435092, -2.861022494471399e-06, -0.0001697540283203125, -1.9073486328125e-06, -0.000331878662109375, -1.9073486328125e-05, -0.00031995761673897505, -2.264974000354414e-06, -2.09808349609375e-05, -0.000713348388671875, -7.62939453125e-06, -0.00016950772260315716, -3.4570680327306036e-06, -4.9591064453125e-05, -0.0021114349365234375, -0.0001888275146484375, -0.0013446807861328125, -7.05718994140625e-05, -0.0008562802104279399, -2.0265579223632812e-06], "score": -6.305450786978099, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "RARE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -4.924616813659668, -7.986990567587782e-06, -0.00012516239075921476, -2.622600959512056e-06, -9.058407158590853e-06, -4.768370445162873e-07, -0.00034821033477783203, -1.9073486328125e-06, -3.24249267578125e-05, -6.29425048828125e-05, -2.264974000354414e-06, -0.0001815556752262637, -3.64774459740147e-05, -9.5367431640625e-06, -4.339121005614288e-05, -2.956390380859375e-05, -0.00029754638671875, -3.814697265625e-06, -0.005262494087219238, 0.0, -0.032088279724121094, 0.0, -9.369850158691406e-05, 0.0, -0.0001163482666015625, -3.814697265625e-05, -0.0002002716064453125, -0.0001493692398071289, -2.264974000354414e-06, -0.13077926635742188, -0.0005359649658203125, -0.0006389617919921875, -0.0001468658447265625, -0.0010280609130859375, -3.814697265625e-06, -0.03137969970703125, -2.0265558760002023e-06, -0.0012664794921875, -1.9073486328125e-06, -0.0030813217163085938, -5.7220458984375e-06, -0.0007472006836906075, -4.172316494077677e-06, -4.57763671875e-05, -0.00051116943359375, -1.1444091796875e-05, -0.0002579459687694907, -5.960462203802308e-06, -3.814697265625e-05, -0.002712249755859375, -0.000232696533203125, -0.0015621185302734375, -3.4332275390625e-05, -0.0005944949225522578, -4.172325134277344e-06, -0.1097869873046875, -1.0875911712646484, -0.003936767578125, -3.0517578125e-05, -0.0004950760048814118, -5.841255187988281e-06], "score": -6.34126957370006, "choice_history": [77, 148, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>", 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n    player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -4.924616813659668, -7.986990567587782e-06, -0.00012516239075921476, -2.622600959512056e-06, -9.058407158590853e-06, -4.768370445162873e-07, -0.00034821033477783203, -1.9073486328125e-06, -3.24249267578125e-05, -6.29425048828125e-05, -2.264974000354414e-06, -0.0001815556752262637, -3.64774459740147e-05, -9.5367431640625e-06, -4.339121005614288e-05, -2.956390380859375e-05, -0.00029754638671875, -3.814697265625e-06, -0.005262494087219238, 0.0, -0.032088279724121094, 0.0, -9.369850158691406e-05, 0.0, -0.0001163482666015625, -3.814697265625e-05, -0.0002002716064453125, -0.0001493692398071289, -2.264974000354414e-06, -0.13077926635742188, -0.0005359649658203125, -0.0006389617919921875, -0.0001468658447265625, -0.0010280609130859375, -3.814697265625e-06, -0.03137969970703125, -2.0265558760002023e-06, -0.0012664794921875, -1.9073486328125e-06, -0.0030813217163085938, -5.7220458984375e-06, -0.0007472006836906075, -4.172316494077677e-06, -4.57763671875e-05, -0.00051116943359375, -1.1444091796875e-05, -0.0002579459687694907, -5.960462203802308e-06, -3.814697265625e-05, -0.002712249755859375, -0.000232696533203125, -0.0015621185302734375, -3.4332275390625e-05, -0.0005944949225522578, -4.172325134277344e-06, -0.1097869873046875, -0.6124687194824219, -0.09450244903564453, -0.06897389888763428, 0.0, -0.020532608032226562, -8.58306884765625e-05, -0.0001735687255859375, -3.24249267578125e-05, -0.009131431579589844, -0.0050220489501953125, -0.0022335052490234375, -1.1444091796875e-05, -0.0020694732666015625, -0.0004634857177734375, -0.00052642822265625, -9.5367431640625e-06, -0.003774195211008191, -8.272813283838332e-05, -0.2530156373977661, 0.0, -9.191036224365234e-05, -1.1444091796875e-05, -0.00016033649444580078, 0.0, -0.002338409423828125, -5.7220458984375e-06, -0.000270843505859375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -6.78300712024793e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.71661376953125e-05, -4.57763671875e-05, -0.0003185272216796875, -0.004849552176892757, 0.0, -1.52587890625e-05, -0.0079345703125, -1.1444091796875e-05, -0.3518638610839844, -1.9073486328125e-06, -0.28618323802948, 0.0], "score": -6.976547466235729, "choice_history": [77, 148, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -4.924616813659668, -7.986990567587782e-06, -0.00012516239075921476, -2.622600959512056e-06, -9.058407158590853e-06, -4.768370445162873e-07, -0.00034821033477783203, -1.9073486328125e-06, -3.24249267578125e-05, -6.29425048828125e-05, -2.264974000354414e-06, -0.0001815556752262637, -3.64774459740147e-05, -9.5367431640625e-06, -4.339121005614288e-05, -2.956390380859375e-05, -0.00029754638671875, -3.814697265625e-06, -0.005262494087219238, 0.0, -0.032088279724121094, 0.0, -9.369850158691406e-05, 0.0, -0.0001163482666015625, -3.814697265625e-05, -0.0002002716064453125, -0.0001493692398071289, -2.264974000354414e-06, -0.13077926635742188, -0.0005359649658203125, -0.0006389617919921875, -0.0001468658447265625, -0.0010280609130859375, -3.814697265625e-06, -0.03137969970703125, -2.0265558760002023e-06, -0.0012664794921875, -1.9073486328125e-06, -0.0030813217163085938, -5.7220458984375e-06, -0.0007472006836906075, -4.172316494077677e-06, -4.57763671875e-05, -0.00051116943359375, -1.1444091796875e-05, -0.0002579459687694907, -5.960462203802308e-06, -3.814697265625e-05, -0.002712249755859375, -0.000232696533203125, -0.0015621185302734375, -3.4332275390625e-05, -0.0005944949225522578, -4.172325134277344e-06, -2.321894645690918, -0.07915973663330078, -0.001277923583984375, -0.000743865966796875, -0.000973820686340332, -2.1576881408691406e-05, -4.76837158203125e-05, -0.001308441162109375, -0.0014133453369140625, -0.001360774040222168, -1.1444091796875e-05], "score": -7.547636470504017, "choice_history": [77, 148, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>", 218, 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n    player.draw()\n    player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -4.924616813659668, -7.986990567587782e-06, -0.00012516239075921476, -2.622600959512056e-06, -9.058407158590853e-06, -4.768370445162873e-07, -0.00034821033477783203, -1.9073486328125e-06, -3.24249267578125e-05, -6.29425048828125e-05, -2.264974000354414e-06, -0.0001815556752262637, -3.64774459740147e-05, -9.5367431640625e-06, -4.339121005614288e-05, -2.956390380859375e-05, -0.00029754638671875, -3.814697265625e-06, -0.005262494087219238, 0.0, -0.032088279724121094, 0.0, -9.369850158691406e-05, 0.0, -0.0001163482666015625, -3.814697265625e-05, -0.0002002716064453125, -0.0001493692398071289, -2.264974000354414e-06, -0.13077926635742188, -0.0005359649658203125, -0.0006389617919921875, -0.0001468658447265625, -0.0010280609130859375, -3.814697265625e-06, -0.03137969970703125, -2.0265558760002023e-06, -0.0012664794921875, -1.9073486328125e-06, -0.0030813217163085938, -5.7220458984375e-06, -0.0007472006836906075, -4.172316494077677e-06, -4.57763671875e-05, -0.00051116943359375, -1.1444091796875e-05, -0.0002579459687694907, -5.960462203802308e-06, -3.814697265625e-05, -0.002712249755859375, -0.000232696533203125, -0.0015621185302734375, -3.4332275390625e-05, -0.0005944949225522578, -4.172325134277344e-06, -0.1097869873046875, -0.6124687194824219, -0.09450244903564453, -0.06897389888763428, 0.0, -0.020532608032226562, -8.58306884765625e-05, -0.0001735687255859375, -3.24249267578125e-05, -0.009131431579589844, -0.0050220489501953125, -0.0022335052490234375, -1.1444091796875e-05, -0.0020694732666015625, -0.0004634857177734375, -0.00052642822265625, -9.5367431640625e-06, -0.003774195211008191, -8.272813283838332e-05, -0.2530156373977661, 0.0, -9.191036224365234e-05, -1.1444091796875e-05, -0.00016033649444580078, 0.0, -0.002338409423828125, -5.7220458984375e-06, -0.000270843505859375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -6.78300712024793e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.71661376953125e-05, -4.57763671875e-05, -0.0003185272216796875, -0.004849552176892757, 0.0, -1.52587890625e-05, -0.0079345703125, -1.1444091796875e-05, -1.2300024032592773], "score": -7.568500863032909, "choice_history": [77, 148, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 68], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 2\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -7.270475387573242, -6.866455078125e-05, -0.31948280334472656, -0.0001068115234375, -1.1444091796875e-05, -2.6702880859375e-05, -0.015341758728027344, -2.0265579223632812e-06, -0.00040435791015625, 0.0, -0.0003261566162109375, -1.1444091796875e-05, -0.000451922242064029, -1.9073468138230965e-06, -2.86102294921875e-05, -0.0009555816650390625, -1.1444091796875e-05, -0.00022981822257861495, -5.006789251638111e-06, -5.7220458984375e-05, -0.0008220672607421875, -0.0001621246337890625, -0.0013980865478515625, -6.866455078125e-05, -0.0007083414238877594, -2.0265579223632812e-06, -0.002803802490234375, -0.0001049041748046875, -0.0009365081787109375, -0.0012382268905639648, -2.7060508728027344e-05], "score": -7.628759484267448, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n        player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -7.903980255126953, -3.814697265625e-06, -0.0001773834228515625, -1.9073486328125e-06, -2.1338413716875948e-05, 0.0, -1.52587890625e-05, -0.0003147125244140625, -3.4332275390625e-05, -4.3272972106933594e-05, -1.0848005331354216e-05, -0.0026655197143554688, -0.000911712646484375, -0.000202178955078125, -6.67572021484375e-05, -7.2479248046875e-05, -4.9591064453125e-05, -0.006851791869848967, -2.861022494471399e-06, -0.0001678466796875, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003151892451569438, -2.3841830625315197e-06, -2.09808349609375e-05, -0.000732421875, -7.62939453125e-06, -0.00018905483011621982, -3.576277322281385e-06, -4.9591064453125e-05, -0.001983642578125, -0.00018310546875, -0.0012950897216796875, -7.05718994140625e-05, -0.0008625983027741313, -2.0265579223632812e-06], "score": -7.930076347426166, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -0.0025472640991210938, -0.000888824462890625, -0.0002574920654296875, -5.53131103515625e-05, -7.05718994140625e-05, -5.14984130859375e-05, -0.006500481627881527, -2.861022494471399e-06, -0.000186920166015625, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003350971674080938, -2.50339189733495e-06, -2.09808349609375e-05, -0.00072479248046875, -7.62939453125e-06, -0.00016879255417734385, -3.4570680327306036e-06, -4.76837158203125e-05, -0.0020580291748046875, -0.0001926422119140625, -0.001361846923828125, -7.05718994140625e-05, -8.058402061462402, -1.1801670552813448e-05], "score": -8.086747635943539, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "<UNK>", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.<UNK>()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "<UNK>", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -8.136442184448242, -1.9073486328125e-06, -0.000667572021484375, 0.0, -2.0503957784967497e-05, 0.0, -4.57763671875e-05, -0.000232696533203125, -2.47955322265625e-05, -4.303455352783203e-05, -1.03711727206246e-05, -0.0025510787963867188, -0.0008487701416015625, -0.000232696533203125, -5.7220458984375e-05, -7.2479248046875e-05, -4.76837158203125e-05, -0.006753444205969572, -2.9802317840221804e-06, -0.000186920166015625, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003271101741120219, -2.50339189733495e-06, -2.09808349609375e-05, -0.000720977783203125, -7.62939453125e-06, -0.00016926908574532717, -3.4570680327306036e-06, -4.76837158203125e-05, -0.00212860107421875, -0.0001983642578125, -0.0013885498046875, -7.2479248046875e-05, -0.0008535383967682719, -2.0265579223632812e-06], "score": -8.162949909435156, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "EPIC", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -8.16561222076416, -0.0001277923583984375, -0.004270792007446289, -1.9073486328125e-06, -0.0006656646728515625, 0.0, -1.6927675460465252e-05, 0.0, -4.38690185546875e-05, -0.000247955322265625, -2.6702880859375e-05, -4.100799560546875e-05, -9.179088920063805e-06, -0.0033159255981445312, -0.0008602142333984375, -0.0003070831298828125, -5.91278076171875e-05, -7.2479248046875e-05, -6.29425048828125e-05, -0.0070583815686404705, -2.861022494471399e-06, -0.0001811981201171875, -1.9073486328125e-06, -0.0002956390380859375, -1.71661376953125e-05, -0.00034070000401698053, -2.50339189733495e-06, -2.09808349609375e-05, -0.00072479248046875, -7.62939453125e-06, -0.0001650975173106417, -3.4570680327306036e-06, -4.76837158203125e-05, -0.002197265625, -0.000194549560546875, -0.0013561248779296875, -7.05718994140625e-05, -0.0008524655131623149, -2.0265579223632812e-06], "score": -8.197255959515132, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "HUNTER", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -4.924616813659668, -7.986990567587782e-06, -0.00012516239075921476, -2.622600959512056e-06, -9.058407158590853e-06, -4.768370445162873e-07, -0.00034821033477783203, -1.9073486328125e-06, -3.24249267578125e-05, -6.29425048828125e-05, -2.264974000354414e-06, -0.0001815556752262637, -3.64774459740147e-05, -9.5367431640625e-06, -4.339121005614288e-05, -2.956390380859375e-05, -0.00029754638671875, -3.814697265625e-06, -0.005262494087219238, 0.0, -0.032088279724121094, 0.0, -9.369850158691406e-05, 0.0, -0.0001163482666015625, -3.814697265625e-05, -0.0002002716064453125, -0.0001493692398071289, -2.264974000354414e-06, -0.13077926635742188, -0.0005359649658203125, -0.0006389617919921875, -0.0001468658447265625, -0.0010280609130859375, -3.814697265625e-06, -0.03137969970703125, -2.0265558760002023e-06, -0.0012664794921875, -1.9073486328125e-06, -0.0030813217163085938, -5.7220458984375e-06, -0.0007472006836906075, -4.172316494077677e-06, -4.57763671875e-05, -0.00051116943359375, -1.1444091796875e-05, -0.0002579459687694907, -5.960462203802308e-06, -3.814697265625e-05, -0.002712249755859375, -0.000232696533203125, -0.0015621185302734375, -3.4332275390625e-05, -0.0005944949225522578, -4.172325134277344e-06, -0.1097869873046875, -0.6124687194824219, -0.09450244903564453, -0.06897389888763428, 0.0, -0.020532608032226562, -8.58306884765625e-05, -0.0001735687255859375, -3.24249267578125e-05, -0.009131431579589844, -0.0050220489501953125, -0.0022335052490234375, -1.1444091796875e-05, -0.0020694732666015625, -0.0004634857177734375, -0.00052642822265625, -9.5367431640625e-06, -0.003774195211008191, -8.272813283838332e-05, -0.2530156373977661, 0.0, -9.191036224365234e-05, -1.1444091796875e-05, -0.00016033649444580078, 0.0, -0.002338409423828125, -5.7220458984375e-06, -0.000270843505859375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -6.78300712024793e-05, -5.7220458984375e-06, -2.6702880859375e-05, -1.71661376953125e-05, -4.57763671875e-05, -0.0003185272216796875, -0.004849552176892757, 0.0, -1.52587890625e-05, -0.0079345703125, -1.1444091796875e-05, -0.3518638610839844, -1.9073486328125e-06, -1.9994925260543823, -3.814697265625e-06], "score": -8.689860568957897, "choice_history": [77, 148, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 10\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -0.0025472640991210938, -0.000888824462890625, -0.0002574920654296875, -5.53131103515625e-05, -7.05718994140625e-05, -5.14984130859375e-05, -0.006500481627881527, -2.861022494471399e-06, -0.000186920166015625, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003350971674080938, -2.50339189733495e-06, -2.09808349609375e-05, -0.00072479248046875, -7.62939453125e-06, -0.00016879255417734385, -3.4570680327306036e-06, -4.76837158203125e-05, -0.0020580291748046875, -0.0001926422119140625, -0.001361846923828125, -7.05718994140625e-05, -8.739133834838867, -0.0008691549301147461], "score": -8.768336762579565, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "bind", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.bind()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "bind", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -0.0025472640991210938, -0.000888824462890625, -0.0002574920654296875, -5.53131103515625e-05, -7.05718994140625e-05, -5.14984130859375e-05, -0.006500481627881527, -2.861022494471399e-06, -0.000186920166015625, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003350971674080938, -2.50339189733495e-06, -2.09808349609375e-05, -0.00072479248046875, -7.62939453125e-06, -0.00016879255417734385, -3.4570680327306036e-06, -4.76837158203125e-05, -6.285296440124512, -0.0062656402587890625, -2.09808349609375e-05, -1.33514404296875e-05, -0.001102447509765625, 0.0, -0.29394853115081787, -4.768370445162873e-07, -0.022096633911132812, -0.05187416076660156, -0.0005931854248046875, -0.0002307891845703125, -0.022162437438964844, -5.340576171875e-05, -0.012220382690429688, -1.9073486328125e-06, -0.7989978790283203, -1.52587890625e-05, -0.0012989044189453125, -1.9073486328125e-05, -0.20911312103271484, 0.0, -0.015170931816101074, 0.0, -0.002087116241455078, 0.0, -0.01770460605621338, -2.622604142743512e-06, -1.181207299232483, -0.7640303373336792, -0.31085607409477234, -0.0052509307861328125, -0.21280574798583984, -0.5688457489013672, -3.814697265625e-06, -0.36789000034332275, 0.0, -0.1484217643737793, -6.628036499023438e-05], "score": -11.324318964870713, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 218, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Worthless", "Wolf", "<EOS>", 97, 165, 25, 133, "attacker", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            <UNK> = hearthbreaker.cards.minions.<UNK>.WorthlessWolf()\n            attacker.<UNK>()\n", "model_output": {"hole0": "ArcaneIntellect", "hole2": [{"hole0": "Arcane Intellect", "hole2": "MAGE", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"func": {"attr": "WorthlessWolf", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "attacker", "_type": "Name"}, "hole1": "<UNK>", "_type": "Template23"}], "target": {"id": "c", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 4}
{"beams": [{"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -0.007997870445251465, 0.0, -0.001697540283203125, -5.7220458984375e-06, -0.0006160736083984375, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.011870384216308594, 0.0, -0.005749702453613281, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004520416259765625, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.0026979446411132812, -2.09808349609375e-05, -3.814697265625e-06, -0.0002802609233185649, 0.0, -0.0005054473876953125, 0.0, -1.33514404296875e-05, -0.0019378662109375, -0.013311386108398438, -7.62939453125e-06, -0.00022220611572265625, -7.62939453125e-06], "score": -0.19942641136105976, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -3.3096256256103516, -1.1444091796875e-05, -0.013830184936523438, -0.0034389495849609375, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0003643035888671875, -1.9073486328125e-06, -0.0007114410400390625, 0.0, -0.0001277923583984375, -1.71661376953125e-05, -0.006878852844238281, 0.0, -0.0006694793701171875, -0.0001544952392578125, -4.38690185546875e-05, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -0.0015594959259033203, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.0002994537353515625, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0003814697265625, -1.9073486328125e-06, -0.003453373908996582, -2.1219253540039062e-05, -0.001081705093383789, 0.0, -0.008607864379882812, -0.0005245208740234375, -6.103515625e-05, -0.012308120727539062, 0.0, -0.00798642635345459, 0.0, -0.0017108917236328125, -5.7220458984375e-06, -0.0006122589111328125, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.011908531188964844, 0.0, -0.0057468414306640625, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004520416259765625, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.0027437210083007812, -2.09808349609375e-05, -3.814697265625e-06, -0.00028109538834542036, 0.0, -0.0005035400390625, 0.0, -1.33514404296875e-05, -0.001941680908203125, -0.013338088989257812, -7.62939453125e-06, -0.0002231597900390625, -7.62939453125e-06], "score": -3.489123343200049, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "targeting", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.targeting(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "targeting", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -4.8312225341796875, -5.340576171875e-05, -0.001705169677734375, 0.0, -0.0062389373779296875, 0.0, -0.0009634494781494141, -1.9073486328125e-06, -3.814697265625e-06, -4.1961669921875e-05, -3.24249267578125e-05, -0.0001850128173828125, -1.9073486328125e-06, -0.001827239990234375, 0.0, -0.00034332275390625, 0.0, -0.0025207996368408203, -2.5272369384765625e-05, -0.001396775245666504, 0.0, -0.00724029541015625, -0.0006275177001953125, -5.14984130859375e-05, -0.010644912719726562, 0.0, -0.0050154924392700195, 0.0, -0.0020999908447265625, -5.7220458984375e-06, -0.0005893707275390625, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.011082649230957031, 0.0, -0.005936622619628906, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004425048828125, 0.0, -0.0002689361572265625, 0.0], "score": -5.020880936471372, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -5.255847930908203, -9.5367431640625e-06, -8.7738037109375e-05, -0.000583648681640625, -2.8610213121282868e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.0003643035888671875, -9.5367431640625e-06, -3.4809112548828125e-05, -1.454353241570061e-05, -0.0050182342529296875, -1.71661376953125e-05, -0.0015010833740234375, -0.000133514404296875, -9.5367431640625e-06, -0.0001811981201171875, -0.0007969141006469727, -1.3828206647303887e-05, -0.00018310546875, -1.9073486328125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.0017423629760742188, -1.9073486328125e-06, -0.000217437744140625, -0.0034990310668945312, -0.000446319580078125, -0.0014033411862328649, -2.5272369384765625e-05, -0.0013427734375, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.0026853077579289675, -6.675716122117592e-06, -0.0002841949462890625, -0.01967620849609375, -0.021445274353027344, -0.0003147125244140625, -0.001758575439453125, -8.20159912109375e-05, -0.0004367828369140625, -1.9073486328125e-06, -0.0016213648486882448, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.038726806640625, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005793094635009766, 0.0, -0.000659942626953125, -0.000186920166015625, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015386343002319336, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.0003223419189453125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.0034352540969848633, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008638381958007812, -0.000522613525390625, -6.103515625e-05, -0.012247085571289062, 0.0, -0.007969260215759277, 0.0, -0.0016956329345703125, -5.7220458984375e-06, -0.0006198883056640625, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.01187896728515625, 0.0, -0.005745887756347656, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004520416259765625, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.002716064453125, -2.09808349609375e-05, -3.814697265625e-06, -0.0002801417140290141, 0.0, -0.000507354736328125, 0.0, -1.33514404296875e-05, -0.0019378662109375, -0.013331413269042969, -7.62939453125e-06, -0.00022220611572265625, -7.62939453125e-06], "score": -5.447800863828547, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "EPIC", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -0.007997870445251465, 0.0, -0.001697540283203125, -5.7220458984375e-06, -0.0006160736083984375, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.755782127380371, -7.62939453125e-06, -0.3626279830932617, -8.0108642578125e-05, -0.0032634735107421875, -0.09694862365722656, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0055999755859375, -1.9073486328125e-06, -0.000705718994140625, 0.0, -0.0001811981201171875, -2.09808349609375e-05, -0.08381068706512451, 0.0, -0.0037555694580078125, -0.0001239776611328125, -6.29425048828125e-05, -1.9073486328125e-06, -0.00014591217041015625, 0.0, -0.001311659812927246, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.1444091796875e-05, -0.000240325927734375, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.000370025634765625, -1.9073486328125e-06, -0.0033789873123168945, -2.1219253540039062e-05, -0.001152634620666504, 0.0], "score": -5.4817630041517305, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "targeting", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = copy.targeting(game.other_player.minions)\n            targets.append(game.other_player.hero)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "targeting", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -0.007997870445251465, 0.0, -0.001697540283203125, -5.7220458984375e-06, -0.0006160736083984375, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.011870384216308594, 0.0, -0.005749702453613281, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004520416259765625, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.0026979446411132812, -2.09808349609375e-05, -3.814697265625e-06, -0.0002802609233185649, 0.0, -0.0005054473876953125, 0.0, -1.33514404296875e-05, -0.0019378662109375, -5.358028411865234], "score": -5.5439059722131105, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 73], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, player)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"_type": "Template38"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -5.1049885749816895, 0.0, -0.0007839202880859375, -3.814697265625e-06, -0.13930892944335938, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.06455326080322266, -1.9073486328125e-06, -0.28981494903564453, -1.9073486328125e-06, -7.2479248046875e-05, -0.000133514404296875, -0.0004215240478515625, -3.4332275390625e-05, -1.9073486328125e-06, -0.0005512237548828125, -3.814697265625e-06, -0.0006561279296875, 0.0, -0.0001068115234375, -1.9073486328125e-05, -0.005975127220153809, 0.0, -0.000682830810546875, -0.000209808349609375, -4.9591064453125e-05, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -0.001498579978942871, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.00031280517578125, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.0034486055374145508, -2.1219253540039062e-05, -0.0010930299758911133, 0.0], "score": -5.766947029916196, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -4.560581207275391, -0.001491546630859375, -0.002750396728515625, -5.91278076171875e-05, -0.017871856689453125, 0.0, -0.5102434158325195, 0.0, -0.023560643196105957, -1.9073486328125e-06, -0.0024979114532470703, 0.0, -0.14767169952392578, -1.52587890625e-05, -0.4000568389892578, -0.08379971981048584, 0.0, -0.017078399658203125, -0.00057220458984375, -0.000247955322265625, -0.022176742553710938, 0.0, -0.017967700958251953, 0.0, -0.001194000244140625, -3.814697265625e-06, -0.000640869140625, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.007439613342285156, 0.0, -0.005166053771972656, -3.814697265625e-06, -2.47955322265625e-05, -0.000499725341796875, 0.0, -0.00027382373809814453, 0.0], "score": -5.963382600633054, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 17, 104, 42, "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            game.other_player.hero = player.hero\n            target = game.random_choice(targets)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Assign"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -0.007997870445251465, 0.0, -0.001697540283203125, -5.7220458984375e-06, -0.0006160736083984375, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.011870384216308594, 0.0, -0.005749702453613281, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004520416259765625, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.0026979446411132812, -2.09808349609375e-05, -3.814697265625e-06, -0.0002802609233185649, 0.0, -0.0005054473876953125, 0.0, -1.33514404296875e-05, -0.0019378662109375, -5.76204776763916, -0.0040416717529296875, -7.62939453125e-06, -2.86102294921875e-05, -0.0001220703125, -0.0004668199399020523, -5.960462772236497e-07, -0.0001811981201171875, -0.018332481384277344], "score": -5.971106405167063, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, player.effective_spell_damage(3))\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -5.099120140075684, -0.8227577209472656, -0.0003604888916015625, -0.0008373260498046875, -0.000202178955078125, -0.0001678466796875, 0.0, -0.001345872413367033, 0.0, -7.2479248046875e-05, -9.5367431640625e-06, -0.0001850128173828125, 0.0, -9.5367431640625e-06, 0.0, -0.0004634857177734375, 0.0, -0.03878307342529297, 0.0, -8.96453857421875e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000125885009765625, -3.814697265625e-06, -0.0005035400390625, 0.0, -0.0001373291015625, -2.47955322265625e-05, -0.005543112754821777, 0.0, -0.0002841949462890625, -0.0002536773681640625, -5.14984130859375e-05, -1.9073486328125e-06, -9.059906005859375e-05, 0.0, -0.0015739202499389648, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000347137451171875, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.000370025634765625, -1.9073486328125e-06, -0.003445744514465332, -2.1219253540039062e-05, -0.001064300537109375, 0.0, -0.014434814453125, -0.0004482269287109375, -6.103515625e-05, -0.011484146118164062, 0.0, -0.00747227668762207, 0.0, -0.001781463623046875, -3.814697265625e-06, -0.0006580352783203125, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.012167930603027344, 0.0, -0.005730628967285156, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004558563232421875, 0.0, -0.000270843505859375, 0.0, -6.4849853515625e-05, -0.0020160675048828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00031208977452479303, 0.0, -0.0005474090576171875, 0.0, -1.71661376953125e-05, -0.0019550323486328125, -0.013894081115722656, -5.7220458984375e-06, -0.00023937225341796875, -7.62939453125e-06], "score": -6.084022163327177, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(2)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -0.007997870445251465, 0.0, -0.001697540283203125, -5.7220458984375e-06, -0.0006160736083984375, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.755782127380371, -7.62939453125e-06, -1.3001222610473633, -1.9073486328125e-06, -7.2479248046875e-05, -0.000652313232421875, -0.0005435943603515625, -3.814697265625e-05, 0.0, -0.0041027069091796875, -3.814697265625e-06, -0.000335693359375, 0.0, -0.000209808349609375, -3.62396240234375e-05, -0.04060721397399902, 0.0, -0.0035190582275390625, -0.0001621246337890625, -7.43865966796875e-05, -1.9073486328125e-06, -0.00014781951904296875, 0.0, -0.0013326406478881836, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.33514404296875e-05, -0.0002384185791015625, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.0003643035888671875, -1.9073486328125e-06, -0.0033789873123168945, -2.1219253540039062e-05, -0.0011669397354125977, 0.0], "score": -6.275024412957578, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -5.423243999481201, 0.0, -0.6818599700927734, -9.72747802734375e-05, -0.0002117156982421875, 0.0, -0.00021266937255859375, 0.0, -0.0014051198959350586, 0.0, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-05, -0.000301361083984375, -1.9073486328125e-06, -0.0003948211669921875, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.003106355667114258, -2.5153160095214844e-05, -0.0013248920440673828, 0.0, -0.006664276123046875, -0.000576019287109375, -6.29425048828125e-05, -0.010960578918457031, 0.0, -0.009126067161560059, 0.0, -0.0014400482177734375, -5.7220458984375e-06, -0.000652313232421875, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.011654853820800781, 0.0, -0.0058498382568359375, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004558563232421875, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.0026836395263671875, -2.09808349609375e-05, -3.814697265625e-06, -0.0002740620111580938, 0.0, -0.000499725341796875, 0.0, -1.33514404296875e-05, -0.0019397735595703125, -0.013273239135742188, -7.62939453125e-06, -0.00022220611572265625, -7.62939453125e-06], "score": -6.296021937073533, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.hero)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -6.0836992263793945, -0.028148651123046875, -0.00046539306640625, -0.0001392364501953125, -0.001407623291015625, -0.0029163360595703125, -4.1961669921875e-05, -0.0009040515869855881, -3.099440846199286e-06, -0.000179290771484375, -3.814697265625e-06, -0.000751495361328125, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002830028533935547, 0.0, -0.0042743682861328125, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.0001583099365234375, -3.814697265625e-06, -0.0001544952392578125, 0.0, -0.00012981891632080078, -6.103515625e-05, -0.0008175373077392578, 0.0, -0.000698089599609375, -2.288818359375e-05, -0.0002079010009765625, -1.9073486328125e-06, -0.0003101825714111328, -1.1920928244535389e-07, -0.37332749366760254, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0003452301025390625, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.0002574920654296875, -1.9073486328125e-06, -0.0034449100494384766, -2.1219253540039062e-05, -0.0012418031692504883, 0.0, -0.103790283203125, -0.0001735687255859375, -5.91278076171875e-05, -0.002376556396484375, 0.0, -0.005660414695739746, 0.0, -0.000980377197265625, -7.62939453125e-06, -0.0005550384521484375, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.012012481689453125, 0.0, -0.005558967590332031, -1.9073486328125e-06, -2.86102294921875e-05, -0.00045013427734375, 0.0, -0.0002803802490234375, 0.0], "score": -6.648305484930788, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.other_player.hero)\n        target = game.random_choice(targets)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -5.099120140075684, -1.1123237609863281, -0.12517547607421875, -0.0014133453369140625, -0.005734443664550781, -1.9073486328125e-06, -0.0309295654296875, 0.0, -0.1051015853881836, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.036365509033203125, 0.0, -3.814697265625e-06, -0.33901405334472656, -0.00206756591796875, -1.52587890625e-05, -0.00029468536376953125, -1.33514404296875e-05], "score": -6.8889911170709865, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(2)):\n            self.target.damage(1, self)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -6.996538162231445, -0.003875732421875, -0.000843048095703125, -1.33514404296875e-05, -0.000392913818359375, 0.0, -0.0008480548858642578, 0.0, -0.00014495849609375, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -7.62939453125e-06, 0.0, -0.0007734298706054688, 0.0, -0.028871536254882812, 0.0, -0.0001049041748046875, -7.62939453125e-06, -5.14984130859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001621246337890625, -1.9073486328125e-06, -0.0006504058837890625, 0.0, -0.00012969970703125, -2.47955322265625e-05, -0.006054282188415527, 0.0, -0.000560760498046875, -0.000240325927734375, -4.57763671875e-05, 0.0, -6.198883056640625e-05, 0.0, -0.001999974250793457, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.00031280517578125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.004062771797180176, -1.728534698486328e-05, -0.0010358095169067383, 0.0], "score": -7.099872469495608, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 218, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n", "model_output": {"hole0": "ArcaneMissiles", "hole2": [{"hole0": "Arcane Missiles", "hole2": "MAGE", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 5}
{"beams": [{"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009307861328125, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006237030029296875, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -0.0012483596801757812, -2.0265579223632812e-06, -0.0003223419189453125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "score": -0.01866471277934778, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -5.3484320640563965, -5.7220458984375e-06, 0.0, 0.0, -7.62939453125e-06, -0.000156402587890625, -0.0001354217529296875, -0.000179290771484375, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.001734018325805664, -9.34600830078125e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.773777517490089e-05, 0.0, -0.00020599365234375, -9.1552734375e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0021924972534179688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009164810180664062, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006198883056640625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, -0.0012464523315429688, -2.0265579223632812e-06, -0.000324249267578125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "score": -5.359976882749827, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -6.492048263549805, -0.0004291534423828125, -0.0067138671875, -7.43865966796875e-05, -2.288818359375e-05, 0.0, -7.62939453125e-06, 0.0, -0.0017538070678710938, -1.9073486328125e-06, -0.00013077245966996998, -1.9073486328125e-06, -7.891654968261719e-05, 0.0, -0.0001888275146484375, -0.0014019012451171875, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, -0.0012053251266479492, -2.0265579223632812e-06, -0.00026702880859375, -2.09808349609375e-05, -2.86102294921875e-05, 0.0, -7.414816354867071e-05, 0.0, -0.00030517578125, -0.0001163482666015625, -7.62939453125e-06, 0.0, -0.0458221435546875, -1.9073486328125e-06, -0.010282635688781738, -7.62939453125e-06, -1.1563301086425781e-05, -9.5367431640625e-06, -0.0005246400833129883, 0.0, -1.9073486328125e-06, -0.0002346038818359375, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, -0.0012780427932739258, -1.1920928244535389e-07, -0.0002880096435546875, -1.71661376953125e-05, -4.1961669921875e-05, -1.9073486328125e-06, -7.212157652247697e-05, 0.0, -0.000370025634765625, -0.0001583099365234375, -9.5367431640625e-06, 0.0, -0.0133514404296875, -1.9073486328125e-06, -0.014606595039367676, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.0005626678466796875, 0.0, -1.9073486328125e-06, -0.0001850128173828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0012809038162231445, -1.1920928244535389e-07, -0.0003070831298828125, -1.71661376953125e-05, -4.9591064453125e-05, -1.9073486328125e-06, -7.045264646876603e-05, 0.0, -0.0003814697265625, -0.0003509521484375, -9.5367431640625e-06, 0.0, -0.0067729949951171875, -1.9073486328125e-06, -0.01646137237548828, -7.62939453125e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.0006103515625, 0.0, -1.9073486328125e-06, -0.0001583099365234375, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.001287221908569336, -1.1920928244535389e-07, -0.0003108978271484375, -1.71661376953125e-05, -5.340576171875e-05, -1.9073486328125e-06, -6.949896487640217e-05, 0.0], "score": -6.633724445988236, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -6.766692161560059, -1.9073486328125e-06, -0.000141143798828125, -1.9073486328125e-06, -3.0398254239116795e-05, 0.0, -0.0001544952392578125, -0.0001049041748046875, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023975372314453125, -3.0517578125e-05, -4.00543212890625e-05, -0.00017547607421875, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009937286376953125, -1.9073486328125e-06, -9.381761628901586e-05, -3.814697265625e-06, -7.092952728271484e-05, 0.0, -7.05718994140625e-05, -0.000598907470703125, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.0012388229370117188, -2.0265579223632812e-06, -0.0003261566162109375, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.331369124585763e-05, 0.0], "score": -6.78387486452629, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -7.277032375335693, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -0.000213623046875, -0.000118255615234375, -0.00018310546875, -1.71661376953125e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -8.7738037109375e-05, 0.0, -0.000133514404296875, -3.814697265625e-06, -0.0016252994537353516, -9.72747802734375e-05, -4.589557647705078e-05, -1.9073486328125e-06, -8.85722620296292e-05, 0.0, -0.0002079010009765625, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, 0.0, -0.002288818359375, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009174346923828125, -1.9073486328125e-06, -9.083739860216156e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.00061798095703125, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, -0.0012445449829101562, -2.0265579223632812e-06, -0.000324249267578125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "score": -7.288595075444384, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -7.404242992401123, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -0.000240325927734375, -0.00035858154296875, -0.0001659393310546875, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -0.0015604496002197266, -9.5367431640625e-05, -4.589557647705078e-05, -1.9073486328125e-06, -8.642645843792707e-05, 0.0, -0.0002040863037109375, -8.7738037109375e-05, -2.288818359375e-05, 0.0, 0.0, -0.0023260116577148438, -2.86102294921875e-05, -3.814697265625e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009183883666992188, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006198883056640625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, -0.0012483596801757812, -2.0265579223632812e-06, -0.000324249267578125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "score": -7.416013474265121, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -7.763378620147705, -7.2479248046875e-05, -0.000286102294921875, -8.392333984375e-05, -5.7220458984375e-05, 0.0, -7.62939453125e-06, 0.0, -0.0008897781372070312, -1.9073486328125e-06, -8.463857375318184e-05, -1.9073486328125e-06, -6.341934204101562e-05, 0.0, -0.0001392364501953125, -0.0015087127685546875, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0011805295944213867, -2.0265579223632812e-06, -0.000255584716796875, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.283684681169689e-05, -1.9073486328125e-06, -0.0058612823486328125, -0.0001201629638671875, -1.71661376953125e-05, 0.0, -0.21306610107421875, -1.9073486328125e-06, -0.016193509101867676, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0003052949905395508, 0.0, 0.0, -0.0003757476806640625, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -0.001410841941833496, -1.1920928244535389e-07, -0.0002994537353515625, -1.71661376953125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -7.057185575831681e-05, -1.9073486328125e-06], "score": -8.018574948191585, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009307861328125, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006237030029296875, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -8.047600746154785, -0.00012028217315673828, -0.0001201629638671875, -2.47955322265625e-05, -1.9073486328125e-05, 0.0, -7.879729673732072e-05, 0.0], "score": -8.064936513752393, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009307861328125, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -8.128104209899902, -0.0007572174072265625, -1.52587890625e-05, -0.00012218952178955078, -2.47955322265625e-05], "score": -8.14527153481503, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -8.14753246307373, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0001087188720703125, -0.0002536773681640625, -0.0002956390380859375, -7.62939453125e-06, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.0001010894775390625, 0.0, -0.0001430511474609375, -3.814697265625e-06, -0.0014994144439697266, -8.392333984375e-05, -4.589557647705078e-05, -1.9073486328125e-06, -8.845306001603603e-05, 0.0, -0.0002002716064453125, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, 0.0, -0.002330780029296875, -2.86102294921875e-05, -3.814697265625e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009279251098632812, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.000621795654296875, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -0.0012464523315429688, -2.0265579223632812e-06, -0.000324249267578125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "score": -8.159149522625732, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -8.1875, -1.9073486328125e-06, -0.12895309925079346, 0.0, -7.867813110351562e-05, 0.0, -3.814697265625e-05, -0.0006389617919921875, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -7.82012939453125e-05, -0.001152634620666504, -1.1920928244535389e-07, -0.0003299713134765625, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.8558899986092e-05, 0.0], "score": -8.334007377578004, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "attacker", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        attacker.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009307861328125, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006237030029296875, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -8.572968482971191, 0.0, -0.0002536773681640625, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -5.769726340076886e-05, 0.0], "score": -8.590296382766603, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "hero", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.hero(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -8.6062593460083, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -0.0001659393310546875, -0.0001049041748046875, -0.000240325927734375, -1.1444091796875e-05, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.72747802734375e-05, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.001573801040649414, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.654571138322353e-05, 0.0, -0.00020599365234375, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.002239227294921875, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009250640869140625, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006198883056640625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, -0.0012464523315429688, -2.0265579223632812e-06, -0.000324249267578125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "score": -8.617719049298096, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -8.5639066696167, 0.0, -0.12202596664428711, -9.167194366455078e-05, -0.13320958614349365, 0.0, -0.00011444091796875, -0.000667572021484375, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, -0.0011109113693237305, -1.1920928244535389e-07, -0.0002040863037109375, -1.9073486328125e-05, -4.57763671875e-05, 0.0, -6.806846067775041e-05, 0.0], "score": -8.83663630001864, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000171661376953125, -6.794672012329102, -3.576277322281385e-06, -9.26231878111139e-05, -8.284733485197648e-05, -0.00034385250182822347, -2.503394853192731e-06, -0.0004819631576538086, -1.9073486328125e-06, -0.0021457672119140625, -2.288818359375e-05, -9.72747802734375e-05, -7.62939453125e-05, -4.9591064453125e-05, -0.000469207763671875, -2.6702880859375e-05, -1.1444091796875e-05, -1.5616295058862306e-05, -9.071678505279124e-05, -2.121924626408145e-05, -9.536726793157868e-06, -2.47955322265625e-05, -2.288818359375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -7.62939453125e-06, -2.6702880859375e-05, 0.0, -0.006201505661010742, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.20159912109375e-05, -9.1552734375e-05, -0.0007171630859375, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.0001068115234375, 0.0, -0.0001392364501953125, -3.814697265625e-06, -0.0015279054641723633, -8.20159912109375e-05, -0.0006561279296875, -3.814697265625e-06, -0.00033211708068847656, 0.0, -0.000148773193359375, -6.866455078125e-05, -1.52587890625e-05, -3.814697265625e-06, -1.1920928244535389e-07, -0.3032360076904297, -2.86102294921875e-05, -0.0070323944091796875, -4.1961669921875e-05, -6.67572021484375e-05, 0.0, -3.0517578125e-05, 0.0, -0.0006209611892700195, -7.62939453125e-06, -4.339216684456915e-05, -3.814697265625e-06, -3.838539123535156e-05, 0.0, -2.288818359375e-05, -0.0005035400390625, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0010617971420288086, -2.0265579223632812e-06, -0.00038909912109375, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -7.569787703687325e-05, 0.0, -1.33514404296875e-05, -0.008486747741699219, -0.00093841552734375, -0.003496401244774461, 0.0, -0.002727508544921875, -3.24249267578125e-05, -0.00107574462890625, -0.000339508056640625, -0.0011997222900390625, -0.000255584716796875, -0.001003265380859375, 0.0, -0.009796142578125, -0.000278472900390625, -0.00069427490234375, -2.86102294921875e-05, -0.001140692038461566, -3.6954863844584906e-06, -0.016489148139953613, 0.0, -0.0001659393310546875, 0.0, -0.002666473388671875, 0.0, -0.0001220703125, -9.5367431640625e-06, -0.4320802688598633, -0.004740715026855469, -0.061324119567871094, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007829666137695312, 0.0, -0.0001811981201171875, -0.0003108978271484375, 0.0, -0.13006973266601562, 0.0, -0.3491706848144531, 0.0, -0.0001659393310546875, 0.0, -0.000718235969543457, 0.0, -0.014893054962158203, -1.9073486328125e-05, -0.018167495727539062, -0.051074981689453125, -0.0029268264770507812, -1.0049543380737305, -5.14984130859375e-05, -0.0016307830810546875, -1.9073486328125e-06, -0.0043926239013671875, -9.5367431640625e-06, -0.0057392120361328125, 0.0, -0.0649709701538086, 0.0], "score": -9.322020547519507, "choice_history": [77, 148, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 18, 106, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 79, 38, 202, 13, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) - 1 is not MINION_TYPE.BEAST\n", "model_output": {"hole0": "ArcaneShot", "hole2": [{"value": {"args": [{"s": "Arcane Shot", "_type": "Str"}, {"_type": "Template34"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"op": {"_type": "Sub"}, "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "right": {"_type": "Template34"}, "_type": "BinOp"}, "ops": [{"_type": "IsNot"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 6}
{"beams": [{"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -0.00347149302251637, 0.0, -1.8477439880371094e-05, 0.0, -0.0020427703857421875, 0.0, -0.00014805189857725054, -1.1920928244535389e-07, -0.000797271728515625, -5.53131103515625e-05, -0.0003147125244140625, -8.094245276879519e-05, -6.0794889577664435e-05, 0.0, 0.0, -1.966952368093189e-05, 0.0], "score": -0.1438024851790516, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -0.24728667736053467, 0.0, -0.0006313323974609375, -4.1961669921875e-05, -1.71661376953125e-05, -3.254413604736328e-05, 0.0, -0.01917874813079834, 0.0, -0.0003749677271116525, 0.0, -0.47815895080566406, -0.0002899169921875, -0.0002651214599609375, -6.568373646587133e-05, -8.546940807718784e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -7.390975952148438e-05, 0.0], "score": -2.8286804112017165, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -0.24728667736053467, 0.0, -0.0006313323974609375, -4.1961669921875e-05, -1.71661376953125e-05, -3.254413604736328e-05, 0.0, -0.01917874813079834, 0.0, -0.0003749677271116525, 0.0, -0.9979124069213867, -0.000213623046875, -1.1444091796875e-05, -9.5367431640625e-05, -4.1961669921875e-05, 0.0, -0.11691707372665405, -7.629365427419543e-06, -0.0002193450927734375, -7.62939453125e-06, -0.005478858947753906, -2.09808349609375e-05, -0.009239288046956062, -0.000870208372361958, -0.0006885528564453125, -0.0029249191284179688, -0.0001392364501953125, -0.0005607454222626984, -0.00019619998056441545, -0.12015342712402344, -0.008513450622558594, -5.7220458984375e-05, -7.2479248046875e-05, -1.1444091796875e-05, -0.059482984244823456, -7.152555099310121e-07], "score": -3.673578312447944, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 218, 82, 103, 205, 53, 133, "weapon", "<EOS>", 20, 111, 25, 133, "Weapon", "<EOS>", 206, 55, 138, "5", "<EOS>", 70, 91, 140, 25, 133, "weapon", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        weapon = Weapon(5, 3)\n        return weapon\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"targets": [{"id": "weapon", "_type": "Name"}], "value": {"args": [{"n": 5, "_type": "Num"}, {"_type": "Template35"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"id": "weapon", "_type": "Name"}, "_type": "Return"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -1.6093357801437378, 0.0, -0.0068912506103515625, -0.000354766845703125, -1.9073486328125e-05, -2.6941299438476562e-05, -1.1920928244535389e-07, -0.02075791358947754, 0.0, -0.00033051884383894503, 0.0, -0.5303487777709961, -0.0003376007080078125, -0.0002574920654296875, -6.520691385958344e-05, -8.463501580990851e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -8.14199447631836e-05, 0.0], "score": -4.251069457927294, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -1.6093357801437378, 0.0, -0.0068912506103515625, -0.000354766845703125, -1.9073486328125e-05, -2.6941299438476562e-05, -1.1920928244535389e-07, -0.02075791358947754, 0.0, -0.00033051884383894503, 0.0, -0.9146080017089844, -0.000202178955078125, -1.1444091796875e-05, -8.96453857421875e-05, -4.1961669921875e-05, 0.0, -0.11546362191438675, -8.4638240878121e-06, -0.000225067138671875, -7.62939453125e-06, -0.005509376525878906, -2.09808349609375e-05, -0.008508140221238136, -0.0008809278369881213, -0.000701904296875, -0.00289154052734375, -0.00014495849609375, -0.0005630106898024678, -0.00020013313041999936, -0.1190643310546875, -0.008292198181152344, -5.91278076171875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.059590499848127365, -7.152555099310121e-07], "score": -4.957060054522337, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 218, 82, 103, 205, 53, 133, "weapon", "<EOS>", 20, 111, 25, 133, "Weapon", "<EOS>", 206, 55, 138, "5", "<EOS>", 70, 91, 140, 25, 133, "weapon", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        weapon = Weapon(5, 3)\n        return weapon\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"targets": [{"id": "weapon", "_type": "Name"}], "value": {"args": [{"n": 5, "_type": "Num"}, {"_type": "Template35"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"id": "weapon", "_type": "Name"}, "_type": "Return"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -0.24728667736053467, 0.0, -0.0006313323974609375, -4.1961669921875e-05, -1.71661376953125e-05, -3.254413604736328e-05, 0.0, -4.296797275543213, 0.0, -0.0007297795964404941, -1.1920928244535389e-07, -0.02948474884033203, -0.0008335113525390625, -0.0004367828369140625, -3.2901640224736184e-05, -8.332382276421413e-05, 0.0, 0.0, -4.3392181396484375e-05, 0.0], "score": -6.658629239786471, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -6.815857887268066, 0.0, -6.186962127685547e-05, 0.0, -0.0011997222900390625, 0.0, -0.00019120084471069276, -1.1920928244535389e-07, -0.0008144378662109375, -5.340576171875e-05, -0.000347137451171875, -8.881002577254549e-05, -6.675497570540756e-05, 0.0, 0.0, -2.3245802367455326e-05, 0.0], "score": -6.955497460110067, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "PALADIN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -6.849712371826172, 0.0, -2.3365020751953125e-05, 0.0, -0.00115966796875, 0.0, -0.0001691506040515378, -1.1920928244535389e-07, -0.000873565673828125, -4.38690185546875e-05, -0.0003795623779296875, -8.761791104916483e-05, -6.282132380874828e-05, 0.0, 0.0, -2.312659489689395e-05, 0.0], "score": -6.989328106522819, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "DRUID", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -0.00347149302251637, 0.0, -1.8477439880371094e-05, 0.0, -6.886659622192383, 0.0, -0.0005518122925423086, 0.0, -0.00104522705078125, -0.000102996826171875, -0.000270843505859375, -0.00011038591765100136, -3.731181277544238e-05, -1.1920928244535389e-07, 0.0, -1.6808495274744928e-05, 0.0], "score": -7.029077966758862, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "damage", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def damage(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "damage", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -7.007157325744629, 0.0, -5.0067901611328125e-05, 0.0, -0.001125335693359375, 0.0, -0.00016891198174562305, -1.1920928244535389e-07, -0.0008335113525390625, -4.9591064453125e-05, -0.0003452301025390625, -8.201505988836288e-05, -6.174850568640977e-05, -1.1920928244535389e-07, 0.0, -1.966952368093189e-05, 0.0], "score": -7.146686514342441, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "ROGUE", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -4.617284774780273, 0.0, -0.004917144775390625, -0.0002613067626953125, -4.00543212890625e-05, -2.5033950805664062e-05, -1.1920928244535389e-07, -0.020736098289489746, 0.0, -0.00046993972500786185, 0.0, -0.7283744812011719, -0.0004596710205078125, -0.0002689361572265625, -6.771021435270086e-05, -7.247662142617628e-05, -1.1920928244535389e-07, -1.1920928244535389e-07, -0.00013458728790283203, 0.0], "score": -7.4552902957970915, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -0.00347149302251637, 0.0, -1.8477439880371094e-05, 0.0, -8.455894470214844, 0.0, -0.026796339079737663, 0.0, -0.0007572174072265625, -0.000179290771484375, -0.0003204345703125, -8.594956307206303e-05, -6.329813186312094e-05, -1.1920928244535389e-07, 0.0, -1.1205666851310525e-05, 0.0], "score": -8.624391164070815, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "find_minion_spell_target", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def find_minion_spell_target(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "find_minion_spell_target", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -8.491698265075684, -0.0005053996574133635, -0.05685544013977051, 0.0, -1.8239017663290724e-05, 0.0, -0.00182342529296875, 0.0, -0.00018249954155180603, -1.1920928244535389e-07, -0.000820159912109375, -5.7220458984375e-05, -0.0003204345703125, -8.511453052051365e-05, -6.603976362384856e-05, 0.0, 0.0, -1.966952368093189e-05, 0.0], "score": -8.688772587958269, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "Weapon", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 0, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -0.00347149302251637, 0.0, -1.8477439880371094e-05, 0.0, -8.716547012329102, -5.7220458984375e-06, -0.00012993504060432315, -1.1920928244535389e-07, -0.000316619873046875, -0.000148773193359375, -0.0002994537353515625, -4.875648664892651e-05, -5.495397272170521e-05, 0.0, 0.0, -2.3365011657006107e-05, 0.0], "score": -8.857857550353813, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player):\n        return Weapon(5, 2)\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"hole0": "Arcanite Reaper", "hole2": "WARRIOR", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 2, "hole1": 5, "_type": "Template20"}]}}, {"score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -2.074247360229492, -0.00014495849609375, -7.62939453125e-06, -0.0008335113525390625, -0.000148773193359375, -0.0006771087646484375, -8.7738037109375e-05, -3.814697265625e-06, -6.437280717364047e-06, -0.00014709931565448642, -8.106222594506107e-06, -0.0003507136716507375, -0.0010395050048828125, -0.000263214111328125, -9.095628774957731e-05, -1.0490406566532329e-05, -0.0031070709228515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.743171691894531e-05, 0.0, -0.24728667736053467, 0.0, -0.0006313323974609375, -4.1961669921875e-05, -1.71661376953125e-05, -3.254413604736328e-05, 0.0, -0.01917874813079834, 0.0, -0.0003749677271116525, 0.0, -0.9979124069213867, -0.000213623046875, -1.1444091796875e-05, -9.5367431640625e-05, -4.1961669921875e-05, 0.0, -0.11691707372665405, -7.629365427419543e-06, -0.0002193450927734375, -7.62939453125e-06, -0.005478858947753906, -2.09808349609375e-05, -0.009239288046956062, -0.000870208372361958, -0.0006885528564453125, -0.0029249191284179688, -0.0001392364501953125, -0.0005607454222626984, -0.00019619998056441545, -2.394479751586914, -0.49108314514160156, -0.03835868835449219, -0.0011692047119140625, -1.71661376953125e-05, -0.3177683651447296, -1.1920928244535389e-07, -0.7267000675201416, -3.576278118089249e-07, -5.53131103515625e-05, -0.003009796142578125, -1.71661376953125e-05, -0.0013408660888671875, -1.9073486328125e-06, -0.8361844420433044, -0.2671724557876587, -7.62939453125e-06, -0.12604141235351562, -0.8774852752685547, -0.014713287353515625, -0.02022552490234375, -0.0003509521484375, -0.05011749267578125, -0.05050884932279587, -7.152555099310121e-07, -1.52587890625e-05, -2.09808349609375e-05, -0.2205110788345337, -1.7285345165873878e-05, -0.13408660888671875, -9.34600830078125e-05, -0.2168813943862915, -1.311301275563892e-06, -3.814697265625e-06, -5.340576171875e-05, -0.09365148097276688, -6.318092346191406e-06, -0.009990692138671875, -0.1464700698852539, -0.5392627716064453, 0.0, -0.5029007792472839, -1.6331649021594785e-05, 0.0], "score": -11.566079584682647, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Arcanite", " ", "Reaper", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 64, 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 218, 82, 103, 205, 53, 133, "weapon", "<EOS>", 20, 111, 25, 133, "Weapon", "<EOS>", 206, 55, 138, "5", "<EOS>", 68, 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 25, 133, "Add", "Card", "<EOS>", 205, 51, 129, 208, 59, 155, "Buff", "<EOS>", 25, 133, "5", "<EOS>", 59, 155, "Buff", "<EOS>", 25, 133, "5", "<EOS>", 71, 71, 63, 171, "Weapon", "Selector", "<EOS>"], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        weapon = Weapon(5, 2)\n        target.damage(AddCard([Buff(5()), Buff(5())]), WeaponSelector())\n", "model_output": {"hole0": "ArcaniteReaper", "hole2": [{"value": {"args": [{"s": "Arcanite Reaper", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"targets": [{"id": "weapon", "_type": "Name"}], "value": {"args": [{"n": 5, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"elts": [{"hole0": "Buff", "hole1": {"id": "5", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "5", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "WeaponSelector", "_type": "Template25"}], "hole1": "damage", "_type": "Template23"}]}}], "index": 7}
{"beams": [{"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -0.11644268035888672, -7.62939453125e-05, -3.814697265625e-06, -0.0001049041748046875, 0.0, -0.0001277923583984375, 0.0, -7.748603820800781e-06, 0.0, -0.0024377107620239258, 0.0, -0.0002498626708984375, -0.008440017700195312, -4.76837158203125e-05, -0.00011348724365234375, -3.24249267578125e-05], "score": -0.38719189143431976, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -0.11667156219482422, -2.47955322265625e-05, -0.04107856750488281, -2.86102294921875e-05, -0.00083160400390625, -3.814697265625e-06, -0.00048363208770751953, 0.0, -0.0328751802444458, 0.0, -3.814697265625e-06, -0.08336353302001953, -0.0003452301025390625, -0.0007600784301757812, -4.1961669921875e-05, -2.6702880859375e-05, -0.0001373291015625, -0.0001697540283203125, 0.0, -0.0006151199340820312, 0.0, -0.010642051696777344, 0.0, -0.147918701171875, -0.00035858154296875, -0.00075531005859375, -0.0001087188720703125, -1.9073486328125e-05, -3.814697265625e-06, -0.0037508010864257812, -5.7220458984375e-06, -0.0074920654296875, 0.0, -0.008908271789550781, 0.0, -0.000546574592590332, 0.0, -4.57763671875e-05, -0.0003032684326171875, -0.0006847381591796875, -0.0007821321487426758, 0.0, -0.0009222030639648438, -0.000194549560546875, -5.91278076171875e-05, -0.01591777801513672, -7.2479248046875e-05, -3.814697265625e-06, -0.0001068115234375, 0.0, -0.0001201629638671875, 0.0, -7.748603820800781e-06, 0.0, -0.002064824104309082, 0.0, -0.0001583099365234375, -0.00708770751953125, -4.00543212890625e-05, -0.00011348724365234375, -3.0517578125e-05], "score": -2.271219849467002, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -2.250473976135254, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0011997222900390625, 0.0, -1.919269561767578e-05, 0.0, -0.12851905822753906, -1.9073486328125e-06], "score": -2.6393518445516904, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "bounce", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -0.11667156219482422, -2.47955322265625e-05, -0.04107856750488281, -2.86102294921875e-05, -0.00083160400390625, -3.814697265625e-06, -0.00048363208770751953, 0.0, -0.0328751802444458, 0.0, -3.814697265625e-06, -0.08336353302001953, -0.0003452301025390625, -0.0007600784301757812, -4.1961669921875e-05, -2.6702880859375e-05, -0.0001373291015625, -0.0001697540283203125, 0.0, -0.0006151199340820312, 0.0, -0.010642051696777344, 0.0, -2.0262718200683594, -4.1961669921875e-05, -0.3762904405593872, -0.009512901306152344, 0.0, -0.013179779052734375, 0.0, -0.00010526098776608706, 0.0, -1.1444091796875e-05, -0.000213623046875, -0.0006160736083984375, -0.0003854036331176758, 0.0, -0.0008935928344726562, -0.000148773193359375, -0.0001354217529296875, -0.0053997039794921875, -6.4849853515625e-05, -5.7220458984375e-06, -7.62939453125e-05, 0.0, -0.0001659393310546875, 0.0, -7.748603820800781e-06, 0.0, -0.00214385986328125, 0.0, -0.0001430511474609375, -0.0045413970947265625, -3.62396240234375e-05, -0.00013256072998046875, -2.6702880859375e-05], "score": -4.513187288303584, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and PlayerSelector()\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -2.413511276245117, -0.001506805419921875, -0.026224136352539062, -0.010800361633300781, -7.82012939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.08768844604492188, -1.9073486328125e-06, -0.02721118927001953, 0.0, -0.5949697494506836, -0.0015249252319335938, -0.0006198883056640625, -0.000423431396484375, -1.33514404296875e-05, -1.9073486328125e-06, -0.006169319152832031, -1.1444091796875e-05, -0.006659507751464844, 0.0, -0.005671501159667969, 0.0, -0.00044524669647216797, 0.0, -4.9591064453125e-05, -0.0002193450927734375, -0.0006694793701171875, -0.0007287263870239258, 0.0, -0.000896453857421875, -0.000152587890625, -6.103515625e-05, -0.0149383544921875, -7.43865966796875e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.000118255615234375, 0.0, -7.748603820800781e-06, 0.0, -0.0020638704299926758, 0.0, -0.000156402587890625, -0.0069561004638671875, -4.00543212890625e-05, -0.0001125335693359375, -3.0517578125e-05], "score": -4.995465397715293, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 74, 190, 99, 17, 104, 25, 133, "target", "<EOS>", "<UNK>", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: not\n            target.<UNK> and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"op": {"_type": "Not"}, "operand": {"attr": "<UNK>", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "UnaryOp"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -0.11667156219482422, -2.47955322265625e-05, -0.04107856750488281, -2.86102294921875e-05, -0.00083160400390625, -3.814697265625e-06, -0.00048363208770751953, 0.0, -0.0328751802444458, 0.0, -3.814697265625e-06, -2.654383659362793, -0.0015172958374023438, -0.0057430267333984375, -6.67572021484375e-05, -6.67572021484375e-05, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.00040340423583984375, 0.0, -0.04691314697265625, 0.0, -0.3759431838989258, -0.0004444122314453125, -0.000957489013671875, -0.000156402587890625, -2.288818359375e-05, -1.9073486328125e-06, -0.00325775146484375, -5.7220458984375e-06, -0.009302139282226562, 0.0, -0.006275177001953125, 0.0, -0.0005731582641601562, 0.0, -4.9591064453125e-05, -0.0003337860107421875, -0.0007076263427734375, -0.0007306337356567383, 0.0, -0.0009069442749023438, -0.000209808349609375, -5.7220458984375e-05, -0.016397476196289062, -7.43865966796875e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.000118255615234375, 0.0, -7.748603820800781e-06, 0.0, -0.0020695924758911133, 0.0, -0.00016021728515625, -0.00708770751953125, -4.00543212890625e-05, -0.0001125335693359375, -3.0517578125e-05], "score": -5.111838817476951, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -0.11667156219482422, -2.47955322265625e-05, -0.04107856750488281, -2.86102294921875e-05, -0.00083160400390625, -3.814697265625e-06, -0.00048363208770751953, 0.0, -0.0328751802444458, 0.0, -3.814697265625e-06, -0.08336353302001953, -0.0003452301025390625, -0.0007600784301757812, -4.1961669921875e-05, -2.6702880859375e-05, -0.0001373291015625, -0.0001697540283203125, 0.0, -0.0006151199340820312, 0.0, -0.010642051696777344, 0.0, -2.0262718200683594, -4.1961669921875e-05, -1.201330304145813, -0.00185394287109375, 0.0, -0.016027450561523438, 0.0, -0.0001238565891981125, 0.0, -9.5367431640625e-06, -0.000217437744140625, -0.000591278076171875, -0.0003453493118286133, 0.0, -0.0008525848388671875, -0.0001239776611328125, -0.0001316070556640625, -0.009984016418457031, -7.05718994140625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.000156402587890625, 0.0, -7.748603820800781e-06, 0.0, -0.0021390914916992188, 0.0, -0.000141143798828125, -0.0051937103271484375, -3.4332275390625e-05, -0.00012874603271484375, -2.6702880859375e-05], "score": -5.338541386529528, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and SelfSelector())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"hole0": "SelfSelector", "_type": "Template25"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -2.250473976135254, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0011997222900390625, 0.0, -1.919269561767578e-05, 0.0, -3.1239147186279297, 0.0], "score": -5.634745597603448, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die()\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -0.11644268035888672, -7.62939453125e-05, -3.814697265625e-06, -0.0001049041748046875, 0.0, -0.0001277923583984375, 0.0, -7.748603820800781e-06, 0.0, -0.0024377107620239258, 0.0, -0.0002498626708984375, -5.288403511047363, -0.004749298095703125, -0.0008819103240966797, -5.7220458984375e-06, -0.0013027191162109375, -1.9073486328125e-06, -0.002935727359727025, -4.82797586300876e-05], "score": -5.676887352944156, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(Buff(<UNK>()))\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -2.250473976135254, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0011997222900390625, 0.0, -1.919269561767578e-05, 0.0, -3.212982177734375, 0.0], "score": -5.7238130567098935, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -2.413511276245117, -0.001506805419921875, -0.026224136352539062, -0.010800361633300781, -7.82012939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.08768844604492188, -1.9073486328125e-06, -0.02721118927001953, 0.0, -0.8097391128540039, -0.00022125244140625, -0.0014438629150390625, 0.0, -0.000148773193359375, 0.0, -0.018524169921875, -1.9073486328125e-06, -0.30120575428009033, 0.0, -8.7738037109375e-05, -0.21474647521972656, -2.09808349609375e-05, -0.005951881408691406, -0.000293731689453125, -4.57763671875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.006649017333984375, 0.0, -0.05005836486816406, 0.0, -0.010170936584472656, 0.0, -0.0008064508438110352, 0.0, -4.76837158203125e-05, -0.0002155303955078125, -0.00133514404296875, -0.0021975040435791016, -1.1920928244535389e-07, -0.0010852813720703125, -4.57763671875e-05, -8.392333984375e-05, -0.02411174774169922, -6.103515625e-05, -3.814697265625e-06, -0.000141143798828125, 0.0, -0.000110626220703125, 0.0, -7.748603820800781e-06, 0.0, -0.0019704103469848633, 0.0, -0.00014495849609375, -0.007925033569335938, -4.00543212890625e-05, -0.0001201629638671875, -2.6702880859375e-05], "score": -5.81140351283522, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 74, 190, 99, 17, 104, 25, 133, "target", "<EOS>", "<UNK>", "<EOS>", 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: not\n            target.<UNK> and target.health != target.calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"op": {"_type": "Not"}, "operand": {"attr": "<UNK>", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "UnaryOp"}, {"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -5.240496635437012, -0.0013294219970703125, -0.015680313110351562, -0.0016078948974609375, -0.0001010894775390625, -2.539125671319198e-05, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -2.038458114839159e-05, -5.7220440794480965e-06, -9.5367431640625e-06, -4.57763671875e-05, -4.38690185546875e-05, 0.0, -5.53131103515625e-05, 0.0, -0.010467529296875, 0.0, -0.0035610198974609375, -5.7220458984375e-06, -0.011411666870117188, -0.000530242919921875, -0.0001049041748046875, -0.056529998779296875, -0.000408172607421875, -0.0013027191162109375, -3.0517578125e-05, -7.62939453125e-06, -0.0010509490966796875, -0.11921310424804688, -9.5367431640625e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.02478790283203125, 0.0, -0.00032806396484375, 0.0, -0.3300333023071289, -7.62939453125e-06, -0.000186920166015625, 0.0, -4.589557647705078e-05, 0.0, -3.0517578125e-05, -9.918212890625e-05, -0.00019073486328125, -0.000156402587890625, -2.3841855067985307e-07, -0.004962921142578125, -1.1444091796875e-05, -9.1552734375e-05, -0.09647750854492188, -5.91278076171875e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.000152587890625, 0.0, -7.748603820800781e-06, 0.0, -0.002629399299621582, 0.0, -0.0002117156982421875, -0.006591796875, -4.76837158203125e-05, -0.00012111663818359375, -3.0517578125e-05], "score": -5.9403138154220585, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, True, hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -0.11667156219482422, -2.47955322265625e-05, -3.219694137573242, -0.5180416107177734, -0.005480766296386719, -0.000171661376953125, -0.0001010894775390625, -3.814697265625e-06, -0.0023180246353149414, -7.62939453125e-06, -0.0525050163269043, -3.933906555175781e-06, -2.86102294921875e-05, -0.25937461853027344, -0.0001678466796875, -0.09692668914794922, -0.000156402587890625, -7.05718994140625e-05, -0.0003643035888671875, -0.0023059844970703125, 0.0, -0.00061798095703125, 0.0, -0.02678394317626953, 0.0, -0.0664987564086914, -0.000431060791015625, -0.000591278076171875, -5.53131103515625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0028924942016601562, -5.7220458984375e-06, -0.008849143981933594, 0.0, -0.008642196655273438, 0.0, -0.0005789995193481445, 0.0, -4.57763671875e-05, -0.00041961669921875, -0.0006885528564453125, -0.000690460205078125, 0.0, -0.0009031295776367188, -0.000202178955078125, -5.91278076171875e-05, -0.017103195190429688, -7.62939453125e-05, -3.814697265625e-06, -0.000110626220703125, 0.0, -0.0001201629638671875, 0.0, -7.748603820800781e-06, 0.0, -0.002076268196105957, 0.0, -0.0001583099365234375, -0.0071163177490234375, -4.00543212890625e-05, -0.0001125335693359375, -3.0517578125e-05], "score": -6.2048983572718726, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.calculate_attack() >= target.calculate_max_health() and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -2.250473976135254, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0011997222900390625, 0.0, -1.919269561767578e-05, 0.0, -3.860753059387207, 0.0], "score": -6.3715839383627255, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "self", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.self()\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "self", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -1.6143407821655273, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -2.09808349609375e-05, -0.000308990478515625, -8.58306884765625e-05, -2.09808349609375e-05, -5.53131103515625e-05, -3.814697265625e-06, -0.001575469970703125, 0.0, -0.0003871917724609375, 0.0, -0.005198001861572266, -3.814697265625e-06, -0.000293731689453125, -3.62396240234375e-05, -0.0030078887939453125, 0.0, -0.0024700164794921875, -0.00078582763671875, -0.011480331420898438, -0.0003147125244140625, -0.0011529922485351562, 0.0, -0.10015296936035156, -0.0013675689697265625, -0.018680572509765625, -1.52587890625e-05, -0.11667156219482422, -2.47955322265625e-05, -0.04107856750488281, -2.86102294921875e-05, -0.00083160400390625, -3.814697265625e-06, -0.00048363208770751953, 0.0, -0.0328751802444458, 0.0, -3.814697265625e-06, -0.08336353302001953, -0.0003452301025390625, -0.0007600784301757812, -4.1961669921875e-05, -2.6702880859375e-05, -0.0001373291015625, -0.0001697540283203125, 0.0, -0.0006151199340820312, 0.0, -0.010642051696777344, 0.0, -0.147918701171875, -0.00035858154296875, -0.00075531005859375, -0.0001087188720703125, -1.9073486328125e-05, -3.814697265625e-06, -0.0037508010864257812, -5.7220458984375e-06, -0.0074920654296875, 0.0, -0.008908271789550781, 0.0, -0.000546574592590332, 0.0, -4.57763671875e-05, -0.0003032684326171875, -0.0006847381591796875, -0.0007821321487426758, 0.0, -0.0009222030639648438, -0.000194549560546875, -5.91278076171875e-05, -4.247105598449707, -3.62396240234375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0013427734375, 0.0, -1.919269561767578e-05, 0.0, -0.4694480895996094, -1.9073486328125e-06], "score": -6.963457584261619, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "model_output": {"hole0": "Assassinate", "hole2": [{"value": {"args": [{"s": "Assassinate", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "bounce", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 8}
{"beams": [{"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -0.02177715301513672, -1.1920928244535389e-07, -0.00095367431640625, -0.00042724609375, -0.0003490447998046875, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.0017099380493164062, -7.62939453125e-06, -0.005280494689941406, 0.0, -0.000301361083984375, 0.0, -3.218649362679571e-05, 0.0, -0.000110626220703125, -5.53131103515625e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0006847381591796875, -0.000125885009765625, -3.0517578125e-05, -0.00305938720703125, -0.00012969970703125, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.007895588874816895, 0.0, -0.0015544891357421875, -0.002044677734375, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017359236953780055, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.850459688692354e-05, -1.9073486328125e-06], "score": -0.5487849690110735, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -1.747884750366211, -1.33514404296875e-05, -8.7738037109375e-05, -0.0001277923583984375, 0.0, -6.103515625e-05, -0.0005397796630859375, -5.91278076171875e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0006866455078125, 0.0, -0.0001277923583984375, 0.0, -0.0027288198471069336, 0.0, -5.14984130859375e-05, 0.0, -8.296668238472193e-05, 0.0, -0.0002574920654296875, -3.0517578125e-05, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -0.0038232803344726562, -5.7220458984375e-06, -2.47955322265625e-05, -0.0011806488037109375, -0.0002079010009765625, 0.0, -7.62939453125e-06, 0.0, -6.115436553955078e-05, -1.9073486328125e-06, -8.046627044677734e-05, 0.0, -0.002249002456665039, 0.0, -0.0004825592041015625, -0.0014553070068359375, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -4.9591064453125e-05, -0.0014444568660110235, -2.1457672119140625e-06, -0.000164031982421875, -2.47955322265625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -3.850459688692354e-05, -1.9073486328125e-06], "score": -1.7727047151896613, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -2.8130102157592773, -8.0108642578125e-05, -8.0108642578125e-05, -0.0001354217529296875, -0.00011444091796875, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -0.0005638599395751953, -1.9073486328125e-06, -0.015509605407714844, -2.1457672119140625e-06, -0.00099945068359375, -0.0004119873046875, -0.0003376007080078125, -1.9073486328125e-06, -0.0004825592041015625, -1.9073486328125e-06, -0.0017108917236328125, -7.62939453125e-06, -0.0062274932861328125, 0.0, -0.000316619873046875, 0.0, -3.194807504769415e-05, 0.0, -0.0001087188720703125, -4.9591064453125e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0006608963012695312, -0.0001049041748046875, -2.86102294921875e-05, -0.002719879150390625, -0.0001239776611328125, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.00792229175567627, 0.0, -0.0014476776123046875, -0.001911163330078125, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017211417434737086, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -3.237885830560458, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -3.1099414825439453, -7.43865966796875e-05, -0.024252891540527344, -0.0004673004150390625, -4.76837158203125e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.0010766983032226562, -1.9073486328125e-06, -0.028789520263671875, -1.1920928244535389e-07, -0.0021457672119140625, -0.000446319580078125, -0.000270843505859375, -1.9073486328125e-06, -0.0003147125244140625, -1.9073486328125e-06, -0.002185821533203125, -7.62939453125e-06, -0.004652976989746094, 0.0, -0.0002956390380859375, 0.0, -2.765654426184483e-05, 0.0, -0.000110626220703125, -5.14984130859375e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0007009506225585938, -0.0001316070556640625, -2.86102294921875e-05, -0.003078460693359375, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.00788891315460205, 0.0, -0.0015506744384765625, -0.002048492431640625, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017400960205122828, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -3.573468563718386, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 12, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -4.398336410522461, 0.0, -0.0002994537353515625, -0.001186370849609375, -0.000263214111328125, -5.7220458984375e-06, -0.000179290771484375, -1.9073486328125e-06, -0.0013189315795898438, -1.33514404296875e-05, -0.006611824035644531, -1.9073486328125e-06, -0.000293731689453125, 0.0, -3.0398352464544587e-05, 0.0, -0.00011444091796875, -6.29425048828125e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.000675201416015625, -0.0001220703125, -2.6702880859375e-05, -0.0030994415283203125, -0.0001354217529296875, 0.0, -5.7220458984375e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.00794994831085205, 0.0, -0.00156402587890625, -0.0020580291748046875, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017412881134077907, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.850459688692354e-05, -1.9073486328125e-06], "score": -4.926252720512252, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.spell_targetable() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -2.7524709701538086, -0.17572784423828125, -0.0001697540283203125, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.0012509822845458984, -5.7220458984375e-06, -0.002905726432800293, -7.987022399902344e-06, -1.71661376953125e-05, -0.6794099807739258, -9.5367431640625e-05, -0.8971376419067383, -0.06123542785644531, -0.0005168914794921875, -3.4332275390625e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0028676986694335938, -7.62939453125e-06, -0.08019542694091797, 0.0, -0.000835418701171875, 0.0, -8.809557039057836e-05, 0.0, -8.96453857421875e-05, -4.76837158203125e-05, -1.71661376953125e-05, -2.6941299438476562e-05, 0.0, -0.0005521774291992188, -2.09808349609375e-05, -4.9591064453125e-05, -0.00131988525390625, -0.0001506805419921875, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.3644176659872755e-05, 0.0, -0.00825798511505127, 0.0, -0.001384735107421875, -0.0014553070068359375, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.001639721798710525, -2.1457672119140625e-06, -0.0001773834228515625, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -4.960454700071182, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 69, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template34"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -2.7524709701538086, -0.17572784423828125, -0.0001697540283203125, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.0012509822845458984, -5.7220458984375e-06, -0.002905726432800293, -7.987022399902344e-06, -1.71661376953125e-05, -0.6794099807739258, -9.5367431640625e-05, -1.0017023086547852, -0.40042877197265625, -0.0030469894409179688, -2.288818359375e-05, -1.9073486328125e-06, -8.392333984375e-05, 0.0, -0.001300811767578125, -1.52587890625e-05, -0.04247760772705078, 0.0, -0.0004291534423828125, 0.0, -8.440005331067368e-05, 0.0, -0.000118255615234375, -4.57763671875e-05, -1.52587890625e-05, -2.300739288330078e-05, 0.0, -0.0005445480346679688, -2.47955322265625e-05, -3.24249267578125e-05, -0.0016117095947265625, -0.0001544952392578125, 0.0, -7.62939453125e-06, 0.0, -7.069110870361328e-05, -1.9073486328125e-06, -5.5551525292685255e-05, 0.0, -0.00827324390411377, 0.0, -0.001430511474609375, -0.001674652099609375, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.0016660671681165695, -2.1457672119140625e-06, -0.0001773834228515625, -2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -5.367699978516953, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 68, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 2 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template33"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -0.02177715301513672, -1.1920928244535389e-07, -0.00095367431640625, -0.00042724609375, -0.0003490447998046875, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.0017099380493164062, -7.62939453125e-06, -0.005280494689941406, 0.0, -0.000301361083984375, 0.0, -3.218649362679571e-05, 0.0, -0.000110626220703125, -5.53131103515625e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0006847381591796875, -0.000125885009765625, -3.0517578125e-05, -0.00305938720703125, -0.00012969970703125, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -5.237444877624512, 0.0, -0.000576019287109375, -0.01467132568359375, -7.62939453125e-06, -0.0014954805374145508, -1.9073486328125e-06], "score": -5.7894018886039404, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -5.263294219970703, 0.0, -0.001201629638671875, -0.0011272430419921875, -0.0001735687255859375, -1.9073486328125e-06, -0.003078460693359375, -1.9073486328125e-06, -0.0016698837280273438, -5.7220458984375e-06, -0.011818885803222656, -1.9073486328125e-06, -0.0002422332763671875, 0.0, -4.827972952625714e-05, 0.0, -9.918212890625e-05, -5.53131103515625e-05, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -0.0007085800170898438, -0.0001277923583984375, -2.86102294921875e-05, -0.003025054931640625, -0.0001316070556640625, 0.0, -7.62939453125e-06, 0.0, -7.069110870361328e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.0079118013381958, 0.0, -0.0014743804931640625, -0.0019779205322265625, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.001728532719425857, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -5.800091622015657, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_attack() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -4.66486120223999, 0.0, -9.5367431640625e-05, -0.1680459976196289, -1.33514404296875e-05, -1.0917110443115234, -0.0001354217529296875, -2.86102294921875e-05, 0.0, -9.72747802734375e-05, 0.0, -0.0008058547973632812, -3.814697265625e-06, -0.03437519073486328, -1.1920928244535389e-07, -0.0020198822021484375, -0.00032806396484375, -0.0002727508544921875, -1.9073486328125e-06, -0.00083160400390625, -1.9073486328125e-06, -0.0033769607543945312, -7.62939453125e-06, -0.005270957946777344, 0.0, -0.0002460479736328125, 0.0, -2.920626684499439e-05, 0.0, -9.918212890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0007066726684570312, -0.000133514404296875, -2.6702880859375e-05, -0.0030269622802734375, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.007928013801574707, 0.0, -0.0015392303466796875, -0.0020904541015625, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017400960205122828, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.850459688692354e-05, -1.9073486328125e-06], "score": -6.348392722770193, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "card", "<EOS>", 202, 12, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            card is target.calculate_max_health() and target.spell_targetable()\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "card", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -2.7524709701538086, -0.17572784423828125, -0.0001697540283203125, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.0012509822845458984, -5.7220458984375e-06, -0.002905726432800293, -7.987022399902344e-06, -1.71661376953125e-05, -1.5009355545043945, -6.67572021484375e-05, -0.6257133483886719, -5.7220458984375e-06, -0.06479835510253906, -1.9073486328125e-06, -0.058266639709472656, 0.0, -0.07030582427978516, 0.0, -0.7541599273681641, -0.009660720825195312, -0.000301361083984375, -1.9073486328125e-06, -0.00089263916015625, 0.0, -0.016524314880371094, -9.5367431640625e-06, -0.01027679443359375, -1.9073486328125e-06, -0.0001277923583984375, 0.0, -4.231926504871808e-05, 0.0, -0.000141143798828125, -5.14984130859375e-05, -1.71661376953125e-05, -2.110004425048828e-05, 0.0, -0.0006847381591796875, -0.000133514404296875, -2.47955322265625e-05, -0.0033092498779296875, -0.0001373291015625, 0.0, -5.7220458984375e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0079423189163208, 0.0, -0.00152587890625, -0.001953125, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017322282074019313, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -6.352751133585457, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() is MINION_TYPE.DEMON and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -2.7524709701538086, -0.17572784423828125, -0.0001697540283203125, -1.33514404296875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.0012509822845458984, -5.7220458984375e-06, -0.002905726432800293, -7.987022399902344e-06, -1.71661376953125e-05, -2.5087051391601562, -9.34600830078125e-05, -0.42741966247558594, -0.2975187301635742, -0.002750396728515625, -2.288818359375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0019741058349609375, -1.52587890625e-05, -0.03924751281738281, 0.0, -0.0003204345703125, 0.0, -8.070456533459947e-05, 0.0, -0.0001087188720703125, -4.76837158203125e-05, -1.71661376953125e-05, -2.300739288330078e-05, 0.0, -0.0005407333374023438, -2.47955322265625e-05, -3.24249267578125e-05, -0.0015811920166015625, -0.0001544952392578125, 0.0, -7.62939453125e-06, 0.0, -7.069110870361328e-05, -1.9073486328125e-06, -5.5551525292685255e-05, 0.0, -0.008338093757629395, 0.0, -0.00145721435546875, -0.0016918182373046875, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.0016661862609907985, -2.1457672119140625e-06, -0.0001773834228515625, -2.47955322265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -6.5168348527444095, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 15, 205, 68, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 2 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template33"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "LtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -2.7524709701538086, -1.9379405975341797, -3.814697265625e-05, 0.0, -0.04352521896362305, -4.00543212890625e-05, -0.0005931854248046875, -0.05151081085205078, -0.0001697540283203125, -0.008563041687011719, 0.0, -0.005146026611328125, 0.0, -0.15495586395263672, 0.0, -0.00023472309112548828, 0.0, -0.003363006515428424, -1.9073486328125e-06, -3.814697265625e-06, -0.017518043518066406, -0.0007114410400390625, -0.559234619140625, -0.5642662048339844, -0.0026645660400390625, -8.96453857421875e-05, 0.0, -0.000217437744140625, 0.0, -0.01799488067626953, -5.7220458984375e-06, -0.09410858154296875, 0.0, -0.00037384033203125, 0.0, -0.0001355409185634926, 0.0, -0.000171661376953125, -7.2479248046875e-05, -7.62939453125e-06, -1.919269561767578e-05, 0.0, -0.0005855560302734375, -0.0001068115234375, -3.4332275390625e-05, -0.0022907257080078125, -0.0001220703125, 0.0, -7.62939453125e-06, 0.0, -7.069110870361328e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.007747769355773926, 0.0, -0.00118255615234375, -0.001445770263671875, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.0016607025172561407, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.87430154660251e-05, -1.9073486328125e-06], "score": -6.5216610340470424, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 69, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: len(game.\n            other_player.minions) >= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template34"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -0.02177715301513672, -1.1920928244535389e-07, -0.00095367431640625, -0.00042724609375, -0.0003490447998046875, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.0017099380493164062, -7.62939453125e-06, -6.139537811279297, -1.9073486328125e-06, -0.000354766845703125, 0.0, -3.5047494748141617e-05, 0.0, -8.96453857421875e-05, -6.29425048828125e-05, -2.288818359375e-05, -1.919269561767578e-05, 0.0, -0.00072479248046875, -0.0001163482666015625, -2.47955322265625e-05, -0.003017425537109375, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.007989048957824707, 0.0, -0.001468658447265625, -0.0019817352294921875, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017347314860671759, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.862380617647432e-05, -1.9073486328125e-06], "score": -6.683011648674771, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -0.02177715301513672, -1.1920928244535389e-07, -0.00095367431640625, -0.00042724609375, -0.0003490447998046875, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.0017099380493164062, -7.62939453125e-06, -0.005280494689941406, 0.0, -0.000301361083984375, 0.0, -3.218649362679571e-05, 0.0, -0.000110626220703125, -5.53131103515625e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0006847381591796875, -0.000125885009765625, -3.0517578125e-05, -0.00305938720703125, -0.00012969970703125, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.007895588874816895, 0.0, -6.488465309143066, -0.45394134521484375], "score": -7.485506891960874, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 205, 68], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2)\n", "model_output": {"hole0": "Backstab", "hole2": [{"value": {"args": [{"s": "Backstab", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 9}
{"beams": [{"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.03740882873535156, 0.0, -9.5367431640625e-06, -0.0064907073974609375, -6.67572021484375e-05, -5.7220458984375e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.726119995117188e-05, -5.7220458984375e-06, -6.0796710386057384e-06, -3.814697265625e-06, -0.00960075855255127, 0.0, -1.9073486328125e-05, -0.00185394287109375], "score": -0.49957030601853347, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -3.716477870941162, -1.9073486328125e-06, -0.0002593994140625, -0.00020599365234375, -0.0001354217529296875, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -2.1696090698242188e-05, -3.814697265625e-06, -4.88758041683468e-06, -1.9073486328125e-06, -0.07055485248565674, 0.0, -7.62939453125e-06, -0.004199028015136719], "score": -3.848330791669916, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -3.7050743103027344, 0.0, -2.288818359375e-05, -0.03294849395751953, -0.0001544952392578125, -7.05718994140625e-05, -9.72747802734375e-05, 0.0, -0.0014896392822265625, 0.0, -0.00012564659118652344, -5.7220458984375e-06, -5.960462203802308e-06, -3.814697265625e-06, -0.0143510103225708, 0.0, -2.6702880859375e-05, -0.0014142990112304688], "score": -4.197968061641852, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -4.490789413452148, -0.0001583099365234375, -3.814697265625e-05, -2.86102294921875e-05, -0.000102996826171875, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -3.445148468017578e-05, -7.62939453125e-06, -6.318092346191406e-06, 0.0, -0.07144927978515625, 0.0, -5.7220458984375e-06, -0.007049560546875, -0.0001316070556640625, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -0.0001544952392578125, 0.0, -6.687641143798828e-05, -9.5367431640625e-06, -4.88758041683468e-06, -3.814697265625e-06, -0.009495854377746582, 0.0, -1.71661376953125e-05, -0.0013141632080078125, -0.001491546630859375, -5.14984130859375e-05, -0.0001983642578125, 0.0, -0.000110626220703125, 0.0, -0.0004330873489379883, -9.5367431640625e-06, -5.9604644775390625e-06, -9.5367431640625e-06, -0.012503743171691895, 0.0, -7.62939453125e-06, -0.0017795562744140625], "score": -4.653970177846979, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -3.256071090698242, -1.71661376953125e-05, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -0.001139521598815918, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0019140243530273438, 0.0, -0.0010013580322265625, -0.0005931854248046875, -7.82012939453125e-05, -3.0517578125e-05, -0.0044307708740234375, -7.62939453125e-06, -0.0026254653930664062, -0.0003337860107421875, -0.0001850128173828125, -0.001239776611328125, -0.031449317932128906, -0.0003910064697265625, -0.05400848388671875, -0.019423484802246094, -5.14984130859375e-05, -4.76837158203125e-05, -0.00058746337890625, -1.9073486328125e-05, -0.00558626651763916, -1.52587890625e-05, -0.009116411209106445, -5.054389839642681e-05, -0.000152587890625, -0.8682775497436523, -7.05718994140625e-05, -0.4283761978149414, -0.0001621246337890625, -0.4046540856361389, -2.9802317840221804e-06, -0.034976959228515625, -8.58306884765625e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.0043010711669921875, -3.814697265625e-06, -0.015416145324707031, -3.814697265625e-06, -0.0023679733276367188, -1.1920928244535389e-07, -0.0003991127014160156, 0.0, -7.462501525878906e-05, 0.0, -7.82012939453125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.96695291379001e-05, -2.0265579223632812e-06, -0.22634506225585938, -4.1961669921875e-05, -5.340576171875e-05, -3.62396240234375e-05, -3.0517578125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.2901763916015625e-05, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -0.03979969024658203, 0.0, -7.62939453125e-06, -0.0060939788818359375, -5.340576171875e-05, -6.67572021484375e-05, -0.0001888275146484375, 0.0, -0.00170135498046875, 0.0, -0.00010919570922851562, -5.7220458984375e-06, -5.960462203802308e-06, -3.814697265625e-06, -0.009543538093566895, 0.0, -1.9073486328125e-05, -0.0017566680908203125], "score": -5.450404404381501, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 55, 138, "0", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 0 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"n": 0, "_type": "Num"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -3.256071090698242, -1.71661376953125e-05, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -6.4849853515625e-05, -1.1920928244535389e-07, -0.001139521598815918, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.0019140243530273438, 0.0, -0.0010013580322265625, -0.0005931854248046875, -7.82012939453125e-05, -3.0517578125e-05, -0.0044307708740234375, -7.62939453125e-06, -0.0026254653930664062, -0.0003337860107421875, -0.0001850128173828125, -0.001239776611328125, -0.031449317932128906, -0.0003910064697265625, -0.05400848388671875, -0.019423484802246094, -5.14984130859375e-05, -4.76837158203125e-05, -0.00058746337890625, -1.9073486328125e-05, -0.00558626651763916, -1.52587890625e-05, -0.009116411209106445, -5.054389839642681e-05, -0.000152587890625, -0.8682775497436523, -7.05718994140625e-05, -1.1832752227783203, -0.00693511962890625, -0.0032634735107421875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0009365081787109375, -1.9073486328125e-06, -0.007119178771972656, -3.814697265625e-06, -0.003780364990234375, -1.1920928244535389e-07, -0.00013005733489990234, 0.0, -0.00013041494821663946, 0.0, -0.0001220703125, -6.4849853515625e-05, -5.7220458984375e-06, -2.5868412194540724e-05, -2.1457672119140625e-06, -0.24416637420654297, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-05, -3.0517578125e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -3.2901763916015625e-05, -1.9073486328125e-06, -6.079673767089844e-06, 0.0, -0.03942108154296875, 0.0, -7.62939453125e-06, -0.006161689758300781, -5.53131103515625e-05, -6.67572021484375e-05, -0.000179290771484375, 0.0, -0.00167083740234375, 0.0, -0.00011396408081054688, -5.7220458984375e-06, -5.960462203802308e-06, -3.814697265625e-06, -0.009657979011535645, 0.0, -1.9073486328125e-05, -0.0017442703247070312], "score": -5.782771645750003, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 70, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template35"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.03740882873535156, 0.0, -9.5367431640625e-06, -0.0064907073974609375, -6.67572021484375e-05, -5.7220458984375e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.726119995117188e-05, -5.7220458984375e-06, -6.0796710386057384e-06, -3.814697265625e-06, -5.213308334350586, 0.0, -0.000164031982421875, -0.002780914306640625, -0.47780323028564453, -0.00016236305236816406, -2.3841855067985307e-07, -0.0001888275146484375, -1.9073486328125e-06, -0.4474460482597351, -0.001965903677046299], "score": -6.631918330304835, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.03740882873535156, 0.0, -9.5367431640625e-06, -0.0064907073974609375, -6.67572021484375e-05, -5.7220458984375e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.726119995117188e-05, -5.7220458984375e-06, -6.0796710386057384e-06, -3.814697265625e-06, -6.240049839019775, 0.0, -3.62396240234375e-05, -0.0037183761596679688], "score": -6.731900985912027, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.change_attack(4)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.03740882873535156, 0.0, -9.5367431640625e-06, -0.0064907073974609375, -6.67572021484375e-05, -5.7220458984375e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.726119995117188e-05, -5.7220458984375e-06, -6.0796710386057384e-06, -3.814697265625e-06, -5.213308334350586, 0.0, -0.000164031982421875, -0.002780914306640625, -0.47780323028564453, -0.00016236305236816406, -2.3841855067985307e-07, -0.0001888275146484375, -1.9073486328125e-06, -1.0709519386291504, -0.001965903677046299], "score": -7.25542422067425, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Attack/+4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.add_buff(Buff(Attack/+4()))\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Attack/+4", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.03740882873535156, 0.0, -9.5367431640625e-06, -0.0064907073974609375, -6.67572021484375e-05, -5.7220458984375e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.726119995117188e-05, -5.7220458984375e-06, -6.0796710386057384e-06, -3.814697265625e-06, -0.00960075855255127, 0.0, -1.9073486328125e-05, -7.2766571044921875], "score": -7.774373467639627, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(2)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -3.7869882583618164, -0.0004425048828125, -0.04571247100830078, -3.24249267578125e-05, -8.7738037109375e-05, -8.0108642578125e-05, -2.47955322265625e-05, 0.0, -2.7060508728027344e-05, -3.814697265625e-06, -5.364416665543104e-06, -1.9073486328125e-06, -0.02242577075958252, 0.0, -7.62939453125e-06, -0.006748199462890625, -0.07107257843017578, -2.09808349609375e-05, -4.57763671875e-05, 0.0, -7.2479248046875e-05, 0.0, -5.543231964111328e-05, -5.7220458984375e-06, -7.271765298355604e-06, -1.9073486328125e-06, -0.00971996784210205, 0.0, -1.9073486328125e-05, -0.0018129348754882812, -0.7783164978027344, -5.14984130859375e-05, -0.000171661376953125, 0.0, -4.57763671875e-05, 0.0, -0.00043213367462158203, -7.62939453125e-06, -5.9604644775390625e-06, -7.62939453125e-06, -0.012601971626281738, 0.0, -1.1444091796875e-05, -0.002132415771484375, -0.3113441467285156, -1.9073486328125e-06, -8.96453857421875e-05, -0.040248870849609375, -1.9073486328125e-05, -0.009619712829589844, 0.0, -0.5506280660629272, 0.0, -0.03695869445800781, -1.9073486328125e-06, -0.0004100799560546875, -6.103515625e-05, -3.0517578125e-05, 0.0, -0.4423360824584961, -0.08282947540283203, -0.0002117156982421875, -3.814697265625e-06, -0.16902828216552734, -0.004001617431640625, -0.13232994079589844, -9.5367431640625e-06, -0.028083086013793945, 0.0, -0.13000011444091797, 0.0, -0.0026149749755859375, -3.24249267578125e-05, -9.72747802734375e-05, -3.814697265625e-06, -0.6855325698852539, -0.0297393798828125, -0.0001316070556640625, -8.392333984375e-05, -0.21668434143066406, -0.0007877349853515625, -0.1474231481552124, -1.9073486328125e-06, -0.000209808349609375, 0.0, -0.2050189971923828, -1.9073486328125e-06, -0.000522613525390625, 0.0, -4.38690185546875e-05, -1.1444091796875e-05, -0.00023281574249267578, -1.52587890625e-05, -0.2277311086654663, -3.576278118089249e-07, -0.20421504974365234, -5.53131103515625e-05, -0.00018310546875, -0.0039157867431640625, -5.7220458984375e-06, -0.25675010681152344, 0.0, -0.06004631519317627, 0.0, -0.07973098754882812, 0.0, -0.0006122589111328125, -0.0001811981201171875, -2.6702880859375e-05, 0.0, -1.0804014205932617], "score": -9.936887081340437, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 224, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 82, 103, 205, 45, 104, 25, 133, "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>", 92, 82, 103, 205, 45, 104, 25, 133, "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>", 92, 82, 103, 205, 53, 133, "target", "<EOS>", 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>", 92], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n        target.taunt = True\n        super().use(player, game)\n        target.taunt = True\n        super().use(player, game)\n        target = self.target.health\n        target.taunt = True\n        super().use(player, game)\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}, {"targets": [{"attr": "taunt", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"_type": "Template10"}, {"targets": [{"attr": "taunt", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"_type": "Template10"}, {"targets": [{"id": "target", "_type": "Name"}], "value": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Assign"}, {"targets": [{"attr": "taunt", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"_type": "Template10"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -2.0634026527404785, -0.17775249481201172, -0.046813011169433594, -0.015705302357673645, -0.47844207286834717, -0.004400690086185932, -0.023791883140802383, -1.71661376953125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.005237337667495012, -0.0011015193304046988, -5.7220458984375e-06, -0.008501052856445312, -0.006144523620605469, -0.02331829071044922, -0.013477865606546402, -0.007676704321056604, -0.9452409744262695, -0.0016276836395263672, -0.20764796435832977, -0.0017255544662475586, -1.484928011894226, -0.0016384124755859375, -0.0002015786012634635, -9.059905096364673e-06, -0.0033941268920898438, -1.9073486328125e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.7738037109375e-05, -0.0003948211669921875, -0.000110626220703125, -0.0002288818359375, 0.0, -0.002681732177734375, -1.9073486328125e-06, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0007381439208984375, -2.6702880859375e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0001888275146484375, -3.814697265625e-06, -5.91278076171875e-05, -2.0265579223632812e-06, -0.0013145208358764648, 0.0, -0.04226875305175781, -3.62396240234375e-05, -0.013922810554504395, -9.5367431640625e-06, -0.0008296966552734375, -0.04801368713378906, -1.33514404296875e-05, -0.00022125244140625, -0.0032901763916015625, 0.0, -0.001788474852219224, 0.0, -0.8262873888015747, 0.0, -0.0011577606201171875, -0.09901142120361328, -9.918212890625e-05, -3.254413604736328e-05, -0.0001850128173828125, -0.01776123046875, -0.0005931854248046875, -0.000377655029296875, -0.0001049041748046875, -0.030724644660949707, 0.0, -0.0033266544342041016, 0.0, -0.04034996032714844, -0.00113677978515625, -0.5797662734985352, -1.33514404296875e-05, -0.11134719848632812, -3.814697265625e-06, -0.2099618911743164, -0.07543366402387619, -1.1920878932869527e-05, -5.7220458984375e-06, -0.32567405700683594, -7.62939453125e-06, -0.001102447509765625, -0.0006923675537109375, -0.0032498070504516363, -3.457069396972656e-05, -0.14312076568603516, -0.01859283447265625, -0.04815101623535156, -1.1308269500732422, -0.30283355712890625, -0.029047055169939995, -0.28914976119995117, -0.00548563851043582, -0.004984855651855469, 0.0, -0.0001506805419921875, -0.0004558563232421875, -0.0011959075927734375, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.000217437744140625, -1.52587890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.6597251892089844e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.6702880859375e-05, -2.6702880859375e-05, -0.0002956390380859375, -7.343191828113049e-05, 0.0, -0.2888669967651367, -3.814697265625e-06, -3.0517578125e-05, -3.62396240234375e-05, 0.0, -1.5203545093536377, 0.0, -0.6621332168579102, -0.0001850128173828125, -2.47955322265625e-05, 0.0, -0.029196739196777344, 0.0, -0.07171630859375, 0.0, -0.07435047626495361, 0.0, -0.6468063592910767, -1.1920922133867862e-06, -0.40092748403549194, -2.0265579223632812e-06, -0.2078075408935547, -0.015101432800292969, 0.0, -0.0330423042178154, -3.576278118089249e-07, -0.00049591064453125, -1.52587890625e-05, -0.010984420776367188, -1.9073486328125e-06, -0.1419258564710617, -9.536738616588991e-07, -0.23609793186187744, -1.3470649719238281e-05, -0.0031185150146484375, -0.01621246337890625, -0.0002803802490234375, -6.16312026977539e-05, -0.0001430511474609375, -0.0018444061279296875, -0.006381988525390625, -0.00034332275390625, -0.000316619873046875, -0.005634665489196777, 0.0, -0.0013719797134399414, 0.0], "score": -14.37447108022814, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 85, 113, "Blessing", "Of", "Kings", "<EOS>", 205, 53, 133, "Choice", "Card", "<EOS>", 218, 95, 160, "Blessing", " ", "Kings", " ", "Attack/+4", " ", "Health", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 205, 54, 134, "False", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 88, 118, "use", "<EOS>", 3, 217, 97, 166, 25, 133, "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 97, 165, 25, 133, "game", "<EOS>", "check_delayed", "<EOS>", 89, 121, 21, 114, 17, 104, 42, "cards_played", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 34, 171, "Blessing", "Treant", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "option", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", "agent", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 97, 165, 25, 133, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n\n\n        class BlessingOfKings(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Blessing Kings Attack/+4 Health', 0,\n                    CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, True,\n                    target_func=hearthbreaker.targeting.\n                    find_minion_spell_target)\n\n            def use(self, player, game):\n                target.die(Null)\n        game.check_delayed()\n        if player.cards_played == 0:\n            BlessingTreant().summon(player, game, len(player.minions))\n        option = game.random_choice.agent(targets)\n        target.die(Null)\n        game.check_delayed()\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"body": [{"hole0": "Blessing Kings Attack/+4 Health", "hole2": "DRUID", "hole1": 0, "hole3": "COMMON", "_type": "Template2", "hole4": [{"value": true, "_type": "NameConstant"}], "hole5": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}]}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "args": {"_type": "Template8"}, "name": "use", "_type": "FunctionDef"}], "bases": [{"id": "ChoiceCard", "_type": "Name"}], "name": "BlessingOfKings", "_type": "ClassDef"}, {"hole0": {"id": "game", "_type": "Name"}, "hole1": "check_delayed", "_type": "Template23"}, {"body": [{"hole0": {"hole0": "BlessingTreant", "_type": "Template25"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"attr": "cards_played", "value": {"_type": "Template38"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "_type": "If"}, {"targets": [{"id": "option", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "agent", "value": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}, {"hole0": {"id": "game", "_type": "Name"}, "hole1": "check_delayed", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -2.0634026527404785, -0.17775249481201172, -0.046813011169433594, -0.015705302357673645, -0.47844207286834717, -0.004400690086185932, -0.023791883140802383, -1.71661376953125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.005237337667495012, -0.0011015193304046988, -5.7220458984375e-06, -0.008501052856445312, -0.006144523620605469, -0.02331829071044922, -0.013477865606546402, -0.007676704321056604, -0.9452409744262695, -0.0016276836395263672, -0.20764796435832977, -0.0017255544662475586, -1.484928011894226, -0.0016384124755859375, -0.0002015786012634635, -9.059905096364673e-06, -0.0033941268920898438, -1.9073486328125e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.7738037109375e-05, -0.0003948211669921875, -0.000110626220703125, -0.0002288818359375, 0.0, -0.002681732177734375, -1.9073486328125e-06, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0007381439208984375, -2.6702880859375e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0001888275146484375, -3.814697265625e-06, -5.91278076171875e-05, -2.0265579223632812e-06, -0.0013145208358764648, 0.0, -0.04226875305175781, -3.62396240234375e-05, -0.013922810554504395, -9.5367431640625e-06, -0.0008296966552734375, -0.04801368713378906, -1.33514404296875e-05, -0.00022125244140625, -0.0032901763916015625, 0.0, -0.001788474852219224, 0.0, -0.8262873888015747, 0.0, -0.0011577606201171875, -0.09901142120361328, -9.918212890625e-05, -3.254413604736328e-05, -0.0001850128173828125, -0.01776123046875, -0.0005931854248046875, -0.000377655029296875, -0.0001049041748046875, -0.030724644660949707, 0.0, -0.0033266544342041016, 0.0, -0.04034996032714844, -0.00113677978515625, -0.5797662734985352, -1.33514404296875e-05, -0.11134719848632812, -3.814697265625e-06, -0.2099618911743164, -0.07543366402387619, -1.1920878932869527e-05, -5.7220458984375e-06, -0.32567405700683594, -7.62939453125e-06, -0.001102447509765625, -0.0006923675537109375, -0.0032498070504516363, -3.457069396972656e-05, -0.14312076568603516, -0.01859283447265625, -0.04815101623535156, -1.1308269500732422, -0.30283355712890625, -0.029047055169939995, -0.28914976119995117, -0.00548563851043582, -0.004984855651855469, 0.0, -0.0001506805419921875, -0.0004558563232421875, -0.0011959075927734375, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.000217437744140625, -1.52587890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.6597251892089844e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.6702880859375e-05, -2.6702880859375e-05, -0.0002956390380859375, -7.343191828113049e-05, 0.0, -0.2888669967651367, -3.814697265625e-06, -3.0517578125e-05, -3.62396240234375e-05, 0.0, -1.5203545093536377, 0.0, -0.6621332168579102, -0.0001850128173828125, -2.47955322265625e-05, 0.0, -0.029196739196777344, 0.0, -0.07171630859375, 0.0, -0.07435047626495361, 0.0, -0.6468063592910767, -1.1920922133867862e-06, -0.40092748403549194, -2.0265579223632812e-06, -0.2078075408935547, -0.015101432800292969, 0.0, -0.0330423042178154, -3.576278118089249e-07, -0.00049591064453125, -1.52587890625e-05, -0.010984420776367188, -1.9073486328125e-06, -2.2652859687805176, -0.0035936760250478983, -0.0031464104540646076, -1.1920928244535389e-07, -7.82012939453125e-05, -0.000385284423828125, -0.0027637481689453125, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.000942230224609375, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.7404556274414062e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -2.288818359375e-05, -0.000179290771484375, -0.0002027595037361607, 0.0, -0.32616615295410156, -3.814697265625e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -2.06569242477417, -2.300739288330078e-05, -0.594395637512207], "score": -19.22378498765572, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 85, 113, "Blessing", "Of", "Kings", "<EOS>", 205, 53, 133, "Choice", "Card", "<EOS>", 218, 95, 160, "Blessing", " ", "Kings", " ", "Attack/+4", " ", "Health", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 205, 54, 134, "False", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 88, 118, "use", "<EOS>", 3, 217, 97, 166, 25, 133, "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 97, 165, 25, 133, "game", "<EOS>", "check_delayed", "<EOS>", 89, 121, 21, 114, 17, 104, 42, "cards_played", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 34, 171, "Blessing", "Treant", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "option", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", "agent", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "wrath", "<EOS>", 42], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n\n\n        class BlessingOfKings(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Blessing Kings Attack/+4 Health', 0,\n                    CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, True,\n                    target_func=hearthbreaker.targeting.\n                    find_minion_spell_target)\n\n            def use(self, player, game):\n                target.die(Null)\n        game.check_delayed()\n        if player.cards_played == 0:\n            BlessingTreant().summon(player, game, len(player.minions))\n        option = game.random_choice.agent(targets)\n        <UNK>.summon(player, game, len(player.minions))\n        wrath = player\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"body": [{"hole0": "Blessing Kings Attack/+4 Health", "hole2": "DRUID", "hole1": 0, "hole3": "COMMON", "_type": "Template2", "hole4": [{"value": true, "_type": "NameConstant"}], "hole5": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}]}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "args": {"_type": "Template8"}, "name": "use", "_type": "FunctionDef"}], "bases": [{"id": "ChoiceCard", "_type": "Name"}], "name": "BlessingOfKings", "_type": "ClassDef"}, {"hole0": {"id": "game", "_type": "Name"}, "hole1": "check_delayed", "_type": "Template23"}, {"body": [{"hole0": {"hole0": "BlessingTreant", "_type": "Template25"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"attr": "cards_played", "value": {"_type": "Template38"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "_type": "If"}, {"targets": [{"id": "option", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "agent", "value": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}, {"targets": [{"id": "wrath", "_type": "Name"}], "value": {"_type": "Template38"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -2.0634026527404785, -0.17775249481201172, -0.046813011169433594, -0.015705302357673645, -0.47844207286834717, -0.004400690086185932, -0.023791883140802383, -1.71661376953125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.005237337667495012, -0.0011015193304046988, -5.7220458984375e-06, -0.008501052856445312, -0.006144523620605469, -0.02331829071044922, -0.013477865606546402, -0.007676704321056604, -0.9452409744262695, -0.0016276836395263672, -0.20764796435832977, -0.0017255544662475586, -1.484928011894226, -0.0016384124755859375, -0.0002015786012634635, -9.059905096364673e-06, -0.0033941268920898438, -1.9073486328125e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.7738037109375e-05, -0.0003948211669921875, -0.000110626220703125, -0.0002288818359375, 0.0, -0.002681732177734375, -1.9073486328125e-06, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0007381439208984375, -2.6702880859375e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0001888275146484375, -3.814697265625e-06, -5.91278076171875e-05, -2.0265579223632812e-06, -0.0013145208358764648, 0.0, -0.04226875305175781, -3.62396240234375e-05, -0.013922810554504395, -9.5367431640625e-06, -0.0008296966552734375, -0.04801368713378906, -1.33514404296875e-05, -0.00022125244140625, -0.0032901763916015625, 0.0, -0.001788474852219224, 0.0, -0.8262873888015747, 0.0, -0.0011577606201171875, -0.09901142120361328, -9.918212890625e-05, -3.254413604736328e-05, -0.0001850128173828125, -0.01776123046875, -0.0005931854248046875, -0.000377655029296875, -0.0001049041748046875, -0.030724644660949707, 0.0, -0.0033266544342041016, 0.0, -0.04034996032714844, -0.00113677978515625, -0.5797662734985352, -1.33514404296875e-05, -0.11134719848632812, -3.814697265625e-06, -0.2099618911743164, -0.07543366402387619, -1.1920878932869527e-05, -5.7220458984375e-06, -0.32567405700683594, -7.62939453125e-06, -0.001102447509765625, -0.0006923675537109375, -0.0032498070504516363, -3.457069396972656e-05, -0.14312076568603516, -0.01859283447265625, -0.04815101623535156, -1.1308269500732422, -0.30283355712890625, -0.029047055169939995, -0.28914976119995117, -0.00548563851043582, -0.004984855651855469, 0.0, -0.0001506805419921875, -0.0004558563232421875, -0.0011959075927734375, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.000217437744140625, -1.52587890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.6597251892089844e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.6702880859375e-05, -2.6702880859375e-05, -0.0002956390380859375, -7.343191828113049e-05, 0.0, -0.2888669967651367, -3.814697265625e-06, -3.0517578125e-05, -3.62396240234375e-05, 0.0, -1.3662068843841553, -5.2094459533691406e-05, -0.005671501159667969, -7.62939453125e-06, -0.4616154432296753, -0.04786762595176697, -1.3954439163208008, -0.045955657958984375, -0.001239776611328125, -2.09808349609375e-05, -0.025228500366210938, 0.0, -0.2059764862060547, 0.0, -0.33514833450317383, -7.62939453125e-06, -0.00106048583984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.5447216033935547, -3.62396240234375e-05, -0.0022287368774414062, -0.0001201629638671875, -7.30752944946289e-05, -9.5367431640625e-06, -0.0010967254638671875, -2.09808349609375e-05, -0.004840850830078125, -0.10269641876220703, -1.9073486328125e-06, -0.2051965892314911, -8.4638240878121e-06, -0.13073623180389404, 0.0, -1.9073486328125e-05, -0.00029754638671875, -0.00031280517578125, -1.9073486328125e-06, -0.000148773193359375, 0.0, -0.000186920166015625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.528594970703125e-05, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.62396240234375e-05, -0.0001811981201171875, -0.00010251681669615209, 0.0, -0.00038242340087890625, -0.01645374298095703, -0.0006008148193359375, -7.05718994140625e-05, -9.5367431640625e-06, -0.03918933868408203, 0.0, -0.06693172454833984, 0.0, -0.00079345703125, 0.0, -0.8148369789123535, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.397013783454895, -1.1920928244535389e-07, -2.6702880859375e-05, -0.4420757293701172, -3.62396240234375e-05, -0.020613670349121094, -4.9591064453125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0004673004150390625, 0.0, -0.3900289535522461, -9.5367431640625e-06, -1.7523765563964844e-05, -1.9073486328125e-05, -0.42810308933258057, -3.4570680327306036e-06, -0.6176681518554688, -8.20159912109375e-05, -0.0001239776611328125, -0.0011005401611328125, 0.0, -0.3686712980270386, -0.0005450213793665171, -0.02802884578704834, 0.0, -1.33514404296875e-05, -0.00035858154296875, -0.0014705657958984375, -3.814697265625e-06, -8.392333984375e-05, 0.0, -0.0001239776611328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.3763389587402344e-05, -1.71661376953125e-05, -3.814697265625e-06, -5.340576171875e-05, -3.62396240234375e-05, -0.000110626220703125, -6.925952038727701e-05, 0.0, -0.22764205932617188, -3.814697265625e-06, -3.4332275390625e-05, -3.62396240234375e-05, 0.0, -1.5327342748641968, -6.890296936035156e-05, -0.008358955383300781, -9.5367431640625e-06, -0.8904288411140442, -0.06049925088882446], "score": -21.529455867007968, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 85, 113, "Blessing", "Of", "Kings", "<EOS>", 205, 53, 133, "Choice", "Card", "<EOS>", 218, 95, 160, "Blessing", " ", "Kings", " ", "Attack/+4", " ", "Health", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 205, 54, 134, "False", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 88, 118, "use", "<EOS>", 3, 217, 97, 166, 25, 133, "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 97, 165, 25, 133, "game", "<EOS>", "check_delayed", "<EOS>", 89, 121, 21, 114, 17, 104, 42, "cards_played", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 34, 171, "Blessing", "Treant", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "lightwarden", "<EOS>", 34, 171, "Attack/+4", "<EOS>", 89, 122, 21, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 25, 133, "lightwarden", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 89, 121, 21, 114, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 217, 97, 166, 25, 133, "lightwarden", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "lightwarden", "<EOS>", 34, 171, "<UNK>", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n\n\n        class BlessingOfKings(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Blessing Kings Attack/+4 Health', 0,\n                    CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, True,\n                    target_func=hearthbreaker.targeting.\n                    find_minion_spell_target)\n\n            def use(self, player, game):\n                target.die(Null)\n        game.check_delayed()\n        if player.cards_played == 0:\n            BlessingTreant().summon(player, game, len(player.minions))\n        lightwarden = Attack/+4()\n        if self.target is Null:\n            lightwarden.summon(player, game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            lightwarden.summon(player, game, len(player.minions))\n        lightwarden = <UNK>()\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"body": [{"hole0": "Blessing Kings Attack/+4 Health", "hole2": "DRUID", "hole1": 0, "hole3": "COMMON", "_type": "Template2", "hole4": [{"value": true, "_type": "NameConstant"}], "hole5": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}]}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "args": {"_type": "Template8"}, "name": "use", "_type": "FunctionDef"}], "bases": [{"id": "ChoiceCard", "_type": "Name"}], "name": "BlessingOfKings", "_type": "ClassDef"}, {"hole0": {"id": "game", "_type": "Name"}, "hole1": "check_delayed", "_type": "Template23"}, {"body": [{"hole0": {"hole0": "BlessingTreant", "_type": "Template25"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"attr": "cards_played", "value": {"_type": "Template38"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "_type": "If"}, {"targets": [{"id": "lightwarden", "_type": "Name"}], "value": {"hole0": "Attack/+4", "_type": "Template25"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "lightwarden", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"body": [{"hole0": {"id": "lightwarden", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, "_type": "If"}], "_type": "If"}, {"targets": [{"id": "lightwarden", "_type": "Name"}], "value": {"hole0": "<UNK>", "_type": "Template25"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -2.0634026527404785, -0.17775249481201172, -0.046813011169433594, -0.015705302357673645, -0.47844207286834717, -0.004400690086185932, -0.023791883140802383, -1.71661376953125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.005237337667495012, -0.0011015193304046988, -5.7220458984375e-06, -0.008501052856445312, -0.006144523620605469, -0.02331829071044922, -0.013477865606546402, -0.007676704321056604, -0.9452409744262695, -0.0016276836395263672, -0.20764796435832977, -0.0017255544662475586, -1.484928011894226, -0.0016384124755859375, -0.0002015786012634635, -9.059905096364673e-06, -0.0033941268920898438, -1.9073486328125e-06, -0.0001087188720703125, -1.9073486328125e-06, -8.7738037109375e-05, -0.0003948211669921875, -0.000110626220703125, -0.0002288818359375, 0.0, -0.002681732177734375, -1.9073486328125e-06, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0007381439208984375, -2.6702880859375e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0001888275146484375, -3.814697265625e-06, -5.91278076171875e-05, -2.0265579223632812e-06, -0.0013145208358764648, 0.0, -0.04226875305175781, -3.62396240234375e-05, -0.013922810554504395, -9.5367431640625e-06, -0.0008296966552734375, -0.04801368713378906, -1.33514404296875e-05, -0.00022125244140625, -0.0032901763916015625, 0.0, -0.001788474852219224, 0.0, -0.8262873888015747, 0.0, -0.0011577606201171875, -0.09901142120361328, -9.918212890625e-05, -3.254413604736328e-05, -0.0001850128173828125, -0.01776123046875, -0.0005931854248046875, -0.000377655029296875, -0.0001049041748046875, -0.030724644660949707, 0.0, -0.0033266544342041016, 0.0, -0.04034996032714844, -0.00113677978515625, -0.5797662734985352, -1.33514404296875e-05, -0.11134719848632812, -3.814697265625e-06, -0.2099618911743164, -0.07543366402387619, -1.1920878932869527e-05, -5.7220458984375e-06, -0.32567405700683594, -7.62939453125e-06, -0.001102447509765625, -0.0006923675537109375, -0.0032498070504516363, -3.457069396972656e-05, -0.14312076568603516, -0.01859283447265625, -0.04815101623535156, -1.1308269500732422, -0.30283355712890625, -0.029047055169939995, -0.28914976119995117, -0.00548563851043582, -0.004984855651855469, 0.0, -0.0001506805419921875, -0.0004558563232421875, -0.0011959075927734375, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.000217437744140625, -1.52587890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.6597251892089844e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.6702880859375e-05, -2.6702880859375e-05, -0.0002956390380859375, -7.343191828113049e-05, 0.0, -0.2888669967651367, -3.814697265625e-06, -3.0517578125e-05, -3.62396240234375e-05, 0.0, -1.3662068843841553, -5.2094459533691406e-05, -0.005671501159667969, -7.62939453125e-06, -0.4616154432296753, -0.04786762595176697, -1.3954439163208008, -0.045955657958984375, -0.001239776611328125, -2.09808349609375e-05, -0.025228500366210938, 0.0, -0.2059764862060547, 0.0, -0.33514833450317383, -7.62939453125e-06, -0.00106048583984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.5447216033935547, -3.62396240234375e-05, -0.0022287368774414062, -0.0001201629638671875, -7.30752944946289e-05, -9.5367431640625e-06, -0.0010967254638671875, -2.09808349609375e-05, -0.004840850830078125, -0.10269641876220703, -1.9073486328125e-06, -0.2051965892314911, -8.4638240878121e-06, -0.13073623180389404, 0.0, -1.9073486328125e-05, -0.00029754638671875, -0.00031280517578125, -1.9073486328125e-06, -0.000148773193359375, 0.0, -0.000186920166015625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.528594970703125e-05, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.62396240234375e-05, -0.0001811981201171875, -0.00010251681669615209, 0.0, -0.00038242340087890625, -0.01645374298095703, -0.0006008148193359375, -7.05718994140625e-05, -9.5367431640625e-06, -0.03918933868408203, 0.0, -0.06693172454833984, 0.0, -0.00079345703125, 0.0, -0.8148369789123535, -5.7220458984375e-06, -0.000110626220703125, -1.9073486328125e-06, -0.397013783454895, -1.1920928244535389e-07, -2.6702880859375e-05, -0.4420757293701172, -3.62396240234375e-05, -0.020613670349121094, -4.9591064453125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0008487701416015625, 0.0, -0.0004673004150390625, 0.0, -0.3900289535522461, -9.5367431640625e-06, -1.7523765563964844e-05, -1.9073486328125e-05, -0.42810308933258057, -3.4570680327306036e-06, -0.6176681518554688, -8.20159912109375e-05, -0.0001239776611328125, -0.0011005401611328125, 0.0, -0.3686712980270386, -0.0005450213793665171, -0.02802884578704834, 0.0, -1.33514404296875e-05, -0.00035858154296875, -0.0014705657958984375, -3.814697265625e-06, -8.392333984375e-05, 0.0, -0.0001239776611328125, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.3763389587402344e-05, -1.71661376953125e-05, -3.814697265625e-06, -5.340576171875e-05, -3.62396240234375e-05, -0.000110626220703125, -6.925952038727701e-05, 0.0, -0.22764205932617188, -3.814697265625e-06, -3.4332275390625e-05, -3.62396240234375e-05, 0.0, -1.5327342748641968, -6.890296936035156e-05, -0.008358955383300781, -9.5367431640625e-06, -0.954858660697937, -0.06049925088882446], "score": -21.59388568659186, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 85, 113, "Blessing", "Of", "Kings", "<EOS>", 205, 53, 133, "Choice", "Card", "<EOS>", 218, 95, 160, "Blessing", " ", "Kings", " ", "Attack/+4", " ", "Health", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 205, 54, 134, "False", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 88, 118, "use", "<EOS>", 3, 217, 97, 166, 25, 133, "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 97, 165, 25, 133, "game", "<EOS>", "check_delayed", "<EOS>", 89, 121, 21, 114, 17, 104, 42, "cards_played", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 34, 171, "Blessing", "Treant", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "lightwarden", "<EOS>", 34, 171, "Attack/+4", "<EOS>", 89, 122, 21, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 25, 133, "lightwarden", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 89, 121, 21, 114, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 217, 97, 166, 25, 133, "lightwarden", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 82, 103, 205, 53, 133, "lightwarden", "<EOS>", 34, 171, "Attack/+4", "<EOS>"], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n\n\n        class BlessingOfKings(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Blessing Kings Attack/+4 Health', 0,\n                    CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, True,\n                    target_func=hearthbreaker.targeting.\n                    find_minion_spell_target)\n\n            def use(self, player, game):\n                target.die(Null)\n        game.check_delayed()\n        if player.cards_played == 0:\n            BlessingTreant().summon(player, game, len(player.minions))\n        lightwarden = Attack/+4()\n        if self.target is Null:\n            lightwarden.summon(player, game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            lightwarden.summon(player, game, len(player.minions))\n        lightwarden = Attack/+4()\n", "model_output": {"hole0": "BlessingOfKings", "hole2": [{"value": {"args": [{"s": "Blessing of Kings", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"body": [{"hole0": "Blessing Kings Attack/+4 Health", "hole2": "DRUID", "hole1": 0, "hole3": "COMMON", "_type": "Template2", "hole4": [{"value": true, "_type": "NameConstant"}], "hole5": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}]}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "args": {"_type": "Template8"}, "name": "use", "_type": "FunctionDef"}], "bases": [{"id": "ChoiceCard", "_type": "Name"}], "name": "BlessingOfKings", "_type": "ClassDef"}, {"hole0": {"id": "game", "_type": "Name"}, "hole1": "check_delayed", "_type": "Template23"}, {"body": [{"hole0": {"hole0": "BlessingTreant", "_type": "Template25"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"attr": "cards_played", "value": {"_type": "Template38"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "_type": "If"}, {"targets": [{"id": "lightwarden", "_type": "Name"}], "value": {"hole0": "Attack/+4", "_type": "Template25"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "lightwarden", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"body": [{"hole0": {"id": "lightwarden", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "test": {"comparators": [{"func": {"attr": "calculate_max_health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, "_type": "If"}], "_type": "If"}, {"targets": [{"id": "lightwarden", "_type": "Name"}], "value": {"hole0": "Attack/+4", "_type": "Template25"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 10}
{"beams": [{"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -0.06851410865783691, 0.0, -3.814697265625e-06, -0.00350189208984375], "score": -0.09638114386586238, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -3.6553661823272705, 0.0, -1.9073486328125e-06, -0.003662109375], "score": -3.6833915274718194, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -4.298713684082031, 0.0, -5.91278076171875e-05, -0.0024566650390625, -0.01800060272216797, -0.04501938819885254, -1.1920928244535389e-07, -0.0008153915405273438, 0.0, -0.2547701299190521, -5.18559172633104e-05], "score": -4.644248292856773, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -5.3799614906311035, 0.0, -1.9073486328125e-06, -0.02622222900390625], "score": -5.430546955404559, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -5.703739166259766, -2.0265579223632812e-06, -0.00023090839385986328, 0.0, -5.078230606159195e-05, 0.0, -7.43865966796875e-05, -4.00543212890625e-05, -0.0002117156982421875, -0.000110626220703125, 0.0, -0.0033168792724609375, -0.000823974609375, -6.103515625e-05, -8.392333984375e-05, -0.007358551025390625, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -0.00014925003051757812, -3.4332275390625e-05, -1.597404116182588e-05, 0.0, -0.06968903541564941, 0.0, -3.814697265625e-06, -0.0037698745727539062], "score": -5.79655893331244, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -0.06851410865783691, 0.0, -3.814697265625e-06, -6.122849464416504], "score": -6.2157287161925225, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -5.849966049194336, 0.0, -0.0006256103515625, -0.45064449310302734], "score": -6.325597481069842, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "can_use", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.can_use(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "can_use", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -5.819436073303223, 0.0, -2.86102294921875e-05, -0.5049934387207031], "score": -6.348819450674334, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "create_minion", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.create_minion(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "create_minion", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -4.298713684082031, 0.0, -5.91278076171875e-05, -0.0024566650390625, -0.01800060272216797, -0.04501938819885254, -1.1920928244535389e-07, -0.0008153915405273438, 0.0, -2.206756830215454, -7.295608520507812e-05], "score": -6.5962560933211165, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "characters", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(characters()))\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "characters", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -6.112421035766602, 0.0, -0.604334831237793, -0.00038909912109375, -0.0001354217529296875, -5.7220458984375e-06, -0.16182804107666016, 0.0, -0.0009098052978515625, -0.000148773193359375, -2.09808349609375e-05, 0.0, -0.002109527587890625, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.000545501708984375, -0.0002789321879390627, 0.0], "score": -6.907513795765105, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>"], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.summon(player, game, len(player.minions))\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -6.595093727111816, -3.4332275390625e-05, -4.1961669921875e-05, -6.103515625e-05, -0.000354766845703125, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.00048029422760009766, -2.09808349609375e-05, -1.1920928955078125e-05, 0.0, -0.03401482105255127, 0.0, -5.7220458984375e-06, -0.013026237487792969, -0.022329330444335938, -0.000102996826171875, -0.0015010833740234375, 0.0, -0.0005664825439453125, 0.0, -0.0004987716674804688, -3.814697265625e-05, -2.741813204920618e-06, 0.0, -0.27164363861083984, 0.0, -3.814697265625e-06, -0.019067764282226562], "score": -6.97206480914371, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 70, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -6.582167148590088, 0.0, -3.814697265625e-06, -0.3714723587036133], "score": -6.978004650411883, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "append", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.append(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "append", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -6.121109962463379, -1.9073486328125e-05, -0.3236011266708374, -1.9073486328125e-06, -0.6037585735321045, 0.0, -3.814697265625e-06, -0.008797645568847656], "score": -7.075079755128051, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 25, 133, "target", "<EOS>", "increase_health", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.increase_health(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -6.8779096603393555, -0.0001773834228515625, -0.03954792022705078, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00025975704193115234, -2.09808349609375e-05, -6.914137884450611e-06, 0.0, -0.0899820327758789, 0.0, -1.9073486328125e-06, -0.0025606155395507812, -0.008602142333984375, -2.288818359375e-05, -0.15544795989990234, 0.0, -0.00028228759765625, 0.0, -0.0051059722900390625, -4.1961669921875e-05, -2.622604142743512e-06, 0.0, -0.15100669860839844, 0.0, -1.9073486328125e-06, -0.07454395294189453], "score": -7.421861724197349, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 70, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        self.target.change_attack(3)\n        self.target.increase_health(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template35"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -6.121109962463379, -1.9073486328125e-05, -0.3236011266708374, -1.9073486328125e-06, -1.5254771709442139, 0.0, -1.1444091796875e-05, -0.022375106811523438], "score": -8.010383443177368, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 25, 133, "target", "<EOS>", "change_attack", "<EOS>", 205, 70], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.change_attack(3)\n", "model_output": {"hole0": "BlessingOfMight", "hole2": [{"value": {"args": [{"s": "Blessing of Might", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 11}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -0.0010128021240234375, -0.000133514404296875, -9.536729521641973e-07, -1.9073486328125e-06, -0.00021777207439299673, 0.0], "score": -0.004202433313139409, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -7.062941551208496, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -0.0010128021240234375, -0.000133514404296875, -9.536729521641973e-07, -1.9073486328125e-06, -0.00021777207439299673, 0.0], "score": -7.066270669489995, "choice_history": [77, 145, "Bloodfen", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class Bloodfen<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "Bloodfen<UNK>", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -0.0010128021240234375, -0.000133514404296875, -9.536729521641973e-07, -1.9073486328125e-06, -8.459379196166992, 0.0], "score": -8.463363857405739, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "4", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 4)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -7.690821647644043, -0.2263641357421875, -0.0024623870849609375, -3.62396240234375e-05, -0.030336380004882812, -0.031002044677734375, -0.23183917999267578, -0.00026702880859375, -0.4786415100097656], "score": -8.694606037277708, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 91, 140, 20, 111, 36, 207, 70, 68, 65], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, CHARACTER_CLASS.ALL)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"value": {"args": [{"_type": "Template35"}, {"_type": "Template33"}, {"_type": "Template27"}], "func": {"_type": "Template32"}, "_type": "Call"}, "_type": "Return"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -8.786432266235352, -0.0001239776611328125, -2.5033875772351166e-06, 0.0, -6.472854875028133e-05, 0.0, -0.015320895239710808, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, -8.785724639892578e-05, 0.0], "score": -8.804930654512646, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, charge=True)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -7.959135055541992, -0.000354766845703125, -0.041778564453125, -6.67572021484375e-05, -0.00016021728515625, -0.00018142008048016578, -7.0690963184461e-05, -4.88758041683468e-06, -1.71661376953125e-05, -0.0031299591064453125, -0.14092445373535156, -1.9073486328125e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.0005855560302734375, 0.0, -0.509787917137146, -1.9073486328125e-06, -0.0017833709716796875, -1.1444091796875e-05, -0.0001583099365234375, -0.0001741647720336914, -4.76837158203125e-05, -0.0008907318115234375, -2.09808349609375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.5367431640625e-05, -7.62939453125e-06, -6.866455078125e-05, 0.0, -0.000881195068359375, -5.7220458984375e-06, -0.00018310546875, 0.0, -0.1476203203201294, -1.9073486328125e-06, -2.288818359375e-05, -0.23529911041259766, -1.1444091796875e-05, -0.00020112507627345622, -3.814697265625e-06, -0.00011634149996098131, 0.0], "score": -9.04606124568727, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "BEAST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.BEAST,\n            CARD_RARITY.FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"attr": "BEAST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -7.690821647644043, -0.2263641357421875, -0.0024623870849609375, -3.62396240234375e-05, -0.030336380004882812, -0.031002044677734375, -0.23183917999267578, -0.00026702880859375, -0.9762439727783203, 0.0, -0.00090789794921875, 0.0, -0.0020122528076171875, 0.0, -0.0004146099090576172, 0.0], "score": -9.195543260712157, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 91, 140, 20, 111, 36, 207, 70, 68, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2, MINION_TYPE.BEAST)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"value": {"args": [{"_type": "Template35"}, {"_type": "Template33"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template32"}, "_type": "Call"}, "_type": "Return"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -8.459972381591797, -0.002178192138671875, -7.021207420621067e-05, -1.728534698486328e-05, -3.981538611697033e-05, 0.0, -0.3262360990047455, -3.814697265625e-06, -0.027037376537919044, -2.3841855067985307e-07, -1.9073486328125e-06, -0.4471893310546875, -2.09808349609375e-05, -1.192091872326273e-06, -2.6702880859375e-05, -2.4199192921514623e-05, 0.0], "score": -9.263767891953052, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        return Minion(3, 2)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"hole0": 3, "hole1": 2, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -9.26644229888916, -4.577627987600863e-05, -2.288818359375e-05, -1.52587890625e-05, -0.000125885009765625, -5.7220458984375e-06, -3.814697265625e-06, -3.4332275390625e-05, -0.0004827974771615118, -8.821482879284304e-06, -2.09808349609375e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.000241635279962793, -3.814697265625e-06, -7.629378160345368e-06, 0.0, -3.6716410249937326e-05, 0.0, -0.00012969970703125, -0.00104522705078125, -0.0001316070556640625, -9.536730658510351e-07, -1.9073486328125e-06, -0.00021145532082300633, 0.0], "score": -9.270839877780304, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.512206077575684, 0.0, -0.0003490447998046875, -1.1444091796875e-05, -0.0005818605422973633, 0.0, -0.3335690498352051, 0.0, -0.015972137451171875, -1.52587890625e-05, -3.62396240234375e-05, -0.0007069110870361328, -5.340576171875e-05, -1.1444091796875e-05, -0.0004177093505859375, -2.47955322265625e-05, -0.00021195404406171292, -1.9073486328125e-06, -5.9604562920867465e-06, 0.0, -0.00015318392252083868, 0.0, -0.0001010894775390625, -0.00096893310546875, -4.9591064453125e-05, -7.152548278099857e-07, -3.814697265625e-06, -0.00020311199477873743, 0.0], "score": -9.86759645875577, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "BEAST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.BEAST,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"attr": "BEAST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.924321174621582, -5.9604644775390625e-06, -2.86102294921875e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.00024235196178779006, -3.814697265625e-06, -8.225420970120467e-06, 0.0, -3.540513716870919e-05, 0.0, -5.91278076171875e-05, -0.0008335113525390625, -8.20159912109375e-05, -1.0728817869676277e-06, -3.814697265625e-06, -0.0002455414505675435, 0.0], "score": -9.928004087783165, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "RARE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "RARE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -9.96646785736084, -0.0036806813441216946, -8.96453857421875e-05, -6.103515625e-05, -1.9073486328125e-06, -0.00041496678022667766, -3.814697265625e-06, -8.225420970120467e-06, 0.0, -6.186954851727933e-05, 0.0, -0.0001316070556640625, -0.001056671142578125, -0.0001201629638671875, -9.536729521641973e-07, -1.9073486328125e-06, -0.0002031123876804486, 0.0], "score": -9.97440736110525, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "COMMON", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "COMMON", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -8.459972381591797, -0.002178192138671875, -7.021207420621067e-05, -1.728534698486328e-05, -3.981538611697033e-05, 0.0, -0.3262360990047455, -3.814697265625e-06, -0.027037376537919044, -2.3841855067985307e-07, -1.9073486328125e-06, -1.0215539932250977, -3.0517578125e-05, -1.9073486328125e-06, -0.2225513458251953, -2.09808349609375e-05, -0.0005168914794921875, -7.62939453125e-06, -3.814697265625e-06, -5.3165931603871286e-05, -5.125999450683594e-05, -2.2649765014648438e-06, -0.000102996826171875, -9.5367431640625e-06, -0.0001163482666015625, -3.814697265625e-06, -5.7220458984375e-06, -4.9591064453125e-05, -0.00033843505661934614, -1.0490413842489943e-05, -2.09808349609375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -0.00019180626259185374, -3.814697265625e-06], "score": -10.06225579091867, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        return Minion(3, 2)\n\n    def create_minion(self, player):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"hole0": 3, "hole1": 2, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -7.959135055541992, -0.000354766845703125, -0.041778564453125, -6.67572021484375e-05, -0.00016021728515625, -0.00018142008048016578, -7.0690963184461e-05, -4.88758041683468e-06, -1.71661376953125e-05, -0.0031299591064453125, -0.14092445373535156, -1.9073486328125e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.0005855560302734375, 0.0, -0.509787917137146, -1.9073486328125e-06, -0.0017833709716796875, -1.1444091796875e-05, -0.0001583099365234375, -0.0001741647720336914, -4.76837158203125e-05, -0.0008907318115234375, -2.09808349609375e-05, -6.67572021484375e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -9.5367431640625e-05, -7.62939453125e-06, -6.866455078125e-05, 0.0, -0.000881195068359375, -5.7220458984375e-06, -0.00018310546875, 0.0, -0.1476203203201294, -1.9073486328125e-06, -2.288818359375e-05, -1.6089973449707031, -0.0071163177490234375, -0.0027246475219726562, -3.0517578125e-05, -0.0108184814453125, -0.005779266357421875, -0.25505638122558594, -0.00157928466796875, -0.0690460205078125, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -0.000186920166015625, 0.0, -0.00021755695343017578, 0.0], "score": -10.772108034062512, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "BEAST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 91, 140, 20, 111, 36, 207, 70, 68, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.BEAST,\n            CARD_RARITY.FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 2, MINION_TYPE.BEAST)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"attr": "BEAST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"value": {"args": [{"_type": "Template35"}, {"_type": "Template33"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template32"}, "_type": "Call"}, "_type": "Return"}]}}, {"score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -8.361237525939941, -0.003620147705078125, -0.5022897720336914, -1.1444091796875e-05, -0.47705841064453125, -0.04567909240722656, -0.000362396240234375, -4.76837158203125e-05, -0.0028353144880384207, -0.00017309177201241255, -4.768371127283899e-06, -0.00011444091796875, -0.0021419525146484375, -0.002170562744140625, -0.0001468658447265625, -0.0003681182861328125, -0.000362396240234375, -0.11929535865783691, -5.841255187988281e-06, -0.07871055603027344, -0.000110626220703125, -0.00012981891632080078, 0.0, -1.5680692195892334, -1.9073486328125e-06, -0.11628913879394531, -0.9097681045532227, -0.2202596664428711], "score": -12.414099705454419, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 97, 166, 20, 111, 30, 209, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "COMMON", "<EOS>", 206, 69, 68], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True).COMMON(1, 2)\n", "model_output": {"hole0": "BloodfenRaptor", "hole2": [{"value": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"args": [{"s": "Bloodfen Raptor", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "hole2": [{"_type": "Template34"}, {"_type": "Template33"}], "hole1": "COMMON", "_type": "Template23"}]}}], "index": 12}
{"beams": [{"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -0.08546924591064453, 0.0, -4.57763671875e-05, -0.22337722778320312], "score": -0.39576210671384615, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -0.08546924591064453, 0.0, -4.57763671875e-05, -1.669900894165039], "score": -1.842285773095682, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -3.222933292388916, -2.622600959512056e-06, -1.33514404296875e-05, -0.13185882568359375], "score": -3.44167794876671, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.increase_health(2)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -3.121840476989746, -0.0010700225830078125, -0.1489276885986328, -0.001346588134765625, -3.814697265625e-05, -0.005893707275390625, -1.9073486328125e-06, -0.0008168219937942922, -2.3841855067985307e-07, -0.0005483627319335938, -7.62939453125e-06, -0.01919078826904297, -1.9073486328125e-06, -0.009059906005859375, 0.0, -0.007968425750732422, 0.0, -0.07446956634521484, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0020084381103515625, -0.0006011336809024215, 0.0, -0.13577556610107422, -0.0011749267578125, -4.76837158203125e-05, -5.7220458984375e-06, -0.31120431423187256, 0.0, -0.14954817295074463, -2.0265579223632812e-06, -3.24249267578125e-05, -0.00096893310546875, 0.0, -9.5367431640625e-06, -0.06098592281341553, 0.0, -0.00171661376953125, -0.0005359649658203125, -5.7220458984375e-06, 0.0, -0.00624847412109375, -3.814697265625e-06, -0.06553173065185547, -5.7220458984375e-06, -0.0005435943603515625, -3.576278118089249e-07, -0.003940582275390625, -0.00038909912109375, -0.008584022521972656, -0.000782012939453125, -1.1444091796875e-05, -0.0009750127792358398, -3.576278118089249e-07, -0.16496717929840088, 0.0, -0.00038909912109375, -0.3259849548339844], "score": -4.649135308941226, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.change_temp_attack(3)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -0.08546924591064453, 0.0, -4.57763671875e-05, -4.9776411056518555], "score": -5.1500259845824985, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 72], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(4)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template37"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -4.472599983215332, -5.7220458984375e-06, -0.0002536773681640625, -0.00159454345703125, -0.2705574035644531, -0.013741211965680122, -2.360340477025602e-05, -0.000701904296875, -2.288818359375e-05, -0.055260539054870605, -0.2808324098587036, -1.9073486328125e-06, -0.0001087188720703125, -0.05572223663330078], "score": -5.238296605922187, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(ChangeAttack(3)))\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Buff", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -3.121840476989746, -0.0010700225830078125, -2.066807746887207, -0.00041961669921875, -0.0005702972412109375, -1.9073486328125e-06, -0.00057220458984375, -0.04307883232831955, -3.6954811548639555e-06, -0.010783076286315918, 0.0, -3.62396240234375e-05, -0.030303955078125, -0.0054340362548828125, -0.00011444091796875, -0.000644683837890625, -5.7220458984375e-06, -0.0015201568603515625, -0.003968684934079647, 0.0, -0.07666659355163574, 0.0, -0.0002727508544921875, -0.036670684814453125, -0.0037260055541992188, -0.00026702880859375, -0.007488250732421875, -2.47955322265625e-05, -0.0004177093505859375, -0.005001547280699015, 0.0, -0.06568574905395508, 0.0, -0.00014495849609375, -0.03258705139160156], "score": -5.531082412065643, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -0.08546924591064453, 0.0, -4.57763671875e-05, -5.487847328186035], "score": -5.660232207116678, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 69], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(1)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template34"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -3.222933292388916, -2.622600959512056e-06, -1.33514404296875e-05, -2.3713979721069336], "score": -5.68121709519005, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "increase_health", "<EOS>", 205, 70], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.increase_health(3)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "increase_health", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -5.351808071136475, -1.1920928244535389e-07, -5.53131103515625e-05, -0.09824752807617188, 0.0, -0.0002880096435546875, -0.2123507261276245, 0.0], "score": -5.749619623956271, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "append", "<EOS>", 205, 45, 104, 42, "hero", "<EOS>"], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.append(player.hero)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -5.418024063110352, -3.576278118089249e-07, -0.0002498626708984375, -0.5756235122680664], "score": -6.080767652329939, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "set_health_to", "<EOS>", 205, 68], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.set_health_to(2)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "set_health_to", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -5.804686546325684, 0.0, -0.0006504058837890625, -5.7220458984375e-06, -0.000156402587890625, 0.0, -2.8490976546891034e-05, 0.0, -6.67572021484375e-05, -0.002330780029296875, -4.38690185546875e-05, -8.463859558105469e-05, -1.6450881958007812e-05, -0.06571388244628906, -0.000240325927734375, -0.00011444091796875, -0.0001316070556640625, -0.000156402587890625, 0.0, -0.0025551319122314453, -0.00018358230590820312, -0.0018901824951171875, 0.0, -0.000171661376953125, -0.004654792603105307, 0.0, -0.0007686614990234375, -0.0002384185791015625, -6.4849853515625e-05, -0.00019073486328125, -7.62939453125e-06, -0.00031197071075439453, -4.0531158447265625e-06, -0.08536624908447266, 0.0, -4.57763671875e-05, -0.22409629821777344], "score": -6.199959540627788, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "ROGUE", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -5.745811462402344, -3.576278118089249e-07, -0.00244903564453125, -0.00014495849609375, -8.392333984375e-05, -0.0001983642578125, -5.7220458984375e-06, -0.0008270740509033203, -6.079673767089844e-06, -0.06720757484436035, 0.0, -4.1961669921875e-05, -0.3920888900756836], "score": -6.289433356684583, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "hand", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.hand:\n            minion.change_temp_attack(3)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -3.121840476989746, -0.0010700225830078125, -0.1489276885986328, -0.001346588134765625, -3.814697265625e-05, -0.005893707275390625, -1.9073486328125e-06, -0.0008168219937942922, -2.3841855067985307e-07, -0.0005483627319335938, -7.62939453125e-06, -0.01919078826904297, -1.9073486328125e-06, -0.009059906005859375, 0.0, -0.007968425750732422, 0.0, -0.07446956634521484, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0020084381103515625, -0.0006011336809024215, 0.0, -0.13577556610107422, -0.0011749267578125, -4.76837158203125e-05, -5.7220458984375e-06, -1.425768256187439, -1.1920928244535389e-07, -0.23205864429473877, 0.0, -6.29425048828125e-05, -0.07340812683105469, -0.49926280975341797, -0.0042705535888671875, -0.046146392822265625, -0.0001697540283203125, -0.9108636379241943, -3.933906555175781e-06, -0.28319990634918213, 0.0, -0.000629425048828125, -0.14496517181396484], "score": -7.166577892979113, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.minions)\n        minion.change_temp_attack(3)\n        minion.change_temp_attack(2)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -3.121840476989746, -0.0010700225830078125, -0.1489276885986328, -0.001346588134765625, -3.814697265625e-05, -0.005893707275390625, -1.9073486328125e-06, -0.0008168219937942922, -2.3841855067985307e-07, -0.0005483627319335938, -7.62939453125e-06, -0.01919078826904297, -1.9073486328125e-06, -0.009059906005859375, 0.0, -0.007968425750732422, 0.0, -0.07446956634521484, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0020084381103515625, -0.0006011336809024215, 0.0, -2.168667793273926, -0.001056671142578125, -1.9073486328125e-06, 0.0, -0.03404343128204346, -1.1920928244535389e-07, -0.20172786712646484, -1.9073486328125e-05, -0.00028228759765625, -9.536738616588991e-07, -0.0015964508056640625, -0.000270843505859375, -0.0005970001220703125, -0.00025177001953125, -7.62939453125e-06, -0.0033131837844848633, -3.576278118089249e-07, -0.15780019760131836, 0.0, -0.0003337860107421875, -0.2711458206176758, -0.036937713623046875, -0.012929916381835938, -0.8335666656494141, -5.91278076171875e-05, -0.35956549644470215, -8.225440979003906e-06, -0.25210511684417725, 0.0, -0.0003871917724609375, -0.36083030700683594], "score": -8.106271224697046, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.minions)\n        for minion in targets:\n            minion.change_temp_attack(3)\n        minion.change_temp_attack(2)\n", "model_output": {"hole0": "Bloodlust", "hole2": [{"hole0": "Bloodlust", "hole2": "SHAMAN", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}], "hole1": "change_temp_attack", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 13}
{"beams": [{"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -0.0072958399541676044, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00010788440704345703, -2.3841855067985307e-07], "score": -0.014839846025630266, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -6.118063926696777, -0.00022433159756474197, -3.5523979022400454e-05, 0.0, -0.0003264800179749727, 0.0, -0.0001087188720703125, -0.0002536773681640625, -3.24249267578125e-05, -9.179114385915454e-06, -8.344646857949556e-07, -1.1444024494267069e-05, -1.1920928244535389e-07, -0.007018799893558025, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00010013580322265625, -2.3841855067985307e-07], "score": -6.128199136580939, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "PIRATE", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -6.24436092376709, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -6.628036499023438e-05, -2.3841855067985307e-07], "score": -6.251880491934195, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "divine_shield", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -6.928147315979004, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.898143768310547e-05, -2.3841855067985307e-07], "score": -6.935607160292044, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, taunt=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -6.037173271179199, 0.0, -1.031106948852539, -1.71661376953125e-05, -0.0047571659088134766, -3.576278118089249e-07], "score": -7.080464090071068, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "buffs", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, buffs=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "buffs", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -7.087552070617676, -3.24249267578125e-05, 0.0, -3.528532761265524e-05, -4.7802906919969246e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -0.04148101806640625, -1.9073486328125e-05, -0.0002288818359375, -0.0015106201171875, -0.0003147125244140625, -0.00044535764027386904, -5.483625955093885e-06, -0.000988006591796875, -4.38690185546875e-05, -4.9591064453125e-05, -0.008924603462219238, -3.933906555175781e-06, -5.0902075599879026e-05, 0.0, -0.0003112416306976229, 0.0, -0.00127410888671875, -0.0002002716064453125, -4.00543212890625e-05, -1.072883515007561e-05, -1.1920922133867862e-06, -2.3841614165576175e-05, -1.1920928244535389e-07, -0.007792109623551369, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00010418891906738281, -2.3841855067985307e-07], "score": -7.152243800312782, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.291550636291504, -5.2332747145555913e-05, -4.649161837733118e-06, 0.0, -0.0004961201339028776, 0.0, -0.00023651123046875, -0.000762939453125, -4.00543212890625e-05, -1.0967253729177173e-05, -7.152555099310121e-07, -1.525867082818877e-05, -1.1920928244535389e-07, -0.007607093546539545, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00010609626770019531, -3.576278118089249e-07], "score": -7.3028990607137345, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -7.3349151611328125, 0.0, -0.000225067138671875, -3.814697265625e-06, -0.00011432170867919922, -1.1920922133867862e-06], "score": -7.342668737134652, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "RARE", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, RARE=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "RARE", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -7.798673629760742, -0.005748748779296875, -5.626654456136748e-05, -8.463855920126662e-06, -3.004073914780747e-05, -7.62939453125e-06, -0.013563361950218678, -5.7220458984375e-06, -0.04305185005068779, 0.0, -1.9073486328125e-06, -0.12330055236816406, -1.9073486328125e-05, -0.00010418889723950997, -2.384185791015625e-06, -1.609315222594887e-05, -1.1920928244535389e-07, -0.005167712923139334, -3.814697265625e-06, -5.7220458984375e-05, -3.814697265625e-06, -0.00011456012725830078, -4.768370445162873e-07], "score": -7.990071360885729, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -7.815019607543945, -0.0003337860107421875, -6.079659215174615e-06, -9.536741345073096e-06, -4.9591064453125e-05, -1.1920928244535389e-07, -0.00016140920342877507, 0.0, -0.0018148422241210938, -0.0001544952392578125, 0.0, -0.0022007226943969727, -1.33514404296875e-05, -8.58306884765625e-05, -3.814697265625e-06, -8.535385131835938e-05, -3.576278118089249e-07, -0.000286102294921875, -9.5367431640625e-06, -0.27837073802948, 0.0, -0.0004405975341796875, -3.814697265625e-06, -0.0002889629977289587, -7.986990567587782e-06], "score": -8.106195533968211, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "2", "<EOS>", "1", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 1, "hole1": 2, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -6.037173271179199, 0.0, -0.4967994689941406, -0.2370624542236328, -0.0058574676513671875, -5.7220458984375e-05, -0.043731689453125, -0.01132667064666748, -2.1457672119140625e-06, -1.9073486328125e-06, -0.0002422332763671875, -0.18844568729400635, -1.4038861989974976, 0.0, -0.0053577423095703125], "score": -8.437353337965412, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "buffs", "<EOS>", 23, 129, 206, 59, 155, "Buff", "<EOS>", 25, 133, "Cant", "Windfury", "<EOS>", 71], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, buffs=[Buff(CantWindfury())])\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "buffs", "hole1": 1, "hole3": {"elts": [{"hole0": "Buff", "hole1": {"id": "CantWindfury", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -8.579228401184082, -4.386855289340019e-05, -4.863638605456799e-05, 0.0, -0.00017212949751410633, 0.0, -0.00060272216796875, -0.000919342041015625, -3.62396240234375e-05, -9.179114385915454e-06, -5.960462772236497e-07, -1.215927204611944e-05, -1.1920928244535389e-07, -0.007168285548686981, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00011169910430908203, -2.3841855067985307e-07], "score": -8.59036882571015, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -8.742753982543945, -0.00063323974609375, -5.7220458984375e-06, -5.1617556891869754e-05, -3.576278118089249e-07], "score": -8.75085409988565, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, **True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -6.037173271179199, 0.0, -0.4967994689941406, -0.2370624542236328, -0.0058574676513671875, -5.7220458984375e-05, -0.043731689453125, -0.01132667064666748, -2.1457672119140625e-06, -1.9073486328125e-06, -0.0002422332763671875, -0.18844568729400635, -1.7923005819320679, -9.655952453613281e-06, -0.020282745361328125], "score": -8.840702379904194, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "buffs", "<EOS>", 23, 129, 206, 59, 155, "Buff", "<EOS>", 25, 133, "Cant", "Attack", "<EOS>", 71], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, buffs=[Buff(CantAttack())])\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "buffs", "hole1": 1, "hole3": {"elts": [{"hole0": "Buff", "hole1": {"id": "CantAttack", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -8.974227905273438, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.374980926513672e-05, -2.3841855067985307e-07], "score": -8.981698240003958, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n", "model_output": {"hole0": "BluegillWarrior", "hole2": [{"value": {"args": [{"s": "Bluegill Warrior", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "windfury", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}], "index": 14}
{"beams": [{"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -0.005825040861964226, -1.1920928244535389e-07, -7.6293927122605965e-06, 0.0, -0.000617027108091861, 0.0, -0.000125885009765625, -0.000244140625, -1.9073486328125e-05, -3.2186455882765586e-06, -8.106212590064388e-06, -5.60267835680861e-05, -3.576277322281385e-06], "score": -0.0233716163354174, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -4.728335380554199, -0.0001850128173828125, -0.010959625244140625, -9.1552734375e-05, -4.57763671875e-05, -3.814689989667386e-06, -1.1920928244535389e-07, -0.2756843566894531, -0.0023899078369140625, -0.0022563934326171875, -0.0005855560302734375, -0.0055789947509765625, -3.218650817871094e-05, -3.576278118089249e-07, -0.000438690185546875, -5.7220458984375e-06, -0.0008678436279296875, -3.814697265625e-06, -0.0002117156982421875, 0.0, -0.0003299713134765625, -2.288818359375e-05, -0.0014495849609375, 0.0, -0.005446076393127441, -3.4332275390625e-05, -0.0003509521484375, -0.001811981201171875, -4.57763671875e-05, -4.8755406169220805e-05, -4.88758041683468e-06, -0.00013946507533546537, -2.503394853192731e-06], "score": -5.038859756807305, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -5.27418327331543, 0.0, -1.3113020031596534e-05, 0.0, -0.0024468896444886923, 0.0, -0.00092315673828125, -0.0004978179931640625, -2.288818359375e-05, -1.0490362910786644e-05, -4.768367489305092e-06, -7.271500362548977e-05, -3.099440846199286e-06], "score": -5.294639984793065, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "DRAGON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DRAGON", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -4.728335380554199, -0.0001850128173828125, -0.010959625244140625, -9.1552734375e-05, -4.57763671875e-05, -3.814689989667386e-06, -1.1920928244535389e-07, -1.4347457885742188, -2.47955322265625e-05, -0.6023551821708679, -9.775161743164062e-06, -0.0051326751708984375, -0.000499725341796875, -0.0001697540283203125, -0.0019702911376953125, -4.303455352783203e-05, -3.576278118089249e-07, -0.0005702972412109375, -4.76837158203125e-05, -0.0025272369384765625, -3.814697265625e-06, -0.0010623931884765625, 0.0, -0.00048828125, -2.47955322265625e-05, -0.0026149749755859375, -1.9073486328125e-06, -0.004384040832519531, -9.72747802734375e-05, -0.000286102294921875, -0.0013523101806640625, -4.57763671875e-05, -4.446407547220588e-05, -3.4570680327306036e-06, -0.00013624687562696636, -2.622604142743512e-06], "score": -6.799762102641743, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Boar", "<EOS>", 55, 138, "1", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -4.728335380554199, -0.0001850128173828125, -0.010959625244140625, -9.1552734375e-05, -4.57763671875e-05, -3.814689989667386e-06, -1.1920928244535389e-07, -1.4347457885742188, -2.47955322265625e-05, -0.8122960329055786, -1.1920928244535389e-07, -0.028402328491210938, -0.0002956390380859375, -0.0003719329833984375, -0.0014705657958984375, -4.088878631591797e-05, -3.576278118089249e-07, -0.000514984130859375, -4.00543212890625e-05, -0.00238800048828125, -1.9073486328125e-06, -0.0010223388671875, 0.0, -0.0004901885986328125, -2.47955322265625e-05, -0.0024547576904296875, -1.9073486328125e-06, -0.004487037658691406, -0.0001049041748046875, -0.0002803802490234375, -0.001373291015625, -4.57763671875e-05, -4.303362584323622e-05, -3.4570680327306036e-06, -0.00013863072672393173, -2.622604142743512e-06], "score": -7.0321835601363745, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Boar", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -0.005825040861964226, -1.1920928244535389e-07, -7.6293927122605965e-06, 0.0, -7.472360610961914, -0.0005970001220703125, -2.47955322265625e-05, -0.000438690185546875, -1.33514404296875e-05, -1.3232143828645349e-05, -4.52994936495088e-06, -0.00012408911425154656, -2.741813204920618e-06], "score": -7.495873603450001, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.952441215515137, -0.000148773193359375, -0.0037955038715153933, -1.633159445191268e-05, -0.0001612770138308406, -2.0503992345766164e-05, -0.23440074920654297, -0.0014858245849609375, -1.33514404296875e-05, -0.100542351603508, -7.82012939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.2374744415283203, -0.0004444122314453125, -7.62939453125e-06, -0.013393402099609375, -3.62396240234375e-05, -0.023488998413085938, -3.814697265625e-06, 0.0, -2.7418097943154862e-06, -3.576278118089249e-07, -0.0001049041748046875, -4.1961669921875e-05, -0.00028228759765625, -7.82012939453125e-05, -2.288818359375e-05, -5.10215359099675e-05, -9.536738616588991e-07, -0.0001201629638671875, -5.91278076171875e-05, -3.4332275390625e-05, -0.0077886562794446945, 0.0], "score": -7.576886248725884, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def MinionCard(self, MinionCard):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n", "model_output": {"hole0": "Boar", "hole2": [{"hole0": 1, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.952441215515137, -0.000148773193359375, -0.0037955038715153933, -1.633159445191268e-05, -0.0001612770138308406, -2.0503992345766164e-05, -0.23440074920654297, -0.0014858245849609375, -1.33514404296875e-05, -0.100542351603508, -7.82012939453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.5556135177612305, -0.00037384033203125, -0.00023424621031153947, -4.172303670202382e-05, -0.00012373145727906376, -5.114077066536993e-05], "score": -8.849887913412203, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def MinionCard(self, MinionCard):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"hole0": 1, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -0.005825040861964226, -1.1920928244535389e-07, -7.6293927122605965e-06, 0.0, -0.000617027108091861, 0.0, -0.000125885009765625, -8.703848838806152, -4.38690185546875e-05, -6.759165989933535e-05, -2.264974000354414e-06, -0.00010132498573511839, -2.503394853192731e-06, -0.1517397165298462, 0.0, -2.6702880859375e-05, -0.00012969970703125, -0.0001347064971923828, -1.1920928244535389e-07], "score": -8.879134811968427, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -8.897279739379883, -0.0012279748916625977, -6.625428795814514e-05, -7.271760750882095e-06, -7.62939453125e-06, 0.0, -0.0012149810791015625, -8.58306884765625e-05, -2.47955322265625e-05, -0.003147125244140625, -1.9073486328125e-06, -0.008054733276367188, -3.814697265625e-06, 0.0, -2.3841830625315197e-06, -2.3841855067985307e-07, -0.0001220703125, -3.814697265625e-05, -0.0002155303955078125, -0.0001125335693359375, -3.4332275390625e-05, -6.401530845323578e-05, -9.536738616588991e-07, -9.34600830078125e-05, -6.103515625e-05, -3.62396240234375e-05, -0.006116865202784538, -1.1920928244535389e-07, -7.6293927122605965e-06, 0.0, -0.0005842445534653962, 0.0, -0.0001316070556640625, -0.000240325927734375, -1.9073486328125e-05, -3.3378546504536644e-06, -7.987004210008308e-06, -5.543076986214146e-05, -3.576277322281385e-06], "score": -8.919218152781887, "choice_history": [77, 145, "Boar", "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class BoarBoar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "BoarBoar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -8.95382022857666, -0.0001201629638671875, -0.002532958984375, -0.005488393362611532, -5.960462772236497e-07, -0.0011730194091796875, -3.814697265625e-05, -4.506111145019531e-05, -1.4305104514278355e-06, -0.0001430511474609375, -4.1961669921875e-05, -1.1444091796875e-05, -0.0006364573491737247, -1.1920928244535389e-07, -6.556507287314162e-06, 0.0, -0.0006831883220002055, 0.0, -0.000133514404296875, -0.0002956390380859375, -2.6702880859375e-05, -2.9802276912960224e-06, -9.417505680175964e-06, -5.4596352129010484e-05, -3.576277322281385e-06], "score": -8.981084265328398, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 45, 104, 35, "RARE", "<EOS>", 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"attr": "RARE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -8.967156410217285, -2.3841855067985307e-07, -2.0146346287219785e-05, 0.0, -0.00369107723236084, 0.0, -0.00087738037109375, -0.00054931640625, -1.9073486328125e-05, -5.245195097813848e-06, -6.318082796497038e-06, -6.389412010321394e-05, -3.6954863844584906e-06], "score": -8.988854568085742, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "DEMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.952441215515137, -0.000148773193359375, -0.0037955038715153933, -1.633159445191268e-05, -0.0001612770138308406, -2.0503992345766164e-05, -1.5873054265975952, -0.003765106201171875, -0.6409100294113159, -1.1444091796875e-05, -1.52587890625e-05, -0.10540199279785156, -7.05718994140625e-05, -2.0384783056215383e-05, -2.1576723156613298e-05, -0.000203349904040806, -1.609325045137666e-05], "score": -9.294662840768979, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"hole0": 1, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -4.728335380554199, -0.0001850128173828125, -4.66966438293457, -7.62939453125e-05, -9.5367431640625e-06, -2.0265558760002023e-06, -2.3841855067985307e-07, -0.000213623046875, -6.29425048828125e-05, -0.0003986358642578125, -5.340576171875e-05, -1.52587890625e-05, -7.4505660450086e-05, -7.152555099310121e-07, -0.0002205371856689453, 0.0, -0.0800553560256958, 0.0, -2.09808349609375e-05, -0.000514984130859375, -4.00543212890625e-05, -5.125986263010418e-06, -1.013275596051244e-05, -4.958981662639417e-05, -4.41074053014745e-06], "score": -9.48150889240921, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -0.005825040861964226, -1.1920928244535389e-07, -7.6293927122605965e-06, 0.0, -0.000617027108091861, 0.0, -9.263741493225098, -0.4454154968261719, -0.0001201629638671875, -0.000125885009765625, -0.00067901611328125, 0.0, -0.47636866569519043, -2.264974000354414e-06, -0.8465805053710938, -4.1961669921875e-05, -0.7366532683372498, -2.503385803720448e-05, -0.00057220458984375, -0.0015964508056640625, -0.0001468658447265625, -5.340576171875e-05, -0.015151857398450375, 0.0, -0.022068189457058907, -1.1920928244535389e-07, -0.0009593963623046875, -0.912353515625, -0.08352851867675781, -1.9073486328125e-06, -0.015494346618652344, 0.0, -0.4454011917114258, -2.86102294921875e-05, -1.1444091796875e-05, 0.0, -0.00032842159271240234, 0.0, -0.0001392364501953125, -0.030633926391601562, -0.0029926300048828125, -0.0023822784423828125, -0.0013318061828613281, 0.0], "score": -13.327841666134375, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 218, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 34, 171, "Boar", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        <UNK> = Boar()\n        <UNK>.summon(player, game, len(player.minions))\n", "model_output": {"hole0": "Boar", "hole2": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"hole0": "Boar", "_type": "Template25"}, "_type": "Assign"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}]}}], "index": 15}
{"beams": [{"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -0.1360931396484375, 0.0, -1.9073486328125e-06, -0.000286102294921875, -2.6702880859375e-05, -0.000232696533203125, -3.4332275390625e-05, 0.0, -0.00098419189453125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.08345222473144531, 0.0, -0.000148773193359375, -0.000148773193359375, -0.000392913818359375, -0.001057744026184082, -0.00012803077697753906, -5.7220458984375e-06, 0.0, -0.003672557882964611, -6.484919867943972e-05], "score": -0.534646229162604, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -2.079167366027832, -7.62939453125e-06, -9.72747802734375e-05, -0.00012969970703125, -4.38690185546875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.36306095123291016, 0.0, -1.9073486328125e-06, -0.00020599365234375], "score": -2.5998983373855253, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -2.7801599502563477, 0.0, -0.0002576112747192383, 0.0, -0.00016509904526174068, 0.0, -0.000423431396484375, -1.71661376953125e-05, -1.9073486328125e-05, -8.7738037109375e-05, -2.1457672119140625e-06, -0.08725166320800781, -2.86102294921875e-05, -0.0003662109375, -6.866455078125e-05, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00015735626220703125, 0.0, -5.841255187988281e-06, 0.0, -0.14112091064453125, 0.0, -1.9073486328125e-06, -0.000293731689453125, -2.86102294921875e-05, -0.0002079010009765625, -3.4332275390625e-05, 0.0, -0.0011138916015625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -0.07992362976074219, 0.0, -0.000152587890625, -0.0001506805419921875, -0.0003986358642578125, -0.001046299934387207, -0.00012803077697753906, -5.7220458984375e-06, 0.0, -0.0037022102624177933, -6.425316678360105e-05], "score": -3.1534954706538656, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -0.1360931396484375, 0.0, -1.9073486328125e-06, -0.000286102294921875, -2.6702880859375e-05, -0.000232696533203125, -3.4332275390625e-05, 0.0, -0.00098419189453125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.7828311920166016, 0.0, -1.9073486328125e-06, -0.001941680908203125], "score": -3.230349420568814, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -2.3103227615356445, 0.0, -4.57763671875e-05, -0.0002002716064453125, -0.000244140625, -0.0008602142333984375, -0.0004597902297973633, -5.7220458984375e-06, -1.9073486328125e-06, -0.009060245007276535, -7.283581362571567e-05, -0.0019435882568359375, -0.009157180786132812, -0.30771732330322266, 0.0, -0.000202178955078125, 0.0, -0.0001068115234375, -5.7220458984375e-06, -1.609325408935547e-05, -1.9073486328125e-06, -0.5999431610107422, 0.0, -7.62939453125e-06, -0.0061550140380859375], "score": -3.5543943437359076, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -2.079167366027832, -7.62939453125e-06, -9.72747802734375e-05, -0.00012969970703125, -4.38690185546875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001811981201171875, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -1.3551921844482422, 0.0, -3.814697265625e-05, -9.34600830078125e-05, -0.0002155303955078125, -0.0007457733154296875, -0.0004502534866333008, -7.62939453125e-06, -1.9073486328125e-06, -0.009337827563285828, -8.237217843998224e-05], "score": -3.6027945703380055, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -2.3103227615356445, 0.0, -4.57763671875e-05, -0.0002002716064453125, -0.000244140625, -0.0008602142333984375, -0.0004597902297973633, -5.7220458984375e-06, -1.9073486328125e-06, -0.009060245007276535, -7.283581362571567e-05, -0.0019435882568359375, -0.009157180786132812, -0.30771732330322266, 0.0, -0.000202178955078125, 0.0, -0.0001068115234375, -5.7220458984375e-06, -1.609325408935547e-05, -1.9073486328125e-06, -1.2075433731079102, 0.0, -0.0001392364501953125, -0.0005931854248046875, -0.016691207885742188, -0.00048828125, -0.00011074542999267578, -5.7220458984375e-06, 0.0, -0.008779950439929962, -6.127310189185664e-05], "score": -4.1827015144289135, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -3.8692092895507812, -1.1920928244535389e-07, -9.202957153320312e-05, 0.0, -0.00015281549713108689, 0.0, -0.000209808349609375, -3.62396240234375e-05, -0.0001316070556640625, -8.0108642578125e-05, -2.1457672119140625e-06, -0.15589046478271484, -2.288818359375e-05, -0.00026702880859375, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014209747314453125, 0.0, -5.841255187988281e-06, 0.0, -0.1331958770751953, 0.0, -1.9073486328125e-06, -0.000286102294921875, -2.6702880859375e-05, -0.0002288818359375, -3.62396240234375e-05, 0.0, -0.001041412353515625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.08176708221435547, 0.0, -0.000148773193359375, -0.000148773193359375, -0.000400543212890625, -0.0010644197463989258, -0.00012803077697753906, -5.7220458984375e-06, 0.0, -0.0036929231137037277, -6.484919867943972e-05], "score": -4.304662750345294, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -4.349226951599121, 0.0, -1.33514404296875e-05, -0.0032749176025390625, -2.288818359375e-05, -0.00036644935607910156, 0.0, -0.0027561187744140625, -0.0007114410400390625, -0.0010223388671875, 0.0, -0.000865936279296875, 0.0, -0.0005817413330078125, -5.7220458984375e-06, -7.867813110351562e-06, 0.0, -0.08620762825012207, 0.0, -0.0002460479736328125, -0.0001373291015625, -0.001514434814453125, -0.0006219148635864258, -8.034706115722656e-05, -3.814697265625e-06, 0.0, -0.012336734682321548, -5.5431850341847166e-05], "score": -4.767923476635474, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -2.3103227615356445, 0.0, -4.57763671875e-05, -0.0002002716064453125, -0.000244140625, -0.0008602142333984375, -0.0004597902297973633, -5.7220458984375e-06, -1.9073486328125e-06, -0.009060245007276535, -7.283581362571567e-05, -0.0019435882568359375, -0.009157180786132812, -1.337503433227539, 0.0, -0.3737448453903198, -6.0796710386057384e-06, -0.07148434966802597, -5.960462772236497e-07, -0.10724163055419922, -0.3928413391113281, -0.000576019287109375, -1.9073486328125e-06, -0.005213737487792969, 0.0, -0.0032606124877929688, -0.000152587890625, -3.814697265625e-06, -1.9073486328125e-06, -4.589557647705078e-05, -1.1444091796875e-05, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.0005512237548828125, -0.00020897295325994492, 0.0], "score": -4.9331403978682715, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        <UNK>.summon(player, game, len(player.minions))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -5.00963020324707, -1.9073486328125e-06, -0.00014495849609375, 0.0, -8.177572453860193e-05, 0.0, -0.0003643035888671875, -3.0517578125e-05, -3.0517578125e-05, -9.918212890625e-05, -2.0265579223632812e-06, -0.073028564453125, -2.6702880859375e-05, -0.00040435791015625, -7.2479248046875e-05, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00015735626220703125, 0.0, -5.841255187988281e-06, 0.0, -0.13501453399658203, 0.0, -1.9073486328125e-06, -0.0002841949462890625, -2.86102294921875e-05, -0.0002117156982421875, -3.24249267578125e-05, 0.0, -0.001056671142578125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.08082103729248047, 0.0, -0.000152587890625, -0.0001506805419921875, -0.0003986358642578125, -0.0010415315628051758, -0.00012803077697753906, -5.7220458984375e-06, 0.0, -0.0036887498572468758, -6.425316678360105e-05], "score": -5.363275462669549, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -0.1360931396484375, 0.0, -1.9073486328125e-06, -0.000286102294921875, -2.6702880859375e-05, -0.000232696533203125, -3.4332275390625e-05, 0.0, -0.00098419189453125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.194685935974121, 0.0, -1.9073486328125e-06, -0.0005340576171875], "score": -5.640796541235318, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -2.7801599502563477, 0.0, -0.0002576112747192383, 0.0, -0.00016509904526174068, 0.0, -0.000423431396484375, -1.71661376953125e-05, -1.9073486328125e-05, -8.7738037109375e-05, -2.1457672119140625e-06, -2.5957469940185547, -5.7220458984375e-06, -9.72747802734375e-05, -0.000156402587890625, -5.14984130859375e-05, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.00019550323486328125, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.4068737030029297, 0.0, -1.9073486328125e-06, -0.0002117156982421875], "score": -5.84053122375451, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -2.7801599502563477, 0.0, -0.0002576112747192383, 0.0, -0.00016509904526174068, 0.0, -0.000423431396484375, -1.71661376953125e-05, -1.9073486328125e-05, -8.7738037109375e-05, -2.1457672119140625e-06, -0.08725166320800781, -2.86102294921875e-05, -0.0003662109375, -6.866455078125e-05, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00015735626220703125, 0.0, -5.841255187988281e-06, 0.0, -0.14112091064453125, 0.0, -1.9073486328125e-06, -0.000293731689453125, -2.86102294921875e-05, -0.0002079010009765625, -3.4332275390625e-05, 0.0, -0.0011138916015625, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -2.0265579223632812e-06, 0.0, -2.8354434967041016, 0.0, -1.9073486328125e-06, -0.0019989013671875], "score": -5.905367725829706, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -2.3103227615356445, 0.0, -4.57763671875e-05, -0.0002002716064453125, -0.000244140625, -0.0008602142333984375, -0.0004597902297973633, -5.7220458984375e-06, -1.9073486328125e-06, -0.009060245007276535, -7.283581362571567e-05, -0.0019435882568359375, -0.009157180786132812, -1.337503433227539, 0.0, -0.3737448453903198, -6.0796710386057384e-06, -0.07148434966802597, -5.960462772236497e-07, -0.10724163055419922, -1.1521663665771484, -1.9073486328125e-06, -0.0011882781982421875, -0.29436540603637695, 0.0, -0.0049591064453125, -0.00971221923828125, -8.20159912109375e-05, 0.0, -0.0006961822509765625, -5.7220458984375e-06, -3.814697265625e-06, -0.0002956390380859375, -1.9073486328125e-05, -0.00011444091796875, -0.0005401372909545898, 0.0, -0.5023107528686523, -5.14984130859375e-05, -0.01176762580871582, -8.0108642578125e-05, 0.0], "score": -6.5085797327153045, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 45, 104, 42, "hero", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 63, 171, "Self", "Selector", "<EOS>"], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n        <UNK>.summon(player.hero, len(player.minions), SelfSelector())\n", "model_output": {"hole0": "Charge", "hole2": [{"value": {"args": [{"s": "Charge", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_friendly_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template25"}], "hole1": "summon", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 16}
{"beams": [{"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006157159805297852, 0.0, -1.71661376953125e-05, -0.0016078948974609375, -0.0002346038818359375, -5.364364369597752e-06, -1.7881377516459906e-06, -5.137917469255626e-05, -1.9073486328125e-06], "score": -0.005748417137255046, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006157159805297852, 0.0, -1.71661376953125e-05, -6.4968109130859375, -5.7220458984375e-06, -3.576278118089249e-07, -2.7418097943154862e-06, -7.748596544843167e-06, 0.0, -0.5346977710723877, -3.814697265625e-06, -4.9591064453125e-05, -2.47955322265625e-05, -6.854534149169922e-05, -4.768370445162873e-07], "score": -7.035517957043368, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, charge=True)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -7.75520133972168, -1.9073486328125e-06, -5.614757537841797e-05, 0.0, -3.814697265625e-06, 0.0, -0.00036907196044921875, 0.0, -1.71661376953125e-05, -0.0026493072509765625, -0.000244140625, -5.125959432916716e-06, -1.9073468138230965e-06, -5.2332856284920126e-05, -1.9073486328125e-06], "score": -7.761298444051562, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -7.784120082855225, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006157159805297852, 0.0, -1.71661376953125e-05, -0.0016078948974609375, -0.0002346038818359375, -5.364364369597752e-06, -1.7881377516459906e-06, -5.137917469255626e-05, -1.9073486328125e-06], "score": -7.789452069464204, "choice_history": [77, 145, "<UNK>", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "<UNK>Yeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -7.793534755706787, -1.7642971215536818e-05, -0.0009427070617675781, -7.62939453125e-06, -3.349781036376953e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006158351898193359, 0.0, -1.9073486328125e-05, -0.0016498565673828125, -0.0002841949462890625, -5.841192432853859e-06, -1.7881377516459906e-06, -4.994865957996808e-05, -1.9073486328125e-06], "score": -7.798738941094342, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "ALL", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 0, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -7.827110767364502, -1.9073486328125e-06, -5.7220458984375e-06, -0.0037670135498046875, -0.0006732940673828125, -1.26358190755127e-05, -4.768370445162873e-07, -3.492827090667561e-05, -1.9073486328125e-06], "score": -7.834821249866167, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -7.986177921295166, -3.504691630951129e-05, -1.3828277587890625e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00035858154296875, -4.76837158203125e-05, -4.768360213347478e-06, -0.00013434886932373047, -4.172325134277344e-06, 0.0, -0.0009845179738476872, -1.311301275563892e-06, -0.00042557716369628906, -1.9073486328125e-06, -2.9921531677246094e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006580352783203125, 0.0, -1.52587890625e-05, -0.0016803741455078125, -0.000232696533203125, -5.245156899036374e-06, -1.7881377516459906e-06, -5.149838398210704e-05, -1.9073486328125e-06], "score": -7.991313457710703, "choice_history": [77, 145, "Chillwind", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class Chillwind<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "Chillwind<UNK>", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -8.478320121765137, 0.0, -0.0003434419631958008, -7.62939453125e-06, -3.802776336669922e-05, 0.0, -3.814697265625e-06, 0.0, -0.00039207935333251953, 0.0, -2.288818359375e-05, -0.0017147064208984375, -0.0002536773681640625, -7.510092473239638e-06, -1.5497195136049413e-06, -5.185600821278058e-05, -1.9073486328125e-06], "score": -8.482729658002512, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -8.648780822753906, -3.576277322281385e-06, -0.0003968477249145508, -1.9073486328125e-06, -2.586841583251953e-05, 0.0, -5.7220458984375e-06, 0.0, -0.00041103363037109375, 0.0, -2.288818359375e-05, -0.0017032623291015625, -0.000255584716796875, -5.960398993920535e-06, -2.0265558760002023e-06, -5.3524941904470325e-05, -1.9073486328125e-06], "score": -8.653241380595972, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "0", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 0, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -8.9949951171875, -4.410743713378906e-06, -0.0003052949905395508, -1.9073486328125e-06, -2.562999725341797e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0006269216537475586, 0.0, -2.288818359375e-05, -0.001468658447265625, -0.00023651123046875, -6.079611921450123e-06, -2.0265558760002023e-06, -5.1140759751433507e-05, -1.9073486328125e-06], "score": -8.999320849331724, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -9.454072952270508, 0.0, -1.9073486328125e-06, -0.0032367706298828125, -0.0004558563232421875, -1.406623596267309e-05, -3.576278118089249e-07, -3.385538002476096e-05, -1.9073486328125e-06], "score": -9.461030270378984, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, create_minion):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "create_minion", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -9.541062355041504, -0.00010216235386906192, -0.0017426313133910298, -7.152555099310121e-07, -0.0004496574401855469, -1.9073486328125e-06, -3.9339061913779005e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006146430969238281, 0.0, -1.1444091796875e-05, -0.0020427703857421875, -0.0002536773681640625, -4.291488039598335e-06, -1.1920922133867862e-06, -4.804131094715558e-05, -1.9073486328125e-06], "score": -9.547794833449615, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", "MURLOC", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('ChillwindMURLOC', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "ChillwindMURLOC", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -9.721181869506836, -0.006512165069580078, -1.33514404296875e-05, -7.629382889717817e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0006418228149414062, 0.0, -1.33514404296875e-05, -0.002105712890625, -0.0002803802490234375, -4.529915258899564e-06, -1.6689286894688848e-06, -4.613397686625831e-05, -1.9073486328125e-06], "score": -9.732455357380303, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 0, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -9.7381591796875, -0.07101821899414062, -3.814697265625e-06, -0.0029964447021484375, -0.0012874603271484375, -9.298152690462302e-06, -1.311301275563892e-06, -4.065031680511311e-05, -1.9073486328125e-06], "score": -9.816730882741894, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "Minion", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, Minion):\n        return Minion(4, 5)\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "Minion", "hole6": [{"hole0": 4, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006157159805297852, 0.0, -1.71661376953125e-05, -6.4968109130859375, -5.7220458984375e-06, -3.576278118089249e-07, -2.7418097943154862e-06, -7.748596544843167e-06, 0.0, -1.8990147113800049, 0.0, -0.015325546264648438, -0.023575782775878906, -0.001010894775390625, -0.038333892822265625, -0.000438690185546875, -0.8329583406448364, -3.576278118089249e-07, -7.62939453125e-06, -7.2479248046875e-05, -0.2876080870628357, -1.4564954042434692, 0.0, -0.0020732879638671875], "score": -11.057588066887632, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "5", "<EOS>", "buffs", "<EOS>", 23, 129, 206, 59, 155, "Buff", "<EOS>", 25, 133, "Cant", "Windfury", "<EOS>", 71], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, buffs=[Buff(CantWindfury())])\n", "model_output": {"hole0": "ChillwindYeti", "hole2": [{"hole0": "Chillwind Yeti", "hole2": "ALL", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "buffs", "hole1": 5, "hole3": {"elts": [{"hole0": "Buff", "hole1": {"id": "CantWindfury", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}, "_type": "Template14"}]}}], "index": 17}
{"beams": [{"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -0.27926695346832275, 0.0, -3.0517578125e-05, -0.001300811767578125, -2.86102294921875e-05, -7.43865966796875e-05, -0.0001926422119140625, -1.1444091796875e-05, -8.7738037109375e-05, -0.0007098910282365978, -1.9073486328125e-06, -0.01357126235961914, -8.344650268554688e-06, -3.0517578125e-05, -0.0005340576171875], "score": -0.31285094501160415, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -1.6019455194473267, 0.0, -3.24249267578125e-05, -0.0012664794921875, -4.00543212890625e-05, -8.58306884765625e-05, -0.000316619873046875, -2.288818359375e-05, -0.0001010894775390625, -0.0006581541965715587, -1.9073486328125e-06, -0.013918876647949219, -1.0371208190917969e-05, -3.24249267578125e-05, -0.0007953643798828125], "score": -1.636229865566719, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -3.5561623573303223, -1.9073486328125e-06, -0.0022602081298828125, -0.0010128021240234375, -0.000766754150390625, -0.0035915374755859375, -3.814697265625e-06, -5.7220458984375e-06, -0.028325915336608887, -0.0016105175018310547, -1.52587890625e-05, -0.00051116943359375, -0.00019073486328125, -9.5367431640625e-06, -0.0007452964782714844, 0.0, -0.06844425201416016, -0.00048828125, -8.392333984375e-05, -5.14984130859375e-05, -1.71661376953125e-05, -0.0016101591754704714, 0.0, -0.5739874839782715, -1.9073486328125e-06, -9.5367431640625e-06, -0.000274658203125], "score": -4.25718425949978, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -3.5561623573303223, -1.9073486328125e-06, -0.0022602081298828125, -0.0010128021240234375, -0.000766754150390625, -0.0035915374755859375, -3.814697265625e-06, -5.7220458984375e-06, -0.028325915336608887, -0.0016105175018310547, -1.52587890625e-05, -0.00051116943359375, -0.00019073486328125, -9.5367431640625e-06, -0.0007452964782714844, 0.0, -0.06844425201416016, -0.00048828125, -8.392333984375e-05, -5.14984130859375e-05, -1.71661376953125e-05, -0.0016101591754704714, 0.0, -0.9248929023742676, -4.291534423828125e-06, -1.33514404296875e-05, -0.0007953643798828125], "score": -4.608616582955591, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -0.27926695346832275, 0.0, -3.0517578125e-05, -0.001300811767578125, -2.86102294921875e-05, -7.43865966796875e-05, -0.0001926422119140625, -1.1444091796875e-05, -8.7738037109375e-05, -0.0007098910282365978, -1.9073486328125e-06, -5.005398273468018, -2.5510787963867188e-05, -0.0002117156982421875, -0.00704193115234375, -0.0008831024169921875, -0.0046062469482421875, -1.33514404296875e-05, -1.33514404296875e-05, -0.052398681640625, -0.0009542703628540039, -1.1444091796875e-05, -0.0008697509765625, -0.0001506805419921875, -5.7220458984375e-06, -0.0008692741394042969, 0.0], "score": -5.372160069958198, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -5.649808883666992, -7.748603820800781e-06, -1.71661376953125e-05, -0.04740333557128906, -9.1552734375e-05, -0.0001735687255859375, -0.0003910064697265625, -0.000110626220703125, -0.000118255615234375, -0.00040304570575244725, -3.814697265625e-06, -0.014584541320800781, -1.060962586052483e-05, -2.288818359375e-05, -0.0006694793701171875], "score": -5.730818383097329, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "append", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.append(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -0.27926695346832275, 0.0, -3.0517578125e-05, -0.001300811767578125, -2.86102294921875e-05, -7.43865966796875e-05, -0.0001926422119140625, -1.1444091796875e-05, -8.7738037109375e-05, -0.0007098910282365978, -1.9073486328125e-06, -6.342164039611816, -1.9073486328125e-06, -1.33514404296875e-05, -0.0005092620849609375], "score": -6.641395323292244, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -1.6019455194473267, 0.0, -3.24249267578125e-05, -0.0012664794921875, -4.00543212890625e-05, -8.58306884765625e-05, -0.000316619873046875, -2.288818359375e-05, -0.0001010894775390625, -0.0006581541965715587, -1.9073486328125e-06, -5.015330791473389, -2.765655517578125e-05, -0.0001964569091796875, -0.008740425109863281, -0.0007801055908203125, -0.0049991607666015625, -1.52587890625e-05, -1.33514404296875e-05, -0.0507810115814209, -0.0009752511978149414, -1.1444091796875e-05, -0.00087738037109375, -0.0001544952392578125, -5.7220458984375e-06, -0.0009579658508300781, 0.0], "score": -6.705339305416572, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -6.551235198974609, 0.0, -0.0032329559326171875, 0.0, -1.4543520592269488e-05, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.0002994537353515625, -1.2159347534179688e-05, -2.0265579223632812e-06, -0.0027923583984375, -5.340576171875e-05, -0.0003643035888671875, -3.814697265625e-05, -6.103515625e-05, -5.7220458984375e-06, -4.76837158203125e-05, -0.0007872581481933594, 0.0, -0.3112311363220215, 0.0, -2.6702880859375e-05, -0.0016021728515625, -2.6702880859375e-05, -7.62939453125e-05, -0.0002117156982421875, -9.5367431640625e-06, -9.34600830078125e-05, -0.0007253882358781993, -1.9073486328125e-06, -0.013481497764587402, -8.344650268554688e-06, -3.0517578125e-05, -0.000537872314453125], "score": -6.888990395344962, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "minions", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.minions)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "minions", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -0.27926695346832275, 0.0, -3.0517578125e-05, -6.7283830642700195, -4.1961669921875e-05, -4.38690185546875e-05, -8.7738037109375e-05, -5.7220458984375e-06, -3.4332275390625e-05, -0.0004898305051028728, -1.9073486328125e-06, -0.013513445854187012, -1.0251998901367188e-05, -2.47955322265625e-05, -0.00054931640625], "score": -7.039485566457159, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -6.800104141235352, 0.0, -0.0006961821345612407, 0.0, -9.918212890625e-05, -5.7220458984375e-06, -0.0005130767822265625, -2.777576446533203e-05, -2.0265579223632812e-06, -0.005955696105957031, -5.340576171875e-05, -0.00022125244140625, -3.814697265625e-05, -5.340576171875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007615089416503906, 0.0, -0.29589033126831055, 0.0, -2.47955322265625e-05, -0.00125885009765625, -2.86102294921875e-05, -7.62939453125e-05, -0.0001678466796875, -1.1444091796875e-05, -9.1552734375e-05, -0.0006958242738619447, -1.9073486328125e-06, -0.01366281509399414, -8.344650268554688e-06, -2.86102294921875e-05, -0.0005168914794921875], "score": -7.126190536136136, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "COMMON", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def COMMON(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "COMMON", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -6.270129680633545, -5.340576171875e-05, -0.6608600616455078, -0.0002155303955078125, -0.000244140625, -7.62939453125e-06, -0.0014896392822265625, -0.00046157804899849, 0.0, -0.21953034400939941, 0.0, -4.57763671875e-05, -0.0008716583251953125], "score": -7.1649818348750784, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -7.194252014160156, -1.3828277587890625e-05, -0.00019073486328125, -0.0010318756103515625, -6.103515625e-05, -9.5367431640625e-05, -0.000255584716796875, -2.6702880859375e-05, -6.29425048828125e-05, -0.0005799527280032635, -1.9073486328125e-06, -0.014140963554382324, -1.0848044439626392e-05, -2.47955322265625e-05, -0.0006313323974609375], "score": -7.228381745655469, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "current_player", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.current_player(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "current_player", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -6.786293983459473, 0.0, -0.0014238357543945312, 0.0, -1.597404116182588e-05, 0.0, -4.76837158203125e-05, -9.5367431640625e-06, -0.0002002716064453125, -1.3947486877441406e-05, -2.0265579223632812e-06, -0.0024442672729492188, -5.14984130859375e-05, -0.0003070831298828125, -4.00543212890625e-05, -5.91278076171875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.0008034706115722656, 0.0, -0.42244863510131836, 0.0, -1.71661376953125e-05, -0.00130462646484375, -2.86102294921875e-05, -8.0108642578125e-05, -0.000213623046875, -7.62939453125e-06, -9.72747802734375e-05, -0.0007194277714006603, -1.9073486328125e-06, -0.013553142547607422, -8.344650268554688e-06, -2.6702880859375e-05, -0.0005168914794921875], "score": -7.232694857405448, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -0.27926695346832275, 0.0, -3.0517578125e-05, -0.001300811767578125, -2.86102294921875e-05, -7.43865966796875e-05, -0.0001926422119140625, -1.1444091796875e-05, -8.7738037109375e-05, -0.0007098910282365978, -1.9073486328125e-06, -6.945038318634033, -0.0001068115234375, -0.22352027893066406, -0.005847930908203125], "score": -7.473220102802742, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "bind", "<EOS>", 205, 68], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.bind(2)\n", "model_output": {"hole0": "Claw", "hole2": [{"hole0": "Claw", "hole2": "DRUID", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "bind", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 18}
{"beams": [{"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.000621795654296875, 0.0, -0.003812256036326289, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0437929704785347, -3.099440846199286e-06, -0.0003294944763183594, 0.0, 0.0, -0.004238128662109375, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00023233878891915083, -1.1920928244535389e-07, -0.0001621246337890625, -7.43865966796875e-05, -0.0004558563232421875, -3.814697265625e-06, -7.98700493760407e-05, 0.0, -1.33514404296875e-05, -0.001476287841796875, -0.0001125335693359375, -0.00044272950617596507, 0.0, -0.0003032684326171875, -0.0031909942626953125, -0.00014495849609375, -1.9073486328125e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.0009918212890625, 0.0, -0.0001621246337890625, -9.5367431640625e-05, -0.000156402587890625, -3.814697265625e-06, -7.974827167345211e-05, -8.344646857949556e-07, -0.0005818605422973633, 0.0, -4.410743713378906e-05, 0.0, -0.0003337860107421875, 0.0, -0.0002593994140625, -9.5367431640625e-05, -0.0020160675048828125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010710716247558594, -1.9073486328125e-06, -0.00064849853515625, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003299713134765625, -1.9073486328125e-05, -3.814697265625e-05, -0.0018310546875, -7.82012939453125e-05, -0.000705718994140625], "score": -0.3463588247077922, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -2.513594150543213, -8.940656698541716e-06, -0.000274658203125, -0.00020599365234375, -4.57763671875e-05, -5.7220458984375e-06, -0.056131862103939056, -2.3841855067985307e-07, -0.019037485122680664, 0.0, -0.0003795623779296875, -0.001270294189453125, 0.0, -0.004304871894419193, -3.933906555175781e-06, -0.0012493133544921875, -6.866455078125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.04383715242147446, -2.861022494471399e-06, -0.00032198429107666016, 0.0, -1.9073486328125e-06, -0.004489898681640625, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -0.00023102748673409224, -2.3841855067985307e-07, -0.0001277923583984375, -7.82012939453125e-05, -0.00045013427734375, -3.814697265625e-06, -7.736656698398292e-05, 0.0, -1.1444091796875e-05, -0.001468658447265625, -0.0001125335693359375, -0.0004407032683957368, 0.0, -0.0003032684326171875, -0.0032596588134765625, -0.00014495849609375, -2.09808349609375e-05, -0.000179290771484375, -3.0517578125e-05, -0.0009918212890625, 0.0, -0.000164031982421875, -9.1552734375e-05, -0.000152587890625, -3.814697265625e-06, -7.950987492222339e-05, -8.344646857949556e-07, -0.0005818605422973633, 0.0, -4.410743713378906e-05, 0.0, -0.0003337860107421875, 0.0, -0.0002593994140625, -9.5367431640625e-05, -0.0020198822021484375, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.1444091796875e-05, -0.010710716247558594, -1.9073486328125e-06, -0.000644683837890625, 0.0, -0.00032901763916015625, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.00032985216239467263, -1.9073486328125e-05, -3.814697265625e-05, -0.0018434524536132812, -7.82012939453125e-05, -0.000705718994140625], "score": -2.820008314907703, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.000621795654296875, 0.0, -0.003812256036326289, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.1550514698028564, 0.0, -0.5961450338363647, 0.0, -0.0004024505615234375, -0.006290435791015625, 0.0, -0.030114833265542984, -2.1457672119140625e-06, -0.000213623046875, -0.008069038391113281, -0.000213623046875, -0.0018206466920673847, -1.9073486328125e-06, -0.0003337860107421875, -0.00359344482421875, -0.000293731689453125, -3.24249267578125e-05, -0.00035858154296875, -1.1444091796875e-05, -0.00087738037109375, 0.0, -0.000118255615234375, -5.340576171875e-05, -7.43865966796875e-05, -1.9073486328125e-06, -6.41328952042386e-05, -8.344646857949556e-07, -0.0006409883499145508, 0.0, -3.838539123535156e-05, 0.0, -0.0004901885986328125, 0.0, -0.0002498626708984375, -0.0001201629638671875, -0.00261688232421875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00012934207916259766, 0.0, -1.71661376953125e-05, -0.000110626220703125, -1.1444091796875e-05, -0.00978851318359375, -3.814697265625e-06, -0.00060272216796875, 0.0, -0.00031197071075439453, 0.0, -6.735324132023379e-05, -2.741813204920618e-06, -0.0003317595401313156, -1.9073486328125e-05, -3.814697265625e-05, -0.0018682479858398438, -7.2479248046875e-05, -0.0007305145263671875], "score": -4.093528234434238, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -3.953853130340576, -8.22540732769994e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0015974044799804688, 0.0, -0.0002117156982421875, 0.0, -0.0004935264587402344, 0.0, -0.0003566741943359375, 0.0, -0.0001220703125, -1.52587890625e-05, -3.814697265625e-06, -0.000213623046875, 0.0, -0.0001049041748046875, 0.0, -9.34600830078125e-05, 0.0, -8.463859558105469e-05, -6.914137884450611e-06, -0.0005129576311446726, -1.9073486328125e-06, -0.013248443603515625, -0.00038909912109375, -2.288818359375e-05, -1.9073486328125e-06, -0.002377033233642578, -2.0861407392658293e-05, -0.0016021728515625, -0.000148773193359375, -5.7220458984375e-06, -5.7220458984375e-06, -0.003834485774859786, -1.1920928244535389e-07, -0.0003147125244140625, -0.000675201416015625, -5.7220458984375e-06, -0.0010286105098202825, -2.3841855067985307e-07, -0.0001811981201171875, -0.007549285888671875, -0.000408172607421875, -7.62939453125e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -0.007434086874127388, 0.0, -0.0002803802490234375, -1.52587890625e-05, -0.000202178955078125, -7.62939453125e-06, -0.00028228759765625, 0.0, -0.0023012161254882812, 0.0, -0.008615970611572266, -1.049041748046875e-05, -2.09808349609375e-05, -0.000896453857421875, 0.0, -0.09787249565124512, -2.3841855067985307e-07, -0.0005588531494140625, -0.001190185546875, -2.09808349609375e-05, 0.0, -0.0066470252349972725, -1.0728830375228426e-06, -0.010938286781311035, 0.0, -0.0001354217529296875, -0.0006122589111328125, 0.0, -0.003672197461128235, -3.933906555175781e-06, -0.0008296966552734375, -7.2479248046875e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.04133431240916252, -2.9802317840221804e-06, -0.00032007694244384766, 0.0, 0.0, -0.0042266845703125, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.0002325772074982524, -1.1920928244535389e-07, -0.000164031982421875, -7.62939453125e-05, -0.0004558563232421875, -3.814697265625e-06, -8.058530511334538e-05, 0.0, -1.33514404296875e-05, -0.001483917236328125, -0.0001125335693359375, -0.0004429678665474057, 0.0, -0.0003032684326171875, -0.0031871795654296875, -0.00014495849609375, -1.9073486328125e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.0009918212890625, 0.0, -0.0001621246337890625, -9.5367431640625e-05, -0.0001583099365234375, -3.814697265625e-06, -7.974827167345211e-05, -8.344646857949556e-07, -0.0005818605422973633, 0.0, -4.410743713378906e-05, 0.0, -0.000331878662109375, 0.0, -0.0002593994140625, -9.34600830078125e-05, -0.0020160675048828125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010710716247558594, -1.9073486328125e-06, -0.00064849853515625, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003298521332908422, -1.9073486328125e-05, -3.814697265625e-05, -0.0018301010131835938, -7.62939453125e-05, -0.000705718994140625], "score": -4.274053258820842, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -4.105955600738525, 0.0, -0.00016558168863411993, 0.0, -0.0019969940185546875, -3.814697265625e-06, -7.593625923618674e-05, 0.0, -3.24249267578125e-05, 0.0, -1.52587890625e-05, -0.00027108192443847656, -7.867782187531702e-06, -0.04159832000732422, -0.00051116943359375, -0.00054168701171875, -3.814697265625e-06, -1.71661376953125e-05, -0.000244140625, -3.814697265625e-06, -0.019713476300239563, 0.0, -0.0029726028442382812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -0.000899195671081543, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.4849853515625e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.0004746916238218546, -3.814697265625e-06, -0.014268875122070312, -0.0003833770751953125, -2.288818359375e-05, -1.9073486328125e-06, -0.002498149871826172, -2.2649508537142538e-05, -0.0017328262329101562, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004142165184020996, -1.1920928244535389e-07, -0.0003070831298828125, -0.0006952285766601562, -5.7220458984375e-06, -0.0010916057508438826, -2.3841855067985307e-07, -0.0001850128173828125, -0.0075206756591796875, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007392957806587219, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.0002841949462890625, 0.0, -0.0023479461669921875, 0.0, -0.008640766143798828, -1.049041748046875e-05, -2.09808349609375e-05, -0.000904083251953125, 0.0, -0.09842896461486816, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006660566199570894, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.0006237030029296875, 0.0, -0.003808202687650919, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.043911200016736984, -3.099440846199286e-06, -0.0003294944763183594, 0.0, 0.0, -0.0042438507080078125, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00023233878891915083, -1.1920928244535389e-07, -0.0001621246337890625, -7.43865966796875e-05, -0.0004558563232421875, -3.814697265625e-06, -7.98700493760407e-05, 0.0, -1.33514404296875e-05, -0.001476287841796875, -0.0001125335693359375, -0.00044272950617596507, 0.0, -0.0003032684326171875, -0.0031909942626953125, -0.00014495849609375, -1.9073486328125e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.0009918212890625, 0.0, -0.0001621246337890625, -9.5367431640625e-05, -0.000156402587890625, -3.814697265625e-06, -7.974827167345211e-05, -8.344646857949556e-07, -0.0005818605422973633, 0.0, -4.410743713378906e-05, 0.0, -0.0003337860107421875, 0.0, -0.0002593994140625, -9.34600830078125e-05, -0.0020160675048828125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010710716247558594, -1.9073486328125e-06, -0.00064849853515625, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003299713134765625, -1.9073486328125e-05, -3.814697265625e-05, -0.0018310546875, -7.82012939453125e-05, -0.000705718994140625], "score": -4.43236224637171, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "MAGE", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.000621795654296875, 0.0, -0.003812256036326289, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -3.1550514698028564, 0.0, -1.0244935750961304, 0.0, -1.9073486328125e-06, -0.010578155517578125, -9.5367431640625e-06, -3.24249267578125e-05, -7.62939453125e-06, -4.1961669921875e-05, -0.0001968142605619505, -1.1920928244535389e-07, -0.0001544952392578125, -9.1552734375e-05, -0.0006256103515625, -3.814697265625e-06, -7.832033588783816e-05, 0.0, -1.1444091796875e-05, -0.0014095306396484375, -0.000110626220703125, -0.00043974973959848285, 0.0, -0.0002918243408203125, -0.0032329559326171875, -0.0001373291015625, -2.09808349609375e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.000995635986328125, 0.0, -0.0001621246337890625, -9.34600830078125e-05, -0.0001583099365234375, -3.814697265625e-06, -7.998667570063844e-05, -8.344646857949556e-07, -0.0005780458450317383, 0.0, -4.410743713378906e-05, 0.0, -0.0003376007080078125, 0.0, -0.0002593994140625, -9.5367431640625e-05, -0.002017974853515625, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010716438293457031, -1.9073486328125e-06, -0.000644683837890625, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003317594819236547, -1.9073486328125e-05, -3.814697265625e-05, -0.0018310546875, -7.82012939453125e-05, -0.0007076263427734375], "score": -4.488246243961655, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -5.469953536987305, -0.00687408447265625, -0.000133514404296875, -0.0017414093017578125, 0.0, -0.089632548391819, -1.1920928244535389e-07, -0.0007481575012207031, 0.0, -1.9073486328125e-06, -0.001163482666015625, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-06, -3.814697265625e-05, -0.0002903931599576026, -2.3841855067985307e-07, -0.00061798095703125, -8.392333984375e-05, -0.000682830810546875, -3.814697265625e-06, -7.641302363481373e-05, 0.0, -1.9073486328125e-05, -0.001499176025390625, -0.0001163482666015625, -0.0004212712519802153, 0.0, -0.000316619873046875, -0.0035552978515625, -0.0001316070556640625, -2.09808349609375e-05, -0.0001735687255859375, -2.86102294921875e-05, -0.0009975433349609375, 0.0, -0.0001621246337890625, -0.0001010894775390625, -0.00017547607421875, -3.814697265625e-06, -8.237067959271371e-05, -7.152555099310121e-07, -0.0005799531936645508, 0.0, -4.220008850097656e-05, 0.0, -0.0003261566162109375, 0.0, -0.0002593994140625, -9.34600830078125e-05, -0.0019588470458984375, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010741233825683594, -1.9073486328125e-06, -0.0006504058837890625, 0.0, -0.0003387928009033203, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003298521332908422, -1.9073486328125e-05, -4.00543212890625e-05, -0.0018310546875, -7.62939453125e-05, -0.000698089599609375], "score": -5.718004134577015, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -4.566935062408447, -0.1977071762084961, -0.0001354217529296875, -0.012908935546875, -2.86102294921875e-05, -0.01708221435546875, -1.9073486328125e-06, -0.001651763916015625, -0.0003719329833984375, -5.340576171875e-05, -1.52587890625e-05, -0.002896338002756238, -3.3378546504536644e-06, -0.00034987926483154297, 0.0, -3.921985626220703e-05, -3.814697265625e-06, -0.0018291473388671875, 0.0, -0.000560760498046875, -5.91278076171875e-05, -0.0029621124267578125, -9.34600830078125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014078617095947266, 0.0, -1.9073486328125e-05, -0.0001468658447265625, -1.9073486328125e-05, -0.010023117065429688, -1.1444091796875e-05, -0.001232147216796875, 0.0, -0.0003046989440917969, 0.0, -6.556510197697207e-05, -2.622604142743512e-06, -0.0003604888916015625, -2.09808349609375e-05, -4.57763671875e-05, -0.00179290771484375, -0.0001068115234375, -0.0010318756103515625, -0.000621795654296875, -0.0065898895263671875, -0.005066871643066406, -0.563543438911438, 0.0, -0.000232696533203125, -0.32174205780029297, -0.000171661376953125, -0.00018310546875, -0.000804901123046875, -5.53131103515625e-05, -0.0061187744140625, -1.9073486328125e-06, -0.0001163482666015625, -0.0001010894775390625, -0.0001049041748046875, -9.5367431640625e-06, -0.0005542919388972223, -7.152555099310121e-07, -0.0009921789169311523, 0.0, -6.759166717529297e-05, 0.0, -0.0003490447998046875, 0.0, -0.0003662109375, -7.05718994140625e-05, -0.00148773193359375, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00011777877807617188, 0.0, -1.9073486328125e-05, -0.000156402587890625, -2.288818359375e-05, -0.010809898376464844, -3.814697265625e-06, -0.000728607177734375, 0.0, -0.00036394596099853516, 0.0, -6.353854405460879e-05, -2.9802317840221804e-06, -0.0003260374360252172, -1.71661376953125e-05, -4.76837158203125e-05, -0.0018854141235351562, -0.0001010894775390625, -0.0006504058837890625], "score": -5.772062656601065, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68, 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -5.479858875274658, 0.0, -1.9073486328125e-05, -0.031357765197753906, 0.0, -0.03000578097999096, -2.503394853192731e-06, -0.0007476806640625, -8.58306884765625e-05, -3.814697265625e-05, 0.0, -0.07181809097528458, -1.0728830375228426e-06, -0.00039398670196533203, 0.0, 0.0, -0.005214691162109375, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -0.00022351730149239302, -1.1920928244535389e-07, -0.0001735687255859375, -7.62939453125e-05, -0.0004825592041015625, -3.814697265625e-06, -7.939321949379519e-05, 0.0, -1.33514404296875e-05, -0.00146484375, -0.00011444091796875, -0.000448449922259897, 0.0, -0.0003070831298828125, -0.003177642822265625, -0.0001468658447265625, -1.9073486328125e-05, -0.0001811981201171875, -3.0517578125e-05, -0.0009899139404296875, 0.0, -0.0001621246337890625, -9.34600830078125e-05, -0.000156402587890625, -3.814697265625e-06, -7.986747368704528e-05, -8.344646857949556e-07, -0.0005799531936645508, 0.0, -4.410743713378906e-05, 0.0, -0.0003337860107421875, 0.0, -0.0002593994140625, -9.5367431640625e-05, -0.0020236968994140625, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010706901550292969, -1.9073486328125e-06, -0.0006465911865234375, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003298521332908422, -1.9073486328125e-05, -3.814697265625e-05, -0.0018320083618164062, -7.82012939453125e-05, -0.0007076263427734375], "score": -5.901157302531757, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "append", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.append(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -4.312417030334473, -0.046103477478027344, -0.1795063018798828, -2.47955322265625e-05, -0.510432243347168, -1.33514404296875e-05, -4.38690185546875e-05, -9.5367431640625e-06, -2.1934505639364943e-05, 0.0, -1.52587890625e-05, -0.00103759765625, -1.1444091796875e-05, -0.017728805541992188, -3.814697265625e-06, -0.0751352310180664, -0.3966192603111267, -0.00015676021575927734, -0.003106835763901472, -2.6702880859375e-05, -1.52587890625e-05, -0.0975198745727539, -0.0006866455078125, -0.0019092559814453125, -0.06132030487060547, -0.10492134094238281, -0.000339508056640625, -0.04587841033935547, 0.0, -0.012524401769042015, 0.0, -0.0001621246337890625, 0.0, 0.0, -0.0036907196044921875, -1.1444091796875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000345945154549554, -1.1920928244535389e-07, -0.0002079010009765625, -8.0108642578125e-05, -0.0005168914794921875, -3.814697265625e-06, -7.796275895088911e-05, 0.0, -0.0001354217529296875, -5.91278076171875e-05, -0.000125885009765625, -0.04917144775390625, -1.1444091796875e-05, -0.00141143798828125, 0.0, -0.0026438236236572266, 0.0, -9.644031524658203e-05, 0.0, -0.0027276277542114258, 0.0, 0.0, -0.000751495361328125, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00023186193720903248, 0.0, -0.000209808349609375, -7.2479248046875e-05, -0.000743865966796875, -3.814697265625e-06, -7.665143493795767e-05, 0.0, -1.52587890625e-05, -0.0012836456298828125, -9.5367431640625e-05, -0.0008857229840941727, 0.0, -0.0003185272216796875, -0.0031280517578125, -0.0001316070556640625, -2.6702880859375e-05, -0.00017547607421875, -3.62396240234375e-05, -0.0009632110595703125, -1.9073486328125e-06, -0.0001678466796875, -8.20159912109375e-05, -0.000148773193359375, -3.814697265625e-06, -7.915226888144389e-05, -8.344646857949556e-07, -0.0005666017532348633, 0.0, -4.792213439941406e-05, 0.0, -0.0003528594970703125, 0.0, -0.0002536773681640625, -9.72747802734375e-05, -0.0020236968994140625, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00012350082397460938, 0.0, -1.71661376953125e-05, -0.0001277923583984375, -1.1444091796875e-05, -0.010700225830078125, -1.9073486328125e-06, -0.000637054443359375, 0.0, -0.00032699108123779297, 0.0, -6.520747410831973e-05, -2.741813204920618e-06, -0.00032997134258039296, -1.9073486328125e-05, -3.814697265625e-05, -0.0018548965454101562, -8.20159912109375e-05, -0.000713348388671875], "score": -6.051614745855311, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 42, "opponent", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68, 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        if len(player.opponent.minions) >= 2:\n            minion.damage(player.effective_spell_damage(2), self)\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "opponent", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -2.513594150543213, -8.940656698541716e-06, -0.000274658203125, -0.00020599365234375, -4.57763671875e-05, -5.7220458984375e-06, -2.9349169731140137, -1.6093124941107817e-05, -0.003003832884132862, 0.0, -3.814697265625e-06, -0.0066127777099609375, -9.5367431640625e-06, -1.52587890625e-05, -1.71661376953125e-05, -4.1961669921875e-05, -0.0005154536920599639, -1.5497195136049413e-06, -0.0002269744873046875, -0.0001068115234375, -0.0026264190673828125, -9.5367431640625e-06, -0.0001461482170270756, 0.0, -0.015857696533203125, -0.00054931640625, -0.16337871551513672, -3.814697265625e-06, -0.11360454559326172, -5.7220458984375e-06, -0.002960205078125, 0.0, -0.00014150142669677734, 0.0, -0.0006823539733886719, -3.3378591979271732e-06, -0.051843028515577316, 0.0, -0.08879375457763672, 0.0, 0.0, -0.0016345977783203125, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.0003504654159769416, -1.5497195136049413e-06, -0.00020599365234375, -0.000247955322265625, -0.0025539398193359375, -2.288818359375e-05, -0.00015723587421234697, 0.0, -4.9591064453125e-05, -0.003925323486328125, -0.0001201629638671875, -0.0007890316774137318, 0.0, -0.0004062652587890625, -0.0028228759765625, -0.0001888275146484375, -1.9073486328125e-05, -0.0001811981201171875, -3.62396240234375e-05, -0.001071929931640625, 0.0, -0.0001544952392578125, -9.918212890625e-05, -0.0001621246337890625, -3.814697265625e-06, -8.487387822242454e-05, -7.152555099310121e-07, -0.0006028413772583008, 0.0, -4.220008850097656e-05, 0.0, -0.000331878662109375, 0.0, -0.0002613067626953125, -9.34600830078125e-05, -0.0019779205322265625, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010784149169921875, -3.814697265625e-06, -0.000667572021484375, 0.0, -0.00033283233642578125, 0.0, -6.520747410831973e-05, -2.741813204920618e-06, -0.00033175951102748513, -1.9073486328125e-05, -4.00543212890625e-05, -0.0018129348754882812, -7.62939453125e-05, -0.0007038116455078125], "score": -6.081891916780442, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(targets)\n            minion.damage(player.effective_spell_damage(2), self)\n            game.other_player.hero.damage(player.effective_spell_damage(2),\n                self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -5.766284942626953, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.000125885009765625, -1.1444091796875e-05, -0.0015201568603515625, 0.0, -0.0002918243408203125, 0.0, -0.007116198539733887, -1.4066696166992188e-05, -9.5367431640625e-06, -0.000644683837890625, 0.0, -0.13917148113250732, -1.1920928244535389e-07, -0.0003871917724609375, -0.001190185546875, -2.09808349609375e-05, 0.0, -0.006657899357378483, -1.0728830375228426e-06, -0.01143491268157959, 0.0, -0.0002422332763671875, -0.000675201416015625, 0.0, -0.003022522199898958, -3.933906555175781e-06, -0.000885009765625, -7.43865966796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.043589767068624496, -2.9802317840221804e-06, -0.0003371238708496094, 0.0, 0.0, -0.004604339599609375, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00022959696070756763, -1.1920928244535389e-07, -0.0001678466796875, -7.62939453125e-05, -0.00045013427734375, -3.814697265625e-06, -8.094294753391296e-05, 0.0, -1.33514404296875e-05, -0.001476287841796875, -0.00011444091796875, -0.00044559003436006606, 0.0, -0.00030517578125, -0.0031604766845703125, -0.00014495849609375, -1.9073486328125e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.0009937286376953125, 0.0, -0.00016021728515625, -9.72747802734375e-05, -0.00016021728515625, -3.814697265625e-06, -7.998667570063844e-05, -8.344646857949556e-07, -0.0005837678909301758, 0.0, -4.220008850097656e-05, 0.0, -0.000331878662109375, 0.0, -0.0002593994140625, -9.34600830078125e-05, -0.0020084381103515625, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010715484619140625, -1.9073486328125e-06, -0.000652313232421875, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.00033175951102748513, -1.9073486328125e-05, -3.814697265625e-05, -0.0018262863159179688, -7.62939453125e-05, -0.000705718994140625], "score": -6.142950254926696, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.000621795654296875, 0.0, -0.003812256036326289, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0437929704785347, -3.099440846199286e-06, -0.0003294944763183594, 0.0, 0.0, -5.894643783569336, -0.04398345947265625, -1.9073486328125e-06, -0.00011026859283447266, 0.0, -1.33514404296875e-05, -0.0060272216796875, -0.000370025634765625, -0.0007947622798383236, 0.0, -0.0006008148193359375, -0.001216888427734375, -0.0001659393310546875, -2.86102294921875e-05, -0.0002460479736328125, -2.47955322265625e-05, -0.0010013580322265625, -1.9073486328125e-06, -0.0002288818359375, -7.82012939453125e-05, -0.00020599365234375, -1.9073486328125e-06, -8.105947927106172e-05, -9.536738616588991e-07, -0.0005551576614379883, 0.0, -4.029273986816406e-05, 0.0, -0.0003986358642578125, 0.0, -0.000255584716796875, -9.72747802734375e-05, -0.002338409423828125, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00012540817260742188, 0.0, -1.71661376953125e-05, -0.0001163482666015625, -1.1444091796875e-05, -0.010539054870605469, -1.9073486328125e-06, -0.0006122589111328125, 0.0, -0.00032711029052734375, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003279448428656906, -1.9073486328125e-05, -3.814697265625e-05, -0.0018758773803710938, -8.0108642578125e-05, -0.0007171630859375], "score": -6.283648785964878, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(1, self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -5.603074073791504, -4.768258077092469e-05, -0.010981820523738861, 0.0, -3.814697265625e-06, -0.00855255126953125, -2.288818359375e-05, -7.43865966796875e-05, -2.6702880859375e-05, -5.7220458984375e-05, -0.0005557515542022884, -1.0728830375228426e-06, -0.0002689361572265625, -9.5367431640625e-05, -0.002559661865234375, -9.5367431640625e-06, -0.0001671300851739943, 0.0, -0.012510299682617188, -0.0005130767822265625, -0.1965198516845703, -3.814697265625e-06, -0.1947154998779297, -5.7220458984375e-06, -0.0043487548828125, 0.0, -0.00013768672943115234, 0.0, -0.0007457733154296875, -3.576277322281385e-06, -0.05503103882074356, 0.0, -0.09665834903717041, 0.0, 0.0, -0.0016269683837890625, -3.814697265625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -3.4332275390625e-05, -0.0003733533376362175, -1.6689286894688848e-06, -0.0002079010009765625, -0.0002498626708984375, -0.002361297607421875, -2.288818359375e-05, -0.00015878560952842236, 0.0, -5.53131103515625e-05, -0.00426483154296875, -0.0001220703125, -0.0008065540459938347, 0.0, -0.000408172607421875, -0.0028285980224609375, -0.00018310546875, -1.9073486328125e-05, -0.0001773834228515625, -3.62396240234375e-05, -0.00107574462890625, 0.0, -0.0001583099365234375, -9.918212890625e-05, -0.000164031982421875, -3.814697265625e-06, -8.487387822242454e-05, -7.152555099310121e-07, -0.0006047487258911133, 0.0, -4.220008850097656e-05, 0.0, -0.0003299713134765625, 0.0, -0.0002613067626953125, -9.34600830078125e-05, -0.001972198486328125, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.0001316070556640625, -1.33514404296875e-05, -0.010789871215820312, -3.814697265625e-06, -0.000667572021484375, 0.0, -0.00033283233642578125, 0.0, -6.520747410831973e-05, -2.741813204920618e-06, -0.00033187863300554454, -1.9073486328125e-05, -4.00543212890625e-05, -0.00180816650390625, -7.62939453125e-05, -0.000705718994140625], "score": -6.469763773314348, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minion.damage(player.effective_spell_damage(2), self)\n            game.other_player.hero.damage(player.effective_spell_damage(2),\n                self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.000621795654296875, 0.0, -0.003812256036326289, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0437929704785347, -3.099440846199286e-06, -0.0003294944763183594, 0.0, 0.0, -0.004238128662109375, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00023233878891915083, -1.1920928244535389e-07, -0.0001621246337890625, -7.43865966796875e-05, -0.0004558563232421875, -3.814697265625e-06, -7.98700493760407e-05, 0.0, -1.33514404296875e-05, -0.001476287841796875, -0.0001125335693359375, -0.00044272950617596507, 0.0, -0.0003032684326171875, -0.0031909942626953125, -0.00014495849609375, -1.9073486328125e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.0009918212890625, 0.0, -0.0001621246337890625, -9.5367431640625e-05, -0.000156402587890625, -3.814697265625e-06, -7.974827167345211e-05, -8.344646857949556e-07, -0.0005818605422973633, 0.0, -4.410743713378906e-05, 0.0, -0.0003337860107421875, 0.0, -0.0002593994140625, -9.5367431640625e-05, -0.0020160675048828125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -5.676103591918945, -0.001667022705078125, -0.0023670196533203125, 0.0, -0.03537142276763916, 0.0, -3.0517578125e-05, -0.0001239776611328125, -0.0009365081787109375, -0.01245880126953125, -8.7738037109375e-05, -0.002796173095703125, 0.0, -0.00015485286712646484, 0.0, -5.257128577795811e-05, -2.741813204920618e-06, -0.0003050566010642797, -1.9073486328125e-05, -0.5074491500854492, 0.0, -0.0002994537353515625, -0.011310577392578125, -0.0001087188720703125, -0.0016269683837890625], "score": -6.584868479732037, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(len(game.other_player.\n            minions).<UNK>) >= 2\n", "model_output": {"hole0": "Cleave", "hole2": [{"hole0": "Cleave", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "<UNK>", "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minions", "_type": "Name"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "remove", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 19}
{"beams": [{"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -0.020391464233398438, -0.000965118408203125, -8.7738037109375e-05, -1.1444091796875e-05, -0.007583022117614746, -1.52587890625e-05, -0.001026153564453125, -3.814697265625e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0009517669677734375, 0.0, -0.0030584335327148438, -1.9073486328125e-06, -0.000484466552734375, 0.0, -2.288818359375e-05, -2.6702880859375e-05, -0.0001010894775390625, -0.0011196136474609375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -9.429453348275274e-05, -1.9073486328125e-05, -0.0008175372495315969, -3.0517578125e-05, -0.0001659393310546875, -0.000423431396484375, -1.33514404296875e-05, -0.0006580352783203125, 0.0, -0.00019800655718427151, 0.0, -0.0005973577499389648, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007228851318359375, -0.0002698894531931728, -4.768370445162873e-07, -0.000583648681640625, -4.57763671875e-05, -0.0004787445068359375, -6.67572021484375e-05, -0.00019896027515642345, -1.9073486328125e-06, -0.00125885009765625, -0.0002193450927734375, -0.000118255615234375, -3.24249267578125e-05, -0.0022907257080078125, -8.58306884765625e-05, -0.0067958831787109375, 0.0, -0.0050811767578125, 0.0, -0.0006411075592041016, -5.841255187988281e-06, -0.0010145902633666992, 0.0, -0.005749821662902832, 0.0, -5.7220458984375e-06, -0.000396728515625, -6.67572021484375e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.0008373255259357393, -3.576278118089249e-07, -0.00017547607421875, -3.24249267578125e-05, -0.000705718994140625, -4.1961669921875e-05, -0.00016784656327217817, -5.7220458984375e-06], "score": -0.18938158756384382, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -0.10235023498535156, -2.6702880859375e-05, -0.0001316070556640625, -0.005756378173828125, -4.00543212890625e-05, -0.015970125794410706, -1.263618378288811e-05, -0.00011444091796875, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.00035119056701660156, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -4.1961669921875e-05, -6.67572021484375e-05, -0.00061798095703125, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -6.401538121281192e-05, -1.537799835205078e-05, -0.0013464689254760742, -9.5367431640625e-06, -0.000499725341796875, -3.62396240234375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.013560175895690918, 0.0, -1.0295202732086182, -1.9073486328125e-06, -1.33514404296875e-05, -0.0004634857177734375, -6.4849853515625e-05, -0.01851940155029297, 0.0, -9.5367431640625e-06, 0.0, -0.001422882080078125, 0.0, -0.04182314872741699, -2.5033950805664062e-05, -0.025090694427490234, -1.9073486328125e-06, -0.03652191162109375, -3.62396240234375e-05, -0.0028820037841796875, -1.9073486328125e-06, -0.018108248710632324, 0.0, -0.10975050926208496, 0.0, -3.814697265625e-06, -0.0071392059326171875, -0.0001220703125, -0.0037984848022460938, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.0033540725708007812, 0.0, -0.011617302894592285, -1.5497207641601562e-05, -0.012657999992370605, 0.0, -0.033843994140625, -3.0517578125e-05, -0.0048999786376953125, -1.9073486328125e-06, -0.030233144760131836, -1.1920928244535389e-07, -0.13241660594940186, 0.0, -3.814697265625e-06, -0.013673782348632812, -9.5367431640625e-05, -0.0030107498168945312, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0036611557006835938, 0.0, -0.01057589054107666, -1.5497207641601562e-05, -0.012692689895629883, 0.0, -0.03412628173828125, -3.0517578125e-05, -0.005031585693359375, -1.9073486328125e-06, -0.04185020923614502, -1.1920928244535389e-07, -0.14526546001434326, 0.0, -3.814697265625e-06, -0.015958786010742188, -8.58306884765625e-05, -0.0027761459350585938, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.003696441650390625, 0.0, -0.010432839393615723, -1.3589859008789062e-05, -0.01213085651397705, 0.0], "score": -4.8595734876910655, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -0.10235023498535156, -2.6702880859375e-05, -0.0001316070556640625, -0.005756378173828125, -4.00543212890625e-05, -0.015970125794410706, -1.263618378288811e-05, -0.00011444091796875, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.00035119056701660156, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -4.1961669921875e-05, -6.67572021484375e-05, -0.00061798095703125, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -6.401538121281192e-05, -1.537799835205078e-05, -0.0013464689254760742, -9.5367431640625e-06, -0.000499725341796875, -3.62396240234375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.013560175895690918, 0.0, -0.6043016910552979, -6.67572021484375e-05, -4.57763671875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0041904449462890625, 0.0, -9.5367431640625e-06, 0.0, -0.0020236968994140625, -1.9073486328125e-06, -0.6648139953613281, -5.030632019042969e-05, -0.006472944747656584, -5.7220458984375e-06, -0.01268768310546875, -2.09808349609375e-05, -0.0003719329833984375, -1.9073486328125e-06, -0.007199764251708984, 0.0, -0.02943277359008789, 0.0, -7.62939453125e-06, -0.0017337799072265625, -7.05718994140625e-05, -0.0034160614013671875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.002117156982421875, 0.0, -0.015513777732849121, -1.9431114196777344e-05, -0.010378599166870117, -1.9073486328125e-06, -0.030908584594726562, -3.62396240234375e-05, -0.003696441650390625, -1.9073486328125e-06, -0.05507349967956543, -1.1920928244535389e-07, -0.14440512657165527, 0.0, -3.814697265625e-06, -0.010150909423828125, -9.34600830078125e-05, -0.0025949478149414062, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0033903121948242188, 0.0, -0.011081337928771973, -1.3709068298339844e-05, -0.011193275451660156, -1.9073486328125e-06, -0.03412055969238281, -3.24249267578125e-05, -0.0049152374267578125, -1.9073486328125e-06, -0.04812741279602051, -1.1920928244535389e-07, -0.1549776792526245, 0.0, -3.814697265625e-06, -0.016160964965820312, -8.392333984375e-05, -0.0027065277099609375, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.00363922119140625, 0.0, -0.010448098182678223, -1.3589859008789062e-05, -0.0116959810256958, -1.9073486328125e-06], "score": -4.944587472859254, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -0.10235023498535156, -2.6702880859375e-05, -0.0001316070556640625, -0.005756378173828125, -4.00543212890625e-05, -0.015970125794410706, -1.263618378288811e-05, -0.00011444091796875, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.00035119056701660156, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -4.1961669921875e-05, -6.67572021484375e-05, -0.00061798095703125, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -6.401538121281192e-05, -1.537799835205078e-05, -0.0013464689254760742, -9.5367431640625e-06, -0.000499725341796875, -3.62396240234375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.013560175895690918, 0.0, -0.6043016910552979, -6.67572021484375e-05, -4.57763671875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0041904449462890625, 0.0, -9.5367431640625e-06, 0.0, -0.0020236968994140625, -1.9073486328125e-06, -0.7283782958984375, -4.303455352783203e-05, -0.17570312321186066, -2.6702880859375e-05, -0.00426483154296875, -2.09808349609375e-05, -0.0002899169921875, -1.9073486328125e-06, -0.004226088523864746, 0.0, -0.037058234214782715, 0.0, -7.62939453125e-06, -0.0016994476318359375, -7.2479248046875e-05, -0.0034170150756835938, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.001728057861328125, 0.0, -0.013659834861755371, -1.9431114196777344e-05, -0.009127616882324219, -1.9073486328125e-06, -0.029644012451171875, -3.4332275390625e-05, -0.0033435821533203125, -1.9073486328125e-06, -0.04086923599243164, -1.1920928244535389e-07, -0.12826228141784668, 0.0, -3.814697265625e-06, -0.008846282958984375, -9.5367431640625e-05, -0.0027828216552734375, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0033884048461914062, 0.0, -0.011401772499084473, -1.5616416931152344e-05, -0.011349081993103027, -1.9073486328125e-06, -0.03421974182128906, -3.0517578125e-05, -0.0049724578857421875, -1.9073486328125e-06, -0.044005513191223145, -1.1920928244535389e-07, -0.14839255809783936, 0.0, -3.814697265625e-06, -0.015550613403320312, -8.58306884765625e-05, -0.0026874542236328125, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0036525726318359375, 0.0, -0.010463356971740723, -1.3589859008789062e-05, -0.011872410774230957, 0.0], "score": -5.1264370275060145, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -4.00900936126709, -7.62939453125e-06, -9.918212890625e-05, -0.0011081695556640625, -2.47955322265625e-05, -0.017314650118350983, -1.1444089977885596e-05, -0.0001068115234375, -3.814697265625e-06, -0.000530242919921875, -1.9073486328125e-06, -0.0003261566162109375, 0.0, -0.00030553340911865234, -1.9073486328125e-06, -0.000209808349609375, 0.0, -2.09808349609375e-05, -4.9591064453125e-05, -5.7220458984375e-05, -0.00055694580078125, -1.9073486328125e-06, -0.00023651123046875, 0.0, -0.0001220703125, -3.814697265625e-06, -5.805492037325166e-05, -1.3470649719238281e-05, -0.0015163421630859375, -9.5367431640625e-06, -0.12855243682861328, -7.2479248046875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.7249490022659302, 0.0, -0.0045146942138671875, -1.9073486328125e-06, -0.00031578540802001953, 0.0, -0.22223377227783203, -0.0040302276611328125, -4.00543212890625e-05, -0.0009212493896484375, 0.0, -0.0013056856114417315, -3.933906555175781e-06, -0.003796815872192383, 0.0, -1.9073486328125e-06, -5.14984130859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001277923583984375, -0.000860807893332094, -1.311301275563892e-06, -0.00020599365234375, -4.1961669921875e-05, -0.000530242919921875, -6.103515625e-05, -0.0001462691288907081, -3.814697265625e-06], "score": -5.246412108192374, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -5.288259029388428, -2.47955322265625e-05, -0.00018310546875, -0.0020275115966796875, -7.62939453125e-06, -1.71661376953125e-05, -0.013653159141540527, -7.748603820800781e-06, -0.000362396240234375, -3.814697265625e-06, -0.000316619873046875, -1.9073486328125e-06, -0.001361846923828125, 0.0, -0.005152702331542969, 0.0, -0.000545501708984375, 0.0, -1.9073486328125e-05, -2.09808349609375e-05, -0.0001049041748046875, -0.00157928466796875, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -9.799002873478457e-05, -1.9073486328125e-05, -0.0007312297821044922, -3.24249267578125e-05, -0.000194549560546875, -0.0003509521484375, -1.52587890625e-05, -0.0006504058837890625, 0.0, -0.00020265570492483675, -1.9073486328125e-06, -0.0006507635116577148, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007476806640625, -0.0002762075746431947, -4.768370445162873e-07, -0.0005817413330078125, -4.38690185546875e-05, -0.000457763671875, -6.103515625e-05, -0.00019955630705226213, -1.9073486328125e-06], "score": -5.3281320221914825, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -0.020391464233398438, -0.000965118408203125, -8.7738037109375e-05, -1.1444091796875e-05, -0.007583022117614746, -1.52587890625e-05, -0.001026153564453125, -3.814697265625e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0009517669677734375, 0.0, -0.0030584335327148438, -1.9073486328125e-06, -0.000484466552734375, 0.0, -2.288818359375e-05, -2.6702880859375e-05, -0.0001010894775390625, -0.0011196136474609375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -9.429453348275274e-05, -1.9073486328125e-05, -0.0008175372495315969, -3.0517578125e-05, -0.0001659393310546875, -0.000423431396484375, -1.33514404296875e-05, -0.0006580352783203125, 0.0, -0.00019800655718427151, 0.0, -0.0005973577499389648, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007228851318359375, -0.0002698894531931728, -4.768370445162873e-07, -0.000583648681640625, -4.57763671875e-05, -0.0004787445068359375, -6.67572021484375e-05, -0.00019896027515642345, -1.9073486328125e-06, -0.00125885009765625, -0.0002193450927734375, -0.000118255615234375, -3.24249267578125e-05, -0.0022907257080078125, -8.58306884765625e-05, -5.07993221282959, -0.030462350696325302, 0.0, -0.16224908828735352, -1.1920928244535389e-07, -0.053420305252075195, -7.62939453125e-06, -0.0008087158203125, -0.0025482177734375, -4.1961669921875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.000438690185546875, -0.32569873332977295, -3.576278118089249e-07, -0.000156402587890625, -2.288818359375e-05, -0.001461029052734375, -1.33514404296875e-05, -0.00036323018139228225, -3.814697265625e-06], "score": -5.825215652014883, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 42, "hero", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.hero.hero.heal(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "hero", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -0.020391464233398438, -0.000965118408203125, -8.7738037109375e-05, -1.1444091796875e-05, -0.007583022117614746, -1.52587890625e-05, -0.001026153564453125, -3.814697265625e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0009517669677734375, 0.0, -0.0030584335327148438, -1.9073486328125e-06, -0.000484466552734375, 0.0, -2.288818359375e-05, -2.6702880859375e-05, -0.0001010894775390625, -0.0011196136474609375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -9.429453348275274e-05, -1.9073486328125e-05, -0.0008175372495315969, -3.0517578125e-05, -0.0001659393310546875, -0.000423431396484375, -1.33514404296875e-05, -0.0006580352783203125, 0.0, -0.00019800655718427151, 0.0, -0.0005973577499389648, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007228851318359375, -0.0002698894531931728, -4.768370445162873e-07, -0.000583648681640625, -4.57763671875e-05, -0.0004787445068359375, -6.67572021484375e-05, -0.00019896027515642345, -1.9073486328125e-06, -0.00125885009765625, -0.0002193450927734375, -0.000118255615234375, -3.24249267578125e-05, -0.0022907257080078125, -8.58306884765625e-05, -0.0067958831787109375, 0.0, -0.0050811767578125, 0.0, -0.0006411075592041016, -5.841255187988281e-06, -0.0010145902633666992, 0.0, -5.591300964355469, 0.0, -0.0001163482666015625, -5.53131103515625e-05, -0.0001659393310546875, -3.814697265625e-06, -2.86102294921875e-05, -0.00014495849609375, -0.07153593748807907, -7.152555099310121e-07, -9.918212890625e-05, -3.0517578125e-05, -0.000812530517578125, -2.288818359375e-05, -0.00027859187684953213, -5.7220458984375e-06], "score": -5.8457119275817035, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.heal(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -2.80771541595459, -0.022647857666015625, -0.000286102294921875, -2.86102294921875e-05, -0.03401947021484375, -1.728534698486328e-05, -0.0009012222290039062, -1.71661376953125e-05, -0.0010480880737304688, 0.0, -0.0006961822509765625, 0.0, -0.0044231414794921875, 0.0, -0.000518798828125, 0.0, -2.09808349609375e-05, -2.288818359375e-05, -0.0001068115234375, -0.001316070556640625, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.0001068115234375, -1.9073486328125e-06, -9.858606790658087e-05, -1.9073486328125e-05, -0.0007419586181640625, -3.4332275390625e-05, -0.0003261566162109375, -0.000461578369140625, -1.33514404296875e-05, -0.000598907470703125, 0.0, -0.00020086758013349026, -1.9073486328125e-06, -0.0006030797958374023, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0009937286376953125, -0.00027739969664253294, -4.768370445162873e-07, -0.0006351470947265625, -4.57763671875e-05, -0.00049591064453125, -6.866455078125e-05, -0.00020027157734148204, -1.9073486328125e-06, -0.009035110473632812, -0.0003070831298828125, -0.00054931640625, -1.52587890625e-05, -0.020880699157714844, -1.71661376953125e-05, -0.0020999908447265625, 0.0, -0.0034695863723754883, 0.0, -0.0005420446395874023, -7.748603820800781e-06, -0.0011649131774902344, 0.0, -0.012879490852355957, 0.0, -3.814697265625e-06, -0.000484466552734375, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -0.0007435076986439526, -2.3841855067985307e-07, -0.0002288818359375, -3.0517578125e-05, -0.0006618499755859375, -5.14984130859375e-05, -0.0001667737087700516, -3.814697265625e-06, -0.0072307586669921875, -0.0002040863037109375, -0.0004634857177734375, -1.1444091796875e-05, -0.010877609252929688, -2.288818359375e-05, -0.0050201416015625, 0.0, -0.0049953460693359375, 0.0, -0.0005364418029785156, -9.655952453613281e-06, -0.0010138750076293945, 0.0, -0.012091636657714844, 0.0, -3.814697265625e-06, -0.0014095306396484375, -6.29425048828125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -0.0006740090902894735, -1.1920928244535389e-07, -0.000274658203125, -3.0517578125e-05, -0.000736236572265625, -4.57763671875e-05, -0.00016307822079397738, -3.814697265625e-06, -0.007564544677734375, -0.0002002716064453125, -0.0002079010009765625, -9.5367431640625e-06, -0.0043087005615234375, -2.86102294921875e-05, -0.025938034057617188, 0.0, -0.0077571868896484375, 0.0, -0.0005477666854858398, -1.1563301086425781e-05, -0.0009708404541015625, 0.0, -0.010012626647949219, 0.0, -3.814697265625e-06, -0.0030040740966796875, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -0.0006390807684510946, -1.1920928244535389e-07, -0.0002994537353515625, -2.86102294921875e-05, -0.000751495361328125, -4.38690185546875e-05, -0.00016331663937307894, -5.7220458984375e-06, -0.007913589477539062, -0.0001964569091796875, -0.000164031982421875, -9.5367431640625e-06, -0.0040607452392578125, -3.0517578125e-05, -0.04747962951660156, 0.0, -0.009023666381835938, 0.0, -0.0005744695663452148, -1.3470649719238281e-05, -0.0008810758590698242, 0.0, -0.008345603942871094, 0.0, -3.814697265625e-06, -0.0035552978515625, -6.67572021484375e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, -0.0006202457007020712, -1.1920928244535389e-07, -0.0003070831298828125, -3.0517578125e-05, -0.000743865966796875, -4.38690185546875e-05, -0.00016343584866262972, -5.7220458984375e-06], "score": -6.0031789413307095, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -0.020391464233398438, -0.000965118408203125, -8.7738037109375e-05, -1.1444091796875e-05, -5.454519748687744, -2.2888036255608313e-05, -0.0007925033569335938, -5.7220458984375e-06, -0.0030364990234375, -1.9073486328125e-05, -0.014481425285339355, -2.0265579223632812e-06, -2.288818359375e-05, -0.000331878662109375, -0.010105133056640625, -0.01795913279056549, -4.136528150411323e-05, -0.2813882827758789, -0.011922836303710938, -0.0010986328125, -6.29425048828125e-05, -0.01870250701904297, -5.7220458984375e-05, -0.07934761047363281, -1.9073486328125e-06, -0.03537487983703613, -1.5497207641601562e-05, -0.00014579294656869024, -3.814697265625e-06, -0.0004177093505859375, 0.0, -1.9073486328125e-06, -0.0006961822509765625, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.000537991407327354, -2.3841855067985307e-07, -0.00022125244140625, -3.814697265625e-05, -0.000370025634765625, -8.20159912109375e-05, -0.00016283986042253673, -1.9073486328125e-06, -0.003391265869140625, -0.0001811981201171875, -4.9591064453125e-05, -2.6702880859375e-05, -0.001506805419921875, -0.0001125335693359375, -0.12301445007324219, 0.0, -0.008636474609375, 0.0, -0.0007307529449462891, -7.62939453125e-06, -0.0008981227874755859, 0.0, -0.004563450813293457, 0.0, -5.7220458984375e-06, -0.002040863037109375, -7.82012939453125e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.05718994140625e-05, -0.0006766316364519298, -1.1920928244535389e-07, -0.0002288818359375, -3.0517578125e-05, -0.000797271728515625, -3.814697265625e-05, -0.00016975389735307544, -5.7220458984375e-06], "score": -6.222677472414283, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -0.10235023498535156, -2.6702880859375e-05, -0.0001316070556640625, -0.005756378173828125, -4.00543212890625e-05, -0.015970125794410706, -1.263618378288811e-05, -0.00011444091796875, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.00035119056701660156, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -4.1961669921875e-05, -6.67572021484375e-05, -0.00061798095703125, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -6.401538121281192e-05, -1.537799835205078e-05, -0.0013464689254760742, -9.5367431640625e-06, -0.000499725341796875, -3.62396240234375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.013560175895690918, 0.0, -3.033148765563965, 0.0, -0.000743865966796875, -0.0003070831298828125, -6.29425048828125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.00018310546875, -0.0003458222490735352, -5.960462772236497e-07, -0.000148773193359375, -3.4332275390625e-05, -0.001194000244140625, -4.9591064453125e-05, -0.00035881917574442923, -1.1920928244535389e-07, -0.008527755737304688, -0.0003032684326171875, -0.00138092041015625, -3.24249267578125e-05, -0.024066925048828125, -2.86102294921875e-05, -0.0035762786865234375, 0.0, -0.0004904270172119141, 0.0, -0.0003046989440917969, -1.251697449333733e-05, -0.0024938583374023438, 0.0, -0.02345895767211914, 0.0, -5.7220458984375e-06, -0.0004329681396484375, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-05, -0.000570771808270365, -4.768370445162873e-07, -0.0001697540283203125, -4.1961669921875e-05, -0.002490997314453125, -7.05718994140625e-05, -0.00036024992004968226, -1.9073486328125e-06, -0.0077838897705078125, -0.00019073486328125, -0.00060272216796875, -2.288818359375e-05, -0.006575584411621094, -4.1961669921875e-05, -0.028167724609375, 0.0, -0.0007631778717041016, 0.0, -0.00028586387634277344, -1.239776611328125e-05, -0.0027996301651000977, 0.0, -0.01664590835571289, 0.0, -3.814697265625e-06, -0.00113677978515625, -5.53131103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -9.918212890625e-05, -0.0004935244796797633, -2.2649765014648438e-06, -0.0002040863037109375, -4.38690185546875e-05, -0.002841949462890625, -6.67572021484375e-05, -0.0003486866771709174, -1.9073486328125e-06, -0.008480072021484375, -0.0001888275146484375, -0.0003032684326171875, -1.52587890625e-05, -0.004771232604980469, -4.76837158203125e-05, -0.09836769104003906, 0.0, -0.0009405612945556641, 0.0, -0.00030481815338134766, -1.2278556823730469e-05, -0.0027053356170654297, 0.0, -0.013583540916442871, 0.0, -3.814697265625e-06, -0.0019626617431640625, -6.103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -9.72747802734375e-05, -0.00048792152665555477, -2.2649765014648438e-06, -0.0002269744873046875, -4.1961669921875e-05, -0.0029010772705078125, -6.29425048828125e-05, -0.00028634039335884154, -1.9073486328125e-06], "score": -6.330558291842856, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -5.156970977783203, -1.1444055417086929e-05, -4.41074053014745e-06, -7.862900383770466e-05, -4.0531158447265625e-06, -0.0008623600006103516, 0.0, -0.0001659393310546875, -4.38690185546875e-05, -3.349781036376953e-05, 0.0, -4.887569048150908e-06, -1.6927691831369884e-05, -0.001777768018655479, 0.0, -0.00025784969329833984, -1.9073486328125e-06, -0.0051937103271484375, -1.9073486328125e-06, -5.1975250244140625e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -8.797644113656133e-05, -1.01327859738376e-05, -0.02677154541015625, -0.000110626220703125, -0.5834732055664062, -0.0053310394287109375, -9.72747802734375e-05, -1.9073486328125e-06, -0.01796281337738037, -1.9073486328125e-05, -0.0015735626220703125, -3.814697265625e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.2302103042602539, 0.0, -0.00846099853515625, -1.9073486328125e-06, -0.00049591064453125, 0.0, -3.24249267578125e-05, -2.288818359375e-05, -9.5367431640625e-05, -0.0013103485107421875, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06, -9.906290506478399e-05, -1.919269561767578e-05, -0.0008275508298538625, -2.86102294921875e-05, -0.0002288818359375, -0.000492095947265625, -1.33514404296875e-05, -0.000652313232421875, 0.0, -0.00019514553423505276, 0.0, -0.0006221532821655273, 0.0, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00067138671875, -0.00027680370840243995, -4.768370445162873e-07, -0.000537872314453125, -4.38690185546875e-05, -0.00043487548828125, -6.866455078125e-05, -0.00020527836750261486, -1.9073486328125e-06, -0.00567626953125, -0.0002346038818359375, -0.00016021728515625, -2.6702880859375e-05, -0.0021419525146484375, -8.0108642578125e-05, -0.0068454742431640625, 0.0, -0.0052967071533203125, 0.0, -0.0007690191268920898, -5.841255187988281e-06, -0.0009641647338867188, 0.0, -0.007541775703430176, 0.0, -5.7220458984375e-06, -0.000423431396484375, -5.91278076171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -6.67572021484375e-05, -0.0008797642076388001, -2.3841855067985307e-07, -0.0001926422119140625, -3.24249267578125e-05, -0.00072479248046875, -4.1961669921875e-05, -0.000169157880009152, -5.7220458984375e-06, -4.76837158203125e-05, -0.014711380004882812, -0.01827716827392578, -0.024110078811645508, 0.0, -0.000396728515625, -0.0010433197021484375, -0.0001087188720703125, -0.0013580322265625, -0.0068416595458984375, -0.000118255615234375, -0.00814056396484375, 0.0, -0.08515357971191406, -0.0013446807861328125, -0.0021543502807617188, -4.00543212890625e-05, -0.006651625037193298, -2.3841855067985307e-07, -0.00288999080657959, 0.0, -0.00028824806213378906, 0.0, -0.07103347778320312, 0.0, -0.01624298095703125, -9.5367431640625e-06, -0.009195327758789062, -2.288818359375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.00014328956604003906, -9.5367431640625e-06, -1.1444091796875e-05, -0.0012874603271484375, -3.814697265625e-06, -0.002437591552734375, -3.814697265625e-05, -0.0052814483642578125, 0.0, -0.0002002716064453125, -1.9073486328125e-06, -0.00010907649993896484, -5.7220458984375e-06, -0.0020645856857299805, -3.814697265625e-05, -1.1444091796875e-05, -0.004906654357910156, -0.0001697540283203125, -0.001934051513671875], "score": -6.368528062540747, "choice_history": [77, 148, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -4.00900936126709, -7.62939453125e-06, -9.918212890625e-05, -0.0011081695556640625, -2.47955322265625e-05, -0.017314650118350983, -1.1444089977885596e-05, -0.0001068115234375, -3.814697265625e-06, -0.000530242919921875, -1.9073486328125e-06, -0.0003261566162109375, 0.0, -0.00030553340911865234, -1.9073486328125e-06, -0.000209808349609375, 0.0, -2.09808349609375e-05, -4.9591064453125e-05, -5.7220458984375e-05, -0.00055694580078125, -1.9073486328125e-06, -0.00023651123046875, 0.0, -0.0001220703125, -3.814697265625e-06, -5.805492037325166e-05, -1.3470649719238281e-05, -0.0015163421630859375, -9.5367431640625e-06, -0.12855243682861328, -7.2479248046875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.8927556276321411, -2.4437606043647975e-05, -0.006566047668457031, -0.000457763671875, -7.62939453125e-06, -5.7220458984375e-06, -0.003147721290588379, 0.0, -0.0005626678466796875, -0.0012493133544921875, -9.1552734375e-05, -0.033896639943122864, -1.657003303989768e-05, -0.07464599609375, -0.11921977996826172, -0.000713348388671875, -0.0009517669677734375, -3.0517578125e-05, -0.0003871917724609375, 0.0, -0.8441835641860962, -3.814697265625e-06, -0.03803825378417969, -9.5367431640625e-06, -0.0001392364501953125, 0.0, -0.007537841796875, 0.0, -0.0928192138671875, 0.0, -0.3152652978897095, -1.9073486328125e-05, -1.33514404296875e-05, -0.05852508544921875, -1.9073486328125e-06, -0.025329317897558212, -1.1920928244535389e-07, -2.47955322265625e-05, -0.0011577606201171875, -0.0003681182861328125, -3.814697265625e-06, -0.006082551088184118, -1.7881377516459906e-06, -0.0035375356674194336, 0.0, -1.9073486328125e-06, -0.042428016662597656, -3.4332275390625e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0004558563232421875, -0.002070426009595394, -1.9073468138230965e-06, -0.000438690185546875, -7.43865966796875e-05, -0.0036983489990234375, -4.38690185546875e-05, -0.00030374404741451144, -5.7220458984375e-06, -0.0002307891845703125, -0.0003662109375, -0.0001583099365234375, -1.52587890625e-05, -0.0010471343994140625, -6.866455078125e-05, -0.0036773681640625, 0.0, -0.0004140138626098633, 0.0, -0.00038945674896240234, -7.867813110351562e-06, -0.0026949644088745117, 0.0, -0.01337277889251709, 0.0, -3.814697265625e-06, -0.0002727508544921875, -5.14984130859375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -0.0009076583082787693, -8.344646857949556e-07, -0.00023651123046875, -3.4332275390625e-05, -0.001068115234375, -5.91278076171875e-05, -0.00018024434393737465, -3.814697265625e-06], "score": -6.885007044223293, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(2), self)\n            game.other_player.hero.damage(player.effective_spell_damage(2),\n                self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"targets": [{"id": "target", "_type": "Name"}], "value": {"args": [{"id": "targets", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -0.10235023498535156, -2.6702880859375e-05, -0.0001316070556640625, -0.005756378173828125, -4.00543212890625e-05, -0.015970125794410706, -1.263618378288811e-05, -0.00011444091796875, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.00035119056701660156, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -4.1961669921875e-05, -6.67572021484375e-05, -0.00061798095703125, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -6.401538121281192e-05, -1.537799835205078e-05, -0.0013464689254760742, -9.5367431640625e-06, -0.000499725341796875, -3.62396240234375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.013560175895690918, 0.0, -0.6043016910552979, -6.67572021484375e-05, -4.57763671875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0041904449462890625, 0.0, -9.5367431640625e-06, 0.0, -0.0020236968994140625, -1.9073486328125e-06, -0.6648139953613281, -5.030632019042969e-05, -0.006472944747656584, -5.7220458984375e-06, -0.01268768310546875, -2.09808349609375e-05, -0.0003719329833984375, -1.9073486328125e-06, -0.007199764251708984, 0.0, -0.02943277359008789, 0.0, -7.62939453125e-06, -0.0017337799072265625, -7.05718994140625e-05, -0.0034160614013671875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.002117156982421875, 0.0, -0.015513777732849121, -1.9431114196777344e-05, -0.010378599166870117, -1.9073486328125e-06, -0.030908584594726562, -3.62396240234375e-05, -0.003696441650390625, -1.9073486328125e-06, -0.05507349967956543, -1.1920928244535389e-07, -0.14440512657165527, 0.0, -3.814697265625e-06, -0.010150909423828125, -9.34600830078125e-05, -0.0025949478149414062, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0033903121948242188, 0.0, -0.011081337928771973, -1.3709068298339844e-05, -0.011193275451660156, -1.9073486328125e-06, -0.03412055969238281, -3.24249267578125e-05, -0.0049152374267578125, -1.9073486328125e-06, -0.04812741279602051, -1.1920928244535389e-07, -2.640310287475586, 0.0, -9.5367431640625e-06, -0.0001621246337890625, -4.1961669921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0002765655517578125, -0.0003598877810873091, -7.152555099310121e-07, -0.000125885009765625, -3.814697265625e-05, -0.0010223388671875, -8.392333984375e-05, -0.0003542896010912955, -1.1920928244535389e-07], "score": -7.387611029818835, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -2.866954803466797, -0.0011386871337890625, -0.10235023498535156, -2.6702880859375e-05, -0.0001316070556640625, -0.005756378173828125, -4.00543212890625e-05, -0.015970125794410706, -1.263618378288811e-05, -0.00011444091796875, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -0.0004863739013671875, 0.0, -0.00035119056701660156, 0.0, -0.0001983642578125, 0.0, -2.288818359375e-05, -4.1961669921875e-05, -6.67572021484375e-05, -0.00061798095703125, -1.9073486328125e-06, -0.0003147125244140625, 0.0, -0.000125885009765625, -1.9073486328125e-06, -6.401538121281192e-05, -1.537799835205078e-05, -0.0013464689254760742, -9.5367431640625e-06, -0.000499725341796875, -3.62396240234375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.013560175895690918, 0.0, -1.0295202732086182, -1.9073486328125e-06, -1.33514404296875e-05, -0.0004634857177734375, -6.4849853515625e-05, -0.01851940155029297, 0.0, -9.5367431640625e-06, 0.0, -0.001422882080078125, 0.0, -0.04182314872741699, -2.5033950805664062e-05, -0.025090694427490234, -1.9073486328125e-06, -0.03652191162109375, -3.62396240234375e-05, -0.0028820037841796875, -1.9073486328125e-06, -0.018108248710632324, 0.0, -0.10975050926208496, 0.0, -3.814697265625e-06, -0.0071392059326171875, -0.0001220703125, -0.0037984848022460938, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.0033540725708007812, 0.0, -0.011617302894592285, -1.5497207641601562e-05, -0.012657999992370605, 0.0, -0.033843994140625, -3.0517578125e-05, -0.0048999786376953125, -1.9073486328125e-06, -0.030233144760131836, -1.1920928244535389e-07, -0.13241660594940186, 0.0, -3.814697265625e-06, -0.013673782348632812, -9.5367431640625e-05, -0.0030107498168945312, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.0036611557006835938, 0.0, -0.01057589054107666, -1.5497207641601562e-05, -0.012692689895629883, 0.0, -0.03412628173828125, -3.0517578125e-05, -0.005031585693359375, -1.9073486328125e-06, -0.04185020923614502, -1.1920928244535389e-07, -2.7297563552856445, 0.0, -9.5367431640625e-06, -0.00016021728515625, -4.1961669921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000270843505859375, -0.0003579802578315139, -7.152555099310121e-07, -0.0001277923583984375, -3.814697265625e-05, -0.0010280609130859375, -8.392333984375e-05, -0.00035345513606444, -1.1920928244535389e-07], "score": -7.401408313282481, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Consecration", "hole2": [{"hole0": "Consecration", "hole2": "PALADIN", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 20}
{"beams": [{"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -0.0017701382748782635, -1.7166108591482043e-05, -0.0001354217529296875, -5.14984130859375e-05, -0.0001506805419921875, -2.47955322265625e-05, -5.7220458984375e-06, -0.00032019606442190707, -2.7060508728027344e-05, -1.7881393432617188e-05, 0.0, -1.788138979463838e-05, 0.0, -0.0001201629638671875, -0.0002841949462890625, -5.7220458984375e-05, -4.768370445162873e-07, -0.00017724950157571584, -3.52856659446843e-05, -1.9073486328125e-06], "score": -0.01781519303028034, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -4.430773735046387, -1.1444091796875e-05, 0.0, -4.768370445162873e-07, -0.00020014324400108308, -9.655952453613281e-06, -4.8755831812741235e-05, -0.00019073486328125, -2.6702880859375e-05, -0.0012874538078904152, -1.3828258488501888e-05, -0.0001220703125, -4.57763671875e-05, -0.000225067138671875, -0.0007724761962890625, -0.00015175309090409428, -2.9802317840221804e-06, -0.0004405975341796875, -1.9073486328125e-05, -1.9073486328125e-05, -0.00016486617096234113, -6.54458999633789e-05, -1.0132789611816406e-05, 0.0, -6.341931293718517e-05, 0.0, -0.000335693359375, -0.0002613067626953125, -4.76837158203125e-05, -9.536738616588991e-07, -0.00016199321544263512, -6.663657404715195e-05, -1.9073486328125e-06], "score": -4.437416880400519, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -6.422038555145264, -1.6570085790590383e-05, -0.0005550384521484375, -5.53131103515625e-05, -0.000232696533203125, -1.9073486328125e-05, -5.7220458984375e-06, -0.00033414358040317893, -2.5153160095214844e-05, -1.9788742065429688e-05, 0.0, -1.931190308823716e-05, 0.0, -0.0001392364501953125, -0.0003223419189453125, -5.14984130859375e-05, -3.576278118089249e-07, -0.00016890624829102308, -2.765639146673493e-05, -1.9073486328125e-06], "score": -6.438633523925027, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "9", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -6.692532539367676, -0.00031280517578125, -4.136476127314381e-05, -0.0009558721794746816, -3.8146317820064723e-05, -2.288818359375e-05, -0.38896870613098145, -0.00011444091796875, -0.004165034741163254, -1.9073486328125e-06, -1.9073486328125e-06, -0.16042327880859375, -0.0001392364501953125, -1.1920922133867862e-06, -2.86099220829783e-05, -1.1682479453156702e-05, -3.814697265625e-06], "score": -7.24791994872362, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        return Minion(9, 5)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"hole0": 9, "hole1": 5, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -6.692532539367676, -0.00031280517578125, -4.136476127314381e-05, -0.0009558721794746816, -3.8146317820064723e-05, -2.288818359375e-05, -1.1452323198318481, -0.000774383544921875, 0.0, -0.14708249270915985, -3.826618194580078e-05, 0.0, -5.7220458984375e-06, -0.10201263427734375, -5.14984130859375e-05, -5.7220458984375e-06, -0.00084686279296875, -0.0014095306396484375, -0.03675270080566406, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026307289954274893, -2.872943878173828e-05, -5.3763164032716304e-05, -0.0001220703125, -1.71661376953125e-05, -0.0016092058504000306, -1.4543509678333066e-05, -0.0001697540283203125, -5.7220458984375e-05, -0.000164031982421875, -2.47955322265625e-05, -7.62939453125e-06, -0.0002681016339920461, -3.2782554626464844e-05], "score": -8.13110716453047, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        return Minion(9, 5)\n\n    def MinionCard(self, MinionCard):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"hole0": 9, "hole1": 5, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -0.0017701382748782635, -1.7166108591482043e-05, -0.0001354217529296875, -5.14984130859375e-05, -0.0001506805419921875, -2.47955322265625e-05, -5.7220458984375e-06, -0.00032019606442190707, -2.7060508728027344e-05, -1.7881393432617188e-05, 0.0, -1.788138979463838e-05, 0.0, -0.0001201629638671875, -8.409213066101074, -3.62396240234375e-05, -9.536738616588991e-07, -1.1086402082582936e-05, -2.4199192921514623e-05, 0.0, -0.1260751485824585, 0.0, -2.6702880859375e-05, -4.38690185546875e-05, -9.942054748535156e-05, 0.0], "score": -8.55278954429513, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "9", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5, charge=True)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole2": "charge", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -0.0017701382748782635, -1.7166108591482043e-05, -0.0001354217529296875, -5.14984130859375e-05, -0.0001506805419921875, -2.47955322265625e-05, -5.7220458984375e-06, -8.577099800109863, -9.262558160116896e-05, -5.614695692202076e-05, 0.0, -7.390967948595062e-05, 0.0, -0.003261566162109375, -0.0001392364501953125, -5.7220458984375e-05, -7.152555099310121e-07, -0.00012671283911913633, -3.993475911556743e-05, -3.814697265625e-06], "score": -8.597707358901737, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "PIRATE", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -0.0017701382748782635, -1.7166108591482043e-05, -0.0001354217529296875, -5.14984130859375e-05, -0.0001506805419921875, -2.47955322265625e-05, -5.7220458984375e-06, -0.00032019606442190707, -2.7060508728027344e-05, -1.7881393432617188e-05, 0.0, -1.788138979463838e-05, 0.0, -0.0001201629638671875, -0.0002841949462890625, -5.7220458984375e-05, -4.768370445162873e-07, -8.67866325378418, -0.08533746004104614, -0.008852127008140087, -1.9073486328125e-06], "score": -8.790455498696126, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(99, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 99, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -6.692532539367676, -0.00031280517578125, -4.136476127314381e-05, -0.0009558721794746816, -3.8146317820064723e-05, -2.288818359375e-05, -0.38896870613098145, -0.00011444091796875, -0.004165034741163254, -1.9073486328125e-06, -1.9073486328125e-06, -1.9135608673095703, -8.58306884765625e-05, -3.814697265625e-06, -0.0699310302734375, -0.0002651214599609375, -0.08814430236816406, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026140394038520753, -2.682209014892578e-05, -5.388236604630947e-05, -0.0001220703125, -1.71661376953125e-05, -0.0015199178596958518, -1.4543509678333066e-05, -0.0002079010009765625, -5.340576171875e-05, -0.0001621246337890625, -2.6702880859375e-05, -5.7220458984375e-06, -0.00029003614326938987, -3.2901763916015625e-05], "score": -9.162099728075184, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        return Minion(9, 5)\n\n    def create_minion(self, player):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"hole0": 9, "hole1": 5, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -9.128823280334473, -0.01517812442034483, -0.0064659263007342815, -2.47955322265625e-05, -1.9073486328125e-06, -0.0008177412091754377, -3.826551983365789e-05, -9.72747802734375e-05, -6.866455078125e-05, -0.0001163482666015625, -2.47955322265625e-05, -7.62939453125e-06, -0.00024068351194728166, -2.5033950805664062e-05, -1.7642974853515625e-05, 0.0, -2.0027157006552443e-05, 0.0, -0.0001125335693359375, -0.0002079010009765625, -4.57763671875e-05, -8.344646857949556e-07, -0.00011824906687252223, -5.9007375966757536e-05, -1.9073486328125e-06], "score": -9.166646134420823, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", "Hound", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('CoreHoundHound', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "CoreHoundHound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -9.270536422729492, -1.1563301086425781e-05, -0.00054931640625, -6.4849853515625e-05, -0.0001850128173828125, -2.6702880859375e-05, -7.62939453125e-06, -0.0003062486066482961, -3.2782554626464844e-05, -1.5735626220703125e-05, 0.0, -1.96695291379001e-05, 0.0, -0.00012969970703125, -0.0002956390380859375, -6.29425048828125e-05, -4.768370445162873e-07, -0.0001778451114660129, -3.981550253229216e-05, -1.9073486328125e-06], "score": -9.287064513031389, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "5", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 5, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -8.802043914794922, -8.0108642578125e-05, -0.5435695648193359, -7.62939453125e-06, -7.62939453125e-06, -4.291525328881107e-06, -0.00013434777793008834, -1.1682510375976562e-05, -1.6570011212024838e-05, -0.0002422332763671875, -4.76837158203125e-05, -0.0017336367163807154, -2.8729255063808523e-05, -0.0002899169921875, -6.103515625e-05, -9.34600830078125e-05, -0.0008449554443359375, -7.820120663382113e-05, -2.861022494471399e-06, -0.0002522468566894531, 0.0, -0.00016677379608154297, 0.0, -0.0003871917724609375, -0.0005245208740234375, -2.47955322265625e-05, -2.9802276912960224e-06, -4.7206016461132094e-05, -4.792139588971622e-05, -3.814697265625e-06], "score": -9.352314325954012, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -9.376594543457031, -0.0002498626708984375, -3.814697265625e-05, -9.5367431640625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005730372504331172, -7.748603820800781e-06, -6.318092346191406e-06, 0.0, -5.602834789897315e-06, 0.0, -0.00011444091796875, -0.00048828125, -0.0001773834228515625, -3.576278118089249e-07, -0.0001760572922648862, -2.5510689738439396e-05, -1.9073486328125e-06], "score": -9.393049914970042, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 72, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 4, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -6.692532539367676, -0.00031280517578125, -4.136476127314381e-05, -0.0009558721794746816, -3.8146317820064723e-05, -2.288818359375e-05, -1.1452323198318481, -0.000774383544921875, 0.0, -0.14708249270915985, -3.826618194580078e-05, 0.0, -5.7220458984375e-06, -2.337871551513672, -0.0001983642578125, -8.940656698541716e-06, -0.0001578234659973532, -1.8596509107737802e-05, -2.09808349609375e-05], "score": -10.32546957933846, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        return Minion(9, 5)\n\n    def MinionCard(self, MinionCard):\n        return Minion(9, 5)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"hole0": 9, "hole1": 5, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"hole0": 9, "hole1": 5, "_type": "Template16"}]}}, {"score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -0.0017701382748782635, -1.7166108591482043e-05, -0.0001354217529296875, -5.14984130859375e-05, -0.0001506805419921875, -2.47955322265625e-05, -5.7220458984375e-06, -0.00032019606442190707, -2.7060508728027344e-05, -1.7881393432617188e-05, 0.0, -1.788138979463838e-05, 0.0, -9.0635986328125, -0.07126712799072266, -0.0004730224609375, -9.34600830078125e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.21185076236724854, -1.0728830375228426e-06, -0.43401336669921875, -0.0020818710327148438, -0.7974953651428223, -0.6347349882125854, -0.00013744831085205078, -0.004230499267578125, -0.011904716491699219, -0.008452415466308594, -1.0958240032196045, -0.020127296447753906, -0.0018782615661621094, -0.0041351318359375, -0.31720447540283203, -0.015750885009765625, -0.8029104471206665, -0.02305031009018421, -6.520748138427734e-05, -0.001148223876953125, -0.10162067413330078, -0.4868583679199219, -0.0001583099365234375, -0.0011149769416078925, -4.6967445086920634e-05, -0.03929257392883301, 0.0, -0.8519786596298218, 0.0, -0.0012693405151367188, -0.0001621246337890625, -5.9723854064941406e-05, -2.491474151611328e-05], "score": -15.022202003975842, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 218, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 33, 167, "Emerald", "Drake", "<EOS>", 205, 62, 169, "Is", "Minion", "<EOS>", 205, 62, 169, "Is", "Minion", "<EOS>", 205, 71, 93, 151, "9", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        <UNK> = [EmeraldDrake(), IsMinion(), IsMinion()]\n        return Minion(9, 5, charge=True)\n", "model_output": {"hole0": "CoreHound", "hole2": [{"value": {"args": [{"s": "Core Hound", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"hole0": "EmeraldDrake", "hole2": [{"hole0": "IsMinion", "hole2": [{"hole0": "IsMinion", "hole2": [{"_type": "Template36_expr_seq"}], "_type": "Template24_expr_seq"}], "_type": "Template24_expr_seq"}], "_type": "Template24"}, "_type": "Assign"}, {"hole0": 9, "hole2": "charge", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}], "index": 21}
{"beams": [{"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -0.1225196123123169, 0.0, -1.71661376953125e-05, -0.0012569427490234375, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -0.006119966506958008, -2.288818359375e-05, -7.62939453125e-06, -0.0006580352783203125, -0.00049591064453125, -3.62396240234375e-05, -3.814697265625e-06, -0.0027647018432617188, -0.0024172067642211914, 0.0, -0.00182342529296875, -7.62939453125e-06, 0.0, -0.0021477937698364258, 0.0, -0.0002346038818359375, 0.0, -0.006605267524719238, -3.814697265625e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0002040863037109375, -3.814697265625e-06, 0.0, -0.0007171630859375, -2.09808349609375e-05, 0.0, -0.0008449554443359375, -0.014806747436523438, -9.5367431640625e-06, -0.0036216771695762873, -4.9114227294921875e-05, -0.0007762908935546875, -3.814697265625e-06, -8.976459503173828e-05, -0.000492095947265625, -1.9073486328125e-06], "score": -0.3321600939061682, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -3.4120864868164062, 0.0, -8.58306884765625e-05, -0.011569976806640625, -7.62939453125e-06, -0.000110626220703125, -2.47955322265625e-05], "score": -3.5871616591148268, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -3.3567662239074707, 0.0, -8.0108642578125e-05, -0.0013637542724609375, -0.18922710418701172, -0.00017368793487548828, -1.9073486328125e-06, -7.43865966796875e-05, -1.1444091796875e-05, -0.2221403568983078, -1.9073486328125e-06], "score": -3.9331171948842893, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -4.128046035766602, -2.288818359375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0003072023391723633, 0.0, -7.581710815429688e-05, 0.0, -0.0016813278198242188, -1.1444091796875e-05], "score": -4.274685500972737, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "bounce", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -4.239983558654785, 0.0, -3.814697265625e-06, -0.3373298645019531], "score": -4.740593551509846, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -4.341350078582764, 0.0, -1.9073486328125e-06, -0.5481643676757812, -6.866455078125e-05, -0.006023406982421875, 0.0, -0.05707263946533203, -2.09808349609375e-05, -3.814697265625e-06, -0.0004978179931640625, -0.0009365081787109375, -4.38690185546875e-05, -3.814697265625e-06, -0.0050383806228637695, -0.0023075342178344727, 0.0, -0.009939193725585938, -9.5367431640625e-06, 0.0, -0.0027256011962890625, 0.0, -0.000339508056640625, 0.0, -0.006855606567114592, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0002765655517578125, -3.814697265625e-06, 0.0, -0.0006771087646484375, -2.110004425048828e-05, 0.0, -0.0008602142333984375, -0.013332366943359375, -9.5367431640625e-06, -0.0036356274504214525, -5.1021575927734375e-05, -0.0007762908935546875, -3.814697265625e-06, -8.594989776611328e-05, -0.0004978179931640625, -1.9073486328125e-06], "score": -5.164966087407265, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -0.1225196123123169, 0.0, -1.71661376953125e-05, -0.0012569427490234375, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -0.006119966506958008, -2.288818359375e-05, -7.62939453125e-06, -0.0006580352783203125, -0.00049591064453125, -3.62396240234375e-05, -3.814697265625e-06, -0.0027647018432617188, -0.0024172067642211914, 0.0, -0.00182342529296875, -7.62939453125e-06, 0.0, -0.0021477937698364258, 0.0, -0.0002346038818359375, 0.0, -0.006605267524719238, -3.814697265625e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0002040863037109375, -3.814697265625e-06, 0.0, -0.0007171630859375, -2.09808349609375e-05, 0.0, -0.0008449554443359375, -4.24068546295166, -0.3820943832397461, -4.76837158203125e-05, 0.0, -0.22660458087921143, -3.814697265625e-06, -2.288818359375e-05, -0.07424640655517578, -0.0002346038818359375, -0.018077850341796875, -0.0017547607421875, -0.0002880096435546875, -0.0002810955047607422, -2.872943878173828e-05, -1.33514404296875e-05, 0.0, -0.0008527040481567383, -0.10803508758544922, -3.814697265625e-06, -1.9073486328125e-06, -0.07469558715820312, -0.01226043701171875, -0.002582550048828125, -0.004070639610290527, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.005801200866699219, -0.0016433000564575195, 0.0, -1.9073486328125e-06, -0.06487083435058594, -0.0041065216064453125, -0.000568389892578125, -1.9073486328125e-06, -0.011657357215881348, -0.0001239776611328125, -9.5367431640625e-06], "score": -5.548007129543294, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 207, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 69, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 69, 71, 63, 171, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]),\n            SelfSelector())))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template34"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template34"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -3.3567662239074707, 0.0, -8.0108642578125e-05, -0.0013637542724609375, -0.18922710418701172, -0.00017368793487548828, -1.9073486328125e-06, -7.43865966796875e-05, -1.1444091796875e-05, -1.9581894874572754, -7.390768587356433e-05], "score": -5.669238325780498, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -0.1225196123123169, 0.0, -1.71661376953125e-05, -0.0012569427490234375, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -0.006119966506958008, -2.288818359375e-05, -7.62939453125e-06, -0.0006580352783203125, -0.00049591064453125, -3.62396240234375e-05, -3.814697265625e-06, -0.0027647018432617188, -0.0024172067642211914, 0.0, -0.00182342529296875, -7.62939453125e-06, 0.0, -0.0021477937698364258, 0.0, -0.0002346038818359375, 0.0, -5.3962860107421875, -9.429454803466797e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.02715015411376953, -5.7220458984375e-06, 0.0, -0.000644683837890625, -2.491474151611328e-05, 0.0, -0.000476837158203125, -0.008584976196289062, -9.5367431640625e-06, -0.003792902221903205, -5.3048133850097656e-05, -0.000736236572265625, -3.814697265625e-06, -8.594989776611328e-05, -0.0004940032958984375, -1.9073486328125e-06], "score": -5.742333073719237, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Current", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=CurrentPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "CurrentPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -4.239983558654785, 0.0, -3.814697265625e-06, -1.4706573486328125], "score": -5.873921035640706, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -3.760678291320801, -0.000247955322265625, -0.00101470947265625, -0.0001239776611328125, -0.0003948211669921875, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -2.682209014892578e-05, 0.0, -4.792213439941406e-05, 0.0, -0.26583385467529297, 0.0, -2.47955322265625e-05, -0.0012836456298828125, -2.47955322265625e-05, -2.6702880859375e-05, 0.0, -0.001239776611328125, -1.52587890625e-05, -3.814697265625e-06, -0.0004425048828125, -0.00051116943359375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0039025545120239258, -0.002502918243408203, 0.0, -0.0013408660888671875, -7.62939453125e-06, 0.0, -0.0030089616775512695, 0.0, -0.0002727508544921875, 0.0, -0.0078002214431762695, -3.4332275390625e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.000347137451171875, -3.814697265625e-06, 0.0, -0.00079345703125, -2.110004425048828e-05, 0.0, -0.0007762908935546875, -0.011463165283203125, -9.5367431640625e-06, -0.003702139016240835, -5.2928924560546875e-05, -0.000762939453125, -3.814697265625e-06, -8.785724639892578e-05, -0.000492095947265625, -1.9073486328125e-06, -0.0003910064697265625, -0.0021820068359375, -0.0013256072998046875, -2.09808349609375e-05, -4.76837158203125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -0.29033565521240234, 0.0, -2.47955322265625e-05, -0.9232597351074219, -5.7220458984375e-06, -0.000823974609375, -0.000774383544921875, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, 0.0, -0.7026948928833008, 0.0, -5.7220458984375e-06, -0.10974407196044922], "score": -6.213397238720972, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -5.083202362060547, 0.0, -5.7220458984375e-05, -0.000141143798828125, -4.9591064453125e-05, -6.29425048828125e-05, -5.7220458984375e-06, -0.0002346038818359375, -0.0009042021702043712, -3.814697265625e-06, -3.814697265625e-05, -1.1475963592529297, -1.9073486328125e-05, -0.0002880096435546875, -0.00012683868408203125, 0.0], "score": -6.396006344378293, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -3.3567662239074707, 0.0, -8.0108642578125e-05, -0.0013637542724609375, -1.8062219619750977, -0.0008790493011474609, -5.53131103515625e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.047271728515625, -0.2198331356048584, -3.814697265625e-06, -3.814697265625e-06, -0.8025941848754883, -1.1444091796875e-05, -0.012782636098563671, -5.7220458984375e-06], "score": -6.411170186326672, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 55, 138, "5", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(ChangeAttack(5)))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole2": [{"n": 5, "_type": "Num"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -3.760678291320801, -0.000247955322265625, -0.00101470947265625, -0.0001239776611328125, -0.0003948211669921875, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -2.682209014892578e-05, 0.0, -4.792213439941406e-05, 0.0, -0.26583385467529297, 0.0, -2.47955322265625e-05, -0.0012836456298828125, -2.47955322265625e-05, -2.6702880859375e-05, 0.0, -0.001239776611328125, -1.52587890625e-05, -3.814697265625e-06, -0.0004425048828125, -0.00051116943359375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0039025545120239258, -0.002502918243408203, 0.0, -0.0013408660888671875, -7.62939453125e-06, 0.0, -0.0030089616775512695, 0.0, -0.0002727508544921875, 0.0, -0.0078002214431762695, -3.4332275390625e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.000347137451171875, -3.814697265625e-06, 0.0, -0.00079345703125, -2.110004425048828e-05, 0.0, -0.0007762908935546875, -0.011463165283203125, -9.5367431640625e-06, -0.003702139016240835, -5.2928924560546875e-05, -0.000762939453125, -3.814697265625e-06, -8.785724639892578e-05, -0.000492095947265625, -1.9073486328125e-06, -0.0003910064697265625, -0.0021820068359375, -0.0013256072998046875, -2.09808349609375e-05, -4.76837158203125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -0.29033565521240234, 0.0, -2.47955322265625e-05, -0.8543491363525391, -0.3703441619873047, -0.00012612342834472656, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0028276443481445312, -0.43613505363464355, 0.0, -3.814697265625e-06, -0.41903114318847656, -4.57763671875e-05, -0.017185313627123833, -3.814697265625e-06, -0.000110626220703125, -0.0013275146484375, -0.012096405029296875, 0.0, -0.000209808349609375, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.41630077362060547, 0.0, -7.82012939453125e-05, -0.00333404541015625, -9.5367431640625e-06, -7.43865966796875e-05, 0.0, -0.0031499862670898438, -5.7220458984375e-06, -1.9073486328125e-06, -0.0004901885986328125, -0.0004444122314453125, -2.47955322265625e-05, -3.814697265625e-06, -0.001916050910949707, -0.0029174089431762695, 0.0, -0.00234222412109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0006755590438842773, 0.0, -0.0002231597900390625, 0.0, -0.012778282165527344, -3.62396240234375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.34600830078125e-05, -3.814697265625e-06, 0.0, -0.00070953369140625, -1.9073486328125e-05, 0.0, -0.0010395050048828125, -0.018106460571289062, -9.5367431640625e-06, -0.003297855844721198, -4.7206878662109375e-05, -0.0007839202880859375, -3.814697265625e-06, -9.167194366455078e-05, -0.0004711151123046875, -1.9073486328125e-06], "score": -7.059423931027595, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 55, 138, "5", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(Buff(ChangeHealth(5)))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole2": [{"n": 5, "_type": "Num"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}], "hole1": "change_attack", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -3.760678291320801, -0.000247955322265625, -0.00101470947265625, -0.0001239776611328125, -0.0003948211669921875, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -2.682209014892578e-05, 0.0, -4.792213439941406e-05, 0.0, -0.26583385467529297, 0.0, -2.47955322265625e-05, -0.0012836456298828125, -2.47955322265625e-05, -2.6702880859375e-05, 0.0, -0.001239776611328125, -1.52587890625e-05, -3.814697265625e-06, -0.0004425048828125, -0.00051116943359375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0039025545120239258, -0.002502918243408203, 0.0, -0.0013408660888671875, -7.62939453125e-06, 0.0, -0.0030089616775512695, 0.0, -0.0002727508544921875, 0.0, -0.0078002214431762695, -3.4332275390625e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.000347137451171875, -3.814697265625e-06, 0.0, -0.00079345703125, -2.110004425048828e-05, 0.0, -0.0007762908935546875, -0.011463165283203125, -9.5367431640625e-06, -0.003702139016240835, -5.2928924560546875e-05, -0.000762939453125, -3.814697265625e-06, -8.785724639892578e-05, -0.000492095947265625, -1.9073486328125e-06, -0.0003910064697265625, -0.0021820068359375, -0.0013256072998046875, -2.09808349609375e-05, -4.76837158203125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -2.491474151611328e-05, 0.0, -1.8842344284057617, 0.0, -0.0001163482666015625, -0.01807403564453125, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.0010013580322265625, -3.814697265625e-06, -1.9073486328125e-06, -0.0004024505615234375, -0.00042724609375, -2.288818359375e-05, 0.0, -0.012055754661560059, -0.003725290298461914, 0.0, -0.0022182464599609375, -5.7220458984375e-06, -1.9073486328125e-06, -0.000643610954284668, 0.0, -0.00034427642822265625, 0.0, -0.00794827938079834, -2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.00012969970703125, -3.814697265625e-06, 0.0, -0.00102996826171875, -2.09808349609375e-05, 0.0, -0.001117706298828125, -0.009641647338867188, -1.1444091796875e-05, -0.0032980702817440033, -5.4836273193359375e-05, -0.0007801055908203125, -3.814697265625e-06, -9.930133819580078e-05, -0.000484466552734375, -1.9073486328125e-06, -0.0004024505615234375, -0.002471923828125, -0.002910614013671875, -4.76837158203125e-05, -4.38690185546875e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -0.29532527923583984, 0.0, -2.6702880859375e-05, -0.8107166290283203, -0.3627147674560547, -0.00012612342834472656, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00284576416015625, -0.45567774772644043, 0.0, -1.9073486328125e-06, -0.44090747833251953, -4.57763671875e-05, -0.016879523172974586, -3.814697265625e-06], "score": -8.524880851005037, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 55, 138, "5", "<EOS>"], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n        self.target.change_attack(Buff(ChangeHealth(5)))\n", "model_output": {"hole0": "Corruption", "hole2": [{"value": {"args": [{"s": "Corruption", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"func": {"id": "TurnStarted", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Kill", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "hole1": "add_effect", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole2": [{"n": 5, "_type": "Num"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 22}
{"beams": [{"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -0.00244903564453125, 0.0, -0.0049800872802734375], "score": -0.011554002069374292, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -0.00244903564453125, 0.0, -5.356653213500977, -0.0001468658447265625, -0.000263214111328125, -2.9802317840221804e-06], "score": -5.363640188477916, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=True)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -7.130585670471191, -1.9073486328125e-06, -0.2995166778564453], "score": -7.434229134820839, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "stealth", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -7.465921878814697, 0.0, -0.00025069713592529297, 0.0, -3.24249267578125e-05, 0.0, -4.6491462853737175e-05, 0.0, -7.62939453125e-06, -0.000583648681640625, -1.1444091796875e-05, -2.181529998779297e-05, -1.4901076610840391e-05, -0.00010001657938119024, 0.0, -0.002392888069152832, 0.0, -0.005062103271484375], "score": -7.476048945616299, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "WARRIOR", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -7.388665199279785, -0.09596061706542969, -0.009252429008483887, -5.8412379075889476e-06, -4.6730034227948636e-05, -1.1920928244535389e-07, -0.0018244980601593852, 0.0, -0.031296730041503906, -0.5307826995849609, 0.0, -0.000662660226225853, 0.0, -7.62939453125e-06, -0.0013561248779296875, -1.33514404296875e-05, -5.7339664635946974e-05, -1.6570011212024838e-05, -7.390973041765392e-05, 0.0, -0.0026946067810058594, 0.0, -0.0072612762451171875], "score": -8.070333694601679, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38, "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 4, spell_damage=1)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -6.919264793395996, -0.0003414154052734375, -2.0373030565679073e-05, -0.0002227958757430315, -8.0108642578125e-05, -1.1920928244535389e-07, -7.915486639831215e-05, -5.960462772236497e-07, -0.025774002075195312, -2.09808349609375e-05, -1.1444091796875e-05, -0.22075247764587402, 0.0, -0.01190185546875, -0.0001010894775390625, -1.1444091796875e-05, -1.067397117614746, 0.0, -0.01444244384765625, -0.000652313232421875, -0.00033867073943838477, -4.827859811484814e-05], "score": -8.264254904865474, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 213, 76, 195, "spell_damage", "<EOS>", 38, 76, 195, "stealth", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1, stealth=True)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 4, "hole1": 1, "hole3": [{"arg": "spell_damage", "value": {"_type": "Template34"}, "_type": "keyword"}, {"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -7.897585868835449, -6.4849853515625e-05, -0.3906574249267578, -3.814697265625e-05, -0.0001590251922607422, -2.2649765014648438e-06], "score": -8.29263245990171, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "windfury", "hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -7.130585670471191, -1.9073486328125e-06, -1.3531694412231445, -2.6702880859375e-05, -0.00022280216217041016, -3.933904736186378e-06], "score": -8.488135337135304, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "stealth", "hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -8.493401527404785, -2.0265579223632812e-06, -0.0010395050048828125, 0.0, -0.000118255615234375, 0.0, -7.62939453125e-06, 0.0, -0.0001015659945551306, 0.0, -9.5367431640625e-06, -0.000179290771484375, -9.5367431640625e-06, -2.181529998779297e-05, -1.3232166566012893e-05, -9.417530964128673e-05, 0.0, -0.0022683143615722656, 0.0, -0.00577545166015625], "score": -8.504358529445767, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -8.517373085021973, 0.0, -0.0002111196517944336, 0.0, -2.6702880859375e-05, 0.0, -7.96316671767272e-05, 0.0, -7.62939453125e-06, -0.0003223419189453125, -1.1444091796875e-05, -2.193450927734375e-05, -1.3708998267247807e-05, -0.00010049340926343575, 0.0, -0.002381443977355957, 0.0, -0.00514984130859375], "score": -8.527302383641313, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -6.919264793395996, -0.0003414154052734375, -2.0373030565679073e-05, -0.0002227958757430315, -8.0108642578125e-05, -1.1920928244535389e-07, -7.915486639831215e-05, -5.960462772236497e-07, -0.025774002075195312, -2.09808349609375e-05, -1.1444091796875e-05, -0.22075247764587402, 0.0, -0.01190185546875, -0.0001010894775390625, -1.1444091796875e-05, -1.0524959564208984, 0.0, -0.2993459701538086], "score": -8.533218007407804, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "1", "<EOS>", "4", "<EOS>", 213, 76, 195, "spell_damage", "<EOS>", 38, 76, 195, "player", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1, player=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 4, "hole1": 1, "hole3": [{"arg": "spell_damage", "value": {"_type": "Template34"}, "_type": "keyword"}, {"arg": "player", "value": {"_type": "Template34"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -8.600214004516602, 0.0, -0.0001277923583984375, 0.0, -3.528574961819686e-05, 0.0, -3.814697265625e-06, -0.000362396240234375, -1.33514404296875e-05, -2.562999725341797e-05, -1.2993750715395436e-05, -0.00011670587991829962, 0.0, -0.0024608371313661337, 0.0, -0.0052471160888671875], "score": -8.611106752334877, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "FREE", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -7.897585868835449, -6.4849853515625e-05, -1.1303977966308594], "score": -9.032173394464394, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": "Dalaran Mage", "hole2": "ALL", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "windfury", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -7.388665199279785, -0.09596061706542969, -0.009252429008483887, -5.8412379075889476e-06, -4.6730034227948636e-05, -1.1920928244535389e-07, -0.0018244980601593852, 0.0, -0.031296730041503906, -2.0625085830688477, 0.0, -0.0032237470149993896, 0.0, -1.1444091796875e-05, -0.00194549560546875, -1.33514404296875e-05, -4.3988224206259474e-05, -1.4066622497921344e-05, -7.450576958945021e-05, 0.0, -0.002705216407775879, 0.0, -0.007122039794921875], "score": -9.605069964685747, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38, "spell_damage", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 4, spell_damage=1)\n\n    def spell_damage(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "spell_damage", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -7.388665199279785, -0.09596061706542969, -0.009252429008483887, -5.8412379075889476e-06, -4.6730034227948636e-05, -1.1920928244535389e-07, -0.0018244980601593852, 0.0, -0.031296730041503906, -2.269987106323242, 0.0, -0.000701037875842303, 0.0, -1.33514404296875e-05, -0.0036163330078125, -1.33514404296875e-05, -5.78165017941501e-05, -1.5497138520004228e-05, -7.760521111777052e-05, 0.0, -0.0026078224182128906, 0.0, -0.0066165924072265625], "score": -9.81111404040984, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38, "create_weapon", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 4, spell_damage=1)\n\n    def create_weapon(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "model_output": {"hole0": "DalaranMage", "hole2": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 4, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}], "index": 23}
{"beams": [{"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -0.0026416778564453125, -0.00016021728515625, -0.000156402587890625, 0.0, -0.0001850128173828125, 0.0, -0.000400543212890625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -0.02165687084197998, -2.1457672119140625e-06], "score": -0.12080250504455847, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -0.0026416778564453125, -0.00016021728515625, -0.000156402587890625, 0.0, -0.0001850128173828125, 0.0, -0.000400543212890625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -5.473840713500977, -5.7220458984375e-06], "score": -5.572989923982242, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "minion_type", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.minion_type)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "minion_type", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -0.0026416778564453125, -0.00016021728515625, -0.000156402587890625, 0.0, -0.0001850128173828125, 0.0, -0.000400543212890625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -5.511605262756348, -1.9073486328125e-06], "score": -5.610750658540347, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.divine_shield)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -0.0026416778564453125, -0.00016021728515625, -0.000156402587890625, 0.0, -0.0001850128173828125, 0.0, -0.000400543212890625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -5.881145000457764, 0.0], "score": -5.98028848889313, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -6.036357402801514, -3.814697265625e-06, -7.62939453125e-06, -0.015305519104003906, -0.12410354614257812, -0.0006897449493408203, -5.960462772236497e-07, -3.24249267578125e-05, -9.5367431640625e-06, -0.04694704711437225, -0.005165098700672388], "score": -6.313713934855308, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "<UNK>", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -0.0026416778564453125, -0.00016021728515625, -0.000156402587890625, 0.0, -0.0001850128173828125, 0.0, -0.000400543212890625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -6.2152581214904785, 0.0], "score": -6.314401609925845, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "find_minion_spell_target", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.find_minion_spell_target)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "find_minion_spell_target", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -5.939252853393555, 0.0, 0.0, -0.2567453384399414, -4.76837158203125e-05, -0.000568389892578125, 0.0, -0.000133514404296875, 0.0, -0.0001773834228515625, -9.5367431640625e-06, -5.1140723371645436e-05, -1.1920928244535389e-07, -0.0460437536239624, -3.576278118089249e-07], "score": -6.328121645431466, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.health)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -3.3718996047973633, -0.002025604248046875, -0.39266395568847656, -0.000362396240234375, -4.38690185546875e-05, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -4.8160552978515625e-05, -1.1444091796875e-05, -1.585482641530689e-05, 0.0, -0.05646800994873047, 0.0, 0.0, -0.06989574432373047, -9.5367431640625e-05, -0.000194549560546875, 0.0, -0.0001659393310546875, -1.9073486328125e-06, -0.000293731689453125, -5.7220458984375e-06, -4.3392155930632725e-05, 0.0, -0.026802659034729004, -2.0265579223632812e-06, -0.041947364807128906, -0.00289154052734375, -0.0052738189697265625, -0.0001392364501953125, -0.0022459030151367188, -2.09808349609375e-05, -0.18613970279693604, -3.814697265625e-06, -4.76837158203125e-05, -0.11217975616455078, -7.2479248046875e-05, -0.020328521728515625, -2.47955322265625e-05, -0.0004176436923444271, -0.0002657175064086914, -0.0024127960205078125, -0.0033416748046875, -0.0017862319946289062, -0.009611129760742188, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -0.007580757141113281, -1.1920928244535389e-07, -1.9550319848349318e-05, -1.9073486328125e-06, -0.4256782531738281, -1.9073486328125e-06, -0.0001468658447265625, -0.07057857513427734, -0.0008411407470703125, -0.0006566047668457031, -1.9073486328125e-06, -0.0018091201782226562, -0.0002689361572265625, -0.03296089172363281, -0.011852264404296875, 0.0, -2.6702880859375e-05, 0.0, -0.0024939775466918945, -1.9073486328125e-06, -1.4185905456542969e-05, 0.0, -0.057582974433898926, -3.814697265625e-06, -3.814697265625e-06, -0.003757476806640625, 0.0, -0.35648345947265625, -1.8358230590820312e-05, -0.0009555816650390625, -0.023146629333496094, -0.20702075958251953, -2.86102294921875e-05, -6.866455078125e-05, 0.0, -0.0046329498291015625, -2.6702880859375e-05, -1.7642971215536818e-05, -1.1444091796875e-05, -0.21352672576904297, 0.0, -7.62939453125e-06, -0.06418323516845703, 0.0, -0.36027252674102783, 0.0, -0.011768341064453125, -0.17503643035888672, -0.001857757568359375, -0.0013427734375, -9.5367431640625e-06, 0.0, -0.16569042205810547, -9.5367431640625e-06, -3.910064697265625e-05, 0.0, -0.0005321502685546875, 0.0], "score": -6.542673147837334, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 89, 122, 21, 114, 25, 133, "temp_attack", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 53, 133, "temp_attack", "<EOS>", 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.increase_health(temp_attack)\n        self.target.<UNK>()\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "temp_attack", "_type": "Name"}], "hole1": "increase_health", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -6.474822521209717, -0.014947252348065376, -4.9591064453125e-05, -1.52587890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001163482666015625, -1.71661376953125e-05, -0.00038254261016845703, -1.9073486328125e-06, -1.9073486328125e-05, -0.000804901123046875, -1.33514404296875e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -8.7738037109375e-05, -0.005503654479980469, -7.62939453125e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.0001316070556640625, 0.0, -0.001922607421875, -1.1920928244535389e-07, -0.0012736320495605469, -2.3841855067985307e-07, -0.00010001659393310547, 0.0, -7.700773130636662e-05, 0.0, -0.0001354217529296875, -0.0001506805419921875, -5.14984130859375e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.05353832244873047, -2.288818359375e-05, -0.002044677734375, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.010445833206176758, 0.0, 0.0, -0.0026483535766601562, -0.00016021728515625, -0.0001583099365234375, 0.0, -0.0001850128173828125, 0.0, -0.000396728515625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -0.021749377250671387, -2.1457672119140625e-06], "score": -6.6105238788704455, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('DivineSpirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "DivineSpirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -6.236821174621582, 0.0, -0.8627762794494629, 0.0], "score": -7.195136768860685, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 53, 133, "temp_attack", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(temp_attack)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "temp_attack", "_type": "Name"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -6.236821174621582, 0.0, -0.9129657745361328, -7.62939453125e-06], "score": -7.245333893341886, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -3.3718996047973633, -0.002025604248046875, -1.125009536743164, -0.0001983642578125, -0.000347137451171875, -0.01271820068359375, -6.67572021484375e-05, -0.14529526233673096, -3.814697265625e-06, -0.001697540283203125, -0.0011186599731445312, -1.33514404296875e-05, -0.0014934539794921875, -2.288818359375e-05, 0.0, -0.36305809020996094, -5.7220458984375e-06, -0.00017273426055908203, -8.106231689453125e-06, -2.360340477025602e-05, -4.0531158447265625e-06, -0.017140258103609085, -1.9073468138230965e-06, -0.015628814697265625, -9.5367431640625e-06, 0.0, -0.00041961669921875, 0.0, -0.02142632007598877, -2.717968527576886e-05, -0.0332183837890625, -0.0009365081787109375, -6.29425048828125e-05, -2.86102294921875e-05, -0.0004100799560546875, -1.9073486328125e-06, -1.919269561767578e-05, -3.814697265625e-06, -7.74860309320502e-05, -3.814697265625e-06, -0.020418763160705566, -4.768370445162873e-07, -0.01995086669921875, -0.0026798248291015625, -0.0021991729736328125, -0.000331878662109375, -0.000438690185546875, -1.9073486328125e-06, -0.29614949226379395, -3.814697265625e-06, -2.47955322265625e-05, -0.07338142395019531, -2.86102294921875e-05, -0.030938148498535156, -2.6702880859375e-05, -0.0005806496483273804, -0.0001666545867919922, -0.014621734619140625, -0.001087188720703125, -0.001712799072265625, -0.0025787353515625, -1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.004308938980102539, -2.0265579223632812e-06, -1.9192693798686378e-05, -1.9073486328125e-06, -0.20749855041503906, -1.9073486328125e-06, -4.76837158203125e-05, -0.06257152557373047, -0.000743865966796875, -0.0005578994750976562, -1.9073486328125e-06, -0.0018405914306640625, -0.000232696533203125, -0.02527332305908203, -0.00554656982421875, 0.0, -2.6702880859375e-05, 0.0, -0.0003101825714111328, 0.0, -2.4437898900941946e-05, 0.0, -0.027289628982543945, -3.814697265625e-06, -1.9073486328125e-06, -0.003688812255859375, 0.0, -0.11944746971130371, -1.966952368093189e-05, -0.0005817413330078125, -0.01612091064453125, -0.04250907897949219, -1.1444091796875e-05, -8.7738037109375e-05, 0.0, -0.00019931793212890625, -5.7220458984375e-06, -3.492827090667561e-05, -7.62939453125e-06, -0.8072234392166138, 0.0, -7.62939453125e-06, -0.08166885375976562, 0.0, -0.2956455945968628, 0.0], "score": -7.314948631262119, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "temp_attack", "<EOS>", 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 89, 122, 21, 114, 25, 133, "temp_attack", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 53, 133, "temp_attack", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.increase_health(temp_attack)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "temp_attack", "_type": "Name"}], "value": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "temp_attack", "_type": "Name"}], "hole1": "increase_health", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -3.3718996047973633, -0.002025604248046875, -1.125009536743164, -0.0001983642578125, -0.000347137451171875, -0.01271820068359375, -6.67572021484375e-05, -0.14529526233673096, -3.814697265625e-06, -0.001697540283203125, -0.0011186599731445312, -1.33514404296875e-05, -0.0014934539794921875, -2.288818359375e-05, 0.0, -0.36305809020996094, -5.7220458984375e-06, -0.00017273426055908203, -8.106231689453125e-06, -2.360340477025602e-05, -4.0531158447265625e-06, -0.017140258103609085, -1.9073468138230965e-06, -0.015628814697265625, -9.5367431640625e-06, 0.0, -0.00041961669921875, 0.0, -0.02142632007598877, -2.717968527576886e-05, -0.0332183837890625, -0.0009365081787109375, -6.29425048828125e-05, -2.86102294921875e-05, -0.0004100799560546875, -1.9073486328125e-06, -1.919269561767578e-05, -3.814697265625e-06, -7.74860309320502e-05, -3.814697265625e-06, -0.020418763160705566, -4.768370445162873e-07, -0.01995086669921875, -0.0026798248291015625, -0.0021991729736328125, -0.000331878662109375, -0.000438690185546875, -1.9073486328125e-06, -0.29614949226379395, -3.814697265625e-06, -2.47955322265625e-05, -0.07338142395019531, -2.86102294921875e-05, -0.030938148498535156, -2.6702880859375e-05, -0.0005806496483273804, -0.0001666545867919922, -0.014621734619140625, -0.001087188720703125, -0.001712799072265625, -0.0025787353515625, -1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.004308938980102539, -2.0265579223632812e-06, -1.9192693798686378e-05, -1.9073486328125e-06, -0.20749855041503906, -1.9073486328125e-06, -4.76837158203125e-05, -0.06257152557373047, -0.000743865966796875, -0.0005578994750976562, -1.9073486328125e-06, -0.0018405914306640625, -0.000232696533203125, -0.02527332305908203, -0.00554656982421875, 0.0, -2.6702880859375e-05, 0.0, -0.0003101825714111328, 0.0, -2.4437898900941946e-05, 0.0, -0.027289628982543945, -3.814697265625e-06, -1.9073486328125e-06, -0.003688812255859375, 0.0, -0.11944746971130371, -1.966952368093189e-05, -0.0005817413330078125, -0.01612091064453125, -0.04250907897949219, -1.1444091796875e-05, -8.7738037109375e-05, 0.0, -0.00019931793212890625, -5.7220458984375e-06, -3.492827090667561e-05, -7.62939453125e-06, -1.3254820108413696, 0.0, -9.5367431640625e-06, -0.010097503662109375, 0.0, -0.26225900650024414, 0.0], "score": -7.728251172041233, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "temp_attack", "<EOS>", 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 89, 122, 21, 114, 25, 133, "temp_attack", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 53, 133, "temp_attack", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "temp_attack", "_type": "Name"}], "value": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "temp_attack", "_type": "Name"}], "hole1": "set_health_to", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -3.3718996047973633, -0.002025604248046875, -0.39266395568847656, -0.000362396240234375, -4.38690185546875e-05, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -4.8160552978515625e-05, -1.1444091796875e-05, -1.585482641530689e-05, 0.0, -0.05646800994873047, 0.0, 0.0, -0.06989574432373047, -9.5367431640625e-05, -0.000194549560546875, 0.0, -0.0001659393310546875, -1.9073486328125e-06, -0.000293731689453125, -5.7220458984375e-06, -4.3392155930632725e-05, 0.0, -0.026802659034729004, -2.0265579223632812e-06, -0.041947364807128906, -0.00289154052734375, -0.0052738189697265625, -0.0001392364501953125, -0.0022459030151367188, -2.09808349609375e-05, -0.18613970279693604, -3.814697265625e-06, -4.76837158203125e-05, -0.11217975616455078, -7.2479248046875e-05, -0.020328521728515625, -2.47955322265625e-05, -0.0004176436923444271, -0.0002657175064086914, -0.0024127960205078125, -0.0033416748046875, -0.0017862319946289062, -0.009611129760742188, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -0.007580757141113281, -1.1920928244535389e-07, -1.9550319848349318e-05, -1.9073486328125e-06, -0.4256782531738281, -1.9073486328125e-06, -0.0001468658447265625, -0.07057857513427734, -0.0008411407470703125, -0.0006566047668457031, -1.9073486328125e-06, -0.0018091201782226562, -0.0002689361572265625, -0.03296089172363281, -0.011852264404296875, 0.0, -2.6702880859375e-05, 0.0, -0.0024939775466918945, -1.9073486328125e-06, -1.4185905456542969e-05, 0.0, -0.057582974433898926, -3.814697265625e-06, -3.814697265625e-06, -0.003757476806640625, 0.0, -0.35648345947265625, -1.8358230590820312e-05, -0.0009555816650390625, -0.023146629333496094, -1.6826772689819336, -3.814697265625e-06, -0.0009382963180541992, 0.0, -0.1932525634765625, 0.0, -3.0517578125e-05, -0.5330801010131836, -0.0001392364501953125, -0.1938610076904297, -0.06997203826904297, -1.1444091796875e-05, -0.00026702880859375, 0.0, -0.03851890563964844, -2.09808349609375e-05, -6.198883056640625e-06, 0.0, -0.0043792724609375, 0.0], "score": -8.053748882933135, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 89, 122, 21, 114, 25, 133, "temp_attack", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            target.increase_health(4)\n        self.target.<UNK>()\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -3.3718996047973633, -0.002025604248046875, -0.39266395568847656, -0.000362396240234375, -4.38690185546875e-05, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -4.8160552978515625e-05, -1.1444091796875e-05, -1.585482641530689e-05, 0.0, -0.05646800994873047, 0.0, 0.0, -0.06989574432373047, -9.5367431640625e-05, -0.000194549560546875, 0.0, -0.0001659393310546875, -1.9073486328125e-06, -0.000293731689453125, -5.7220458984375e-06, -4.3392155930632725e-05, 0.0, -0.026802659034729004, -2.0265579223632812e-06, -0.041947364807128906, -0.00289154052734375, -0.0052738189697265625, -0.0001392364501953125, -0.0022459030151367188, -2.09808349609375e-05, -0.18613970279693604, -3.814697265625e-06, -4.76837158203125e-05, -0.11217975616455078, -7.2479248046875e-05, -0.020328521728515625, -2.47955322265625e-05, -0.0004176436923444271, -0.0002657175064086914, -0.0024127960205078125, -0.0033416748046875, -0.0017862319946289062, -0.009611129760742188, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -0.007580757141113281, -1.1920928244535389e-07, -1.9550319848349318e-05, -1.9073486328125e-06, -0.4256782531738281, -1.9073486328125e-06, -0.0001468658447265625, -0.07057857513427734, -0.0008411407470703125, -0.0006566047668457031, -1.9073486328125e-06, -0.0018091201782226562, -0.0002689361572265625, -0.03296089172363281, -0.011852264404296875, 0.0, -2.6702880859375e-05, 0.0, -0.0024939775466918945, -1.9073486328125e-06, -1.4185905456542969e-05, 0.0, -0.057582974433898926, -3.814697265625e-06, -3.814697265625e-06, -0.003757476806640625, 0.0, -0.35648345947265625, -1.8358230590820312e-05, -0.0009555816650390625, -0.023146629333496094, -0.20702075958251953, -2.86102294921875e-05, -6.866455078125e-05, 0.0, -0.0046329498291015625, -2.6702880859375e-05, -1.7642971215536818e-05, -1.1444091796875e-05, -0.21352672576904297, 0.0, -7.62939453125e-06, -0.06418323516845703, 0.0, -0.36027252674102783, 0.0, -0.011768341064453125, -1.8318471908569336, -0.2701873779296875, -0.0002460479736328125, -1.1444091796875e-05, 0.0, -0.003955841064453125, -5.7220458984375e-06, -1.6093243175419047e-05, -7.62939453125e-06, -0.24747467041015625, 0.0, -9.5367431640625e-06, -0.7243404388427734, 0.0, -0.33548128604888916, 0.0], "score": -9.611738718657719, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 89, 122, 21, 114, 25, 133, "temp_attack", "<EOS>", 202, 8, 205, 55, 138, "0", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 53, 133, "temp_attack", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 53, 133, "temp_attack", "<EOS>"], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.increase_health(temp_attack)\n        self.target.increase_health(temp_attack)\n", "model_output": {"hole0": "DivineSpirit", "hole2": [{"value": {"args": [{"s": "Divine Spirit", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"attr": "health", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "increase_health", "_type": "Template23"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "temp_attack", "_type": "Name"}], "hole1": "increase_health", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "temp_attack", "_type": "Name"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 24}
{"beams": [{"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -0.00037222274113446474, -2.288818359375e-05, -3.62396240234375e-05, -0.006783946882933378, -0.005708710290491581, -0.00014804698002990335, -9.5367431640625e-06, -1.9073486328125e-06, -6.0677466535707936e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -4.9471847887616605e-05, 0.0, -0.0001354217529296875, -7.43865966796875e-05, -1.9073486328125e-05, -1.6689160474925302e-05, -1.168244216387393e-05, -9.5367431640625e-06, -3.814689989667386e-06], "score": -0.02499131187414605, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -0.00037222274113446474, -2.288818359375e-05, -3.62396240234375e-05, -0.006783946882933378, -5.28253698348999, -0.000125885009765625, 0.0, -0.0003048124781344086, -9.655952453613281e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.641314005013555e-05, 0.0, -0.0001583099365234375, -0.0001125335693359375, -1.9073486328125e-05, -1.8000440832111053e-05, -1.2993727978027891e-05, -1.3470649719238281e-05, -3.933898824470816e-06], "score": -5.302132514756977, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Mechanical()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "Mechanical", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -0.00037222274113446474, -2.288818359375e-05, -3.62396240234375e-05, -5.02316951751709, -0.49531179666519165, -7.271502545336261e-05, -7.62939453125e-06, -1.9073486328125e-06, -5.733962098020129e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -3.957747685490176e-05, 0.0, -0.0001316070556640625, -7.43865966796875e-05, -1.71661376953125e-05, -1.5616295058862306e-05, -1.1444026313256472e-05, -9.5367431640625e-06, -3.6954811548639555e-06], "score": -5.530882344827205, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Dragonling", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            DragonlingDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "DragonlingDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -5.695025444030762, -0.17217153310775757, -5.7220458984375e-06, -1.9073486328125e-05, -0.007981089875102043, -0.049161769449710846, -1.549708758830093e-05, -4.76837158203125e-05, 0.0, -5.6624387070769444e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -3.850459688692354e-05, 0.0, -0.0001277923583984375, -7.2479248046875e-05, -1.71661376953125e-05, -2.3841574147809297e-05, -8.22540732769994e-06, -1.33514404296875e-05, -2.9802276912960224e-06], "score": -5.93215232597322, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Mechanical", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Mechanical(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Mechanical", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -0.00037222274113446474, -2.288818359375e-05, -3.62396240234375e-05, -5.02316951751709, -0.9970093369483948, -0.0002593994140625, -1.9073486328125e-06, -0.00014590987120755017, -5.841255187988281e-06, 0.0, -1.1444091796875e-05, 0.0, -4.3272957555018365e-05, 0.0, -0.0001220703125, -7.82012939453125e-05, -1.33514404296875e-05, -1.1801649634435307e-05, -1.2993727978027891e-05, -9.5367431640625e-06, -3.814689989667386e-06], "score": -6.03284345726388, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Dragonling()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "Dragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -6.190996170043945, -0.028720855712890625, -0.0044405460357666016, -0.003658284666016698, -0.0020236968994140625, -0.00021336186910048127, -0.0665033683180809, -0.0025655031204223633, -0.18959441781044006, -0.00010693036892917007, -1.33514404296875e-05, -0.1336669921875, -0.0002040863037109375, -7.62939453125e-06, -0.003336116438731551, -0.0002498626708984375, -0.00016378014697693288], "score": -6.626777153153171, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 4)\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"hole0": 2, "hole1": 4, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -7.000143051147461, -4.768370445162873e-07, -0.0007991790771484375, -0.00020599365234375, -9.72747802734375e-05, -0.000579833984375, -0.0001087188720703125, -2.288818359375e-05, -0.0006964206113480031, -5.9604562920867465e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0011850595474243164, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001621246337890625, -6.29425048828125e-05, -0.00414605438709259, -0.00037877680733799934, -2.288818359375e-05, -3.62396240234375e-05, -0.0067832316271960735, -0.005649417173117399, -0.00014888131408952177, -9.5367431640625e-06, -1.9073486328125e-06, -6.079667582525872e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -4.9471847887616605e-05, 0.0, -0.0001373291015625, -7.62939453125e-05, -1.9073486328125e-05, -1.7404405298293568e-05, -1.156323378381785e-05, -9.5367431640625e-06, -3.814689989667386e-06], "score": -7.0245284405745, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Dragonling", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Dragonling', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Dragonling", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -5.695025444030762, -1.8697222471237183, -0.045628927648067474, -5.7220458984375e-06, -1.52587890625e-05, -0.007667445577681065, -0.03840505704283714, -2.4199192921514623e-05, -6.103515625e-05, -1.9073486328125e-06, -5.424021583166905e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -3.8385387597372755e-05, 0.0, -0.000141143798828125, -8.58306884765625e-05, -1.71661376953125e-05, -2.992108420585282e-05, -7.867782187531702e-06, -1.1563301086425781e-05, -2.9802276912960224e-06], "score": -7.664309890375989, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Mechanical", "Mechanical", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MechanicalMechanical(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "MechanicalMechanical", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.72165584564209, -1.5497195136049413e-06, -0.000568389892578125, -0.0001583099365234375, -0.000194549560546875, -0.003146529197692871, -0.0003190735587850213, -2.288818359375e-05, -2.47955322265625e-05, -0.006636971142143011, -0.008706895634531975, -7.593343616463244e-05, -7.62939453125e-06, -1.9073486328125e-06, -5.8770154282683507e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -3.898143404512666e-05, 0.0, -0.000141143798828125, -7.2479248046875e-05, -2.288818359375e-05, -2.074220174108632e-05, -1.0251946150674485e-05, -9.5367431640625e-06, -3.6954811548639555e-06], "score": -7.74782468746082, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "MINION_TYPE", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=MINION_TYPE(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -7.862712860107422, -0.002676009200513363, -0.00018310546875, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0006976127624511719, -2.0265579223632812e-06, -1.71661376953125e-05, -0.00016021728515625, -5.340576171875e-05, -0.0026310086250305176, -0.00022957161127123982, -1.71661376953125e-05, -3.4332275390625e-05, -0.006717662792652845, -0.005352047737687826, -0.00013720047718379647, -9.5367431640625e-06, -1.9073486328125e-06, -6.043905159458518e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -4.935263859806582e-05, 0.0, -0.000133514404296875, -6.67572021484375e-05, -1.9073486328125e-05, -1.5020257706055418e-05, -1.1324817933200393e-05, -9.5367431640625e-06, -3.814689989667386e-06], "score": -7.8872726183190025, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "combo", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, combo=Battlecry(Summon(MechanicalDragonling\n            ()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "combo", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.633411407470703, -0.23969900608062744, -7.2479248046875e-05, -0.000545501708984375, -0.0017566680908203125, -0.0046746134757995605, -0.00031085300724953413, -7.62939453125e-06, -4.9591064453125e-05, -0.006100522819906473, -0.007536869961768389, -0.00010609064338495955, -1.71661376953125e-05, -1.9073486328125e-06, -4.7326026106020436e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -5.2690502343466505e-05, 0.0, -0.000148773193359375, -7.62939453125e-05, -2.09808349609375e-05, -1.5139465176616795e-05, -1.1801649634435307e-05, -9.5367431640625e-06, -3.933898824470816e-06], "score": -7.900601712801745, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Is", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Is(Summon(MechanicalDragonling()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Is", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -7.166181564331055, -0.0002269744873046875, -1.1444091796875e-05, -0.7408835887908936, -2.9325463401619345e-05, -9.1552734375e-05, -3.814697265625e-06, -0.0003631114959716797, -2.3841855067985307e-07, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00023281574249267578, -3.814697265625e-06, -8.20159912109375e-05, -8.96453857421875e-05, -6.4849853515625e-05, -0.002469360828399658, -0.00019000191241502762, -4.00543212890625e-05, -4.76837158203125e-05, -0.007030082866549492, -0.004565279930830002, -8.642300235806033e-05, -9.5367431640625e-06, -1.9073486328125e-06, -6.997577293077484e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -5.316733586369082e-05, 0.0, -0.00014495849609375, -0.0002193450927734375, -2.288818359375e-05, -5.769562631030567e-05, -8.702254490344785e-06, -1.537799835205078e-05, -2.861018856492592e-06], "score": -7.927647849888189, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Summon(MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -0.00037222274113446474, -2.288818359375e-05, -3.62396240234375e-05, -0.006783946882933378, -8.023289680480957, -0.0022200760431587696, -1.52587890625e-05, -5.7220458984375e-06, -7.545944390585646e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -3.862380617647432e-05, 0.0, -0.0001163482666015625, -8.392333984375e-05, -1.9073486328125e-05, -1.0132738680113107e-05, -1.4305012882687151e-05, -1.1444091796875e-05, -3.6954811548639555e-06], "score": -8.044640377306223, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Mechanic", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Summon", "hole1": {"id": "MechanicalMechanic", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -7.936588287353516, -0.24042001366615295, -7.62939453125e-06, -1.33514404296875e-05, -0.004770876374095678, -0.01565023511648178, -6.401333666872233e-05, -2.47955322265625e-05, -1.9073486328125e-06, -4.363058542367071e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, 0.0, -5.2571293053915724e-05, 0.0, -0.0001506805419921875, -7.82012939453125e-05, -1.71661376953125e-05, -2.109982233378105e-05, -1.0609570381348021e-05, -9.5367431640625e-06, -3.6954811548639555e-06], "score": -8.209451545228603, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "Mechanical", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(SummonMechanical(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"value": {"args": [{"s": "Dragonling Mechanic", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "SummonMechanical", "hole1": {"id": "MechanicalDragonling", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -6.190996170043945, -0.028720855712890625, -0.0044405460357666016, -0.003658284666016698, -0.0020236968994140625, -0.00021336186910048127, -0.0665033683180809, -0.0025655031204223633, -1.9261474609375, -5.733966827392578e-05, -2.1457672119140625e-06, -9.5367431640625e-06, -1.0165910720825195, -0.002010345458984375, -0.0001430511474609375, -0.002665664302185178, -0.00041961669921875, -7.4741430580616e-05], "score": -9.247554960628122, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>", "create_minion", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 4)\n\n    def create_minion(self, MinionCard):\n        return Minion(2, 4)\n", "model_output": {"hole0": "DragonlingMechanic", "hole2": [{"hole0": 2, "hole1": 4, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"hole0": 2, "hole1": 4, "_type": "Template16"}]}}], "index": 25}
{"beams": [{"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -0.008667349815368652, 0.0, -0.000152587890625, -0.0013275146484375, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009743690490722656, -1.1920928244535389e-07, -0.00026702880859375, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001293182373046875, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.000457763671875, -0.00017499923706054688, 0.0, -0.012108802795410156, -1.1920928244535389e-07, -8.58306884765625e-05, -1.1444091796875e-05, -0.000148773193359375, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010223385179415345, -0.0001850128173828125, -0.000225067138671875, -4.38690185546875e-05, -5.340576171875e-05, -1.1444091796875e-05, -6.687640416203067e-05, -1.9073486328125e-06], "score": -0.3145560706165753, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -1.5555734634399414, -7.62939453125e-06, -0.0001239776611328125, -0.0002269744873046875, -0.0001506805419921875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.82012939453125e-05, 0.0, -5.137920379638672e-05, -1.9073486328125e-06, -0.007158637046813965, 0.0, -8.20159912109375e-05, -0.000476837158203125, -8.96453857421875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -0.006287217140197754, -1.1920928244535389e-07, -0.00038909912109375, -2.288818359375e-05, -2.47955322265625e-05, -5.7220458984375e-06, -4.7802921471884474e-05, 0.0], "score": -1.5828835455672206, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -4.2454681396484375, -0.0002002716064453125, -0.000530242919921875, -7.2479248046875e-05, -0.0001277923583984375, -3.814697265625e-06, -8.58306884765625e-05, 0.0, -4.9591064453125e-05, 0.0, -5.4836273193359375e-05, -1.9073486328125e-06, -0.009167194366455078, 0.0, -0.0002002716064453125, -0.0011882781982421875, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.009762763977050781, -1.1920928244535389e-07, -0.00026702880859375, -2.47955322265625e-05, -3.24249267578125e-05, -7.62939453125e-06, -5.1140785217285156e-05, -1.9073486328125e-06, -0.0004062652587890625, -0.0001239776611328125, -1.33514404296875e-05, -2.6702880859375e-05, -0.0007495880126953125, -0.00016963481903076172, 0.0, -0.013044476509094238, -1.1920928244535389e-07, -6.103515625e-05, -9.5367431640625e-06, -0.000152587890625, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010652538621798158, -0.000164031982421875, -0.00020599365234375, -4.38690185546875e-05, -5.14984130859375e-05, -1.1444091796875e-05, -6.937979924259707e-05, -1.9073486328125e-06, -0.0003414154052734375, -0.00014495849609375, -2.47955322265625e-05, -1.71661376953125e-05, -0.0020542144775390625, -0.0002034902572631836, 0.0, -0.013044476509094238, -1.1920928244535389e-07, -5.53131103515625e-05, -9.5367431640625e-06, -0.0001544952392578125, -7.2479248046875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0009524818742647767, -0.000164031982421875, -0.0002231597900390625, -4.57763671875e-05, -4.76837158203125e-05, -1.1444091796875e-05, -6.60419391351752e-05, -1.9073486328125e-06, -0.0003604888916015625, -0.0001239776611328125, -3.0517578125e-05, -1.52587890625e-05, -0.0019474029541015625, -0.00021505355834960938, -1.9073486328125e-06, -0.012962937355041504, -1.1920928244535389e-07, -6.103515625e-05, -7.62939453125e-06, -0.0001583099365234375, -7.62939453125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0009332891786471009, -0.0001678466796875, -0.0002307891845703125, -4.76837158203125e-05, -4.57763671875e-05, -1.1444091796875e-05, -6.580352055607364e-05, -1.9073486328125e-06], "score": -4.331008620795217, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -0.008667349815368652, 0.0, -0.000152587890625, -0.0013275146484375, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -4.91265869140625, -7.62939453125e-05, -0.000217437744140625, -1.33514404296875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -5.805492401123047e-05, 0.0, -0.001247406005859375, -3.814697265625e-05, -1.71661376953125e-05, -1.33514404296875e-05, -0.0005016326904296875, -0.00020372867584228516, 0.0, -0.01177370548248291, -1.1920928244535389e-07, -8.20159912109375e-05, -1.33514404296875e-05, -0.000141143798828125, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.001000880845822394, -0.0001811981201171875, -0.00022125244140625, -4.38690185546875e-05, -4.9591064453125e-05, -1.1444091796875e-05, -6.675719487247989e-05, -1.9073486328125e-06], "score": -5.217118808085125, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -5.052408695220947, -2.300739288330078e-05, -0.0005435943603515625, -0.0034732818603515625, -3.814697265625e-06, -0.0012923479080200195, -1.9073486328125e-06, -5.340576171875e-05, -0.0001125335693359375, -6.4849853515625e-05, -5.7220458984375e-06, -0.16782665252685547, -9.584426879882812e-05, 0.0, -0.010624289512634277, -5.7220458984375e-06, -0.000232696533203125, -3.4332275390625e-05, -3.24249267578125e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001917123212479055, -9.548664093017578e-05, -0.0001659393310546875, -4.00543212890625e-05, -4.38690185546875e-05, -5.7220458984375e-06, -6.556510197697207e-05, -1.9073486328125e-06], "score": -5.517317005217109, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -0.008667349815368652, 0.0, -0.000152587890625, -0.0013275146484375, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009743690490722656, -1.1920928244535389e-07, -0.00026702880859375, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001293182373046875, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.000457763671875, -0.00017499923706054688, 0.0, -5.34673547744751, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -0.0002727508544921875, -1.52587890625e-05, 0.0, -3.814697265625e-06, -0.043865203857421875, -0.000118255615234375, -0.00032806396484375, -4.1961669921875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -6.318092346191406e-05, -1.9073486328125e-06], "score": -5.692098089863485, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -0.008667349815368652, 0.0, -0.000152587890625, -0.0013275146484375, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009743690490722656, -1.1920928244535389e-07, -0.00026702880859375, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001293182373046875, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.000457763671875, -0.00017499923706054688, 0.0, -6.343173027038574, -2.3841855067985307e-07, -7.62939453125e-06, -0.0014019012451171875], "score": -6.645111033131279, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.increase_armor(2)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -6.456035137176514, 0.0, -0.0016460418701171875, -0.0002288818359375, -0.0001373291015625, -7.62939453125e-06, -3.814697265625e-06, -2.47955322265625e-05, -0.0045157670974731445, -7.2479248046875e-05, -0.0001773834228515625, -1.9073486328125e-05, -6.103515625e-05, -3.814697265625e-06, -3.123283386230469e-05, -1.9073486328125e-06, -0.0004253387451171875, -4.38690185546875e-05, -1.71661376953125e-05, -1.71661376953125e-05, -0.00060272216796875, -0.00022292137145996094, 0.0, -0.012067675590515137, -1.1920928244535389e-07, -8.0108642578125e-05, -1.33514404296875e-05, -0.000156402587890625, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0009891984518617392, -0.000179290771484375, -0.000213623046875, -4.38690185546875e-05, -4.9591064453125e-05, -1.1444091796875e-05, -6.878375279484317e-05, -1.9073486328125e-06], "score": -6.756345697811831, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -6.4662065505981445, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0019474029541015625, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-05, -0.0019626617431640625, -3.814697265625e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.00072479248046875, -2.09808349609375e-05, -0.005666136741638184, -3.4332275390625e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.00010371100506745279, 0.0, -0.0001373291015625, -6.866455078125e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.27112579345703125, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.76837158203125e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -3.409385681152344e-05, 0.0, -0.008659720420837402, 0.0, -0.0001544952392578125, -0.0013256072998046875, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009720802307128906, -1.1920928244535389e-07, -0.00026702880859375, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001308441162109375, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.0004596710205078125, -0.00017499923706054688, 0.0, -0.01210319995880127, -1.1920928244535389e-07, -8.58306884765625e-05, -1.1444091796875e-05, -0.000148773193359375, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010223385179415345, -0.00018310546875, -0.000225067138671875, -4.38690185546875e-05, -5.340576171875e-05, -1.1444091796875e-05, -6.687640416203067e-05, -1.9073486328125e-06], "score": -6.789021083254241, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template33"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -6.580603122711182, -1.9073486328125e-06, -2.491474151611328e-05, -1.9073486328125e-06, -0.00011074389476561919, 0.0, -0.0001735687255859375, -0.0001049041748046875, -1.71661376953125e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.25281333923339844, -3.814697265625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.1961669921875e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -4.76837158203125e-05, 0.0, -3.409385681152344e-05, 0.0, -0.008689284324645996, 0.0, -0.0001583099365234375, -0.0013217926025390625, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009795188903808594, -1.1920928244535389e-07, -0.000263214111328125, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001148223876953125, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.000461578369140625, -0.00017499923706054688, 0.0, -0.012124061584472656, -1.1920928244535389e-07, -8.7738037109375e-05, -1.1444091796875e-05, -0.000148773193359375, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010185238206759095, -0.00018310546875, -0.000225067138671875, -4.38690185546875e-05, -5.340576171875e-05, -1.1444091796875e-05, -6.687640416203067e-05, -1.9073486328125e-06], "score": -6.878802367128131, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -1.5555734634399414, -7.62939453125e-06, -0.0001239776611328125, -0.0002269744873046875, -0.0001506805419921875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.82012939453125e-05, 0.0, -5.137920379638672e-05, -1.9073486328125e-06, -0.007158637046813965, 0.0, -8.20159912109375e-05, -0.000476837158203125, -8.96453857421875e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, -5.358277797698975, -6.103515625e-05, -0.0002613067626953125, -1.71661376953125e-05, -2.288818359375e-05, -1.9073486328125e-06, -5.412101745605469e-05, 0.0], "score": -6.934802123718754, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -0.008667349815368652, 0.0, -0.000152587890625, -0.0013275146484375, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009743690490722656, -1.1920928244535389e-07, -0.00026702880859375, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001293182373046875, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.000457763671875, -0.00017499923706054688, 0.0, -6.7541632652282715, -1.1920928244535389e-07, -3.814697265625e-06, -0.0014858245849609375], "score": -7.056181260754286, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_temp_attack(2)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_temp_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -1.5555734634399414, -7.62939453125e-06, -0.0001239776611328125, -0.0002269744873046875, -0.0001506805419921875, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -7.82012939453125e-05, 0.0, -5.137920379638672e-05, -1.9073486328125e-06, -5.491452693939209, -1.5497207641601562e-05, -0.000560760498046875, -0.00766754150390625, -3.814697265625e-06, -0.001298069953918457, -1.9073486328125e-06], "score": -7.069262811356083, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -5.7581868171691895, -0.1467571258544922, -0.00016021728515625, -0.00072479248046875, -0.00209808349609375, -1.9073486328125e-06, -9.1552734375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.581710815429688e-05, -1.9073486328125e-06, -0.004379391670227051, 0.0, -0.0001392364501953125, -0.00089263916015625, -0.0001049041748046875, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -0.012281417846679688, -1.1920928244535389e-07, -0.0002918243408203125, -2.288818359375e-05, -2.288818359375e-05, -5.7220458984375e-06, -5.328655242919922e-05, -1.9073486328125e-06, -0.37563037872314453, -0.0002079010009765625, -7.82012939453125e-05, -2.288818359375e-05, -0.007534027099609375, -0.0003427267074584961, -1.9073486328125e-06, -0.009711384773254395, -2.0265579223632812e-06, -3.62396240234375e-05, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0011631246889010072, -0.00016021728515625, -0.0002040863037109375, -4.38690185546875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -6.425379979191348e-05, -1.9073486328125e-06, -0.2807044982910156, -0.0002155303955078125, -0.00020599365234375, -1.9073486328125e-05, -0.021986007690429688, -0.00042569637298583984, -1.9073486328125e-06, -0.009659051895141602, -2.0265579223632812e-06, -4.1961669921875e-05, -1.71661376953125e-05, -0.00014495849609375, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010563131654635072, -0.00016021728515625, -0.0002231597900390625, -4.57763671875e-05, -4.1961669921875e-05, -1.1444091796875e-05, -6.186961400089785e-05, -1.9073486328125e-06, -0.28990936279296875, -0.000225067138671875, -0.000255584716796875, -1.71661376953125e-05, -0.019407272338867188, -0.0004305839538574219, -1.9073486328125e-06, -0.009609818458557129, -2.0265579223632812e-06, -4.76837158203125e-05, -1.71661376953125e-05, -0.00014495849609375, -6.866455078125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010451074922457337, -0.00016021728515625, -0.0002288818359375, -4.76837158203125e-05, -4.1961669921875e-05, -1.1444091796875e-05, -5.996226900606416e-05, -1.9073486328125e-06, -0.2919340133666992, -0.0002288818359375, -0.0002536773681640625, -1.71661376953125e-05, -0.018541336059570312, -0.00042569637298583984, -1.9073486328125e-06, -0.009583115577697754, -2.0265579223632812e-06, -4.76837158203125e-05, -1.71661376953125e-05, -0.00014495849609375, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010432001436129212, -0.00016021728515625, -0.0002307891845703125, -4.76837158203125e-05, -4.1961669921875e-05, -1.1444091796875e-05, -5.996226900606416e-05, -1.9073486328125e-06, -0.29244327545166016, -0.0002288818359375, -0.00025177001953125, -1.71661376953125e-05, -0.018377304077148438, -0.00042569637298583984, -1.9073486328125e-06, -0.009578347206115723, -2.0265579223632812e-06, -4.76837158203125e-05, -1.71661376953125e-05, -0.00014495849609375, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010432001436129212, -0.00016021728515625, -0.0002307891845703125, -4.76837158203125e-05, -4.1961669921875e-05, -1.1444091796875e-05, -5.996226900606416e-05, -1.9073486328125e-06], "score": -7.616767234633208, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 223, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001220703125, -5.9511213302612305, -2.407998726994265e-05, -0.0001797517907107249, -2.384185791015625e-06, -2.426188439130783e-05, -7.748602001811378e-06, -3.814697265625e-05, 0.0, -0.0011425018310546875, -6.67572021484375e-05, -8.20159912109375e-05, -3.24249267578125e-05, -6.67572021484375e-05, -4.1961669921875e-05, -7.62939453125e-06, -1.33514404296875e-05, -7.390703103737906e-05, -5.757807957706973e-05, -3.099440846199286e-06, 0.0, -0.00168609619140625, -1.52587890625e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.9591064453125e-05, -4.1961669921875e-05, -0.000732421875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0002117156982421875, 0.0, -0.0006504058837890625, -1.9073486328125e-05, -0.003616929054260254, -3.4332275390625e-05, -0.0001544952392578125, -5.7220458984375e-06, -0.0021507740020751953, 0.0, -7.05718994140625e-05, -0.0002346038818359375, -1.52587890625e-05, -0.00010895729064941406, -1.311301275563892e-06, -0.17613983154296875, -2.288818359375e-05, -0.010747909545898438, -2.288818359375e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.052356719970703125, -1.9073486328125e-06, -1.728534698486328e-05, -3.814697265625e-06, -4.3511390686035156e-05, 0.0, -0.0010607242584228516, 0.0, -1.52587890625e-05, -0.0007266998291015625, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.004922270774841309, -1.1920928244535389e-07, -0.0003032684326171875, -2.6702880859375e-05, -3.0517578125e-05, -9.5367431640625e-06, -5.328655242919922e-05, -1.9073486328125e-06, -0.0057697296142578125, -5.53131103515625e-05, -1.9073486328125e-05, -1.9073486328125e-05, -0.0004749298095703125, -0.00017702579498291016, -1.9073486328125e-06, -0.011742115020751953, -1.1920928244535389e-07, -8.7738037109375e-05, -9.5367431640625e-06, -0.0001392364501953125, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0009975431021302938, -0.0001926422119140625, -0.000247955322265625, -4.76837158203125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -6.461142766056582e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.04956626892089844, -0.001010894775390625, -0.02862202748656273, -3.814697265625e-06, -0.00475311279296875, -0.0001659393310546875, -0.0002613067626953125, -0.0001430511474609375, -0.0024929046630859375, -0.0039043426513671875, -0.00621795654296875, -1.9073486328125e-06, -0.019134521484375, -0.0001049041748046875, -0.0011196136474609375, -8.96453857421875e-05, -0.0018561817705631256, -3.814697265625e-06, -0.0026082992553710938, 0.0, -8.7738037109375e-05, -1.9073486328125e-06, -0.0024156570434570312, 0.0, -0.013423919677734375, -1.33514404296875e-05, -0.5423946380615234, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -0.0020333528518676758, -3.814697265625e-06, -1.1444091796875e-05, -0.0003719329833984375, 0.0, -0.0292510986328125, -1.9073486328125e-06, -0.5064783096313477, 0.0, -0.000385284423828125, 0.0, -0.00023281574249267578, 0.0, -0.04059255123138428, -7.62939453125e-06, -3.814697265625e-06, -0.06597042083740234, -0.00048065185546875, -0.1455240249633789], "score": -7.702178134122946, "choice_history": [77, 148, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "DrainLife", "hole2": [{"value": {"args": [{"s": "Drain Life", "_type": "Str"}, {"_type": "Template35"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 26}
{"beams": [{"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -0.00345611572265625, -2.47955322265625e-05, -9.72747802734375e-05, -0.0001983642578125, 0.0, -0.0007610321044921875, -1.71661376953125e-05, -0.000541210116352886, -6.67572021484375e-05, 0.0, -0.00054168701171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.00092315673828125, -7.62939453125e-05, -0.00023278867593035102, -0.000505677133332938, -4.915738827548921e-06, -6.973525887588039e-05], "score": -0.031117642912988686, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -5.199767112731934, -0.0025539398193359375, 0.0, -0.004780769348144531, -1.71661376953125e-05, -8.392333984375e-05, -0.0001926422119140625, 0.0, -0.0007991790771484375, -1.52587890625e-05, -0.00047528737923130393, -5.53131103515625e-05, 0.0, -0.00057220458984375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0008716583251953125, -6.866455078125e-05, -0.00024995068088173866, -0.0004948345012962818, -4.1966704884544015e-06, -7.319209544220939e-05], "score": -5.2268977981910325, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Hero", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), HeroSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -6.82588005065918, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -0.0030328035354614258, -4.291525328881107e-06, -0.000186920166015625, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.1444091796875e-05, -0.00061798095703125, -0.001800537109375, -7.05718994140625e-05, -0.0005826950073242188, -8.70227722771233e-06, -0.002050347626209259, -3.7431702367030084e-05, -4.38690185546875e-05, -0.000293731689453125, -5.7220458984375e-06, -9.5367431640625e-06, -0.00701141357421875, -0.0004730224609375, 0.0, -0.0036163330078125, -2.288818359375e-05, -9.918212890625e-05, -0.0001964569091796875, 0.0, -0.0007610321044921875, -1.71661376953125e-05, -0.0005447863950394094, -6.67572021484375e-05, 0.0, -0.000545501708984375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0009174346923828125, -7.62939453125e-05, -0.0002326694957446307, -0.000505677133332938, -5.392445018514991e-06, -6.985446088947356e-05], "score": -6.855597400603813, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "BEAST", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -6.82994270324707, -1.3589859008789062e-05, -2.09808349609375e-05, -0.0005340576171875, -9.5367431640625e-06, -7.62939453125e-06, -0.006519317626953125, -0.000347137451171875, 0.0, -0.002574920654296875, -3.24249267578125e-05, -9.918212890625e-05, -0.0001373291015625, 0.0, -0.00081634521484375, -1.52587890625e-05, -0.0004162787809036672, -6.103515625e-05, 0.0, -0.00054931640625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.000885009765625, -7.43865966796875e-05, -0.0002519767149351537, -0.0004967409186065197, -5.150577635504305e-06, -7.295369141502306e-05], "score": -6.857374501796414, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -5.8931684494018555, -0.0027027130126953125, -9.5367431640625e-06, -0.012709617614746094, 0.0, -0.0022430419921875, -1.1444091796875e-05, -0.0014548301696777344, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.22035980224609375, 0.0, -0.6769552230834961, -5.53131103515625e-05, -0.025403976440429688, -0.0012454986572265625, -1.9073486328125e-06, -0.000640869140625, -1.9073486328125e-05, -2.0265579223632812e-06, 0.0, -9.5367431640625e-06, -0.0003337860107421875, -5.14984130859375e-05, -0.00013577030040323734, -0.000610999355558306, -6.099915481172502e-06, -5.233169940765947e-05], "score": -6.861776388697592, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "Random", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -7.120392799377441, 0.0, -0.0006427764892578125, -1.33514404296875e-05, -0.0025932788848876953, -1.5497195136049413e-06, -0.0002651214599609375, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.14984130859375e-05, -1.33514404296875e-05, -0.001026153564453125, -0.0024023056030273438, -7.2479248046875e-05, -0.0005849599838256836, -6.675719760096399e-06, -0.00198197178542614, -3.576277231331915e-05, -4.1961669921875e-05, -0.00030517578125, -5.7220458984375e-06, -9.5367431640625e-06, -0.007335662841796875, -0.0004558563232421875, 0.0, -0.0039615631103515625, -2.47955322265625e-05, -9.918212890625e-05, -0.0002040863037109375, 0.0, -0.000743865966796875, -1.71661376953125e-05, -0.0005455015925690532, -6.67572021484375e-05, 0.0, -0.0005397796630859375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0009136199951171875, -7.62939453125e-05, -0.00023541066912002861, -0.0005067494930699468, -5.3924741223454475e-06, -6.973525887588039e-05], "score": -7.151945663867025, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -7.274600982666016, -0.0014553070068359375, 0.0, -0.043593406677246094, -2.86102294921875e-05, -1.33514404296875e-05, -0.001461029052734375, 0.0, -0.0017213821411132812, -2.6702880859375e-05, -0.0009851454524323344, -6.67572021484375e-05, -1.9073486328125e-06, -0.0005054473876953125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -0.000736236572265625, -6.866455078125e-05, -0.00021050142822787166, -0.0005359405186027288, -3.604218363761902e-06, -6.878165004309267e-05], "score": -7.341894819164565, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -7.44066047668457, -0.0022051334381103516, 0.0, -0.000156402587890625, -2.288818359375e-05, -4.57763671875e-05, -3.0517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010180471144849434, -9.655952453613281e-06, -8.7738037109375e-05, -0.00016021728515625, -1.33514404296875e-05, -6.89011940266937e-05, -8.225440979003906e-06, -2.6702880859375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.86102294921875e-05, -0.0006256103515625, -3.814697265625e-06, -0.0004634857177734375, -0.0005950927734375, -0.0021953582763671875, -5.14984130859375e-05, -0.002978682518005371, -4.768370445162873e-07, -7.05718994140625e-05, -7.62939453125e-06, -0.0006033182144165039, -1.5497195136049413e-06, -0.0002288818359375, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.000751495361328125, -0.0024442672729492188, -7.62939453125e-05, -0.0006077289581298828, -6.675719760096399e-06, -0.0019327662885189056, -3.540514808264561e-05, -4.1961669921875e-05, -0.00030517578125, -5.7220458984375e-06, -7.62939453125e-06, -0.0072174072265625, -0.0005092620849609375, 0.0, -0.0034694671630859375, -2.47955322265625e-05, -9.72747802734375e-05, -0.0001983642578125, 0.0, -0.0007610321044921875, -1.71661376953125e-05, -0.000541210116352886, -6.67572021484375e-05, 0.0, -0.00054168701171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.00092315673828125, -7.62939453125e-05, -0.00023278867593035102, -0.000505677133332938, -5.034919013269246e-06, -6.973525887588039e-05], "score": -7.473235858087548, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "player", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(player):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "player", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -6.440954208374023, -0.0004405975341796875, -0.8128366470336914, -0.0001983642578125, -0.001422882080078125, -0.0010883808135986328, -3.7789344787597656e-05, -0.0048852283507585526, -2.5153160095214844e-05, -0.028751373291015625, -0.0016345977783203125, -5.7220458984375e-06, -1.9073486328125e-06, -0.0041217803955078125, -0.0021630525588989258, 0.0, -0.020215988159179688, -1.52587890625e-05, -0.0001430511474609375, -0.000492095947265625, 0.0, -0.0003795623779296875, -3.62396240234375e-05, -0.0007437467575073242, -6.29425048828125e-05, 0.0, -0.00012969970703125, -0.10413742065429688, -3.814697265625e-06, 0.0, -0.0861043930053711, -5.91278076171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.013516426086425781, -2.86102294921875e-05, -0.00895392894744873, -1.919269561767578e-05, -0.052678484469652176, -7.62939453125e-06, -0.000156402587890625, -0.000102996826171875, -5.7220458984375e-06, -0.0001087188720703125, -0.0015010833740234375, -9.72747802734375e-05, 0.0, -0.006224632263183594, -3.814697265625e-06, -4.76837158203125e-05, -0.000186920166015625, 0.0, -0.0006084442138671875, -1.71661376953125e-05, -0.0005360841169022024, -5.91278076171875e-05, 0.0, -0.000583648681640625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -0.0008754730224609375, -6.4849853515625e-05, -0.00024029705673456192, -0.0004478881892282516, -5.628593498840928e-06, -7.128474680939689e-05], "score": -7.608595639936823, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 51, 129, 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry([Damage(1), CharacterSelector(players=BothPlayer())],\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"elts": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "_type": "List"}, {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -0.00345611572265625, -2.47955322265625e-05, -9.72747802734375e-05, -0.0001983642578125, 0.0, -0.0007610321044921875, -1.71661376953125e-05, -0.000541210116352886, -6.67572021484375e-05, 0.0, -0.00054168701171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -7.252744674682617, -1.52587890625e-05, -0.00010072674922412261, -3.2305197237292305e-05, -8.76053236424923e-05, -3.933898824470816e-06, -0.344681978225708, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -8.404254913330078e-05, -1.9073486328125e-06], "score": -7.627086118416003, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -7.643935203552246, -7.62939453125e-06, -0.0010700225830078125, -0.000598907470703125, -0.0012187957763671875, -4.38690185546875e-05, -0.0052956342697143555, -4.768370445162873e-07, -4.38690185546875e-05, -5.7220458984375e-06, -0.000815272331237793, -1.7881377516459906e-06, -0.00017547607421875, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.1444091796875e-05, -0.0006771087646484375, -0.002285003662109375, -8.0108642578125e-05, -0.0006362199783325195, -6.675719760096399e-06, -0.0019375095143914223, -3.516672950354405e-05, -4.38690185546875e-05, -0.0002727508544921875, -5.7220458984375e-06, -7.62939453125e-06, -0.006069183349609375, -0.000476837158203125, 0.0, -0.0034618377685546875, -2.47955322265625e-05, -0.000102996826171875, -0.0001983642578125, 0.0, -0.0007686614990234375, -1.71661376953125e-05, -0.0005431174649856985, -6.67572021484375e-05, 0.0, -0.0005435943603515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0009212493896484375, -7.62939453125e-05, -0.00023243113537319005, -0.0005072260973975062, -5.6308344937860966e-06, -6.985446088947356e-05], "score": -7.675036029671389, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -0.00345611572265625, -2.47955322265625e-05, -9.72747802734375e-05, -0.0001983642578125, 0.0, -0.0007610321044921875, -1.71661376953125e-05, -0.000541210116352886, -6.67572021484375e-05, 0.0, -0.00054168701171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.00092315673828125, -7.62939453125e-05, -0.00023278867593035102, -7.589943885803223, -0.0957212895154953, -8.32240330055356e-05, -4.4941058149561286e-05], "score": -7.716330655191825, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(66, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 66, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -5.8931684494018555, -0.0027027130126953125, -9.5367431640625e-06, -0.012709617614746094, 0.0, -0.0022430419921875, -1.1444091796875e-05, -0.0014548301696777344, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.22035980224609375, 0.0, -1.086695671081543, -0.009593009948730469, -0.00303494930267334, -0.0008525848388671875, -1.33514404296875e-05, -0.46831637620925903, -5.7220458984375e-06, -0.000705718994140625, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-05, -7.891349378041923e-05, -0.00012754580529872328, -6.233341991901398e-06, -4.339147199061699e-05], "score": -7.726200876218911, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 32, 163, "Random", "Picker", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(2))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "hole1": 2, "_type": "Template21"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -5.8931684494018555, -0.0027027130126953125, -9.5367431640625e-06, -0.012709617614746094, 0.0, -0.0022430419921875, -1.1444091796875e-05, -0.0014548301696777344, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, 0.0, -1.7921552658081055, 0.0, -0.0018243789672851562, -0.03661537170410156, -0.0003147125244140625, 0.0, -0.0003070831298828125, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -8.58306884765625e-05, -0.014318466186523438, -7.43865966796875e-05, -7.950948202051222e-05, -0.00029476112104021013, -1.8508289940655231e-06, -0.00011073991481680423], "score": -7.782361135435906, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            taunt=True)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -7.897307395935059, -1.1920928244535389e-07, -4.9591064453125e-05, -9.5367431640625e-06, -0.002294778823852539, -2.264974000354414e-06, -0.000118255615234375, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -0.0006694793701171875, -0.0023040771484375, -8.0108642578125e-05, -0.0006363391876220703, -8.58306884765625e-06, -0.0018813293427228928, -2.884864079533145e-05, -4.38690185546875e-05, -0.0002880096435546875, -5.7220458984375e-06, -7.62939453125e-06, -0.0070285797119140625, -0.0005626678466796875, 0.0, -0.0035152435302734375, -2.09808349609375e-05, -8.96453857421875e-05, -0.0001964569091796875, 0.0, -0.0007572174072265625, -1.71661376953125e-05, -0.0005295276059769094, -6.4849853515625e-05, 0.0, -0.00054931640625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.0009307861328125, -7.62939453125e-05, -0.0002323119406355545, -0.0005054388311691582, -4.796558641828597e-06, -6.961605686228722e-05], "score": -7.926641866509321, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "find_minion_spell_target", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.\n            find_minion_spell_target, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "model_output": {"hole0": "DreadInfernal", "hole2": [{"value": {"args": [{"s": "Dread Infernal", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"attr": "WARLOCK", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "find_minion_spell_target", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole1": 6, "_type": "Template16"}]}}], "index": 27}
{"beams": [{"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -0.003917068243026733, -2.2649765014648438e-06, -1.52587890625e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.0009059906005859375, -1.71661376953125e-05, 0.0, -0.00141143798828125, -0.00287628173828125, -5.53131103515625e-05, -0.00021576881408691406, 0.0, -6.67572021484375e-05, 0.0, -8.27300755190663e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004425048828125, 0.0, -0.0042514801025390625, -7.62939453125e-06, -0.0010833740234375, -0.00040221214294433594, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.000286102294921875, -8.96453857421875e-05, -4.57763671875e-05, -1.7881368421512889e-06, -1.347058241663035e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "score": -0.3974901418609349, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -1.1684389114379883, -0.00070953369140625, -0.000152587890625, -0.0015348194865509868, -2.861018856492592e-06, -7.62939453125e-06, 0.0, -0.002422332763671875, -9.65590606938349e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.00130462646484375, -0.000125885009765625, -0.00013768099597655237, -0.0001308834762312472, -0.0036792010068893433, -2.384185791015625e-06, -1.9073486328125e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.00093841552734375, -1.71661376953125e-05, 0.0, -0.001392364501953125, -0.0027484893798828125, -5.7220458984375e-05, -0.00021767616271972656, 0.0, -6.866455078125e-05, 0.0, -7.927307888166979e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004482269287109375, 0.0, -0.003910064697265625, -7.62939453125e-06, -0.0010640621185302734, -0.00041353702545166016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.000293731689453125, -9.1552734375e-05, -4.57763671875e-05, -1.7881368421512889e-06, -1.3351374946068972e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "score": -1.1932981748804465, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -0.003917068243026733, -2.2649765014648438e-06, -1.52587890625e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.0009059906005859375, -1.71661376953125e-05, 0.0, -0.00141143798828125, -0.00287628173828125, -5.53131103515625e-05, -0.00021576881408691406, 0.0, -6.67572021484375e-05, 0.0, -8.27300755190663e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004425048828125, 0.0, -5.627525329589844, -0.0008029937744140625, -0.04483914375305176, -0.0014864205149933696, -9.5367431640625e-06, -0.0004609567695297301, -0.00033480965066701174, -9.47713851928711e-05, -1.1444091796875e-05, -9.775161743164062e-05, -3.814697265625e-06, -3.814697265625e-05, -0.000469207763671875, -1.1444091796875e-05, -1.3113027534927824e-06, -1.03711727206246e-05, -4.649162292480469e-06, -2.145764938177308e-06], "score": -6.067480010488843, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 32, 163, "Random", "Picker", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=RandomPicker(1))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "hole1": 1, "_type": "Template21"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -5.754026412963867, -1.1920928244535389e-07, -1.52587890625e-05, -0.0002384185791015625, -1.33514404296875e-05, -1.9073486328125e-06, -0.0006161928176879883, -1.33514404296875e-05, 0.0, -0.00116729736328125, -0.0024127960205078125, -5.7220458984375e-05, -0.00033593177795410156, 0.0, -7.05718994140625e-05, 0.0, -8.940593397710472e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.000392913818359375, 0.0, -0.004210472106933594, -7.62939453125e-06, -0.001073598861694336, -0.00039827823638916016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.0002899169921875, -0.0001010894775390625, -4.57763671875e-05, -1.9073456769547192e-06, -1.1682462172757369e-05, -4.053113570989808e-06, -1.311301275563892e-06], "score": -6.146313456924005, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -1.1684389114379883, -0.00070953369140625, -0.000152587890625, -0.0015348194865509868, -2.861018856492592e-06, -7.62939453125e-06, 0.0, -0.002422332763671875, -9.65590606938349e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.00130462646484375, -0.000125885009765625, -0.00013768099597655237, -0.0001308834762312472, -0.0036792010068893433, -2.384185791015625e-06, -1.9073486328125e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.00093841552734375, -1.71661376953125e-05, 0.0, -0.001392364501953125, -0.0027484893798828125, -5.7220458984375e-05, -0.00021767616271972656, 0.0, -6.866455078125e-05, 0.0, -7.927307888166979e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004482269287109375, 0.0, -5.720137596130371, -0.0007877349853515625, -0.045005083084106445, -0.0014522074488922954, -9.5367431640625e-06, -0.0004480880743358284, -0.0003796179371420294, -9.47713851928711e-05, -9.5367431640625e-06, -0.00010156631469726562, -3.814697265625e-06, -3.814697265625e-05, -0.0004787445068359375, -1.1444091796875e-05, -1.3113027534927824e-06, -1.03711727206246e-05, -4.649162292480469e-06, -2.145764938177308e-06], "score": -6.956400146099831, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 32, 163, "Random", "Picker", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(1))))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "hole1": 1, "_type": "Template21"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -1.1684389114379883, -0.00070953369140625, -0.000152587890625, -0.0015348194865509868, -2.861018856492592e-06, -7.62939453125e-06, 0.0, -0.002422332763671875, -9.65590606938349e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.00130462646484375, -0.000125885009765625, -0.00013768099597655237, -0.0001308834762312472, -5.816352367401123, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000209808349609375, -1.1444091796875e-05, -3.814697265625e-06, -0.0006694793701171875, -1.33514404296875e-05, 0.0, -0.0011463165283203125, -0.002349853515625, -5.53131103515625e-05, -0.00035119056701660156, 0.0, -7.2479248046875e-05, 0.0, -8.404174150200561e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0003986358642578125, 0.0, -0.00392913818359375, -7.62939453125e-06, -0.0010619163513183594, -0.0004076957702636719, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.9550323486328125e-05, 0.0, -0.000301361083984375, -0.0001068115234375, -4.38690185546875e-05, -1.9073454495810438e-06, -1.1444046322139911e-05, -4.053113570989808e-06, -1.311301275563892e-06], "score": -7.004819422221132, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -6.9736785888671875, -0.000186920166015625, -5.7220458984375e-06, -5.960462772236497e-07, -0.00011253065895289183, -1.1920928244535389e-07, -2.3841855067985307e-07, -0.0006160736083984375, -0.000194549560546875, -6.866455078125e-05, -0.0325164794921875, -0.0002288818359375, -0.0003052941174246371, -1.6689286894688848e-06, -0.05031394958496094, -0.0009098052978515625, -1.9073486328125e-06, -0.009325385093688965, -8.344646857949556e-07, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.9948692321777344e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0017337799072265625, -0.000148773193359375, -0.00013398646842688322, -9.190614218823612e-05, -0.004371747374534607, -2.2649765014648438e-06, -2.47955322265625e-05, -0.0007152557373046875, -1.9073486328125e-06, -3.814697265625e-06, -0.0009307861328125, -1.52587890625e-05, 0.0, -0.001560211181640625, -0.002849578857421875, -5.91278076171875e-05, -0.00020241737365722656, 0.0, -6.866455078125e-05, 0.0, -8.47565388539806e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00045013427734375, 0.0, -0.004169464111328125, -7.62939453125e-06, -0.0010912418365478516, -0.00040221214294433594, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.000286102294921875, -8.96453857421875e-05, -4.76837158203125e-05, -1.7881368421512889e-06, -1.3351374946068972e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "score": -7.088583961673542, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -0.003917068243026733, -2.2649765014648438e-06, -1.52587890625e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -7.113333702087402, -0.0026131868362426758, 0.0, -0.06435775756835938, -0.0017414093017578125, -3.4332275390625e-05, -0.00025212764739990234, 0.0, -8.392333984375e-05, 0.0, -7.498181366827339e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004177093505859375, 0.0, -0.0038537979125976562, -5.7220458984375e-06, -0.0010523796081542969, -0.00039839744567871094, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.0002841949462890625, -9.5367431640625e-05, -4.76837158203125e-05, -2.026554739131825e-06, -1.0848005331354216e-05, -3.933904281439027e-06, -1.311301275563892e-06], "score": -7.573893903140565, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Hero", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), HeroSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -0.003917068243026733, -2.2649765014648438e-06, -1.52587890625e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.0009059906005859375, -1.71661376953125e-05, 0.0, -7.242921829223633, -1.33514404296875e-05, -1.1444091796875e-05, -0.00017404556274414062, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.00019335016258992255, -2.47955322265625e-05, 0.0, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0002040863037109375, -8.58306884765625e-05, -6.29425048828125e-05, -9.059861440618988e-06, -8.225431884056889e-06, -6.914125606272137e-06, -8.344646857949556e-07], "score": -7.6299219051051494, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -0.003917068243026733, -2.2649765014648438e-06, -1.52587890625e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.0009059906005859375, -1.71661376953125e-05, 0.0, -0.00141143798828125, -0.00287628173828125, -5.53131103515625e-05, -0.00021576881408691406, 0.0, -6.67572021484375e-05, 0.0, -8.27300755190663e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004425048828125, 0.0, -0.0042514801025390625, -7.62939453125e-06, -7.424691200256348, -0.000278472900390625, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -9.655952453613281e-06, 0.0, -0.0020160675048828125, -0.0001125335693359375, -5.340576171875e-05, -1.680835703155026e-05, -1.442432312614983e-05, -4.529952093434986e-06, -3.576278118089249e-07], "score": -7.8227418641160895, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -1.1684389114379883, -0.00070953369140625, -0.000152587890625, -0.0015348194865509868, -2.861018856492592e-06, -7.62939453125e-06, 0.0, -6.907942771911621, -1.7046921129804105e-05, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.5272369384765625e-05, -7.62939453125e-06, -1.1444091796875e-05, -0.001178741455078125, -0.0001468658447265625, -0.0001608055754331872, -0.00011014352639904246, -0.004429996013641357, -2.2649765014648438e-06, -1.9073486328125e-05, -0.0005664825439453125, -1.9073486328125e-06, -3.814697265625e-06, -0.0009326934814453125, -1.71661376953125e-05, 0.0, -0.00140380859375, -0.0028553009033203125, -5.7220458984375e-05, -0.00022912025451660156, 0.0, -6.866455078125e-05, 0.0, -7.820024620741606e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.000438690185546875, 0.0, -0.003955841064453125, -7.62939453125e-06, -0.001062154769897461, -0.00041353702545166016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.0002956390380859375, -9.1552734375e-05, -4.57763671875e-05, -1.7881368421512889e-06, -1.3232166566012893e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "score": -8.09963342495842, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "combo", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, combo=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "combo", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -7.482234954833984, -0.00041961669921875, -6.29425048828125e-05, -0.6784286499023438, -0.0001926422119140625, -1.33514404296875e-05, -0.0002487896999809891, -1.8954096958623268e-05, -7.62939453125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.3484230041503906e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.001682281494140625, -0.00020599365234375, -0.00019096302276011556, -9.476707055000588e-05, -0.00407785177230835, -2.2649765014648438e-06, -1.52587890625e-05, -0.0005741119384765625, -3.814697265625e-06, -3.814697265625e-06, -0.00089263916015625, -1.71661376953125e-05, 0.0, -0.00141143798828125, -0.0028820037841796875, -5.53131103515625e-05, -0.00021576881408691406, 0.0, -6.67572021484375e-05, 0.0, -8.284927753265947e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004425048828125, 0.0, -0.0042572021484375, -7.62939453125e-06, -0.0010833740234375, -0.00040221214294433594, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.000286102294921875, -8.96453857421875e-05, -4.57763671875e-05, -1.7881368421512889e-06, -1.347058241663035e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "score": -8.182307807841816, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -7.482234954833984, -0.00041961669921875, -6.29425048828125e-05, -0.7136192321777344, -0.000453948974609375, -0.000217437744140625, -0.0021760461386293173, -2.9802276912960224e-06, -7.62939453125e-06, 0.0, -0.002240419387817383, -1.0251946150674485e-05, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.7404556274414062e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.0012149810791015625, -0.000125885009765625, -0.00013434348511509597, -0.00012504296319093555, -0.0037495046854019165, -2.2649765014648438e-06, -1.9073486328125e-05, -0.000583648681640625, -1.9073486328125e-06, -3.814697265625e-06, -0.00092315673828125, -1.71661376953125e-05, 0.0, -0.0013980865478515625, -0.0027313232421875, -5.7220458984375e-05, -0.00021767616271972656, 0.0, -6.866455078125e-05, 0.0, -7.939228089526296e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004482269287109375, 0.0, -0.00390625, -7.62939453125e-06, -0.0010640621185302734, -0.00041353702545166016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.000293731689453125, -9.1552734375e-05, -4.57763671875e-05, -1.7881368421512889e-06, -1.3351374946068972e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "score": -8.22076539686298, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 72, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -1.1684389114379883, -0.00070953369140625, -0.000152587890625, -0.0015348194865509868, -2.861018856492592e-06, -7.62939453125e-06, 0.0, -0.002422332763671875, -9.65590606938349e-06, -9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.00130462646484375, -0.000125885009765625, -0.00013768099597655237, -0.0001308834762312472, -0.0036792010068893433, -2.384185791015625e-06, -1.9073486328125e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -7.0771026611328125, -0.0023804903030395508, 0.0, -0.06510066986083984, -0.0016803741455078125, -3.4332275390625e-05, -0.00025784969329833984, 0.0, -8.58306884765625e-05, 0.0, -7.438579632434994e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004253387451171875, 0.0, -0.0035657882690429688, -5.7220458984375e-06, -0.0010406970977783203, -0.00040400028228759766, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.0002918243408203125, -9.72747802734375e-05, -4.57763671875e-05, -2.026554739131825e-06, -1.0728796951298136e-05, -3.933904281439027e-06, -1.311301275563892e-06], "score": -8.334094598163851, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Hero", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), HeroSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -6.692986488342285, -0.0003490447998046875, -1.089524269104004, -0.0018520355224609375, -8.20159912109375e-05, -0.0024567842483520508, -5.18559172633104e-05, -0.008184552192687988, 0.0, -0.0855245590209961, -0.0019855499267578125, -1.1444091796875e-05, 0.0, -0.00038361549377441406, -4.57763671875e-05, 0.0, -0.0010833740234375, -0.0035533905029296875, -6.103515625e-05, -0.00014722347259521484, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.00013446537195704877, -1.71661376953125e-05, 0.0, 0.0, 0.0, -0.0003643035888671875, 0.0, -0.0035228729248046875, -9.5367431640625e-06, -0.00115203857421875, -0.00039076805114746094, -1.9073486328125e-06, -0.012670516967773438, -0.09126758575439453, -9.5367431640625e-06, -1.9073486328125e-06, -0.7433689832687378, -9.5367431640625e-06, 0.0, -0.0026149749755859375, -9.72747802734375e-05, -1.71661376953125e-05, -6.902217864990234e-05, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.00018715222540777177, -1.33514404296875e-05, 0.0, 0.0, 0.0, -0.000579833984375, 0.0, -0.0025167465209960938, -5.7220458984375e-06, -0.0012007950572296977, -0.0004235506057739258, -1.9073486328125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -2.7060508728027344e-05, 0.0, -0.00026702880859375, -0.0001811981201171875, -4.38690185546875e-05, -1.9073451085205306e-06, -1.7881295207189396e-05, -4.172321496298537e-06, -1.6689286894688848e-06], "score": -9.12813297388714, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 51, 129, 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())],\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "ElvenArcher", "hole2": [{"value": {"args": [{"s": "Elven Archer", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"elts": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "_type": "List"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}], "index": 28}
{"beams": [{"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -0.3396272659301758, -2.47955322265625e-05, -0.005213737487792969, -0.00040435791015625, -0.000202178955078125, -0.0021158456802368164, -2.09808349609375e-05], "score": -0.36760147848414704, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -5.683943271636963, -0.0039310455322265625, -9.1552734375e-05, -1.71661376953125e-05, -6.4849853515625e-05, -0.001264810562133789, -3.576278118089249e-07, -0.30830955505371094, -1.52587890625e-05, -0.013962745666503906, -0.000293731689453125, -0.0001811981201171875, -0.0025709867477416992, -4.57763671875e-05], "score": -6.030581545562143, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "Spell", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, Spell, game):\n        super().use(player, game)\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "Spell", "hole6": [{"_type": "Template10"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -3.39498233795166, -0.0038204193115234375, -0.06671142578125, -2.86102294921875e-05, -2.288818359375e-05, -8.58306884765625e-05, -1.9073486328125e-06, -1.560081958770752, -0.00047327164793387055, -0.16349315643310547, -0.0049896240234375, -0.001708984375, -0.0001239776611328125, -3.0517578125e-05, -5.7220458984375e-06, -0.11087169498205185, -1.1920928244535389e-07, -6.29425048828125e-05, -0.03265571594238281, -8.0108642578125e-05, -0.009077072143554688, -0.008055427111685276, -2.0265558760002023e-06, -0.1767110824584961, -0.00020599365234375, -0.0031948089599609375, -0.0001125335693359375, 0.0, -0.029100531712174416, 0.0, -0.000110626220703125, -0.1078958511352539, -0.0001354217529296875, -0.0053424835205078125, -0.006336171645671129, -3.099436753473128e-06, -0.3650493621826172, -0.0032758712768554688, -0.10596942901611328, -0.0023369789123535156, 0.0, -0.04942131042480469, -0.34102439880371094, -0.04721641540527344, -0.0003553628921508789, 0.0], "score": -6.621155788253837, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 18, 106, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 79, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = len(player.hand) - len(player.hand)\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"op": {"_type": "Sub"}, "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "right": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "BinOp"}, "_type": "Assign"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -6.668670177459717, -0.3095388412475586], "score": -6.998201334860795, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 217, 92], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -1.7824393510818481, -1.1920928244535389e-07, -0.00445938017219305, -8.58306884765625e-06, -0.04040050506591797, -0.00043487548828125, -0.0036830902099609375, -0.18798446655273438, -1.9073486328125e-06, -0.21620523929595947, 0.0, -0.3493318557739258, -0.0038623809814453125, -9.5367431640625e-06, -0.0064525604248046875, -1.33514404296875e-05, -1.3820858001708984, -0.0007343292236328125, -0.0001239776611328125, 0.0, -2.47955322265625e-05, -0.005127027630805969, -3.6954811548639555e-06, -0.0069789886474609375, -0.001598358154296875, -0.009307861328125, -0.000274658203125, -0.001094818115234375, -0.0033664703369140625, -0.026830077171325684, -1.9073486328125e-06, -0.0001354217529296875, -0.09509468078613281, -0.4992103576660156, -0.00722503662109375, -0.00292205810546875, 0.0, -0.001720428466796875, -0.031162261962890625, -0.029462814331054688, -0.00390625, 0.0], "score": -7.20271859411644, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "query", "<EOS>", "<UNK>", "<EOS>", 207, 73, 73, 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 28, 144, 17, 104, 42, "hand", "<EOS>", 80, 125, 44, 190, 100, 38, "player", "<EOS>", 42, 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = query.<UNK>(player, player, self)\n        player.hand[-1].player = player\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"_type": "Template38"}, {"_type": "Template38"}, {"id": "self", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"id": "query", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "player", "value": {"slice": {"value": {"op": {"_type": "USub"}, "operand": {"_type": "Template34"}, "_type": "UnaryOp"}, "_type": "Index"}, "value": {"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Subscript"}, "_type": "Attribute"}], "value": {"_type": "Template38"}, "_type": "Assign"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -7.0396833419799805, -0.013309478759765625, -0.0012607574462890625, -5.53131103515625e-05, -0.00010144705447601154, 0.0, -0.0006387233734130859, -1.9073486328125e-06, -0.0063832346349954605, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0009261369705200195, -4.768370445162873e-07, -0.3574056625366211, -9.5367431640625e-06, -0.03155326843261719, -0.0019540786743164062, -3.814697265625e-05, -0.0014661550521850586, -1.9073486328125e-05], "score": -7.465267902724804, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -1.6078797578811646, -1.1920928244535389e-07, -0.05781435966491699, 0.0, -0.000789642333984375, -0.6822900772094727, 0.0, -0.8155310153961182, -0.0008470999309793115, -0.10761547088623047, -0.000278472900390625, -1.9073486328125e-05, -0.11556434631347656, -5.7220458984375e-06, -0.6817493438720703, -0.0026159286499023438, -5.7220458984375e-05, 0.0, -0.005611419677734375, -0.007931763306260109, -5.006777428206988e-06, -0.009749412536621094, -0.0018329620361328125, -0.07177448272705078, -0.001148223876953125, -0.002185821533203125, -0.002246856689453125, -0.0313342809677124, -3.933906555175781e-06, -8.20159912109375e-05, -0.08127212524414062, -0.6302099227905273, -0.008762359619140625, -0.00269317626953125, -1.9073486328125e-06, -0.0014047622680664062, -0.029127120971679688, -0.04993629455566406, -0.0035982131958007812, 0.0], "score": -7.513009029090362, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 82, 103, 205, 45, 104, 28, 144, 17, 104, 42, "hand", "<EOS>", 80, 125, 44, 190, 100, 38, "player", "<EOS>", 42, 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = copy.copy(<UNK>)\n        player.hand[-1].player = player\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "player", "value": {"slice": {"value": {"op": {"_type": "USub"}, "operand": {"_type": "Template34"}, "_type": "UnaryOp"}, "_type": "Index"}, "value": {"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Subscript"}, "_type": "Attribute"}], "value": {"_type": "Template38"}, "_type": "Assign"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9820627570152283, -3.099440846199286e-06, -0.15058040618896484, -0.06284713745117188, -0.014183998107910156, -5.7220458984375e-06, -0.024884020909667015, -0.18590378761291504, -7.152555099310121e-07, -0.012060165405273438, -4.00543212890625e-05, -1.9073486328125e-06, -0.09222351014614105, -1.3828268492943607e-05, -0.2608184814453125, -0.07324790954589844, -0.006032219622284174, -0.0048754215240478516, -7.2479248046875e-05, -0.2998523712158203, -0.010424613952636719, -0.00836944580078125, -0.0028209686279296875, -1.52587890625e-05, -0.0048065185546875, -6.103515625e-05, -0.5520452260971069, -4.291534423828125e-06, -0.1403179168701172, -0.026506423950195312, -6.103515625e-05, -0.000102996826171875, -0.061377525329589844, -5.7220458984375e-06, -0.38430023193359375, -2.0265579223632812e-06, -0.0013877059100195765, -2.5510777049930766e-05, -0.053854942321777344, -0.0001888275146484375, -0.008910179138183594, -0.11882305145263672, 0.0, -0.4456731975078583, -2.0265579223632812e-06, -0.6306028366088867, -0.0007228851318359375, -1.9073486328125e-06, -0.739222526550293, -7.62939453125e-06, -0.05423927307128906, -7.62939453125e-06, -0.8126614093780518, -3.2305197237292305e-05, -0.243461012840271, 0.0, -0.029303550720214844, -2.6702880859375e-05, -0.0003528594970703125, -3.933906555175781e-06, -0.062591552734375, -0.3954620361328125, -0.29691505432128906, -5.7220458984375e-05, -0.005934685468673706, -0.00010192165791522712, -0.22685861587524414, 0.0], "score": -8.985760175952208, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "query", "<EOS>", 20, 110, 25, 133, "Card", "Query", "<EOS>", 212, 76, 195, "conditions", "<EOS>", 33, 167, "Is", "Minion", "<EOS>", 205, 71, 82, 103, 205, 53, 133, "new_minon", "<EOS>", 20, 111, 17, 104, 25, 133, "query", "<EOS>", "<UNK>", "<EOS>", 207, 73, 73, 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "hammer", "<EOS>", "drawn", "<EOS>", 26, 134, "True", "<EOS>", 97, 165, 34, 171, "super", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        query = CardQuery(conditions=[IsMinion()])\n        new_minon = query.<UNK>(player, player, self)\n        hammer.drawn = True\n        super().<UNK>()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "query", "_type": "Name"}], "value": {"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"hole0": "IsMinion", "hole2": [{"_type": "Template36_expr_seq"}], "_type": "Template24"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "new_minon", "_type": "Name"}], "value": {"args": [{"_type": "Template38"}, {"_type": "Template38"}, {"id": "self", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"id": "query", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "drawn", "value": {"id": "hammer", "_type": "Name"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"hole0": {"hole0": "super", "_type": "Template25"}, "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9820627570152283, -3.099440846199286e-06, -0.15058040618896484, -0.06284713745117188, -0.014183998107910156, -5.7220458984375e-06, -0.024884020909667015, -0.18590378761291504, -7.152555099310121e-07, -0.012060165405273438, -4.00543212890625e-05, -1.9073486328125e-06, -0.09222351014614105, -1.3828268492943607e-05, -0.2608184814453125, -0.07324790954589844, -0.006032219622284174, -0.0048754215240478516, -7.2479248046875e-05, -0.2998523712158203, -0.010424613952636719, -0.00836944580078125, -0.0028209686279296875, -1.52587890625e-05, -0.0048065185546875, -6.103515625e-05, -0.5520452260971069, -4.291534423828125e-06, -0.1403179168701172, -0.026506423950195312, -6.103515625e-05, -0.000102996826171875, -0.061377525329589844, -5.7220458984375e-06, -0.38430023193359375, -2.0265579223632812e-06, -0.0013877059100195765, -2.5510777049930766e-05, -0.053854942321777344, -0.0001888275146484375, -0.008910179138183594, -0.11882305145263672, 0.0, -0.4456731975078583, -2.0265579223632812e-06, -0.6306028366088867, -0.0007228851318359375, -1.9073486328125e-06, -0.739222526550293, -7.62939453125e-06, -0.05423927307128906, -7.62939453125e-06, -1.5348930358886719, -3.933906555175781e-06, -0.20636427402496338, 0.0, -0.0249481201171875, -1.52587890625e-05, -0.000335693359375, -5.9604644775390625e-06, -0.10055351257324219, -0.6167535781860352, -0.2856760025024414, -7.82012939453125e-05, -0.00597196351736784, -0.0001240939600393176, -0.20321893692016602, -2.0265579223632812e-06], "score": -9.890941906944107, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "query", "<EOS>", 20, 110, 25, 133, "Card", "Query", "<EOS>", 212, 76, 195, "conditions", "<EOS>", 33, 167, "Is", "Minion", "<EOS>", 205, 71, 82, 103, 205, 53, 133, "new_minon", "<EOS>", 20, 111, 17, 104, 25, 133, "query", "<EOS>", "<UNK>", "<EOS>", 207, 73, 73, 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "demon_card", "<EOS>", "drawn", "<EOS>", 26, 134, "True", "<EOS>", 97, 165, 34, 171, "super", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        query = CardQuery(conditions=[IsMinion()])\n        new_minon = query.<UNK>(player, player, self)\n        demon_card.drawn = True\n        super().<UNK>()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "query", "_type": "Name"}], "value": {"func": {"id": "CardQuery", "_type": "Name"}, "keywords": [{"arg": "conditions", "value": {"hole0": "IsMinion", "hole2": [{"_type": "Template36_expr_seq"}], "_type": "Template24"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "new_minon", "_type": "Name"}], "value": {"args": [{"_type": "Template38"}, {"_type": "Template38"}, {"id": "self", "_type": "Name"}], "func": {"attr": "<UNK>", "value": {"id": "query", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "drawn", "value": {"id": "demon_card", "_type": "Name"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"hole0": {"hole0": "super", "_type": "Template25"}, "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -0.9356285333633423, -1.1920928244535389e-07, -1.5285184383392334, -9.655945177655667e-06, -0.0001735687255859375, -0.0051116943359375, -1.9073486328125e-06, -0.5524309277534485, -0.002074115676805377, -0.5193843841552734, -0.025786399841308594, -0.0023336410522460938, -5.7220458984375e-06, -0.22498267889022827, -7.176155486376956e-05, -0.008780308067798615, -1.8596509107737802e-05, -9.34600830078125e-05, -0.000377655029296875, -0.012104034423828125, -1.9073486328125e-06, -0.0019074678421020508, 0.0, -0.011656761169433594, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00015091896057128906, -1.9073486328125e-06, -1.9073486328125e-06, -0.00273895263671875, -5.7220458984375e-06, -0.0001773834228515625, -0.009282827377319336, 0.0, -0.893092155456543, -0.014967918395996094, -0.12611007690429688, -4.76837158203125e-05, -0.7907953262329102, -0.0006694793701171875, -3.814697265625e-06, -1.1444091796875e-05, -0.004719733260571957, -1.9073486328125e-06, -2.09808349609375e-05, -0.9577350616455078, -2.47955322265625e-05, -0.004062652587890625, -0.00891799759119749, -2.264974000354414e-06, -2.47955322265625e-05, -0.025666236877441406, -6.67572021484375e-05, -0.0004215240478515625, -7.62939453125e-06, -0.007310523651540279, -2.6702880859375e-05, -0.0302734375, -0.025221824645996094, -0.000713348388671875, -0.0009899139404296875, -0.0002880096435546875, -0.0009613037109375, -0.28809571266174316, -1.728534698486328e-05, -0.045027732849121094, -0.007039070129394531, -0.03674030303955078, -0.00054931640625, -0.0014495849609375, -0.25736522674560547, -0.0361940860748291, -9.655952453613281e-06, -0.00249481201171875, -1.1444091796875e-05, -0.000835418701171875, -0.027096223086118698, -7.62939453125e-06, -0.008501052856445312, 0.0, -1.4087238311767578, 0.0, -0.04703712463378906, -0.0010528564453125, -0.0025920867919921875, -0.0028314590454101562, -1.9073486328125e-06, -0.014980316162109375, -0.008340835571289062, -0.0017185211181640625, -0.002460479736328125, -3.814697265625e-06], "score": -11.437191483550286, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>", 217, 83, 105, 17, 104, 42, "mana", "<EOS>", 78, 38, 218, 97, 166, 42, "trigger", "<EOS>", 206, 56, 142, "card_drawn", "<EOS>", 53, 133, "chosen_card", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = game.random_choice(<UNK>)\n        <UNK>.summon(player, game, len(player.minions))\n        if len(player.hand) < 10:\n            player.mana += 1\n        else:\n            player.trigger('card_drawn', chosen_card)\n            player.draw()\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}, {"body": [{"target": {"attr": "mana", "value": {"_type": "Template38"}, "_type": "Attribute"}, "op": {"_type": "Add"}, "value": {"_type": "Template34"}, "_type": "AugAssign"}], "test": {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole0": {"_type": "Template38"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "chosen_card", "_type": "Name"}], "hole1": "trigger", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "_type": "If"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -0.9356285333633423, -1.1920928244535389e-07, -1.5285184383392334, -9.655945177655667e-06, -0.0001735687255859375, -0.0051116943359375, -1.9073486328125e-06, -0.5524309277534485, -0.002074115676805377, -0.5193843841552734, -0.025786399841308594, -0.0023336410522460938, -5.7220458984375e-06, -0.22498267889022827, -7.176155486376956e-05, -0.008780308067798615, -1.8596509107737802e-05, -9.34600830078125e-05, -0.000377655029296875, -0.012104034423828125, -1.9073486328125e-06, -0.0019074678421020508, 0.0, -0.011656761169433594, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00015091896057128906, -1.9073486328125e-06, -1.9073486328125e-06, -0.00273895263671875, -5.7220458984375e-06, -0.0001773834228515625, -0.009282827377319336, 0.0, -0.893092155456543, -0.014967918395996094, -0.12611007690429688, -4.76837158203125e-05, -0.7907953262329102, -0.0006694793701171875, -3.814697265625e-06, -1.1444091796875e-05, -0.004719733260571957, -1.9073486328125e-06, -2.09808349609375e-05, -0.9577350616455078, -2.47955322265625e-05, -0.004062652587890625, -0.00891799759119749, -2.264974000354414e-06, -2.47955322265625e-05, -0.025666236877441406, -6.67572021484375e-05, -0.0004215240478515625, -7.62939453125e-06, -0.007310523651540279, -2.6702880859375e-05, -0.0302734375, -0.025221824645996094, -0.000713348388671875, -0.0009899139404296875, -0.0002880096435546875, -0.0009613037109375, -0.28809571266174316, -1.728534698486328e-05, -0.045027732849121094, -0.007039070129394531, -0.03674030303955078, -0.00054931640625, -0.0014495849609375, -0.25736522674560547, -0.0361940860748291, -9.655952453613281e-06, -0.00249481201171875, -1.1444091796875e-05, -0.000835418701171875, -0.027096223086118698, -7.62939453125e-06, -0.008501052856445312, 0.0, -1.8967607021331787, -2.1457672119140625e-06, -0.02907848358154297, -0.0006866455078125, -0.0058193206787109375, -0.0023088455200195312, -3.814697265625e-06, -0.019530296325683594, -0.00482940673828125, -0.0012149810791015625, -0.0027589797973632812, -1.9073486328125e-06], "score": -11.91044377999804, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>", 217, 83, 105, 17, 104, 42, "mana", "<EOS>", 78, 38, 218, 97, 166, 42, "trigger", "<EOS>", 206, 56, 142, "card_drawn", "<EOS>", 53, 133, "reduce_cost", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = game.random_choice(<UNK>)\n        <UNK>.summon(player, game, len(player.minions))\n        if len(player.hand) < 10:\n            player.mana += 1\n        else:\n            player.trigger('card_drawn', reduce_cost)\n            player.draw()\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}, {"body": [{"target": {"attr": "mana", "value": {"_type": "Template38"}, "_type": "Attribute"}, "op": {"_type": "Add"}, "value": {"_type": "Template34"}, "_type": "AugAssign"}], "test": {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole0": {"_type": "Template38"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "hole1": "trigger", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "_type": "If"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -0.9356285333633423, -1.1920928244535389e-07, -1.5285184383392334, -9.655945177655667e-06, -0.0001735687255859375, -0.0051116943359375, -1.9073486328125e-06, -0.5524309277534485, -0.002074115676805377, -0.5193843841552734, -0.025786399841308594, -0.0023336410522460938, -5.7220458984375e-06, -0.22498267889022827, -7.176155486376956e-05, -0.008780308067798615, -1.8596509107737802e-05, -9.34600830078125e-05, -0.000377655029296875, -0.012104034423828125, -1.9073486328125e-06, -0.0019074678421020508, 0.0, -0.011656761169433594, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00015091896057128906, -1.9073486328125e-06, -1.9073486328125e-06, -0.00273895263671875, -5.7220458984375e-06, -0.0001773834228515625, -0.009282827377319336, 0.0, -0.893092155456543, -0.014967918395996094, -0.12611007690429688, -4.76837158203125e-05, -0.7907953262329102, -0.0006694793701171875, -3.814697265625e-06, -1.1444091796875e-05, -0.004719733260571957, -1.9073486328125e-06, -2.09808349609375e-05, -0.9577350616455078, -2.47955322265625e-05, -0.004062652587890625, -0.00891799759119749, -2.264974000354414e-06, -2.47955322265625e-05, -0.025666236877441406, -6.67572021484375e-05, -0.0004215240478515625, -7.62939453125e-06, -0.007310523651540279, -2.6702880859375e-05, -0.0302734375, -0.025221824645996094, -0.000713348388671875, -0.0009899139404296875, -0.0002880096435546875, -0.0009613037109375, -0.28809571266174316, -1.728534698486328e-05, -0.045027732849121094, -0.007039070129394531, -0.03674030303955078, -0.00054931640625, -0.0014495849609375, -0.25736522674560547, -0.0361940860748291, -9.655952453613281e-06, -0.00249481201171875, -1.1444091796875e-05, -0.000835418701171875, -0.027096223086118698, -7.62939453125e-06, -0.008501052856445312, 0.0, -2.328761100769043, -1.9073486328125e-06, -0.04511833190917969, -0.012066841125488281, -0.00502777099609375, -0.004391670227050781, -3.814697265625e-06, -0.030533790588378906, -0.023161888122558594, -0.0004558563232421875, -0.005475044250488281, -3.814697265625e-06], "score": -12.402450081877923, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>", 217, 83, 105, 17, 104, 42, "mana", "<EOS>", 78, 38, 218, 97, 166, 42, "trigger", "<EOS>", 206, 56, 142, "card_drawn", "<EOS>", 53, 133, "demon_card", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = game.random_choice(<UNK>)\n        <UNK>.summon(player, game, len(player.minions))\n        if len(player.hand) < 10:\n            player.mana += 1\n        else:\n            player.trigger('card_drawn', demon_card)\n            player.draw()\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"attr": "random_choice", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}, {"body": [{"target": {"attr": "mana", "value": {"_type": "Template38"}, "_type": "Attribute"}, "op": {"_type": "Add"}, "value": {"_type": "Template34"}, "_type": "AugAssign"}], "test": {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole0": {"_type": "Template38"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "demon_card", "_type": "Name"}], "hole1": "trigger", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "_type": "If"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -0.9356285333633423, -1.1920928244535389e-07, -0.35606837272644043, -5.9604644775390625e-06, -0.0015621185302734375, -0.17406749725341797, -0.0001010894775390625, -0.22038650512695312, 0.0, -0.15990924835205078, -1.0373938083648682, 0.0, -0.8192248344421387, -1.1920928244535389e-07, -0.02606201171875, -0.0016002655029296875, -0.0001468658447265625, -0.0009670257568359375, -0.27348625659942627, -1.9073486328125e-06, -0.2799816131591797, -0.0003681182861328125, -0.009916305541992188, -0.003559112548828125, -7.62939453125e-06, 0.0, -0.018274782225489616, 0.0, -6.866455078125e-05, -0.007534027099609375, -4.9591064453125e-05, -0.013926506042480469, -0.10914944112300873, -7.152555099310121e-07, -4.1961669921875e-05, -0.06797027587890625, -9.72747802734375e-05, -0.0004425048828125, -9.5367431640625e-06, -0.0289048720151186, -1.52587890625e-05, -0.2078561782836914, -6.4849853515625e-05, -0.0001373291015625, -5.7220458984375e-06, -2.86102294921875e-05, -1.0643764734268188, -1.1920928244535389e-07, -0.01896381378173828, -0.10247802734375, -0.009002685546875, -3.24249267578125e-05, -6.29425048828125e-05, -5.7220458984375e-06, -0.029880523681640625, 0.0, -0.9229879379272461, 0.0, -0.000453948974609375, -1.71661376953125e-05, -0.0124359130859375, 0.0, -0.046179525554180145, -1.1920928244535389e-07, -0.006993685849010944, -1.9073486328125e-06, -0.1290012151002884, -1.8477303456165828e-05, -1.5469887256622314, -0.4368565082550049, -1.7523765563964844e-05, -0.050820350646972656, -0.0005893707275390625, -2.09808349609375e-05, -0.23804473876953125, -3.4332275390625e-05, -0.0453643798828125, -0.000522613525390625, -9.918212890625e-05, 0.0, -0.0002040863037109375, -0.018963932991027832, -2.3841855067985307e-07, -0.013263702392578125, -0.001316070556640625, -0.004492759704589844, -0.0001125335693359375, -0.000217437744140625, -0.004075050354003906, -0.004305005073547363, -3.814697265625e-06, -6.67572021484375e-05, -0.07110118865966797, -0.5783395767211914, -0.044875144958496094, -0.006939888000488281, 0.0], "score": -12.664591259198119, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_draw", "<EOS>", 206, 45, 104, 17, 104, 42, "hero", "<EOS>", "power", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>", 82, 103, 205, 53, 133, "new_minon", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Worthless", "Imp", "<EOS>", 82, 103, 205, 45, 104, 28, 144, 17, 104, 42, "hand", "<EOS>", 80, 125, 44, 190, 100, 38, "player", "<EOS>", 42, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = game.random_draw(player.hero.power, lambda x: len(player.\n            hand) < 10)\n        new_minon = hearthbreaker.cards.minions.<UNK>.WorthlessImp()\n        player.hand[-1].player = player\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"attr": "power", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, {"body": {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "random_draw", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "new_minon", "_type": "Name"}], "value": {"func": {"attr": "WorthlessImp", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "player", "value": {"slice": {"value": {"op": {"_type": "USub"}, "operand": {"_type": "Template34"}, "_type": "UnaryOp"}, "_type": "Index"}, "value": {"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Subscript"}, "_type": "Attribute"}], "value": {"_type": "Template38"}, "_type": "Assign"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -0.9356285333633423, -1.1920928244535389e-07, -0.35606837272644043, -5.9604644775390625e-06, -0.0015621185302734375, -0.17406749725341797, -0.0001010894775390625, -0.22038650512695312, 0.0, -0.15990924835205078, -1.0373938083648682, 0.0, -0.8192248344421387, -1.1920928244535389e-07, -0.02606201171875, -0.0016002655029296875, -0.0001468658447265625, -0.0009670257568359375, -0.27348625659942627, -1.9073486328125e-06, -0.2799816131591797, -0.0003681182861328125, -0.009916305541992188, -0.003559112548828125, -7.62939453125e-06, 0.0, -0.018274782225489616, 0.0, -6.866455078125e-05, -0.007534027099609375, -4.9591064453125e-05, -0.013926506042480469, -0.10914944112300873, -7.152555099310121e-07, -4.1961669921875e-05, -0.06797027587890625, -9.72747802734375e-05, -0.0004425048828125, -9.5367431640625e-06, -0.0289048720151186, -1.52587890625e-05, -0.2078561782836914, -6.4849853515625e-05, -0.0001373291015625, -5.7220458984375e-06, -2.86102294921875e-05, -1.0643764734268188, -1.1920928244535389e-07, -0.01896381378173828, -0.10247802734375, -0.009002685546875, -3.24249267578125e-05, -6.29425048828125e-05, -5.7220458984375e-06, -0.029880523681640625, 0.0, -0.9229879379272461, 0.0, -0.000453948974609375, -1.71661376953125e-05, -0.0124359130859375, 0.0, -0.046179525554180145, -1.1920928244535389e-07, -0.006993685849010944, -1.9073486328125e-06, -0.1290012151002884, -1.8477303456165828e-05, -1.400823950767517, -0.6563467979431152, -0.015636444091796875, -0.00012969970703125, -5.7220458984375e-06, -0.4396324157714844, -0.0001087188720703125, -0.1417531967163086, -0.000385284423828125, -6.866455078125e-05, 0.0, -0.000125885009765625, -0.013465642929077148, -1.1920928244535389e-07, -0.007632255554199219, -0.0014057159423828125, -0.0037937164306640625, -0.0001621246337890625, -0.0002231597900390625, -0.0033540725708007812, -0.0040580034255981445, -3.814697265625e-06, -8.20159912109375e-05, -0.047054290771484375, -0.5611734390258789, -0.07275676727294922, -0.00659942626953125, 0.0], "score": -12.973736709790181, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_draw", "<EOS>", 206, 45, 104, 17, 104, 42, "hero", "<EOS>", "power", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>", 82, 103, 205, 53, 133, "new_minon", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Mana", "<EOS>", 82, 103, 205, 45, 104, 28, 144, 17, 104, 42, "hand", "<EOS>", 80, 125, 44, 190, 100, 38, "player", "<EOS>", 42, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = game.random_draw(player.hero.power, lambda x: len(player.\n            hand) < 10)\n        new_minon = hearthbreaker.cards.minions.<UNK>.Mana()\n        player.hand[-1].player = player\n        player.draw()\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"attr": "power", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, {"body": {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "random_draw", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "new_minon", "_type": "Name"}], "value": {"func": {"attr": "Mana", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "player", "value": {"slice": {"value": {"op": {"_type": "USub"}, "operand": {"_type": "Template34"}, "_type": "UnaryOp"}, "_type": "Index"}, "value": {"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Subscript"}, "_type": "Attribute"}], "value": {"_type": "Template38"}, "_type": "Assign"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -1.4734182357788086, -0.000244140625, -0.0028066635131835938, -0.00083160400390625, -1.52587890625e-05, -8.7738037109375e-05, 0.0, -0.9210461974143982, -2.3841855067985307e-07, -0.01673412322998047, -0.037329673767089844, -0.00021839141845703125, -4.76837158203125e-05, -0.02625751495361328, -9.5367431640625e-06, -0.9356285333633423, -1.1920928244535389e-07, -0.35606837272644043, -5.9604644775390625e-06, -0.0015621185302734375, -0.17406749725341797, -0.0001010894775390625, -0.22038650512695312, 0.0, -0.15990924835205078, -1.0373938083648682, 0.0, -0.8192248344421387, -1.1920928244535389e-07, -0.02606201171875, -0.0016002655029296875, -0.0001468658447265625, -0.0009670257568359375, -0.27348625659942627, -1.9073486328125e-06, -0.2799816131591797, -0.0003681182861328125, -0.009916305541992188, -0.003559112548828125, -7.62939453125e-06, 0.0, -0.018274782225489616, 0.0, -6.866455078125e-05, -0.007534027099609375, -4.9591064453125e-05, -0.013926506042480469, -0.10914944112300873, -7.152555099310121e-07, -4.1961669921875e-05, -0.06797027587890625, -9.72747802734375e-05, -0.0004425048828125, -9.5367431640625e-06, -0.0289048720151186, -1.52587890625e-05, -0.2078561782836914, -6.4849853515625e-05, -0.0001373291015625, -5.7220458984375e-06, -2.86102294921875e-05, -1.0643764734268188, -1.1920928244535389e-07, -0.01896381378173828, -0.10247802734375, -0.009002685546875, -3.24249267578125e-05, -6.29425048828125e-05, -5.7220458984375e-06, -0.029880523681640625, 0.0, -0.9229879379272461, 0.0, -0.000453948974609375, -1.71661376953125e-05, -0.0124359130859375, 0.0, -0.046179525554180145, -1.1920928244535389e-07, -0.006993685849010944, -1.9073486328125e-06, -0.1290012151002884, -1.8477303456165828e-05, -1.5469887256622314, -0.4368565082550049, -1.7523765563964844e-05, -0.050820350646972656, -0.0005893707275390625, -2.09808349609375e-05, -0.23804473876953125, -3.4332275390625e-05, -0.0453643798828125, -0.000522613525390625, -9.918212890625e-05, 0.0, -0.0002040863037109375, -0.018963932991027832, -2.3841855067985307e-07, -0.013263702392578125, -0.001316070556640625, -0.004492759704589844, -0.0001125335693359375, -0.000217437744140625, -0.004075050354003906, -0.004305005073547363, -3.814697265625e-06, -6.67572021484375e-05, -0.07110118865966797, -0.8243789672851562, -0.24710750579833984, -0.02076435089111328, 0.0, -0.30294036865234375, -2.09808349609375e-05, -0.00092315673828125, -0.013049242086708546, -1.9073486328125e-06, -0.0043468475341796875, -1.9073486328125e-06, -1.3502850532531738, 0.0], "score": -14.798256937289466, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "amount", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_draw", "<EOS>", 206, 45, 104, 17, 104, 42, "hero", "<EOS>", "power", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "hand", "<EOS>", 202, 14, 205, 55, 138, "10", "<EOS>", 82, 103, 205, 53, 133, "new_minon", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Worthless", "Imp", "<EOS>", 82, 103, 205, 45, 104, 28, 144, 17, 104, 42, "hand", "<EOS>", 80, 125, 44, 190, 100, 38, "player", "<EOS>", 42, 97, 166, 42, "trigger", "<EOS>", 206, 56, 142, "card_drawn", "<EOS>", 53, 133, "chosen_card", "<EOS>"], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        amount = game.random_draw(player.hero.power, lambda x: len(player.\n            hand) < 10)\n        new_minon = hearthbreaker.cards.minions.<UNK>.WorthlessImp()\n        player.hand[-1].player = player\n        player.trigger('card_drawn', chosen_card)\n", "model_output": {"hole0": "ExcessMana", "hole2": [{"value": {"args": [{"s": "Excess Mana", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "amount", "_type": "Name"}], "value": {"args": [{"attr": "power", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, {"body": {"comparators": [{"n": 10, "_type": "Num"}], "left": {"args": [{"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "random_draw", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "new_minon", "_type": "Name"}], "value": {"func": {"attr": "WorthlessImp", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "player", "value": {"slice": {"value": {"op": {"_type": "USub"}, "operand": {"_type": "Template34"}, "_type": "UnaryOp"}, "_type": "Index"}, "value": {"attr": "hand", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Subscript"}, "_type": "Attribute"}], "value": {"_type": "Template38"}, "_type": "Assign"}, {"hole0": {"_type": "Template38"}, "hole2": [{"s": "card_drawn", "_type": "Str"}, {"id": "chosen_card", "_type": "Name"}], "hole1": "trigger", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 29}
{"beams": [{"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -0.024832725524902344, -0.001049041748046875, -0.0012950897216796875, -0.0001430511474609375, -3.24249267578125e-05, -0.000316619873046875, -0.0001163482666015625, 0.0, -0.000286102294921875, 0.0, -0.028095245361328125, -1.9073486328125e-06, -0.005313873291015625, -0.0002956390380859375, -0.000476837158203125, -4.1961669921875e-05, -0.0001468658447265625, -7.62939453125e-06, -0.00628662109375, -9.5367431640625e-06, -0.007637977600097656, 0.0, -0.005451202392578125, -3.814697265625e-06, -7.998938963282853e-05, 0.0, -0.0001239776611328125, -0.000202178955078125, -0.0011806488037109375, -0.0014972686767578125, 0.0, -0.000522613525390625, -0.0001773834228515625, -7.2479248046875e-05, -0.0007762908935546875, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001084446907043457, -1.9073486328125e-06, -0.0001506805419921875, -0.0003948211669921875, -4.57763671875e-05, -0.0002155303955078125, -3.814697265625e-06], "score": -0.40532946509772927, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.4330475330352783, -9.5367431640625e-06, -1.33514404296875e-05, -0.00025177001953125, -6.67572021484375e-05, -0.0018405914306640625, -7.43865966796875e-05, -0.05405426025390625, -2.86102294921875e-05, -2.288818359375e-05, -5.7220458984375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.86102294921875e-05, -4.38690185546875e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.00048065185546875, 0.0, -0.0001964569091796875, 0.0, -0.019066572189331055, -1.1444091796875e-05, -0.000640869140625, -7.62939453125e-05, -0.0036935806274414062, -3.814697265625e-06, -0.0046100616455078125, -8.7738037109375e-05, -0.06360912322998047, -0.0006237030029296875, -0.00042438507080078125, 0.0, -0.018671035766601562, -0.0007839202880859375, -0.03196144104003906, -2.47955322265625e-05, -0.009630203247070312, -1.1444091796875e-05, -0.029491424560546875, -8.7738037109375e-05, -0.0005931854248046875, -1.9073486328125e-06, -0.00020897388458251953, -1.9073486328125e-06, -0.005645155906677246, -3.814697265625e-06, -3.814697265625e-06, -0.024690628051757812, -0.001071929931640625, -0.0013256072998046875, -0.00014495849609375, -3.24249267578125e-05, -0.00031280517578125, -0.000110626220703125, 0.0, -0.0002899169921875, 0.0, -0.027940750122070312, -1.9073486328125e-06, -0.0051441192626953125, -0.000301361083984375, -0.0004787445068359375, -4.1961669921875e-05, -0.0001392364501953125, -7.62939453125e-06, -0.0065708160400390625, -1.1444091796875e-05, -0.0075778961181640625, 0.0, -0.005466461181640625, -3.814697265625e-06, -8.189673826564103e-05, 0.0, -0.0001220703125, -0.0002040863037109375, -0.001190185546875, -0.0014934539794921875, 0.0, -0.0005216598510742188, -0.000179290771484375, -7.2479248046875e-05, -0.0007781982421875, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001084446907043457, -1.9073486328125e-06, -0.0001506805419921875, -0.0003948211669921875, -4.57763671875e-05, -0.0002155303955078125, -3.814697265625e-06], "score": -2.7720856658881345, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -3.933112144470215, -0.000247955322265625, -0.0008754730224609375, -0.000316619873046875, -0.0002307891845703125, -0.0002040863037109375, -1.33514404296875e-05, 0.0, -0.00030422210693359375, -1.9073486328125e-06, -0.06143474578857422, -1.9073486328125e-06, -0.01183319091796875, -0.0002765655517578125, -0.0004329681396484375, -4.38690185546875e-05, -8.20159912109375e-05, -7.62939453125e-06, -0.0067806243896484375, -1.1444091796875e-05, -0.0071468353271484375, 0.0, -0.00380706787109375, -3.814697265625e-06, -8.118148980429396e-05, 0.0, -0.000118255615234375, -0.000209808349609375, -0.0012359619140625, -0.0014028549194335938, 0.0, -0.0005197525024414062, -0.0001850128173828125, -7.43865966796875e-05, -0.0007915496826171875, -4.76837158203125e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0010873079299926758, -1.9073486328125e-06, -0.000148773193359375, -0.000392913818359375, -4.76837158203125e-05, -0.000213623046875, -3.814697265625e-06], "score": -4.3506450645465335, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -3.623098373413086, -0.1832590103149414, -0.000400543212890625, -0.0002765655517578125, -0.0006084442138671875, -7.62939453125e-06, -0.00035250186920166016, -7.62939453125e-06, -0.012088656425476074, -3.933906555175781e-06, -0.00048828125, -0.35864734649658203, -8.20159912109375e-05, -0.049622535705566406, -0.00024318695068359375, -0.0002002716064453125, -0.0005741119384765625, -0.004169464111328125, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.07697391510009766, -3.814697265625e-06, -0.0070972442626953125, -0.0003662109375, -0.0002422332763671875, -1.71661376953125e-05, -0.000194549560546875, -3.814697265625e-06, -0.00457000732421875, -9.5367431640625e-06, -0.0078582763671875, 0.0, -0.00395965576171875, -3.814697265625e-06, -8.428091678069904e-05, 0.0, -0.0001010894775390625, -0.000225067138671875, -0.001354217529296875, -0.0014505386352539062, 0.0, -0.0005273818969726562, -0.000225067138671875, -7.82012939453125e-05, -0.0007610321044921875, -4.57763671875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0010949373245239258, -1.9073486328125e-06, -0.0001468658447265625, -0.000392913818359375, -4.57763671875e-05, -0.00021648406982421875, -3.814697265625e-06], "score": -4.62554776590985, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.calculate_attack() >= target.calculate_max_health() and\n            target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -0.024832725524902344, -0.001049041748046875, -0.0012950897216796875, -0.0001430511474609375, -3.24249267578125e-05, -0.000316619873046875, -0.0001163482666015625, 0.0, -0.000286102294921875, 0.0, -4.235065460205078, 0.0, -0.05470561981201172, -0.0005741119384765625, -0.0001049041748046875, -3.4332275390625e-05, -0.0001850128173828125, -9.5367431640625e-06, -0.004075050354003906, -9.5367431640625e-06, -0.008974075317382812, 0.0, -0.0057163238525390625, -3.814697265625e-06, -8.273121056845412e-05, 0.0, -0.0001373291015625, -0.0002231597900390625, -0.00124359130859375, -0.001773834228515625, 0.0, -0.0005359649658203125, -0.0001735687255859375, -7.2479248046875e-05, -0.000732421875, -4.38690185546875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0010777711868286133, -1.9073486328125e-06, -0.00014495849609375, -0.000396728515625, -4.38690185546875e-05, -0.00022602081298828125, -3.814697265625e-06], "score": -4.661358474924036, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -4.398153305053711, 0.0, -0.000362396240234375, -0.00017547607421875, -0.005367279052734375, -3.814697265625e-06, -0.0055522918701171875, -0.000213623046875, -0.042552947998046875, -0.0003795623779296875, -0.000377655029296875, 0.0, -0.007496833801269531, -0.000705718994140625, -0.024033546447753906, -3.0517578125e-05, -0.008818626403808594, -1.1444091796875e-05, -0.03058624267578125, -0.0001544952392578125, -0.0013027191162109375, -3.814697265625e-06, -0.00017082691192626953, -1.9073486328125e-06, -0.0074083805084228516, -3.814697265625e-06, -3.814697265625e-06, -0.02563953399658203, -0.0011844635009765625, -0.0010929107666015625, -0.00014495849609375, -3.4332275390625e-05, -0.000335693359375, -0.000118255615234375, 0.0, -0.00028228759765625, 0.0, -0.028232574462890625, -1.9073486328125e-06, -0.0047092437744140625, -0.0002841949462890625, -0.00048065185546875, -4.1961669921875e-05, -0.0001430511474609375, -7.62939453125e-06, -0.005328178405761719, -9.5367431640625e-06, -0.007458686828613281, 0.0, -0.0053577423095703125, -3.814697265625e-06, -7.998938963282853e-05, 0.0, -0.0001239776611328125, -0.0002040863037109375, -0.0012073516845703125, -0.0014934539794921875, 0.0, -0.0005207061767578125, -0.000179290771484375, -7.43865966796875e-05, -0.000774383544921875, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0010854005813598633, -1.9073486328125e-06, -0.000148773193359375, -0.0003948211669921875, -4.57763671875e-05, -0.00021648406982421875, -3.814697265625e-06], "score": -4.743684529489819, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -5.137819766998291, -1.9073486328125e-06, -4.38690185546875e-05, -8.0108642578125e-05, -6.29425048828125e-05, -0.011226654052734375, -0.00022125244140625, -0.0074329376220703125, -0.0001220703125, -2.86102294921875e-05, -6.4849853515625e-05, -3.814697265625e-06, -4.57763671875e-05, -3.4332275390625e-05, -4.76837158203125e-05, -7.62939453125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0003948211669921875, 0.0, -0.00018310546875, 0.0, -0.019619464874267578, -1.1444091796875e-05, -0.0008306503295898438, -8.58306884765625e-05, -0.0035762786865234375, -3.814697265625e-06, -0.005110740661621094, -7.82012939453125e-05, -0.07241344451904297, -0.0007076263427734375, -0.0004177093505859375, 0.0, -0.017719268798828125, -0.0007534027099609375, -0.031137466430664062, -2.288818359375e-05, -0.009571075439453125, -1.1444091796875e-05, -0.026752471923828125, -8.96453857421875e-05, -0.000576019287109375, -1.9073486328125e-06, -0.00022518634796142578, -1.9073486328125e-06, -0.005593657493591309, -3.814697265625e-06, -3.814697265625e-06, -0.024847984313964844, -0.001041412353515625, -0.00130462646484375, -0.0001430511474609375, -3.24249267578125e-05, -0.0003147125244140625, -0.0001125335693359375, 0.0, -0.000286102294921875, 0.0, -0.028238296508789062, -1.9073486328125e-06, -0.005336761474609375, -0.0002956390380859375, -0.0004749298095703125, -4.1961669921875e-05, -0.0001430511474609375, -7.62939453125e-06, -0.0063648223876953125, -1.1444091796875e-05, -0.007603645324707031, 0.0, -0.0054473876953125, -3.814697265625e-06, -7.998938963282853e-05, 0.0, -0.0001239776611328125, -0.000202178955078125, -0.001186370849609375, -0.001495361328125, 0.0, -0.000522613525390625, -0.0001773834228515625, -7.2479248046875e-05, -0.0007781982421875, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001084446907043457, -1.9073486328125e-06, -0.0001506805419921875, -0.0003948211669921875, -4.57763671875e-05, -0.0002155303955078125, -3.814697265625e-06], "score": -5.445384501642529, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -5.075562477111816, -3.62396240234375e-05, -0.0019588470458984375, -0.0002841949462890625, -2.09808349609375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -3.814697265625e-05, -2.86102294921875e-05, -5.53131103515625e-05, -1.1444091796875e-05, -2.6702880859375e-05, -9.5367431640625e-06, -0.00020599365234375, 0.0, -0.0001468658447265625, 0.0, -0.01918339729309082, -1.1444091796875e-05, -0.0003814697265625, -5.340576171875e-05, -0.0034656524658203125, -3.814697265625e-06, -0.005217552185058594, -7.82012939453125e-05, -0.06235790252685547, -0.00067138671875, -0.0004119873046875, 0.0, -0.018198013305664062, -0.000804901123046875, -0.031307220458984375, -2.47955322265625e-05, -0.009335517883300781, -1.1444091796875e-05, -0.0270233154296875, -8.7738037109375e-05, -0.0005931854248046875, -1.9073486328125e-06, -0.00022518634796142578, -1.9073486328125e-06, -0.00556027889251709, -3.814697265625e-06, -3.814697265625e-06, -0.02475261688232422, -0.0010395050048828125, -0.0013608932495117188, -0.0001468658447265625, -3.24249267578125e-05, -0.00030517578125, -0.0001163482666015625, 0.0, -0.0002899169921875, 0.0, -0.02766132354736328, -1.9073486328125e-06, -0.0052585601806640625, -0.00029754638671875, -0.0004749298095703125, -4.1961669921875e-05, -0.0001468658447265625, -7.62939453125e-06, -0.006534576416015625, -9.5367431640625e-06, -0.0077114105224609375, 0.0, -0.00548553466796875, -3.814697265625e-06, -8.189673826564103e-05, 0.0, -0.0001239776611328125, -0.000202178955078125, -0.001178741455078125, -0.0014982223510742188, 0.0, -0.000522613525390625, -0.0001773834228515625, -7.2479248046875e-05, -0.0007781982421875, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001084446907043457, -1.9073486328125e-06, -0.0001506805419921875, -0.0003948211669921875, -4.57763671875e-05, -0.0002155303955078125, -3.814697265625e-06], "score": -5.457761882967297, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "EPIC", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .EPIC, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "EPIC", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -5.353550910949707, -1.52587890625e-05, -1.71661376953125e-05, -0.0001583099365234375, -1.9073486328125e-06, -3.24249267578125e-05, -4.38690185546875e-05, -5.91278076171875e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -0.0004119873046875, 0.0, -0.0001697540283203125, 0.0, -0.030555367469787598, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0001218290053657256, 0.0, -6.4849853515625e-05, -0.0005741119384765625, -0.000102996826171875, -0.000240325927734375, -2.3841855067985307e-07, -0.0015954971313476562, -1.1444091796875e-05, -6.866455078125e-05, -0.0017948150634765625, -8.0108642578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.0020411014556884766, -1.9073486328125e-06, -0.000286102294921875, -0.00048828125, -4.57763671875e-05, -0.0002288818359375, -3.814697265625e-06], "score": -5.505818721018976, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -4.534405708312988, -3.814697265625e-05, -0.04170417785644531, 0.0, -0.07715225219726562, 0.0, -0.7558512687683105, 0.0, -0.0015430450439453125, -3.814697265625e-06, -6.556510925292969e-05, 0.0, -2.288818359375e-05, -2.47955322265625e-05, -4.57763671875e-05, -0.0002689361572265625, 0.0, -0.0028181076049804688, -9.5367431640625e-06, -4.57763671875e-05, -0.0004291534423828125, -1.9073486328125e-05, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -0.001088261604309082, -1.9073486328125e-06, -0.0001850128173828125, -0.00032806396484375, -3.0517578125e-05, -0.0002040863037109375, -3.814697265625e-06], "score": -5.641693710556119, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 17, 104, 25, 133, "target", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target:\n            target.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"attr": "<UNK>", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -0.024832725524902344, -0.001049041748046875, -0.0012950897216796875, -0.0001430511474609375, -3.24249267578125e-05, -0.000316619873046875, -0.0001163482666015625, 0.0, -0.000286102294921875, 0.0, -5.29747200012207, 0.0, -0.025709152221679688, -0.0002536773681640625, -0.000301361083984375, -0.00014495849609375, -2.288818359375e-05, -1.1444091796875e-05, -0.013345718383789062, -9.5367431640625e-06, -0.005627632141113281, 0.0, -0.0056667327880859375, -3.814697265625e-06, -7.390973041765392e-05, 0.0, -0.000133514404296875, -0.0002384185791015625, -0.0013637542724609375, -0.00146484375, 0.0, -0.000522613525390625, -0.000186920166015625, -7.43865966796875e-05, -0.000782012939453125, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0010825395584106445, -1.9073486328125e-06, -0.000148773193359375, -0.0003948211669921875, -4.57763671875e-05, -0.00021648406982421875, -3.814697265625e-06], "score": -5.700335859498573, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.spell_targetable() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -2.4330475330352783, -9.5367431640625e-06, -1.33514404296875e-05, -0.00025177001953125, -6.67572021484375e-05, -0.0018405914306640625, -7.43865966796875e-05, -3.2298812866210938, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.62396240234375e-05, -9.918212890625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, -0.000331878662109375, 0.0, -0.000156402587890625, 0.0, -0.030946016311645508, -9.5367431640625e-06, -4.1961669921875e-05, 0.0, -0.00012385525042191148, 0.0, -6.67572021484375e-05, -0.000591278076171875, -9.918212890625e-05, -0.000225067138671875, -2.3841855067985307e-07, -0.0016202926635742188, -1.1444091796875e-05, -6.866455078125e-05, -0.0018100738525390625, -8.0108642578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.001997232437133789, -1.9073486328125e-06, -0.0002880096435546875, -0.0004863739013671875, -4.57763671875e-05, -0.0002288818359375, -3.814697265625e-06], "score": -5.708209033854608, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -0.024832725524902344, -0.001049041748046875, -0.0012950897216796875, -0.0001430511474609375, -3.24249267578125e-05, -0.000316619873046875, -0.0001163482666015625, 0.0, -0.000286102294921875, 0.0, -0.028095245361328125, -1.9073486328125e-06, -0.005313873291015625, -0.0002956390380859375, -0.000476837158203125, -4.1961669921875e-05, -0.0001468658447265625, -7.62939453125e-06, -0.00628662109375, -9.5367431640625e-06, -0.007637977600097656, 0.0, -5.477116584777832, 0.0, -0.22689294815063477, -3.814697265625e-06, -0.0004253387451171875, -4.00543212890625e-05, -0.0002899169921875, -0.000774383544921875, 0.0, -0.000537872314453125, -0.0002117156982421875, -8.392333984375e-05, -0.000782012939453125, -5.91278076171875e-05, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -8.0108642578125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001126408576965332, -1.9073486328125e-06, -0.0001430511474609375, -0.0003814697265625, -4.76837158203125e-05, -0.00023365020751953125, -3.814697265625e-06], "score": -6.102467893829434, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "player", "<EOS>", "use", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def player(self, use, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "player", "_type": "Template0", "hole4": "use", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -0.024832725524902344, -0.001049041748046875, -0.0012950897216796875, -0.0001430511474609375, -3.24249267578125e-05, -0.000316619873046875, -0.0001163482666015625, 0.0, -0.000286102294921875, 0.0, -0.028095245361328125, -1.9073486328125e-06, -0.005313873291015625, -0.0002956390380859375, -0.000476837158203125, -4.1961669921875e-05, -0.0001468658447265625, -7.62939453125e-06, -0.00628662109375, -9.5367431640625e-06, -5.7371368408203125, 0.0, -0.0001621246337890625, -1.33514404296875e-05, -0.0001308908686041832, 0.0, -0.0001811981201171875, -0.0001125335693359375, -0.0012912750244140625, -0.0018014907836914062, 0.0, -0.0005207061767578125, -0.0001220703125, -6.4849853515625e-05, -0.000736236572265625, -4.9591064453125e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001069188117980957, -1.9073486328125e-06, -0.000133514404296875, -0.0004062652587890625, -4.57763671875e-05, -0.00022029876708984375, -3.814697265625e-06], "score": -6.129859088195353, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "targeting", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            targeting())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "targeting", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -6.074802398681641, -2.86102294921875e-05, -0.17480754852294922, -9.5367431640625e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.008394241333007812, -1.9073486328125e-06, -0.000179290771484375, -1.9073486328125e-06, -0.04309558868408203, -0.00011444091796875, -4.208087921142578e-05, 0.0, -0.00013768447388429195, 0.0, -5.7220458984375e-05, -0.000545501708984375, -8.392333984375e-05, -0.00017547607421875, -3.576278118089249e-07, -0.0017299652099609375, -1.33514404296875e-05, -7.05718994140625e-05, -0.0017185211181640625, -8.20159912109375e-05, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -3.254413604736328e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.0016520023345947266, -1.9073486328125e-06, -0.0003185272216796875, -0.0004863739013671875, -4.9591064453125e-05, -0.0002231597900390625, -3.814697265625e-06], "score": -6.455905553698464, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=hearthbreaker.\n            targeting.find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "Execute", "hole2": [{"value": {"args": [{"s": "Execute", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 30}
{"beams": [{"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -0.038840293884277344, -0.001277923583984375, -0.001667022705078125, -0.001979827880859375, -0.0023174285888671875, -4.1961669921875e-05, -0.0026671886444091797, -3.933906555175781e-06, -0.0004634857177734375, -6.29425048828125e-05, -0.0004596710205078125, -1.52587890625e-05, -0.0001773834228515625, 0.0, -0.0010014772415161133, 0.0, -0.00028228759765625, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011444091796875, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00025177001953125, 0.0, -0.00041794776916503906, -2.0265579223632812e-06, -0.0006642264197580516, -9.5367431640625e-06, -1.9073486328125e-05, -8.58306884765625e-05, -0.003528594970703125, -6.29425048828125e-05, 0.0, -0.00020241428865119815, 0.0, -0.00017631053924560547, 0.0, -1.9073486328125e-06, -0.0002918243408203125, -1.1444091796875e-05, -3.24249267578125e-05, -2.86102294921875e-05, -5.340576171875e-05, -0.0001761902531143278, -1.0728830375228426e-06, -5.53131103515625e-05, -0.000457763671875, -0.0005893707275390625, -2.86102294921875e-05, -0.001217961311340332, -1.9073486328125e-06, -0.0023288726806640625, -0.000225067138671875, -5.7220458984375e-05, -0.0019665956497192383, 0.0], "score": -0.07425319068337899, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -5.06201696395874, -0.0010051727294921875, -0.000110626220703125, -0.00141143798828125, -6.866455078125e-05, -2.09808349609375e-05, -0.012661218643188477, -5.7220458984375e-06, -0.0005397796630859375, -8.96453857421875e-05, -0.0007238388061523438, -1.71661376953125e-05, -0.0003376007080078125, 0.0, -0.00116729736328125, 0.0, -0.0002593994140625, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -8.58306884765625e-05, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0002460479736328125, 0.0, -0.00043511390686035156, -2.0265579223632812e-06, -0.0008078744285739958, -7.62939453125e-06, -2.09808349609375e-05, -9.1552734375e-05, -0.0027866363525390625, -6.103515625e-05, 0.0, -0.00018703719251789153, 0.0, -0.0001609325408935547, 0.0, -1.9073486328125e-06, -0.000301361083984375, -1.1444091796875e-05, -3.0517578125e-05, -2.6702880859375e-05, -5.53131103515625e-05, -0.00017547527386341244, -1.0728830375228426e-06, -6.4849853515625e-05, -0.000446319580078125, -0.0005016326904296875, -2.288818359375e-05, -0.001332402229309082, -1.9073486328125e-06], "score": -5.098244062199086, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -0.25573062896728516, -0.003473043441772461, 0.0, -0.000209808349609375, -0.0014801025390625, -5.7220458984375e-06, 0.0, -0.006381034851074219, 0.0, -0.1277618408203125, -0.4633197784423828, -0.5109462738037109, -3.62396240234375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0030775070190429688, 0.0, -0.0016803741455078125, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -0.00035858154296875, -3.814697265625e-06, -0.000213623046875, 0.0, -0.0002633333206176758, -1.1920928244535389e-07, -0.0025668113958090544, -3.814697265625e-06, -1.9073486328125e-06, -0.00177001953125, -0.000850677490234375, -6.67572021484375e-05, -3.814697265625e-06, -0.00016963478992693126, 0.0, -0.00018513202667236328, 0.0, -1.9073486328125e-06, -0.0001888275146484375, -1.33514404296875e-05, -2.09808349609375e-05, -2.6702880859375e-05, -7.62939453125e-06, -0.0005744603695347905, -1.5497195136049413e-06, -8.58306884765625e-05, -0.0007781982421875, -0.00019073486328125, -7.43865966796875e-05, -0.0016324520111083984, -1.9073486328125e-06], "score": -5.235371190115153, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -5.574172019958496, 0.0, -0.0011107921600341797, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.3020900445990264e-05, 0.0, -6.4849853515625e-05, -8.58306884765625e-05, -2.6702880859375e-05, -5.543231964111328e-05, -6.794924956921022e-06, -0.045088768005371094, -0.001270294189453125, -0.0016422271728515625, -0.0019741058349609375, -0.0023069381713867188, -4.00543212890625e-05, -0.0026814937591552734, -3.933906555175781e-06, -0.0004405975341796875, -6.67572021484375e-05, -0.00044918060302734375, -1.52587890625e-05, -0.0001544952392578125, 0.0, -0.0010224580764770508, 0.0, -0.0002880096435546875, 0.0, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.00041031837463378906, -2.0265579223632812e-06, -0.0006604117224924266, -9.5367431640625e-06, -1.9073486328125e-05, -8.58306884765625e-05, -0.00356292724609375, -6.29425048828125e-05, 0.0, -0.00020312948618084192, 0.0, -0.00017821788787841797, 0.0, -1.9073486328125e-06, -0.0002918243408203125, -1.1444091796875e-05, -3.24249267578125e-05, -2.86102294921875e-05, -5.53131103515625e-05, -0.00017833600577432662, -1.0728830375228426e-06, -5.53131103515625e-05, -0.0004558563232421875, -0.0005893707275390625, -2.6702880859375e-05, -0.001210331916809082, -1.9073486328125e-06, -0.002277374267578125, -0.0002269744873046875, -5.53131103515625e-05, -0.0019608736038208008, 0.0], "score": -5.651010621669997, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -6.009769439697266, -0.00091552734375, -0.014121055603027344, -0.000446319580078125, -0.000690460205078125, -8.58306884765625e-05, -0.00553131103515625, -5.7220458984375e-06, -0.000392913818359375, -9.918212890625e-05, -0.0009708404541015625, -9.5367431640625e-06, -0.0001621246337890625, 0.0, -0.0014287233352661133, 0.0, -0.000278472900390625, 0.0, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.5367431640625e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.000148773193359375, 0.0, -0.00037980079650878906, -2.0265579223632812e-06, -0.000943298393394798, -5.7220458984375e-06, -2.6702880859375e-05, -9.918212890625e-05, -0.0026073455810546875, -6.103515625e-05, 0.0, -0.00017559347907081246, 0.0, -0.0001628398895263672, 0.0, -1.9073486328125e-06, -0.00029754638671875, -1.1444091796875e-05, -3.0517578125e-05, -2.86102294921875e-05, -5.7220458984375e-05, -0.00017821697110775858, -9.536738616588991e-07, -6.29425048828125e-05, -0.000530242919921875, -0.0005359649658203125, -2.86102294921875e-05, -0.00128936767578125, -1.9073486328125e-06, -0.004764556884765625, -8.7738037109375e-05, -0.0008077621459960938, -0.002763509750366211, 0.0, -0.02425670623779297, -4.57763671875e-05, -1.33514404296875e-05, -0.0013631582260131836, 0.0, -0.05951499938964844, -6.29425048828125e-05, -9.5367431640625e-06, -0.0018638372421264648, -5.9604644775390625e-06, -0.10555362701416016, -0.00011444091796875, -7.62939453125e-06, -0.0023670196533203125, -1.7404556274414062e-05], "score": -6.2562364276491, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -0.25573062896728516, -0.003473043441772461, 0.0, -0.000209808349609375, -0.0014801025390625, -5.7220458984375e-06, 0.0, -0.006381034851074219, 0.0, -2.27303409576416, -1.71661376953125e-05, -0.0016536712646484375, 0.0, -0.0005512237548828125, -0.000354766845703125, -0.0046215057373046875, -0.0015277862548828125, -0.0001373291015625, -0.00016343487368430942, 0.0, -0.0004372596740722656, 0.0, -1.9073486328125e-06, -0.000400543212890625, -2.6702880859375e-05, -3.0517578125e-05, -5.7220458984375e-05, -3.814697265625e-06, -0.0006980816833674908, -4.887569048150908e-06, -4.76837158203125e-05, -0.001232147216796875, -0.00042724609375, -9.1552734375e-05, -0.0004962682723999023, -1.9073486328125e-06], "score": -6.4043583483394, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -1.4961271286010742, -1.33514404296875e-05, -0.07808303833007812, -1.9073486328125e-06, -0.00060272216796875, 0.0, -0.2549736499786377, -1.1920928244535389e-07, -0.019982175901532173, -5.7220458984375e-06, -0.13424205780029297, -0.022480010986328125, -1.9073486328125e-05, 0.0, -0.08212089538574219, 0.0, -0.062401771545410156, -0.0732107162475586, -0.6208763122558594, -3.4332275390625e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.006279945373535156, 0.0, -0.0013637542724609375, 0.0, -1.1444091796875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06, -0.0015735626220703125, -3.814697265625e-06, -0.0003910064697265625, 0.0, -0.0003148317337036133, -1.1920928244535389e-07, -0.0041021062061190605, -3.814697265625e-06, -1.9073486328125e-06, -0.0022258758544921875, -0.000766754150390625, -7.05718994140625e-05, -3.814697265625e-06, -0.00019097323820460588, 0.0, -0.00018894672393798828, 0.0, -1.9073486328125e-06, -0.0001888275146484375, -1.33514404296875e-05, -1.9073486328125e-05, -2.86102294921875e-05, -7.62939453125e-06, -0.000640142650809139, -1.7881377516459906e-06, -8.392333984375e-05, -0.0008640289306640625, -0.0001926422119140625, -9.1552734375e-05, -0.0015914440155029297, -1.9073486328125e-06], "score": -6.717769057525132, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -0.25573062896728516, -0.003473043441772461, 0.0, -0.000209808349609375, -0.0014801025390625, -5.7220458984375e-06, 0.0, -0.006381034851074219, 0.0, -0.1277618408203125, -0.9963626861572266, -0.00025177001953125, -2.86102294921875e-05, -0.05416882038116455, -7.557867502328008e-05, -7.43865966796875e-05, -0.0037832260131835938, -3.814697265625e-06, -0.03573787212371826, 0.0, -0.0024394989013671875, -3.0517578125e-05, -8.392333984375e-05, -0.0030434131622314453, 0.0, -0.6990089416503906, -0.013202667236328125, -0.0014276504516601562, -0.009916305541992188, -0.022832632064819336, -0.0001761913299560547, -0.02489948272705078, -0.0010204315185546875, -0.011707305908203125, -2.6702880859375e-05, -0.10355401039123535, 0.0, -0.0015058517456054688, -1.9073486328125e-06, -0.13174915313720703, -0.019585609436035156, -0.068450927734375, -0.022647857666015625, -3.814697265625e-06, -0.0007839202880859375, 0.0, -0.3262215852737427, 0.0], "score": -6.8009085358430355, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 112, 25, 133, "<UNK>", "<EOS>", 205, 53, 133, "targets", "<EOS>", 212, 76, 195, "<UNK>", "<EOS>", 22, 128, 2, 150, "m", "<EOS>", 17, 104, 25, 133, "m", "<EOS>", "<UNK>", "<EOS>", 217, 97, 165, 25, 133, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole1": "<UNK>", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "func": {"id": "<UNK>", "_type": "Name"}, "keywords": [{"arg": "<UNK>", "value": {"body": {"attr": "<UNK>", "value": {"id": "m", "_type": "Name"}, "_type": "Attribute"}, "args": {"hole0": "m", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -0.25573062896728516, -0.003473043441772461, 0.0, -0.000209808349609375, -0.0014801025390625, -5.7220458984375e-06, 0.0, -0.006381034851074219, 0.0, -0.1277618408203125, -0.9963626861572266, -0.00025177001953125, -2.86102294921875e-05, -0.05416882038116455, -7.557867502328008e-05, -7.43865966796875e-05, -0.0037832260131835938, -3.814697265625e-06, -0.03573787212371826, 0.0, -0.0024394989013671875, -3.0517578125e-05, -8.392333984375e-05, -0.0030434131622314453, 0.0, -1.0337858200073242, -7.05718994140625e-05, -0.002480868948623538, -6.794924956921022e-06, -0.08907699584960938, -0.0018634796142578125, -0.20125293731689453, -0.17250633239746094, -0.0019042491912841797, 0.0], "score": -6.845133636964846, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 112, 25, 133, "<UNK>", "<EOS>", 205, 53, 133, "targets", "<EOS>", 212, 76, 195, "<UNK>", "<EOS>", 27, 138, "0", "<EOS>", 217, 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in <UNK>(targets, <UNK>=0):\n            player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "func": {"id": "<UNK>", "_type": "Name"}, "keywords": [{"arg": "<UNK>", "value": {"n": 0, "_type": "Num"}, "_type": "keyword"}], "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -0.038840293884277344, -0.001277923583984375, -0.001667022705078125, -0.001979827880859375, -0.0023174285888671875, -4.1961669921875e-05, -6.8203935623168945, -1.1920922133867862e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.05399608612060547, -3.4332275390625e-05, -0.0002498626708984375, -1.9073486328125e-06, -0.0021458864212036133, 0.0, -0.000408172607421875, 0.0, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000133514404296875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0002384185791015625, 0.0, -0.00042748451232910156, -1.9073486328125e-06, -0.0006500398158095777, -1.1444091796875e-05, -1.9073486328125e-05, -8.7738037109375e-05, -0.0033817291259765625, -6.29425048828125e-05, 0.0, -0.00019502373470459133, 0.0, -0.00017631053924560547, 0.0, -1.9073486328125e-06, -0.0002918243408203125, -1.1444091796875e-05, -3.24249267578125e-05, -2.86102294921875e-05, -5.53131103515625e-05, -0.00017642865714151412, -1.0728830375228426e-06, -5.7220458984375e-05, -0.0004596710205078125, -0.0006160736083984375, -2.86102294921875e-05, -0.0011777877807617188, -1.9073486328125e-06, -0.0023365020751953125, -0.0002346038818359375, -5.53131103515625e-05, -0.0019675493240356445, 0.0], "score": -6.946284163826107, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for targets in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "targets", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -0.038840293884277344, -0.001277923583984375, -0.001667022705078125, -0.001979827880859375, -0.0023174285888671875, -4.1961669921875e-05, -0.0026671886444091797, -3.933906555175781e-06, -0.0004634857177734375, -6.29425048828125e-05, -0.0004596710205078125, -1.52587890625e-05, -0.0001773834228515625, 0.0, -0.0010014772415161133, 0.0, -0.00028228759765625, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011444091796875, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00025177001953125, 0.0, -0.00041794776916503906, -2.0265579223632812e-06, -0.0006642264197580516, -9.5367431640625e-06, -1.9073486328125e-05, -8.58306884765625e-05, -7.2098388671875, -0.0002346038818359375, -1.9073486328125e-06, -0.0003898142895195633, 0.0, -0.009678125381469727, -4.768370445162873e-07, -0.019012451171875, -0.0012569427490234375, -0.000118255615234375, -0.0032224655151367188, -5.7220458984375e-06], "score": -7.306516998240426, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 165, 25, 133, "minion", "<EOS>", "<UNK>", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.<UNK>()\n        player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole1": "<UNK>", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -0.038840293884277344, -0.001277923583984375, -7.065434455871582, -0.0021305084228515625, -0.00164031982421875, -1.9073486328125e-06, -0.5323171615600586, -3.24249267578125e-05, -0.019849777221679688, -1.1444091796875e-05, -0.022007107734680176, 0.0, -0.001480698585510254, -2.2649765014648438e-06, -0.018038079142570496, 0.0, -0.0038388967514038086, 0.0, -1.9073486328125e-06, -0.041611671447753906, -9.5367431640625e-06, -9.72747802734375e-05, -0.000133514404296875, -9.5367431640625e-06, -7.760524022160098e-05, -2.503394853192731e-06, -0.0001430511474609375, -0.0001010894775390625, -0.0003643035888671875, -1.52587890625e-05, -0.001520991325378418, -1.33514404296875e-05, -0.0010814666748046875, -0.0001430511474609375, -5.340576171875e-05, -0.003585219383239746, -3.814697265625e-06], "score": -7.765756652854378, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -0.25573062896728516, -0.003473043441772461, 0.0, -0.000209808349609375, -0.0014801025390625, -5.7220458984375e-06, 0.0, -0.006381034851074219, 0.0, -0.1277618408203125, -0.9963626861572266, -0.00025177001953125, -2.86102294921875e-05, -0.05416882038116455, -7.557867502328008e-05, -7.43865966796875e-05, -0.0037832260131835938, -3.814697265625e-06, -0.03573787212371826, 0.0, -0.0024394989013671875, -3.0517578125e-05, -8.392333984375e-05, -0.0030434131622314453, 0.0, -0.6990089416503906, -0.013202667236328125, -0.0014276504516601562, -0.009916305541992188, -0.022832632064819336, -0.0001761913299560547, -0.02489948272705078, -0.0010204315185546875, -0.011707305908203125, -2.6702880859375e-05, -0.10355401039123535, 0.0, -0.0015058517456054688, -1.9073486328125e-06, -0.13174915313720703, -0.019585609436035156, -0.068450927734375, -0.022647857666015625, -3.814697265625e-06, -0.0007839202880859375, 0.0, -1.6844502687454224, 0.0], "score": -8.159137219314715, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 112, 25, 133, "<UNK>", "<EOS>", 205, 53, 133, "targets", "<EOS>", 212, 76, 195, "<UNK>", "<EOS>", 22, 128, 2, 150, "m", "<EOS>", 17, 104, 25, 133, "m", "<EOS>", "<UNK>", "<EOS>", 217, 97, 165, 25, 133, "minion", "<EOS>", "damage", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.damage()\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "func": {"id": "<UNK>", "_type": "Name"}, "keywords": [{"arg": "<UNK>", "value": {"body": {"attr": "<UNK>", "value": {"id": "m", "_type": "Name"}, "_type": "Attribute"}, "args": {"hole0": "m", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -3.806446075439453, -0.000492095947265625, -0.00362396240234375, -0.000377655029296875, -0.00131988525390625, -0.000453948974609375, -1.71661376953125e-05, -0.0006299973465502262, -2.4914475943660364e-05, -0.000110626220703125, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.00235748291015625, -1.9073486328125e-06, -0.0002529621124267578, 0.0, -0.0002651214599609375, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.00041604042053222656, -2.0265579223632812e-06, -0.0006236962508410215, -9.5367431640625e-06, -0.003116607666015625, -0.0001506805419921875, -1.71661376953125e-05, 0.0, -0.0013248920440673828, 0.0, -0.0168759822845459, 0.0, -9.1552734375e-05, -5.14984130859375e-05, -1.9073486328125e-05, -0.25573062896728516, -0.003473043441772461, 0.0, -0.000209808349609375, -0.0014801025390625, -5.7220458984375e-06, 0.0, -0.006381034851074219, 0.0, -0.1277618408203125, -0.4633197784423828, -0.9185371398925781, -5.7220458984375e-06, -0.005773067474365234, 0.0, -0.000457763671875, -0.015530586242675781, -1.9073486328125e-05, -0.0020012042950838804, -4.1723224057932384e-06, -0.32845306396484375, -0.001522064208984375, -1.5329484939575195, -0.0002231597900390625, -0.001446843147277832, -1.9073486328125e-06, -3.814697265625e-06, -0.4883394241333008, 0.0, -0.13854917883872986, -1.1920928244535389e-07, -0.00023651123046875, -0.008312225341796875, -0.1196432113647461, -0.050942420959472656, -0.0003032684326171875, -0.0015722070820629597, 0.0, -0.0010968446731567383, 0.0, -3.814697265625e-06, -0.0003948211669921875, -1.9073486328125e-05, -3.24249267578125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002892007178161293, -5.960462772236497e-07, -7.82012939453125e-05, -0.000400543212890625, -0.00028228759765625, -1.33514404296875e-05, -0.001138925552368164, -1.9073486328125e-06], "score": -8.328018956167647, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 53, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in range(0, len(targets)):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FanOfKnives", "hole2": [{"hole0": "Fan of Knives", "hole2": "ROGUE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"args": [{"id": "targets", "_type": "Name"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 31}
{"beams": [{"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -0.011837005615234375, -7.62939453125e-06, -0.00022337771952152252, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.632110595703125e-05, -3.814697265625e-06], "score": -0.04123388402876316, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -4.891679763793945, -0.0001220703125, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06], "score": -4.920858509836755, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -5.667067527770996, -1.9073486328125e-06, -0.001148223876953125, 0.0, -4.255768362781964e-05, 0.0, -0.000457763671875, -0.0001392364501953125, -6.67572021484375e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -0.0004482269287109375, -0.0007915496826171875, -0.0003452301025390625, -0.00011444091796875, -2.86102294921875e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -0.0003376007080078125, 0.0, -2.3126602172851562e-05, -3.814697265625e-06, -0.00043404102325439453, 0.0, -1.71661376953125e-05, -0.0001163482666015625, -0.000347137451171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001766681671142578, -1.9073486328125e-06, -0.0001087188720703125, -0.010801315307617188, -7.62939453125e-06, -0.00022802593593951315, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.918212890625e-05, -3.814697265625e-06], "score": -5.700625286539427, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -5.780451774597168, -5.340576171875e-05, -7.62939453125e-06, -5.054473876953125e-05, -1.9073486328125e-06], "score": -5.809599049387536, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -6.225069046020508, -3.814697265625e-06, -0.04125702381134033, 0.0, -0.0017547607421875, -0.0001010894775390625, -0.000110626220703125, -3.24249267578125e-05, 0.0, -0.0012044906616210938, -0.000728607177734375, -0.000423431396484375, -8.0108642578125e-05, -4.9591064453125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0006246566772460938, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0005245208740234375, 0.0, -7.62939453125e-06, -0.00011444091796875, -0.00032806396484375, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.00017702579498291016, -1.9073486328125e-06, -9.1552734375e-05, -0.01445770263671875, -7.62939453125e-06, -0.00021706089319195598, -2.014620440604631e-05, -1.33514404296875e-05, 0.0, -8.96453857421875e-05, -3.814697265625e-06], "score": -6.309146392617549, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "Player", "<EOS>", "use", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def Player(self, use, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "Player", "_type": "Template0", "hole4": "use", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -7.061654090881348, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0011692047119140625, -0.0002803802490234375, -0.005023956298828125, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00016021728515625, 0.0, -0.000835418701171875, -7.62939453125e-06, -0.004182934761047363, -4.00543212890625e-05, -0.0027141571044921875, 0.0, -0.00019478761532809585, 0.0, -0.0006465911865234375, -0.000308990478515625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005035400390625, -0.0008373260498046875, -0.0003948211669921875, -0.000118255615234375, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003509521484375, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001068115234375, -0.011857986450195312, -7.62939453125e-06, -0.00022337771952152252, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.72747802734375e-05, -3.814697265625e-06], "score": -7.104242907622385, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -7.612401962280273, 0.0, -0.000850677490234375, 0.0, -0.00017213798128068447, 0.0, -0.0006198883056640625, -0.000370025634765625, -4.76837158203125e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0004863739013671875, -0.000850677490234375, -0.0004062652587890625, -0.000125885009765625, -2.86102294921875e-05, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.0003795623779296875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.00041496753692626953, 0.0, -1.71661376953125e-05, -0.0001163482666015625, -0.0003509521484375, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001068115234375, -0.011262893676757812, -7.62939453125e-06, -0.00022385446936823428, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.918212890625e-05, -3.814697265625e-06], "score": -7.646809922360255, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -7.678302764892578, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -0.011837005615234375, -7.62939453125e-06, -0.00022337771952152252, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.632110595703125e-05, -3.814697265625e-06], "score": -7.7190613494349165, "choice_history": [77, 147, "<UNK>", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class <UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "<UNK>", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -7.791120529174805, -1.9073486328125e-06, -0.0019228458404541016, -5.7220458984375e-06, 0.0, 0.0, -3.0517578125e-05, -0.0004177093505859375, -0.0004253387451171875, -0.0021953582763671875, -3.814697265625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001373291015625, 0.0, -0.0007877349853515625, -7.62939453125e-06, -0.004398465156555176, -4.57763671875e-05, -0.002750396728515625, 0.0, -0.00016331643564626575, 0.0, -0.000621795654296875, -0.00028228759765625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005159378051757812, -0.0008373260498046875, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.000396728515625, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -0.0118255615234375, -7.62939453125e-06, -0.00022349691425915807, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.632110595703125e-05, -3.814697265625e-06], "score": -7.831402765430532, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "MAGE", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, MAGE.MAGE, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "MAGE", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -7.645347595214844, -1.9073486328125e-06, -0.251232385635376, 0.0, -0.0005702972412109375, -0.00011444091796875, -0.000102996826171875, -2.86102294921875e-05, 0.0, -0.001323699951171875, -0.000675201416015625, -0.00037384033203125, -6.4849853515625e-05, -5.7220458984375e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0005922317504882812, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.000469207763671875, 0.0, -5.7220458984375e-06, -0.0001201629638671875, -0.000308990478515625, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.00017321109771728516, -1.9073486328125e-06, -8.96453857421875e-05, -0.013071060180664062, -7.62939453125e-06, -0.0002208748337579891, -2.014620440604631e-05, -1.1444091796875e-05, 0.0, -8.869171142578125e-05, -3.814697265625e-06], "score": -7.936731922141917, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def find_spell_target(self, use, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "find_spell_target", "_type": "Template0", "hole4": "use", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -7.889030456542969, -5.7220458984375e-06, -2.21728696487844e-05, -0.00012194435112178326, -5.7220458984375e-05, -3.24249267578125e-05, -0.0001010894775390625, 0.0, -0.00052642822265625, -3.814697265625e-06, -0.0017833709716796875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.86102294921875e-05, -0.007091522216796875, -0.0002593994140625, -0.0038890838623046875, -9.5367431640625e-06, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -5.7220458984375e-06, -6.103515625e-05, -1.9073486328125e-06, -0.0001773834228515625, 0.0, -0.0011196136474609375, -5.7220458984375e-06, -0.0038644075393676758, -3.4332275390625e-05, -0.0021648406982421875, 0.0, -0.00024771643802523613, 0.0, -0.00061798095703125, -0.0004730224609375, -3.62396240234375e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0004987716674804688, -0.000835418701171875, -0.0004405975341796875, -0.0001163482666015625, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003871917724609375, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0003968477249145508, 0.0, -1.71661376953125e-05, -0.0001220703125, -0.000347137451171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001766681671142578, -1.9073486328125e-06, -0.0001049041748046875, -0.011842727661132812, -7.62939453125e-06, -0.0002225434291176498, -1.871571657829918e-05, -1.33514404296875e-05, 0.0, -0.000110626220703125, -3.814697265625e-06], "score": -7.93680999663956, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 55, 138, "4", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -7.616520881652832, -0.0007171630859375, -7.05718994140625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0003185272216796875, -1.9073486328125e-06, -3.445148468017578e-05, -1.9073486328125e-06, -0.0006465911865234375, 0.0, -1.9073486328125e-05, -0.0001239776611328125, -0.000377655029296875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -0.0002193450927734375, -1.9073486328125e-06, -9.72747802734375e-05, -0.019948959350585938, -5.7220458984375e-06, -0.0001849993714131415, -1.8834924048860557e-05, -1.52587890625e-05, 0.0, -0.00010585784912109375, -3.814697265625e-06, -0.000835418701171875, -0.25247955322265625, -0.17019081115722656, -0.26691532135009766, -2.6702880859375e-05], "score": -8.355939262924942, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        self.target.damage(player.effective_spell_damage(6), self)\n        player.draw()\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -0.011837005615234375, -7.62939453125e-06, -8.505640983581543, -9.881961887003854e-05, -6.866455078125e-05, 0.0, -0.00012969970703125, -1.9073486328125e-06], "score": -8.54681849736334, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "0", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 0, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -8.042318344116211, 0.0, -0.45989537239074707, -0.0004674196243286133, -0.03523588180541992, -1.9073486328125e-06, -7.62939453125e-06, -0.0002155303955078125, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.00021457672119140625, -1.9073486328125e-06, -6.67572021484375e-05, -0.012432098388671875, -1.33514404296875e-05, -0.00022612014436163008, -1.7642851162236184e-05, -1.1444091796875e-05, 0.0, -0.00011348724365234375, -3.814697265625e-06], "score": -8.578722941243534, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(6), self)\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.4332275390625e-05, -4.859997749328613, -0.0016412497498095036, -7.390974587906385e-06, -2.440088428556919e-05, -2.0265579223632812e-06, -0.00010120868682861328, 0.0, -0.6740121841430664, -3.814697265625e-05, -4.38690185546875e-05, -0.0002231597900390625, -7.05718994140625e-05, -1.71661376953125e-05, -5.7220458984375e-06, -7.2479248046875e-05, -2.7418120680522406e-06, -2.09808349609375e-05, -0.0009918212890625, -1.9073486328125e-06, -8.392333984375e-05, -0.000209808349609375, -3.814697265625e-06, -0.0013179779052734375, 0.0, -0.0021630525588989258, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002346038818359375, -0.0003261566162109375, -0.0019893646240234375, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -0.0001373291015625, 0.0, -0.000736236572265625, -7.62939453125e-06, -0.004293560981750488, -4.38690185546875e-05, -0.1210775375366211, 0.0, -0.0007083415985107422, 0.0, -0.0004177093505859375, -0.0005512237548828125, -9.918212890625e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -1.3955564498901367, -0.0001354217529296875, -0.0008068084716796875, -0.000347137451171875, -2.09808349609375e-05, 0.0, -0.0043792724609375, -1.9073486328125e-06, -0.0002117156982421875, -1.9073486328125e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -0.00035858154296875, 0.0, -7.62939453125e-06, -0.0002384185791015625, -0.0002117156982421875, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.00015163421630859375, -1.9073486328125e-06, -0.0001468658447265625, -0.008808135986328125, -5.7220458984375e-06, -0.00026485329726710916, -1.7166021279990673e-05, -1.1444091796875e-05, 0.0, -0.0001049041748046875, -3.814697265625e-06, -2.6702880859375e-05, -0.11244869232177734, -0.0010013580322265625, -0.001991747412830591, 0.0, -0.0005893707275390625, -0.0004062652587890625, -0.0062274932861328125, -0.00057220458984375, -0.011204719543457031, -0.0007381439208984375, -0.004535675048828125, 0.0, -0.1206827163696289, -0.000423431396484375, -0.0007476806640625, -4.38690185546875e-05, -0.002016297075897455, 0.0, -0.005536079406738281, 0.0, -0.011455535888671875, 0.0, -0.00287628173828125, 0.0, -0.03505897521972656, -1.33514404296875e-05, -0.8032588958740234, -1.52587890625e-05, -0.025308609008789062, 0.0, -0.007746696472167969, -1.9073486328125e-06, -0.0013580322265625, -0.000885009765625, -3.814697265625e-05, -0.04183673858642578, -0.019109010696411133, 0.0, -0.0001544952392578125, -0.2514009475708008, -5.7220458984375e-06, -0.025287628173828125, -5.7220458984375e-06, -0.2954583168029785, 0.0], "score": -8.874154228423066, "choice_history": [77, 148, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 12, 205, 53, 133, "targets", "<EOS>"], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) is targets\n", "model_output": {"hole0": "Fireball", "hole2": [{"value": {"args": [{"s": "Fireball", "_type": "Str"}, {"_type": "Template37"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"id": "targets", "_type": "Name"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Is"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 32}
{"beams": [{"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -0.01639842987060547, -3.24249267578125e-05, -0.0009918212890625, -0.0003604888916015625, -0.0004253387451171875, -9.5367431640625e-06, -0.0006279945373535156, -1.9073486328125e-06, -0.0004482269287109375, -0.0001697540283203125, -0.0002384185791015625, -1.9073486328125e-06, -0.000514984130859375, 0.0, -0.0016870498657226562, 0.0, -0.0005664825439453125, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0008478164672851562, -5.7220458984375e-06, -2.288818359375e-05, -0.0009822845458984375, -9.1552734375e-05, -0.0001392364501953125, 0.0, -9.47713851928711e-05, 0.0, -0.0005762577056884766, 0.0, -1.9073486328125e-06, -0.0005283355712890625, -1.71661376953125e-05, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, -0.00030672550201416016, -1.9073486328125e-06, -0.0001583099365234375, -0.0057468414306640625, -5.14984130859375e-05, -1.9073486328125e-05, -0.00019073486328125, -1.9073486328125e-06], "score": -0.040799254816874964, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -0.01639842987060547, -3.24249267578125e-05, -0.0009918212890625, -0.0003604888916015625, -0.0004253387451171875, -9.5367431640625e-06, -0.0006279945373535156, -1.9073486328125e-06, -0.0004482269287109375, -0.0001697540283203125, -0.0002384185791015625, -1.9073486328125e-06, -0.000514984130859375, 0.0, -0.0016870498657226562, 0.0, -0.0005664825439453125, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0008478164672851562, -5.7220458984375e-06, -2.288818359375e-05, -0.0009822845458984375, -9.1552734375e-05, -0.0001392364501953125, 0.0, -9.47713851928711e-05, 0.0, -0.0005762577056884766, 0.0, -1.9073486328125e-06, -0.0005283355712890625, -1.71661376953125e-05, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, -0.00030672550201416016, -1.9073486328125e-06, -0.0001583099365234375, -5.302426338195801, -0.00016021728515625, -1.71661376953125e-05, -3.24249267578125e-05, -3.814697265625e-06], "score": -5.337429160517559, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -4.3409013748168945, -0.0070552825927734375, -8.0108642578125e-05, -0.0001392364501953125, -7.2479248046875e-05, -0.0003204345703125, -3.0517578125e-05, -0.00011491677287267521, -6.079673767089844e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.00103759765625, -1.9073486328125e-06, -0.0003376007080078125, 0.0, -0.0003147125244140625, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0010192394256591797, -5.7220458984375e-06, -0.00055694580078125, -2.47955322265625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005464553833007812, 0.0, -0.05733191967010498, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, -2.288818359375e-05, -0.000835418701171875, 0.0, -3.4332275390625e-05, 0.0, -0.0006961822509765625, 0.0, -0.20023632049560547, -4.1961669921875e-05, -0.25684046745300293, -7.62939453125e-06, -0.4780845642089844, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0014486312866210938, 0.0, -0.41691410541534424, 0.0, -3.62396240234375e-05, -0.015079498291015625, -3.814697265625e-06, -7.62939453125e-06, -3.24249267578125e-05, -4.76837158203125e-05, -0.00037539005279541016, -1.9073486328125e-06, -8.0108642578125e-05, -0.00743865966796875, -0.000217437744140625, -3.24249267578125e-05, -0.0002442598342895508, 0.0], "score": -5.797732823742763, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        targets.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -4.3409013748168945, -0.0070552825927734375, -8.0108642578125e-05, -0.0001392364501953125, -7.2479248046875e-05, -0.0003204345703125, -3.0517578125e-05, -0.00011491677287267521, -6.079673767089844e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.00103759765625, -1.9073486328125e-06, -0.0003376007080078125, 0.0, -0.0003147125244140625, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0010192394256591797, -5.7220458984375e-06, -0.00055694580078125, -2.47955322265625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005464553833007812, 0.0, -0.05733191967010498, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, -2.288818359375e-05, -0.000835418701171875, 0.0, -3.4332275390625e-05, 0.0, -0.0006961822509765625, 0.0, -0.20023632049560547, -4.1961669921875e-05, -0.25684046745300293, -7.62939453125e-06, -1.0189695358276367, -0.0004024505615234375, -2.86102294921875e-05, 0.0, -0.0069980621337890625, 0.0, -0.025854110717773438, -1.9073486328125e-06, -0.00024318695068359375, 0.0, -0.0063190460205078125, -0.0011043548583984375, -0.0001468658447265625, -0.000213623046875, -3.814697265625e-06, -5.6862831115722656e-05, 0.0, -0.0007828474044799805, 0.0, -1.9073486328125e-06, -0.000331878662109375, -1.52587890625e-05, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.00036728382110595703, -1.9073486328125e-06, -0.00019073486328125, -0.008676528930664062, -0.0001087188720703125, -3.4332275390625e-05, -0.00010013580322265625, -1.9073486328125e-06], "score": -5.948630565060512, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -4.3409013748168945, -0.0070552825927734375, -8.0108642578125e-05, -0.0001392364501953125, -7.2479248046875e-05, -0.0003204345703125, -3.0517578125e-05, -0.00011491677287267521, -6.079673767089844e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.00103759765625, -1.9073486328125e-06, -0.0003376007080078125, 0.0, -0.0003147125244140625, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0010192394256591797, -5.7220458984375e-06, -0.00055694580078125, -2.47955322265625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005464553833007812, 0.0, -0.05733191967010498, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, -2.288818359375e-05, -0.000835418701171875, 0.0, -3.4332275390625e-05, 0.0, -0.0006961822509765625, 0.0, -1.7318143844604492, -5.340576171875e-05, -0.04486274719238281, -1.9073486328125e-06, -0.30101776123046875, -0.0001354217529296875, -3.0517578125e-05, 0.0, -0.0037355422973632812, 0.0, -0.022337913513183594, -1.9073486328125e-06, -0.000217437744140625, 0.0, -0.010760307312011719, -0.0010051727294921875, -0.000133514404296875, -0.0002193450927734375, -3.814697265625e-06, -5.7816505432128906e-05, 0.0, -0.0007541179656982422, 0.0, -1.9073486328125e-06, -0.0003833770751953125, -1.52587890625e-05, -3.814697265625e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.00036716461181640625, -1.9073486328125e-06, -0.0001926422119140625, -0.008544921875, -9.1552734375e-05, -3.24249267578125e-05, -0.00010585784912109375, -1.9073486328125e-06], "score": -6.54742836321725, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -4.3409013748168945, -0.0070552825927734375, -8.0108642578125e-05, -0.0001392364501953125, -7.2479248046875e-05, -0.0003204345703125, -3.0517578125e-05, -0.00011491677287267521, -6.079673767089844e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.00103759765625, -1.9073486328125e-06, -0.0003376007080078125, 0.0, -0.0003147125244140625, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0010192394256591797, -5.7220458984375e-06, -0.00055694580078125, -2.47955322265625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005464553833007812, 0.0, -0.05733191967010498, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, -2.288818359375e-05, -0.000835418701171875, 0.0, -3.4332275390625e-05, 0.0, -0.0006961822509765625, 0.0, -0.20023632049560547, -4.1961669921875e-05, -1.666762351989746, 0.0, -0.12772560119628906, -0.00023651123046875, -0.00016021728515625, 0.0, -0.029541969299316406, 0.0, -0.1273050308227539, -1.9073486328125e-06, -0.00027370452880859375, 0.0, -0.006211280822753906, -0.0004940032958984375, -0.0001373291015625, -0.0003185272216796875, -3.814697265625e-06, -0.00014984607696533203, 0.0, -0.0015147924423217773, 0.0, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-05, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0003999471664428711, -1.9073486328125e-06, -0.00016021728515625, -0.00888824462890625, -0.0001049041748046875, -3.814697265625e-05, -9.632110595703125e-05, -1.9073486328125e-06], "score": -6.591627829922572, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -5.159680366516113, -0.0006380429258570075, -2.9802317840221804e-06, -2.0019710063934326e-05, -9.655952453613281e-06, -0.00020802021026611328, 0.0, -4.1961669921875e-05, -0.0001125335693359375, -9.298280929215252e-06, 0.0, -4.0531076592742465e-06, -1.728534698486328e-05, -0.0005055665969848633, -3.814697265625e-06, -0.0001055002212524414, -1.71661376953125e-05, -0.0012350082397460938, 0.0, -6.890296936035156e-05, 0.0, -6.67572021484375e-05, -1.9073486328125e-05, -0.0002117156982421875, -2.3245811462402344e-05, -1.4901155736879446e-05, -0.07764911651611328, -0.002593994140625, -4.38690185546875e-05, -5.53131103515625e-05, -3.4332275390625e-05, -0.000118255615234375, -2.09808349609375e-05, -0.0014004724798724055, -1.0132789611816406e-05, -0.000286102294921875, -3.814697265625e-06, -0.000530242919921875, -1.9073486328125e-06, -0.032470703125, -3.814697265625e-06, -0.0006029605865478516, -1.9073486328125e-06, -0.0003185272216796875, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0002269744873046875, -2.288818359375e-05, -0.001191258430480957, -5.7220458984375e-06, -0.0006866455078125, -3.62396240234375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0007801055908203125, 0.0, -0.07063865661621094, -1.9073486328125e-06, -5.91278076171875e-05, -1.1444091796875e-05, -2.288818359375e-05, -0.0010433197021484375, 0.0, -3.24249267578125e-05, 0.0, -0.0008258819580078125, 0.0, -0.19695663452148438, -3.62396240234375e-05, -0.29001379013061523, -7.62939453125e-06, -0.8394203186035156, -0.0005321502685546875, -2.86102294921875e-05, 0.0, -0.0073833465576171875, 0.0, -0.02234363555908203, -1.9073486328125e-06, -0.00022983551025390625, 0.0, -0.008551597595214844, -0.0010395050048828125, -0.0001068115234375, -0.0002231597900390625, -3.814697265625e-06, -0.00010156631469726562, 0.0, -0.0011419057846069336, 0.0, -1.9073486328125e-06, -0.0002918243408203125, -1.52587890625e-05, -3.814697265625e-06, -2.6702880859375e-05, -9.5367431640625e-06, -0.0003960132598876953, -1.9073486328125e-06, -0.00017547607421875, -0.011091232299804688, -0.0001201629638671875, -4.00543212890625e-05, -0.0001010894775390625, -1.9073486328125e-06, 0.0, -0.0875387191772461, -0.009556770324707031, -0.09722256660461426, 0.0, -0.0006618499755859375, -0.0014095306396484375, -0.0002288818359375, -0.0003833770751953125, -0.016913414001464844, -0.002593994140625, -0.09139060974121094, -1.9073486328125e-06, -0.001422882080078125, -0.0004024505615234375, -0.0001201629638671875, -8.58306884765625e-05, -0.000279997824691236, -5.7220458984375e-06, -0.0027315616607666016, 0.0, -0.0009368658065795898, -0.0001125335693359375, -0.17420542240142822, 0.0, -0.010015487670898438, -5.53131103515625e-05, -0.014004707336425781, -0.0002346038818359375, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -1.33514404296875e-05, -4.57763671875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0024309158325195312, -1.9073486328125e-06, -0.0020885467529296875, 0.0, -0.000423431396484375, 0.0, -0.0001239776611328125, -1.9073486328125e-05, -0.006274104118347168, -1.9073486328125e-06, -0.0001544952392578125, -0.0024509429931640625, -6.866455078125e-05, -0.0813455581665039], "score": -7.343444470840495, "choice_history": [77, 148, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -7.3046112060546875, -2.86102294921875e-05, -7.43865966796875e-05, -4.38690185546875e-05, -1.1444091796875e-05, -8.392333984375e-05, -8.702273589733522e-06, 0.0, -0.0001392364501953125, -3.24249267578125e-05, -3.0517578125e-05, -3.528594970703125e-05, -2.2649721358902752e-05, -0.017015457153320312, -3.24249267578125e-05, -0.0010814666748046875, -0.00040435791015625, -0.0004291534423828125, -1.33514404296875e-05, -0.0006345510482788086, -1.9073486328125e-06, -0.000446319580078125, -0.0001659393310546875, -0.0002307891845703125, -1.9073486328125e-06, -0.0005474090576171875, 0.0, -0.0016384124755859375, 0.0, -0.000560760498046875, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.000301361083984375, -3.814697265625e-05, -0.0008476972579956055, -5.7220458984375e-06, -2.47955322265625e-05, -0.000972747802734375, -9.1552734375e-05, -0.000141143798828125, 0.0, -9.47713851928711e-05, 0.0, -0.0005743503570556641, 0.0, -1.9073486328125e-06, -0.0005283355712890625, -1.71661376953125e-05, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, -0.00030672550201416016, -1.9073486328125e-06, -0.0001583099365234375, -0.0057525634765625, -5.14984130859375e-05, -1.9073486328125e-05, -0.00018978118896484375, -1.9073486328125e-06], "score": -7.345347160733354, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "ROGUE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -4.3409013748168945, -0.0070552825927734375, -8.0108642578125e-05, -0.0001392364501953125, -7.2479248046875e-05, -0.0003204345703125, -3.0517578125e-05, -0.00011491677287267521, -6.079673767089844e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.00103759765625, -1.9073486328125e-06, -0.0003376007080078125, 0.0, -0.0003147125244140625, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0010192394256591797, -5.7220458984375e-06, -0.00055694580078125, -2.47955322265625e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005464553833007812, 0.0, -0.05733191967010498, -3.814697265625e-06, -4.38690185546875e-05, -1.33514404296875e-05, -2.288818359375e-05, -0.000835418701171875, 0.0, -3.4332275390625e-05, 0.0, -0.0006961822509765625, 0.0, -0.20023632049560547, -4.1961669921875e-05, -0.25684046745300293, -7.62939453125e-06, -0.4780845642089844, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0014486312866210938, 0.0, -1.7937318086624146, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.0002384185791015625, -0.000446319580078125, 0.0, -9.5367431640625e-05, 0.0, -0.0008449554443359375, 0.0, -0.01719379425048828, -0.000102996826171875, -0.2586935758590698, 0.0], "score": -7.428608530415431, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        targets.append(game.other_player.hero)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -5.159680366516113, -0.0006380429258570075, -2.9802317840221804e-06, -2.0019710063934326e-05, -9.655952453613281e-06, -0.00020802021026611328, 0.0, -4.1961669921875e-05, -0.0001125335693359375, -9.298280929215252e-06, 0.0, -4.0531076592742465e-06, -1.728534698486328e-05, -0.0005055665969848633, -3.814697265625e-06, -0.0001055002212524414, -1.71661376953125e-05, -0.0012350082397460938, 0.0, -6.890296936035156e-05, 0.0, -6.67572021484375e-05, -1.9073486328125e-05, -0.0002117156982421875, -2.3245811462402344e-05, -1.4901155736879446e-05, -0.07764911651611328, -0.002593994140625, -4.38690185546875e-05, -5.53131103515625e-05, -3.4332275390625e-05, -0.000118255615234375, -2.09808349609375e-05, -0.0014004724798724055, -1.0132789611816406e-05, -0.000286102294921875, -3.814697265625e-06, -0.000530242919921875, -1.9073486328125e-06, -0.032470703125, -3.814697265625e-06, -0.0006029605865478516, -1.9073486328125e-06, -0.0003185272216796875, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0002269744873046875, -2.288818359375e-05, -0.001191258430480957, -5.7220458984375e-06, -0.0006866455078125, -3.62396240234375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0007801055908203125, 0.0, -0.07063865661621094, -1.9073486328125e-06, -5.91278076171875e-05, -1.1444091796875e-05, -2.288818359375e-05, -0.0010433197021484375, 0.0, -3.24249267578125e-05, 0.0, -0.0008258819580078125, 0.0, -0.19695663452148438, -3.62396240234375e-05, -0.29001379013061523, -7.62939453125e-06, -0.6004152297973633, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015134811401367188, 0.0, -0.3911629915237427, 0.0, -3.62396240234375e-05, -0.01470184326171875, -3.814697265625e-06, -7.62939453125e-06, -3.24249267578125e-05, -4.38690185546875e-05, -0.00036776065826416016, -1.9073486328125e-06, -8.0108642578125e-05, -0.007534027099609375, -0.0002079010009765625, -3.24249267578125e-05, -0.00024330615997314453, 0.0, -1.9073486328125e-06, -0.22783756256103516, -0.012585639953613281, -0.046865224838256836, 0.0, -0.00051116943359375, -0.0016651153564453125, -0.000186920166015625, -0.000370025634765625, -0.012866973876953125, -0.00228118896484375, -0.07299613952636719, -1.9073486328125e-06, -0.0014629364013671875, -0.0003833770751953125, -0.0001163482666015625, -8.392333984375e-05, -0.00029358407482504845, -3.814697265625e-06, -0.0025751590728759766, 0.0, -0.0009025335311889648, -0.0001201629638671875, -0.17733252048492432, 0.0, -0.009342193603515625, -5.7220458984375e-05, -0.014626502990722656, -0.00023651123046875, -5.7220458984375e-06, 0.0, -0.00014495849609375, -1.33514404296875e-05, -4.57763671875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0023641586303710938, -1.9073486328125e-06, -0.0020294189453125, 0.0, -0.000423431396484375, 0.0, -0.0001220703125, -1.9073486328125e-05, -0.006304025650024414, -1.9073486328125e-06, -0.000156402587890625, -0.0024499893188476562, -6.67572021484375e-05, -0.0806417465209961], "score": -7.538884640380729, "choice_history": [77, 148, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.minions)\n        targets.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -0.01639842987060547, -3.24249267578125e-05, -0.0009918212890625, -0.0003604888916015625, -0.0004253387451171875, -9.5367431640625e-06, -0.0006279945373535156, -1.9073486328125e-06, -0.0004482269287109375, -0.0001697540283203125, -0.0002384185791015625, -1.9073486328125e-06, -0.000514984130859375, 0.0, -7.536261558532715, -1.9073486328125e-06, -0.0013370513916015625, -1.9073486328125e-06, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-05, -5.7220458984375e-05, 0.0, -1.1444091796875e-05, 0.0, -7.05718994140625e-05, 0.0, -0.0003299713134765625, -3.24249267578125e-05, -0.000990748405456543, -5.7220458984375e-06, -2.6702880859375e-05, -0.0009307861328125, -9.34600830078125e-05, -0.0001430511474609375, 0.0, -9.584426879882812e-05, 0.0, -0.0006068944931030273, 0.0, -1.9073486328125e-06, -0.000537872314453125, -1.71661376953125e-05, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, -0.0003241300582885742, -1.9073486328125e-06, -0.0001621246337890625, -0.0060176849365234375, -5.7220458984375e-05, -2.09808349609375e-05, -0.00018596649169921875, -1.9073486328125e-06], "score": -7.5766482299984546, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "minion", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in minion.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -0.01639842987060547, -3.24249267578125e-05, -0.0009918212890625, -0.0003604888916015625, -0.0004253387451171875, -9.5367431640625e-06, -0.0006279945373535156, -1.9073486328125e-06, -0.0004482269287109375, -0.0001697540283203125, -0.0002384185791015625, -1.9073486328125e-06, -0.000514984130859375, 0.0, -0.0016870498657226562, 0.0, -0.0005664825439453125, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0008478164672851562, -5.7220458984375e-06, -2.288818359375e-05, -0.0009822845458984375, -9.1552734375e-05, -0.0001392364501953125, 0.0, -9.47713851928711e-05, 0.0, -0.0005762577056884766, 0.0, -1.9073486328125e-06, -7.736757278442383, -0.0539398193359375, -0.0027523040771484375, -2.47955322265625e-05, -2.6702880859375e-05, -1.1444091796875e-05, -0.0002219676971435547, -1.9073486328125e-06, -0.0001659393310546875, -0.0051403045654296875], "score": -7.832773441714153, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 72, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(4, player.effective_spell_damage(4))\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template37"}, {"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -5.159680366516113, -0.0006380429258570075, -2.9802317840221804e-06, -2.0019710063934326e-05, -9.655952453613281e-06, -0.00020802021026611328, 0.0, -4.1961669921875e-05, -0.0001125335693359375, -9.298280929215252e-06, 0.0, -4.0531076592742465e-06, -1.728534698486328e-05, -0.0005055665969848633, -3.814697265625e-06, -0.0001055002212524414, -1.71661376953125e-05, -0.0012350082397460938, 0.0, -6.890296936035156e-05, 0.0, -6.67572021484375e-05, -1.9073486328125e-05, -0.0002117156982421875, -2.3245811462402344e-05, -1.4901155736879446e-05, -0.07764911651611328, -0.002593994140625, -4.38690185546875e-05, -5.53131103515625e-05, -3.4332275390625e-05, -0.000118255615234375, -2.09808349609375e-05, -0.0014004724798724055, -1.0132789611816406e-05, -0.000286102294921875, -3.814697265625e-06, -0.000530242919921875, -1.9073486328125e-06, -0.032470703125, -3.814697265625e-06, -0.0006029605865478516, -1.9073486328125e-06, -0.0003185272216796875, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0002269744873046875, -2.288818359375e-05, -0.001191258430480957, -5.7220458984375e-06, -0.0006866455078125, -3.62396240234375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0007801055908203125, 0.0, -0.07063865661621094, -1.9073486328125e-06, -5.91278076171875e-05, -1.1444091796875e-05, -2.288818359375e-05, -0.0010433197021484375, 0.0, -3.24249267578125e-05, 0.0, -0.0008258819580078125, 0.0, -0.19695663452148438, -3.62396240234375e-05, -1.5514010190963745, 0.0, -0.10284423828125, -0.0002346038818359375, -0.0001544952392578125, 0.0, -0.03786754608154297, 0.0, -0.17272090911865234, -1.9073486328125e-06, -0.0002574920654296875, 0.0, -0.008319854736328125, -0.000484466552734375, -0.0001201629638671875, -0.0003147125244140625, -1.9073486328125e-06, -0.00032341480255126953, 0.0, -0.00227510929107666, 0.0, -1.9073486328125e-06, -0.0002460479736328125, -2.09808349609375e-05, -3.814697265625e-06, -2.47955322265625e-05, -7.62939453125e-06, -0.00044786930084228516, -1.9073486328125e-06, -0.00014495849609375, -0.011440277099609375, -0.0001049041748046875, -4.38690185546875e-05, -9.34600830078125e-05, -1.9073486328125e-06, 0.0, -0.0832509994506836, -0.009486198425292969, -0.08730602264404297, 0.0, -0.00067138671875, -0.0013294219970703125, -0.0002288818359375, -0.000385284423828125, -0.0163726806640625, -0.0026988983154296875, -0.08956336975097656, -1.9073486328125e-06, -0.0014095306396484375, -0.000396728515625, -0.0001201629638671875, -8.58306884765625e-05, -0.00028238145750947297, -5.7220458984375e-06, -0.002710580825805664, 0.0, -0.0009196996688842773, -0.000110626220703125, -0.17398226261138916, 0.0, -0.010168075561523438, -5.53131103515625e-05, -0.013976097106933594, -0.0002346038818359375, -5.7220458984375e-06, 0.0, -0.000141143798828125, -1.33514404296875e-05, -4.57763671875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0024585723876953125, -1.9073486328125e-06, -0.0021076202392578125, 0.0, -0.000423431396484375, 0.0, -0.0001239776611328125, -1.9073486328125e-05, -0.006285548210144043, -1.9073486328125e-06, -0.0001544952392578125, -0.00244903564453125, -6.866455078125e-05, -0.08123970031738281], "score": -8.033130172611436, "choice_history": [77, 148, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -0.01639842987060547, -3.24249267578125e-05, -7.964339256286621, -2.6702880859375e-05, -6.103515625e-05, -0.044836997985839844, -9.5367431640625e-06, -0.00014269168605096638, -2.0265579223632812e-06, -7.62939453125e-05, -3.814697265625e-06, -0.0006809234619140625, -1.9073486328125e-06, -0.0007228851318359375, 0.0, -0.0003510713577270508, 0.0, -0.0002574920654296875, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0002803802490234375, -3.4332275390625e-05, -0.0008707046508789062, -5.7220458984375e-06], "score": -8.037252657409908, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -5.159680366516113, -0.0006380429258570075, -2.9802317840221804e-06, -2.0019710063934326e-05, -9.655952453613281e-06, -0.00020802021026611328, 0.0, -4.1961669921875e-05, -0.0001125335693359375, -9.298280929215252e-06, 0.0, -4.0531076592742465e-06, -1.728534698486328e-05, -0.0005055665969848633, -3.814697265625e-06, -0.0001055002212524414, -1.71661376953125e-05, -0.0012350082397460938, 0.0, -6.890296936035156e-05, 0.0, -6.67572021484375e-05, -1.9073486328125e-05, -0.0002117156982421875, -2.3245811462402344e-05, -1.4901155736879446e-05, -0.07764911651611328, -0.002593994140625, -4.38690185546875e-05, -5.53131103515625e-05, -3.4332275390625e-05, -0.000118255615234375, -2.09808349609375e-05, -0.0014004724798724055, -1.0132789611816406e-05, -0.000286102294921875, -3.814697265625e-06, -0.000530242919921875, -1.9073486328125e-06, -0.032470703125, -3.814697265625e-06, -0.0006029605865478516, -1.9073486328125e-06, -0.0003185272216796875, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0002269744873046875, -2.288818359375e-05, -0.001191258430480957, -5.7220458984375e-06, -0.0006866455078125, -3.62396240234375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0007801055908203125, 0.0, -0.07063865661621094, -1.9073486328125e-06, -5.91278076171875e-05, -1.1444091796875e-05, -2.288818359375e-05, -0.0010433197021484375, 0.0, -3.24249267578125e-05, 0.0, -0.0008258819580078125, 0.0, -1.7465171813964844, -5.53131103515625e-05, -0.048537254333496094, -1.9073486328125e-06, -0.24416446685791016, -0.00020599365234375, -2.6702880859375e-05, 0.0, -0.0037622451782226562, 0.0, -0.020097732543945312, -1.9073486328125e-06, -0.00021266937255859375, 0.0, -0.014046669006347656, -0.0010318756103515625, -9.5367431640625e-05, -0.00023651123046875, -3.814697265625e-06, -9.870529174804688e-05, 0.0, -0.001044631004333496, 0.0, -1.9073486328125e-06, -0.0003490447998046875, -1.33514404296875e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.00039207935333251953, -1.9073486328125e-06, -0.0001773834228515625, -0.010736465454101562, -0.0001068115234375, -3.62396240234375e-05, -9.918212890625e-05, -1.9073486328125e-06, 0.0, -0.08485698699951172, -0.009588241577148438, -0.1014413833618164, 0.0, -0.0006771087646484375, -0.0013294219970703125, -0.000232696533203125, -0.0003814697265625, -0.017182350158691406, -0.00274658203125, -0.09478759765625, -1.9073486328125e-06, -0.001407623291015625, -0.0004062652587890625, -0.0001201629638671875, -8.392333984375e-05, -0.00028357328847050667, -5.7220458984375e-06, -0.002733469009399414, 0.0, -0.0009368658065795898, -0.0001125335693359375, -0.1743866205215454, 0.0, -0.010114669799804688, -5.7220458984375e-05, -0.014005661010742188, -0.0002346038818359375, -5.7220458984375e-06, 0.0, -0.0001430511474609375, -1.33514404296875e-05, -4.57763671875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0024328231811523438, -1.9073486328125e-06, -0.002086639404296875, 0.0, -0.000423431396484375, 0.0, -0.0001239776611328125, -1.9073486328125e-05, -0.006273150444030762, -1.9073486328125e-06, -0.000152587890625, -0.0024509429931640625, -6.866455078125e-05, -0.0814361572265625], "score": -8.060827735520888, "choice_history": [77, 148, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "Flamestrike", "hole2": [{"hole0": "Flamestrike", "hole2": "MAGE", "hole1": 7, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 33}
{"beams": [{"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -0.15681838989257812, -1.71661376953125e-05, -0.0009179037879221141, -0.0035969018936157227, -5.7220458984375e-06, -0.017491459846496582, -1.3470649719238281e-05, -0.0017795562744140625, -0.0021495819091796875, -0.0004425048828125, -0.002039313316345215, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.012884378433227539, -3.576278118089249e-07, -1.71661376953125e-05, -0.003482818603515625], "score": -0.23544464192195136, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 2, "_type": "Template21"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -0.12729650735855103, -1.5323364734649658, -0.0003841992001980543, -0.030864715576171875, -0.00382232666015625, -0.0005340576171875, -0.0006390810012817383, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -0.03372001647949219, -3.576278118089249e-07, -3.814697265625e-05, -0.016824722290039062], "score": -3.8506335339795825, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Summoned", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(MinionSummoned(), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionSummoned", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -0.12729650735855103, -1.5495274066925049, -0.0022485244553536177, -0.06167030334472656, -0.009650230407714844, -0.00081634521484375, -0.0004655122756958008, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-06, -0.03274095058441162, -2.3841855067985307e-07, -3.814697265625e-05, -0.015111923217773438], "score": -3.9037371113252206, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Died", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(MinionDied(), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionDied", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -0.12729650735855103, -1.682586908340454, -0.08332490921020508, -0.0077457427978515625, -0.0027685165405273438, -0.0047321319580078125, -0.0004388093948364258, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.041536688804626465, -2.3841855067985307e-07, -4.9591064453125e-05, -0.016597747802734375], "score": -4.071250721421869, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Placed", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(MinionPlaced(), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionPlaced", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -0.15681838989257812, -1.71661376953125e-05, -0.0009179037879221141, -0.0035969018936157227, -5.7220458984375e-06, -4.629762649536133, -5.7220458984375e-06, -0.0061511993408203125, -0.0029811859130859375, -0.000759124755859375, -0.0018235445022583008, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.018725872039794922, -3.576278118089249e-07, -7.62939453125e-06, -0.002086639404296875], "score": -4.857446051452591, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(1), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -2.878246307373047, -0.04081425070762634, -0.04434776306152344, -0.000675201416015625, -0.001522064208984375, -0.002241373062133789, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.03626596927642822, -2.3841855067985307e-07, -2.288818359375e-05, -0.021265029907226562], "score": -5.129574015346201, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "<UNK>", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(<UNK>(), MinionSelector(Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "<UNK>", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -4.883438587188721, 0.0, -4.661083221435547e-05, -3.814697265625e-06, -0.00019466865342110395, -1.1920922133867862e-06, -7.05718994140625e-05, -0.038283348083496094, -4.9591064453125e-05, -2.0265558760002023e-06, -0.0011069605825468898, -0.0001739256113069132, -2.622600959512056e-06, -0.0009238416096195579, 0.0, -0.000705718994140625, -7.05718994140625e-05, -0.002645290456712246, -1.4662741705251392e-05, -7.43865966796875e-05, -0.16051292419433594, -1.52587890625e-05, -0.000913849740754813, -0.0028078556060791016, -5.7220458984375e-06, -0.01743185520172119, -1.1563301086425781e-05, -0.001873016357421875, -0.0018558502197265625, -0.0004444122314453125, -0.00205075740814209, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0130540132522583, -3.576278118089249e-07, -1.9073486328125e-05, -0.00363922119140625], "score": -5.1408377755246875, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 2, "_type": "Template21"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -0.15681838989257812, -1.71661376953125e-05, -0.0009179037879221141, -0.0035969018936157227, -5.7220458984375e-06, -0.017491459846496582, -1.3470649719238281e-05, -0.0017795562744140625, -0.0021495819091796875, -0.0004425048828125, -0.002039313316345215, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.6785969734191895, -0.14255809783935547, 0.0, -8.0108642578125e-05, -0.17468833923339844], "score": -5.214983440254223, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Is", "Minion", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsMinion()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 2, "_type": "Template21"}, {"hole0": "MinionSelector", "hole1": {"id": "IsMinion", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -0.12729650735855103, -1.782808542251587, -1.1300745010375977, -0.00785064697265625, -0.0039920806884765625, -0.0013065338134765625, -0.00041234493255615234, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.049031853675842285, -3.576278118089249e-07, -0.0001010894775390625, -0.028835296630859375], "score": -5.2358731474548605, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Is", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(MinionIs(), MinionSelector(Adjacent\n            ()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionIs", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -3.290850877761841, -0.0003802776336669922, -0.01853179931640625, -0.0049610137939453125, -0.000316619873046875, -0.0007020235061645508, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.027524232864379883, -3.576278118089249e-07, -4.00543212890625e-05, -0.01639556884765625], "score": -5.463879569974544, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "minions", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(minions(), MinionSelector(Adjacent()))]\n            )\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "minions", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -0.12729650735855103, -3.4288747310638428, -0.024066925048828125, -0.0032024383544921875, -0.000972747802734375, -0.0014287233352661133, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.03395390138030052, -3.576278118089249e-07, -3.4332275390625e-05, -0.018047332763671875], "score": -5.742058556136492, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(Minion(), MinionSelector(Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "Minion", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -5.569956302642822, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -0.15681838989257812, -1.71661376953125e-05, -0.0009179037879221141, -0.0035969018936157227, -5.7220458984375e-06, -0.017491459846496582, -1.3470649719238281e-05, -0.0017795562744140625, -0.0021495819091796875, -0.0004425048828125, -0.002039313316345215, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.012884378433227539, -3.576278118089249e-07, -1.71661376953125e-05, -0.003482818603515625], "score": -5.801573553838118, "choice_history": [77, 145, "<UNK>", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class <UNK>Totem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "model_output": {"hole0": "<UNK>Totem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 2, "_type": "Template21"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -0.15681838989257812, -1.71661376953125e-05, -0.0009179037879221141, -5.747242450714111, -0.008287906646728516, -1.9073486328125e-05, -0.022357463836669922, -7.748603820800781e-06, -0.001617431640625, -0.0037946701049804688, -0.0006122589111328125, -0.0026972293853759766, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.012700676918029785, -4.768370445162873e-07, -1.52587890625e-05, -0.002552032470703125], "score": -5.993447995994465, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Change", "Attack", "<EOS>", "2", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeChangeAttack(2),\n            MinionSelector(Adjacent()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeChangeAttack", "hole1": 2, "_type": "Template21"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -7.621318817138672, -0.07040023803710938, -0.10788228362798691, -0.0001824931096052751], "score": -7.83014975261522, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=True)\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -2.0703392028808594, -3.24249267578125e-05, -0.12729650735855103, -1.782808542251587, -0.6938163638114929, -0.00024092178500723094, -0.1041116714477539, -0.0602569580078125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0079193115234375, -1.728534698486328e-05, 0.0, -0.007846832275390625, -0.3946352005004883, -0.017622947692871094, -0.00014531610941048712, -0.00026497201179154217, -1.52587890625e-05, -3.814697265625e-06, -0.009434100240468979, -0.002816673368215561, -1.9073486328125e-06, -2.288818359375e-05, -0.5621604919433594, -0.0019588470458984375, 0.0, -0.00020349019905552268, -0.00026154518127441406, 0.0, -3.814697265625e-06, -0.0039501190185546875, -0.000732421875, -0.34673094749450684, -1.1920928244535389e-07, -1.1444091796875e-05, -0.20273971557617188, -0.0017452239990234375, -0.33932459354400635, -1.0364516973495483, -1.5974044799804688e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.1670244932174683, -0.982634425163269, -1.1920928244535389e-07, -0.021638870239257812, -0.00150299072265625, -1.9073486328125e-06, -1.9073486328125e-06, -0.010802268981933594, -3.921985626220703e-05, 0.0, -0.003204345703125, -0.19288063049316406, -0.007557868957519531, -0.0002689361572265625, -3.659682988654822e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.005941867362707853, -0.024196267127990723, 0.0, -4.38690185546875e-05, -0.3669404983520508, -0.0017604827880859375, 0.0, -0.0002632138493936509, -0.00024437904357910156, -1.9073486328125e-06, -7.62939453125e-06, -0.006557464599609375], "score": -10.603283470120722, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Is", "Minion", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 63, 171, "Self", "Selector", "<EOS>", 205, 62, 170, "Effect", "<EOS>", 206, 59, 155, "Minion", "Summoned", "<EOS>", 25, 133, "Is", "Hero", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(MinionIsMinion(), ActionTag(Give(\n            ChangeAttack(2)), SelfSelector())), Effect(MinionSummoned(\n            IsHero()), ActionTag(Give(ChangeAttack(2)), SelfSelector()))])\n", "model_output": {"hole0": "FlametongueTotem", "hole2": [{"value": {"args": [{"s": "Flametongue Totem", "_type": "Str"}, {"_type": "Template33"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "TOTEM", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionSummoned", "hole1": {"id": "IsHero", "_type": "Name"}, "_type": "Template19"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24_expr_seq"}], "hole1": [{"hole0": "MinionIsMinion", "_type": "Template25"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}], "index": 34}
{"beams": [{"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -0.003567921230569482, -3.814697265625e-06, -0.01759052276611328, -0.00128936767578125, -7.82012939453125e-05, -9.202549699693918e-05, -2.7418097943154862e-06, -0.0011789909331128001, -3.576278118089249e-07, -0.010468006134033203, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017368792032357305, -9.655952453613281e-06], "score": -0.04678967332654338, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -0.003567921230569482, -3.814697265625e-06, -0.01759052276611328, -0.00128936767578125, -7.82012939453125e-05, -9.202549699693918e-05, -2.7418097943154862e-06, -0.0011789909331128001, -3.576278118089249e-07, -4.617309093475342, 0.0, -0.0002841949462890625, -7.62939453125e-06, -0.0003343820571899414, -5.9604644775390625e-06], "score": -4.654041436684906, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, charge=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "charge", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -6.191339492797852, -0.0004749298095703125, -0.1879415512084961, -0.0002613067626953125, -2.09808349609375e-05, -4.887576324108522e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0001507289707660675, -4.0649618313182145e-05, -0.000553131103515625, -9.1552734375e-05, -0.0008373260498046875, -0.0003376007080078125, -0.0003917216672562063, -5.960462203802308e-06, -0.076019287109375, -7.82012939453125e-05, -0.000591278076171875, 0.0, -0.053956031799316406, 0.0, -0.001090407371520996, -0.0001087188720703125, -0.010033130645751953, 0.0, -0.006049870979040861, -0.0001430511474609375, -0.009614944458007812, -0.013278007507324219, -4.38690185546875e-05, -2.95638274110388e-05, -4.768370445162873e-07, -0.00034636157215572894, -1.1920928244535389e-07, -0.07956051826477051, 0.0, -2.6702880859375e-05, -3.814697265625e-06, -0.00020778179168701172, -9.5367431640625e-06], "score": -6.634393857183902, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -6.820218086242676, 0.0, -0.008810043334960938, -0.0012683868408203125, -8.7738037109375e-05, -5.876856448594481e-05, -2.7418097943154862e-06, -0.0006755627691745758, -3.576278118089249e-07, -0.006286025047302246, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.00024580955505371094, -5.841255187988281e-06], "score": -6.849999462918618, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -6.92635440826416, -0.14667820930480957, -0.000438690185546875, -0.0022335052490234375, -0.00780487060546875, -8.0108642578125e-05, -7.438397005898878e-05, -4.172316494077677e-06, -0.0011421999661251903, -2.3841855067985307e-07, -0.020805001258850098, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001575946807861328, -7.748603820800781e-06], "score": -7.118115511254615, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, MinionCard):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -6.719809532165527, -0.17628002166748047, -0.30224931240081787, 0.0, -0.03795623779296875, -0.001262664794921875, -0.0001068115234375, -8.487356535624713e-05, -3.2186455882765586e-06, -0.0013486453099176288, -3.576278118089249e-07, -0.005011796951293945, 0.0, -4.76837158203125e-05, -3.814697265625e-06, -0.00019311904907226562, -5.841255187988281e-06], "score": -7.2534607058559, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "BEAST", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def BEAST(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "BEAST", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -7.183750152587891, -1.1444091796875e-05, -0.16424722969532013, -3.814697265625e-06, -0.09591960906982422, -0.0011444091796875, -0.0001068115234375, -9.10719099920243e-05, -3.6954811548639555e-06, -0.0013438836904242635, -4.768370445162873e-07, -0.014176607131958008, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.00017416475748177618, -9.655952453613281e-06], "score": -7.470123670317719, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "p", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def p(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "p", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -7.480216026306152, 0.0, -0.0073680877685546875, -0.0018024444580078125, -6.866455078125e-05, -5.638450966216624e-05, -2.50339189733495e-06, -0.0009548811358399689, -3.576278118089249e-07, -0.0036612749099731445, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.00018417835235595703, -7.748603820800781e-06], "score": -7.506658838751832, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, create_minion):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "create_minion", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -7.54637336730957, -2.86102294921875e-05, -1.9073486328125e-06, -1.7881390022012056e-06, -1.52587890625e-05, -0.0002460479736328125, 0.0, -0.0001534234033897519, -0.0001002501740003936, -0.000202178955078125, -0.0005340576171875, -8.58306884765625e-05, -2.09808349609375e-05, -9.5367431640625e-06, -0.0002803799870889634, -7.748603820800781e-06, -0.0004901885986328125, 0.0, -0.02710709720849991, -5.7220458984375e-06, -0.00164031982421875, -0.0005741119384765625, -3.0517578125e-05, -5.1974086090922356e-05, -1.311301275563892e-06, -0.00032216787803918123, -1.1920928244535389e-07, -0.013211250305175781, 0.0, -4.1961669921875e-05, -1.9073486328125e-06, -0.00021147727966308594, -5.7220458984375e-06], "score": -7.595000482555058, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -0.003567921230569482, -3.814697265625e-06, -0.01759052276611328, -0.00128936767578125, -7.82012939453125e-05, -9.202549699693918e-05, -2.7418097943154862e-06, -7.843400955200195, -1.0728830375228426e-06, -0.004301190376281738, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -0.00019633769989013672, -5.841255187988281e-06], "score": -7.882944480815979, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 4, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -0.003567921230569482, -3.814697265625e-06, -5.69599723815918, -0.5251712799072266, -0.8537988662719727, -0.07050956785678864, -6.0796710386057384e-06, -0.19196605682373047, -0.062294960021972656, -0.5230758786201477, -0.00018942188762594014, -0.012807237915694714, -1.9073486328125e-06, -0.030968666076660156, -0.0022869110107421875, -0.0007049536798149347, -1.3589766240329482e-05, -0.0020602168515324593, -7.152555099310121e-07, -0.021847963333129883, 0.0, -0.000141143798828125, -7.62939453125e-06, -9.107588994083926e-05, -1.537799835205078e-05], "score": -8.009824706282814, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 218, 90, 123, "<UNK>", "<EOS>", 196, 191, "spare_part_list", "<EOS>", "0", "<EOS>", 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        from <UNK> import spare_part_list\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"names": [{"name": "spare_part_list", "_type": "alias"}], "level": 0, "module": "<UNK>", "_type": "ImportFrom"}, {"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -8.148092269897461, -0.017608642578125, -0.001468658447265625, -0.0038404464721679688, -7.62939453125e-05, -8.177438576240093e-05, -5.006777428206988e-06, -0.000986677361652255, -3.576278118089249e-07, -0.007876992225646973, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.0001888275146484375, -5.841255187988281e-06], "score": -8.19257189032271, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "Greater", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, Greater):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "Greater", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -8.145965576171875, -0.002210824517533183, -0.000118255615234375, -3.24249267578125e-05, -0.000186920166015625, -6.4849853515625e-05, -0.00013601778482552618, -4.768370445162873e-07, -0.0022678375244140625, -3.0517578125e-05, -3.814697265625e-05, -0.0002663135528564453, -8.0108642578125e-05, -0.003893613815307617, 0.0, -0.003601064905524254, -3.814697265625e-06, -0.018197059631347656, -0.0013446807861328125, -8.392333984375e-05, -8.654234989080578e-05, -3.2186455882765586e-06, -0.0012642390793189406, -3.576278118089249e-07, -0.011640787124633789, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0001727342460071668, -9.655952453613281e-06], "score": -8.197334344848855, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -8.164584159851074, -1.9073486328125e-06, -0.008987568318843842, -7.62939453125e-06, -0.015685081481933594, -0.0013275146484375, -7.43865966796875e-05, -0.0001077595807146281, -3.4570634852570947e-06, -0.0011800626525655389, -4.768370445162873e-07, -0.01044309139251709, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017964838480111212, -9.655952453613281e-06], "score": -8.211727321169803, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "Picker", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def Picker(self, p):\n        return Minion(0, 1, taunt=True)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "Picker", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 0, "hole2": "taunt", "hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -0.003567921230569482, -3.814697265625e-06, -5.69599723815918, -1.0567264556884766, -0.0001964569091796875, -0.000141143798828125, -0.019861221313476562, 0.0, -0.9060560464859009, -1.1920922133867862e-06, -0.11546611785888672, -5.7220458984375e-06, -0.1876211166381836, -3.62396240234375e-05, -0.27022647857666016, -3.62396240234375e-05, -0.08128166198730469, -5.7220458984375e-06, -0.13695621490478516, 0.0, -0.09978389739990234, 0.0, -0.04682350158691406, -5.14984130859375e-05, -0.015344619750976562, -0.8656892776489258, -1.9073486328125e-06, -0.00019073486328125, -0.016917824745178223, 0.0, -0.4134550094604492, -4.9591064453125e-05, -1.1100317239761353, -0.32858753204345703, -0.0035161972045898438, -0.019455909729003906, -1.9073486328125e-06, -0.3520742654800415, 0.0, -0.6726200580596924, 0.0, -0.000179290771484375, -1.1851768493652344, -0.9227161407470703, -1.9073486328125e-06, -0.0018082857131958008, 0.0], "score": -14.54096116656541, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 218, 82, 103, 205, 53, 133, "taunt", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 206, 45, 104, 42, "minions", "<EOS>", 63, 171, "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        taunt = hearthbreaker.targeting.find_spell_target(player.minions, ())\n        minion.damage(3, self)\n", "model_output": {"hole0": "Frog", "hole2": [{"value": {"args": [{"s": "Frog", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"targets": [{"id": "taunt", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"hole0": "", "_type": "Template25"}], "func": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template35"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}]}}], "index": 35}
{"beams": [{"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -0.11987018585205078, 0.0, -8.0108642578125e-05, -0.0004901885986328125, -0.0003032684326171875, -0.0003243684768676758, -2.7179718017578125e-05, -0.0002727508544921875, -7.62939453125e-06, -0.005219689570367336, 0.0], "score": -0.19442085250921082, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -2.34981632232666, 0.0, -9.5367431640625e-06, -0.33342742919921875, -5.91278076171875e-05, -4.38690185546875e-05, -3.0517578125e-05, -0.0011959075927734375, -0.047968316823244095, -1.1920928244535389e-07, -5.53131103515625e-05, -0.07923412322998047, -9.1552734375e-05, -3.814697265625e-06, -0.004601597785949707, 0.0], "score": -2.884363030825618, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -3.649393081665039, -0.06032562255859375, -5.340576171875e-05, -1.9073486328125e-06, -0.000171661376953125, -1.9073486328125e-06, -0.00390625, 0.0, -0.0005006790161132812, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.0003777742385864258, -1.71661376953125e-05, -0.0031136274337768555, 0.0, -0.0001049041748046875, -0.00031280517578125, -6.866455078125e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0001595020294189453, 0.0, -0.20823001861572266, 0.0, -9.5367431640625e-05, -0.0006732940673828125, -0.0006313323974609375, -0.0002766847610473633, -2.300739288330078e-05, -0.0001468658447265625, -1.52587890625e-05, -0.002177354646846652, 0.0], "score": -3.964087291198666, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -2.34981632232666, 0.0, -9.5367431640625e-06, -1.6054000854492188, -0.6043500900268555, -3.814697265625e-05, -0.006072998046875, 0.0], "score": -4.633512662534486, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(4, self)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -2.34981632232666, 0.0, -9.5367431640625e-06, -2.5234527587890625, -0.28194332122802734, -1.71661376953125e-05, -0.0025663375854492188, 0.0], "score": -5.2256309257791145, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(1, self)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -3.649393081665039, -0.06032562255859375, -5.340576171875e-05, -1.9073486328125e-06, -0.000171661376953125, -1.9073486328125e-06, -0.00390625, 0.0, -0.0005006790161132812, 0.0, -3.62396240234375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001678466796875, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.0003777742385864258, -1.71661376953125e-05, -0.0031136274337768555, 0.0, -0.0001049041748046875, -0.00031280517578125, -6.866455078125e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0001595020294189453, 0.0, -1.806060791015625, 0.0, -1.1444091796875e-05, -0.1339426040649414, -5.340576171875e-05, -0.0001163482666015625, -2.86102294921875e-05, -0.0011138916015625, -0.00941525399684906, -1.1920928244535389e-07, -1.33514404296875e-05, -0.0801839828491211, -7.62939453125e-05, -5.7220458984375e-06, -0.0038434267044067383, 0.0], "score": -5.786683352474931, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -5.4174885749816895, 0.0, -6.29425048828125e-05, -0.3220558166503906], "score": -5.807432817106019, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.increase_health(2)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -5.582277774810791, 0.0, -3.814697265625e-05, -0.1652383804321289], "score": -5.815379785184632, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "deathrattle", "<EOS>", 205, 72], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.deathrattle(4)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template37"}], "hole1": "deathrattle", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -2.34981632232666, 0.0, -9.5367431640625e-06, -0.33342742919921875, -5.91278076171875e-05, -4.38690185546875e-05, -3.0517578125e-05, -0.0011959075927734375, -0.047968316823244095, -1.1920928244535389e-07, -5.53131103515625e-05, -3.0284423828125, -0.0002899169921875, -1.71661376953125e-05, -0.00445866584777832, 0.0], "score": -5.833640074168208, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(4), self)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -6.08005428314209, -0.00018918508430942893, 0.0, -0.0020427703857421875, -0.0007305145263671875, -0.0008869171142578125, -0.0019245147705078125, 0.0, -0.00014138221740722656, 0.0, -0.11823654174804688, 0.0, -5.53131103515625e-05, -0.0004177093505859375, -0.00034332275390625, -0.0002766847610473633, -2.1338462829589844e-05, -0.0002651214599609375, -7.62939453125e-06, -0.004682178143411875, 0.0], "score": -6.2700642759300536, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -2.34981632232666, 0.0, -9.5367431640625e-06, -2.5234527587890625, -1.5491361618041992], "score": -6.490240262632142, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 69, 72], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(1, 4)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template34"}, {"_type": "Template37"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -3.9578771591186523, -6.03195876465179e-05, -0.0002798647910822183, -0.0002412795729469508, -0.00870746374130249, -1.9073486328125e-06, -0.00022912025451660156, -3.814697265625e-06, -7.05718994140625e-05, -9.72747802734375e-05, -9.441365546081215e-05, -0.00010085104440804571, -8.475497452309355e-05, -1.9073486328125e-06, -0.0025662281550467014, -5.841255187988281e-06, -0.000148773193359375, 0.0, -0.00012791156768798828, -3.814697265625e-06, -0.0020093917846679688, 0.0, -5.91278076171875e-05, 0.0, -0.000865936279296875, -0.00031280517578125, -0.00278472900390625, -1.442432312614983e-05, -8.344646857949556e-07, -0.6320304870605469, -0.0001926422119140625, -6.67572021484375e-05, -3.4332275390625e-05, -2.6702880859375e-05, -7.2479248046875e-05, -2.288818359375e-05, -0.00024329345615115017, -2.0265579223632812e-06, -0.0002956390380859375, -1.9073486328125e-06, -0.0001373291015625, 0.0, -0.035086631774902344, -3.814697265625e-06, -0.0010684728622436523, 0.0, -0.0005893707275390625, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.00043892860412597656, -2.872943878173828e-05, -0.002086639404296875, -1.9073486328125e-06, -0.0006618499755859375, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.00012254714965820312, 0.0, -0.031520724296569824, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.068267822265625, -0.0024319887161254883, 0.0, -0.008367538452148438, -0.00133514404296875, -1.9073486328125e-06, -1.9073486328125e-06, -0.002899169921875, 0.0, -0.7693500518798828, -5.7220458984375e-06, -0.00028705596923828125, 0.0, -0.0017795562744140625, -0.0003376007080078125, -0.000156402587890625, -0.004825592041015625, -1.9073486328125e-06, -0.0009336471557617188, 0.0, -0.1343841552734375, 0.0, -0.000171661376953125, -0.0022754669189453125, -0.0024623870849609375, -0.00011646747589111328, -1.9073486328125e-05, -0.000240325927734375, -1.52587890625e-05, -0.0037604542449116707, 0.0, -9.34600830078125e-05, -0.023601531982421875, -0.0007724761962890625, -0.005200028419494629, 0.0, -0.0006999969482421875, -0.000240325927734375, -0.00032806396484375, -0.0002346038818359375, -0.0014095306396484375, -0.0001068115234375, -0.0002689361572265625, -0.0005893707275390625, -0.0004901885986328125, -0.0002155303955078125, -7.43865966796875e-05, -1.9073486328125e-05, -0.0002530812635086477, -6.43729799776338e-06, -0.004663825035095215, 0.0, -0.0001277923583984375, -1.9073486328125e-05, -0.0052013397216796875, 0.0, -0.0005035400390625, -1.71661376953125e-05, -0.000244140625, -1.52587890625e-05, 0.0, 0.0, -5.173683166503906e-05, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0001583099365234375, -0.6676626205444336, -0.00023770329426042736, 0.0, -0.0002803802490234375, -0.057697296142578125, -1.9073486328125e-06, -0.02465057373046875, -1.1444091796875e-05, -0.016541345044970512, -1.1920928244535389e-07], "score": -6.498962874301121, "choice_history": [77, 148, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -2.34981632232666, 0.0, -9.5367431640625e-06, -1.6054000854492188, -2.506424903869629], "score": -6.529476331357728, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 72, 73], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(4, player)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template37"}, {"_type": "Template38"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -3.9578771591186523, -6.03195876465179e-05, -0.0002798647910822183, -0.0002412795729469508, -0.00870746374130249, -1.9073486328125e-06, -0.00022912025451660156, -3.814697265625e-06, -7.05718994140625e-05, -9.72747802734375e-05, -9.441365546081215e-05, -0.00010085104440804571, -8.475497452309355e-05, -1.9073486328125e-06, -0.0025662281550467014, -5.841255187988281e-06, -0.000148773193359375, 0.0, -0.00012791156768798828, -3.814697265625e-06, -0.0020093917846679688, 0.0, -5.91278076171875e-05, 0.0, -0.000865936279296875, -0.00031280517578125, -0.00278472900390625, -1.442432312614983e-05, -8.344646857949556e-07, -0.6320304870605469, -0.0001926422119140625, -6.67572021484375e-05, -3.4332275390625e-05, -2.6702880859375e-05, -7.2479248046875e-05, -2.288818359375e-05, -0.00024329345615115017, -2.0265579223632812e-06, -0.0002956390380859375, -1.9073486328125e-06, -0.0001373291015625, 0.0, -0.035086631774902344, -3.814697265625e-06, -0.0010684728622436523, 0.0, -0.0005893707275390625, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -7.43865966796875e-05, 0.0, -0.00043892860412597656, -2.872943878173828e-05, -0.002086639404296875, -1.9073486328125e-06, -0.0006618499755859375, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.00012254714965820312, 0.0, -0.031520724296569824, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.068267822265625, -0.0024319887161254883, 0.0, -0.008367538452148438, -0.00133514404296875, -1.9073486328125e-06, -1.9073486328125e-06, -0.002899169921875, 0.0, -0.7693500518798828, -5.7220458984375e-06, -0.00028705596923828125, 0.0, -0.0017795562744140625, -0.0003376007080078125, -0.000156402587890625, -0.004825592041015625, -1.9073486328125e-06, -0.0009336471557617188, 0.0, -0.1343841552734375, 0.0, -0.000171661376953125, -0.0022754669189453125, -0.0024623870849609375, -0.00011646747589111328, -1.9073486328125e-05, -0.000240325927734375, -1.52587890625e-05, -0.0037604542449116707, 0.0, -9.34600830078125e-05, -0.023601531982421875, -0.0007724761962890625, -0.005200028419494629, 0.0, -0.0006999969482421875, -0.000240325927734375, -0.00032806396484375, -0.0002346038818359375, -0.0014095306396484375, -0.0001068115234375, -0.0002689361572265625, -0.0005893707275390625, -0.0004901885986328125, -0.0002155303955078125, -7.43865966796875e-05, -1.9073486328125e-05, -0.0002530812635086477, -6.43729799776338e-06, -0.004663825035095215, 0.0, -0.0001277923583984375, -1.9073486328125e-05, -0.0052013397216796875, 0.0, -0.0005035400390625, -1.71661376953125e-05, -0.000244140625, -1.52587890625e-05, 0.0, 0.0, -5.173683166503906e-05, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0001583099365234375, -0.7195119857788086, -0.000148773193359375, -0.026498794555664062, -1.9073486328125e-06, -0.00048828125, 0.0, -0.00019311904907226562, -1.1920928244535389e-07, -0.0009671449661254883, -1.9073486328125e-06, -4.38690185546875e-05, -0.005069732666015625, -5.53131103515625e-05, -0.5372323989868164], "score": -7.02209283112699, "choice_history": [77, 148, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -5.4174885749816895, 0.0, -6.29425048828125e-05, -1.6114082336425781], "score": -7.096785234098206, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "increase_health", "<EOS>", 205, 72], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.increase_health(4)\n", "model_output": {"hole0": "FrostNova", "hole2": [{"hole0": "Frost Nova", "hole2": "MAGE", "hole1": 3, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 36}
{"beams": [{"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -0.0057582855224609375, 0.0, -2.288818359375e-05, 0.0, -0.003949165344238281, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.2936134338378906, 0.0, -0.0002574920654296875, -0.000946044921875, -0.0005588531494140625, -0.0020160675048828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0005897970404475927, 0.0], "score": -0.5453993641374097, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -0.0057582855224609375, 0.0, -2.288818359375e-05, 0.0, -0.003949165344238281, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -1.4362401962280273, 0.0, 0.0, -0.003879547119140625, -7.62939453125e-06, -7.62939453125e-06, -4.38690185546875e-05, -1.52587890625e-05, -0.0001771449897205457, -4.768370445162873e-07, -0.0015106201171875, -0.0007877349853515625, -8.7738037109375e-05, -1.1444091796875e-05, -0.0010128021240234375, 0.0], "score": -1.691184507954489, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -2.3002099990844727, -3.814697265625e-05, -0.0040378570556640625, -4.1961669921875e-05, -0.00055694580078125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00014126300811767578, -1.9073486328125e-06, -0.00011277198791503906, 0.0, -0.0022029876708984375, 0.0, -1.9073486328125e-06, -0.010156631469726562, -3.24249267578125e-05, -1.33514404296875e-05, -2.288818359375e-05, -1.52587890625e-05, -0.0001664161536609754, -2.2649765014648438e-06, -0.001220703125, -0.001094818115234375, -9.34600830078125e-05, -1.9073486328125e-05, -0.0011501312255859375, 0.0], "score": -2.3313182464869158, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -2.35434627532959, -0.0025196075439453125, -2.86102294921875e-05, -5.53131103515625e-05, -4.57763671875e-05, -0.05413341522216797, -0.00012969970703125, -0.003444671630859375, 0.0, -1.71661376953125e-05, 0.0, -0.0075664520263671875, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -0.24672508239746094, 0.0, -0.000423431396484375, -0.0024585723876953125, -0.000152587890625, -0.0011310577392578125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004904059460386634, 0.0], "score": -2.799186195896908, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -2.35434627532959, -0.0025196075439453125, -2.86102294921875e-05, -5.53131103515625e-05, -4.57763671875e-05, -0.05413341522216797, -0.00012969970703125, -0.003444671630859375, 0.0, -1.71661376953125e-05, 0.0, -0.0075664520263671875, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -1.5696964263916016, 0.0, 0.0, -0.020112991333007812, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-05, -1.71661376953125e-05, -0.00016546247934456915, -3.576278118089249e-07, -0.0011348724365234375, -0.0008640289306640625, -8.96453857421875e-05, -1.1444091796875e-05, -0.0010805130004882812, 0.0], "score": -4.141016112926678, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -0.0057582855224609375, 0.0, -2.288818359375e-05, 0.0, -0.003949165344238281, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -5.163145542144775, 0.0, -7.62939453125e-06, -0.0043468475341796875], "score": -5.414902435901894, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -0.0057582855224609375, 0.0, -2.288818359375e-05, 0.0, -5.5711469650268555, 0.0, -0.006709098815917969, -5.7220458984375e-06, -0.0770949125289917, 0.0, -7.62939453125e-06, -0.004673004150390625, -5.7220458984375e-06, -1.52587890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -0.00018298621580470353, -3.576278118089249e-07, -0.001049041748046875, -0.0007495880126953125, -0.0001068115234375, -1.1444091796875e-05, -0.0010442733764648438, 0.0], "score": -5.906288491804531, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -5.888705253601074, -0.005016326904296875, -4.38690185546875e-05, -0.000164031982421875, -3.0517578125e-05, -0.023233413696289062, -0.0002384185791015625, -0.022548675537109375, 0.0, -2.288818359375e-05, 0.0, -0.005860328674316406, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -0.1899127960205078, 0.0, -0.0003871917724609375, -0.002475738525390625, -0.0001697540283203125, -0.0011444091796875, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0004908832488581538, 0.0], "score": -6.265958752667501, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -5.8712358474731445, -1.1444091796875e-05, -2.6702880859375e-05, 0.0, -0.0003914833068847656, 0.0, -0.00020599365234375, -6.103515625e-05, -6.866455078125e-05, -3.24249267578125e-05, -1.1920928244535389e-07, -0.0969839096069336, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-05, -0.000152587890625, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, -0.00012600421905517578, 0.0, -0.0013942718505859375, 0.0, -1.9073486328125e-06, -0.10253143310546875, -3.0517578125e-05, -1.1444091796875e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.00012266634439583868, -2.2649765014648438e-06, -0.001300811767578125, -0.0006008148193359375, -0.0001087188720703125, -1.71661376953125e-05, -0.0012369155883789062, 0.0, -0.004235267639160156, -0.000278472900390625, -0.00585174560546875, 0.0, -2.288818359375e-05, 0.0, -0.004047393798828125, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.29331302642822266, 0.0, -0.0002613067626953125, -0.0009441375732421875, -0.0005512237548828125, -0.0020351409912109375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0005893203197047114, 0.0], "score": -6.395181831142246, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -2.35434627532959, -0.0025196075439453125, -2.86102294921875e-05, -5.53131103515625e-05, -4.57763671875e-05, -3.6491031646728516, -0.006922721862792969, -0.0002460479736328125, -1.9073486328125e-06, -0.006806731224060059, -1.9073486328125e-06, -0.27210330963134766, -0.000156402587890625, -2.288818359375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.01846599578857422, -1.9073486328125e-06, -0.0006551742553710938, -1.9073486328125e-06, -3.62396240234375e-05, -1.1444091796875e-05, -2.288818359375e-05, -6.67572021484375e-05, 0.0, -0.0001201629638671875, 0.0, -0.0003070831298828125, 0.0, -0.0002422332763671875, -9.5367431640625e-06, -0.0010800361633300781, -1.9073486328125e-06, -5.7220458984375e-06, -0.02843761444091797, -1.33514404296875e-05, -0.000148773193359375, -1.9073486328125e-06, -0.0012521743774414062, 0.0, -0.0017795562744140625, 0.0, 0.0, -0.0004138946533203125, -1.33514404296875e-05, -7.62939453125e-06, -3.0517578125e-05, -2.09808349609375e-05, -0.0001592635817360133, -2.3841855067985307e-07, -0.00048065185546875, -0.002864837646484375, -0.0001277923583984375, -7.62939453125e-06, -0.001617431640625, 0.0], "score": -6.476247178662277, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -5.170490264892578, -5.7220458984375e-06, -0.0390779972076416, -2.47955322265625e-05, -0.014916658401489258, -3.814697265625e-06, -3.0517578125e-05, -1.175145149230957], "score": -6.63734220183207, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 25, 133, "self", "<EOS>", "target", "<EOS>", 205, 72], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target(4)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"id": "self", "_type": "Name"}, "hole2": [{"_type": "Template37"}], "hole1": "target", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -5.6235809326171875, -0.005084991455078125, -0.0010890960693359375, -0.002758026123046875, -6.866455078125e-05, -3.814697265625e-06, -7.62939453125e-05, 0.0, -9.250640869140625e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.5536565780639648, -0.000919342041015625, -0.0001087188720703125, -5.7220458984375e-06, -0.2844085693359375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0013523101806640625, 0.0, -0.0008697509765625, -1.9073486328125e-06, -0.019374966621398926, 0.0, -0.004360198974609375, -0.0014781951904296875, -1.9073486328125e-06, -0.16891193389892578, -5.7220458984375e-06, -0.00653839111328125, -1.9073486328125e-06, -0.0002841949462890625, -5.91278076171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00018310546875, 0.0, 0.0, -0.0008907318115234375, -9.5367431640625e-06, -7.62939453125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.00015687939594499767, -4.768370445162873e-07, -0.001041412353515625, -0.0009307861328125, -9.1552734375e-05, -1.1444091796875e-05, -0.00101470947265625, 0.0], "score": -6.9122451415993, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 89, 121, 21, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 13, 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare"}, "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -2.3002099990844727, -3.814697265625e-05, -0.0040378570556640625, -4.1961669921875e-05, -0.00055694580078125, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00014126300811767578, -1.9073486328125e-06, -0.00011277198791503906, 0.0, -0.0022029876708984375, 0.0, -1.9073486328125e-06, -4.668018341064453, -0.0023021697998046875, -4.57763671875e-05, -5.14984130859375e-05, -4.1961669921875e-05], "score": -6.98779057182648, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -5.170490264892578, -5.7220458984375e-06, -0.0390779972076416, -2.47955322265625e-05, -0.014916658401489258, -3.814697265625e-06, -3.0517578125e-05, -0.6294355392456055, -0.00031280517578125, -0.0267333984375, -1.9073486328125e-06, -0.001171112060546875, 0.0, -0.7210063934326172, -3.24249267578125e-05, -0.0001373291015625, 0.0, -0.0046749114990234375, -0.0007381439208984375, -0.0001010894775390625, -0.0004062652587890625, 0.0, -0.0001621246337890625, 0.0, -0.024621963500976562, 0.0, -0.00032806396484375, -1.9073486328125e-06, -0.14815914630889893, 0.0], "score": -7.020221578243508, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 25, 133, "self", "<EOS>", "target", "<EOS>", 205, 48, 111, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target(self.target(game.other_player.minions))\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"id": "self", "_type": "Name"}, "hole2": [{"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "hole1": "target", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -5.6235809326171875, -0.005084991455078125, -0.0010890960693359375, -0.002758026123046875, -6.866455078125e-05, -3.814697265625e-06, -7.62939453125e-05, 0.0, -9.250640869140625e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.989654541015625, -7.43865966796875e-05, -0.0001544952392578125, 0.0, -0.2698936462402344, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0030193328857421875, 0.0, -0.0011777877807617188, -1.9073486328125e-06, -0.01737213134765625, 0.0, -0.003261566162109375, -0.0014629364013671875, -1.9073486328125e-06, -0.3065481185913086, -7.62939453125e-06, -0.00611114501953125, -1.9073486328125e-06, -0.0002613067626953125, -6.29425048828125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.000164031982421875, 0.0, 0.0, -0.00084686279296875, -9.5367431640625e-06, -7.62939453125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -0.00015830990741960704, -4.768370445162873e-07, -0.0010013580322265625, -0.0009918212890625, -9.5367431640625e-05, -1.33514404296875e-05, -0.0010280609130859375, 0.0], "score": -7.468946205709102, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 89, 121, 21, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 12, 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target is game.other_player.hero:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "FrostShock", "hole2": [{"value": {"args": [{"s": "Frost Shock", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 37}
{"beams": [{"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.007273674011230469, -5.53131103515625e-05, -6.4849853515625e-05, -2.288818359375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001220703125, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.0028181076049804688, 0.0, -3.814697265625e-06, -0.0029659271240234375, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0012929439544677734, -2.3841855067985307e-07, -3.0517578125e-05, -0.04815101623535156, -6.103515625e-05, -8.0108642578125e-05, -0.001331329345703125, -9.5367431640625e-06, -8.0108642578125e-05, -3.814697265625e-05, -0.00054931640625, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000835418701171875, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.018945813179016113, 0.0, -0.0019283294677734375, -0.000782012939453125, -0.0009479522705078125, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, -0.000453826563898474, 0.0], "score": -0.31934412547747115, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.4503803253173828, 0.0, -0.43073177337646484, -0.0002536773681640625, -2.47955322265625e-05, -4.2438507080078125e-05, 0.0, -0.0001964569091796875, -2.86102294921875e-05, -0.0001735687255859375, -3.814697265625e-06, -3.933906555175781e-06, -0.10671329498291016, -6.29425048828125e-05, -4.1961669921875e-05, -2.288818359375e-05, -5.91278076171875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0005645751953125, -3.0517578125e-05, -3.0517578125e-05, 0.0, -0.003414154052734375, 0.0, -5.7220458984375e-06, -0.003997802734375, -7.2479248046875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0002613067626953125, -0.001425623893737793, -2.3841855067985307e-07, -2.86102294921875e-05, -0.04379081726074219, -5.91278076171875e-05, -9.1552734375e-05, -0.0011091232299804688, -1.1444091796875e-05, -6.4849853515625e-05, -4.1961669921875e-05, -0.00040435791015625, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0008945465087890625, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.017562031745910645, 0.0, -0.0018405914306640625, -0.000751495361328125, -0.000934600830078125, -0.0011577606201171875, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, -0.0004512040759436786, 0.0], "score": -2.869524799200434, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "overload", "<EOS>", 37, "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "overload", "value": {"_type": "Template33"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.4503803253173828, 0.0, -1.4173669815063477, -0.000507354736328125, -1.1444091796875e-05, -7.867813110351562e-06, 0.0, -0.000232696533203125, -4.00543212890625e-05, -0.0001201629638671875, -3.814697265625e-06, -9.655952453613281e-06, -0.031067848205566406, -7.2479248046875e-05, -4.57763671875e-05, -2.09808349609375e-05, -5.340576171875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0006380081176757812, -3.62396240234375e-05, -2.86102294921875e-05, 0.0, -0.00348663330078125, 0.0, -5.7220458984375e-06, -0.0040607452392578125, -7.2479248046875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0002613067626953125, -0.0014411211013793945, -2.3841855067985307e-07, -3.0517578125e-05, -0.04381275177001953, -5.91278076171875e-05, -9.1552734375e-05, -0.0011301040649414062, -1.1444091796875e-05, -6.29425048828125e-05, -4.38690185546875e-05, -0.0004024505615234375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0009059906005859375, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0176316499710083, 0.0, -0.001861572265625, -0.000782012939453125, -0.0009403228759765625, -0.0011768341064453125, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -0.00045120416325517, 0.0], "score": -3.7811525687579604, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "overload", "<EOS>", 38, "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "overload", "value": {"_type": "Template34"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.007273674011230469, -5.53131103515625e-05, -6.4849853515625e-05, -2.288818359375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001220703125, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.0028181076049804688, 0.0, -3.814697265625e-06, -0.0029659271240234375, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0012929439544677734, -2.3841855067985307e-07, -3.0517578125e-05, -3.5139074325561523, -8.96453857421875e-05, -2.86102294921875e-05, -0.00016307830810546875, -9.5367431640625e-06, -9.1552734375e-05, -9.918212890625e-05, -0.0002956390380859375, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.001007080078125, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.022559165954589844, 0.0, -0.0019435882568359375, -0.0007457733154296875, -0.000919342041015625, -0.0011138916015625, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-05, -0.00044738908763974905, 0.0], "score": -3.787401876958427, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -3.5792646408081055, 0.0, -2.288818359375e-05, 0.0, -9.751319157658145e-05, 0.0, -0.0008449554443359375, -0.0001506805419921875, -4.1961669921875e-05, -2.6702880859375e-05, -2.2649765014648438e-06, -0.005518913269042969, -5.7220458984375e-05, -7.05718994140625e-05, -2.288818359375e-05, -4.38690185546875e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -0.0001468658447265625, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.00278472900390625, 0.0, -3.814697265625e-06, -0.0029392242431640625, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0013006925582885742, -2.3841855067985307e-07, -3.0517578125e-05, -0.04821491241455078, -6.103515625e-05, -8.0108642578125e-05, -0.0013418197631835938, -9.5367431640625e-06, -8.0108642578125e-05, -4.00543212890625e-05, -0.000568389892578125, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0008411407470703125, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.01878178119659424, 0.0, -0.0019130706787109375, -0.0007953643798828125, -0.0009517669677734375, -0.0011959075927734375, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, -0.00045358817442320287, 0.0], "score": -3.8582346065017816, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.007273674011230469, -5.53131103515625e-05, -6.4849853515625e-05, -2.288818359375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001220703125, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.0028181076049804688, 0.0, -3.814697265625e-06, -0.0029659271240234375, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0012929439544677734, -2.3841855067985307e-07, -3.0517578125e-05, -0.04815101623535156, -6.103515625e-05, -8.0108642578125e-05, -0.001331329345703125, -9.5367431640625e-06, -8.0108642578125e-05, -3.814697265625e-05, -0.00054931640625, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000835418701171875, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -4.501621723175049, 0.0, -1.9073486328125e-06, -0.0002460479736328125, -4.38690185546875e-05, -9.5367431640625e-05, -1.52587890625e-05, -0.0003452301025390625, -0.0010424851207062602, -4.768370445162873e-07, -1.71661376953125e-05, -0.09008502960205078, -7.82012939453125e-05, -5.53131103515625e-05, -0.0013141632080078125, -1.33514404296875e-05], "score": -4.890027727080735, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -4.901005744934082, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.25577127316501e-05, 0.0, -0.00030517578125, -8.7738037109375e-05, -8.0108642578125e-05, -1.33514404296875e-05, -3.933906555175781e-06, -0.007380485534667969, -6.29425048828125e-05, -6.103515625e-05, -2.288818359375e-05, -4.57763671875e-05, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.00019073486328125, -9.5367431640625e-06, -8.20159912109375e-05, 0.0, -0.0032444000244140625, 0.0, -3.814697265625e-06, -0.0030059814453125, -7.05718994140625e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0012698173522949219, -2.3841855067985307e-07, -2.86102294921875e-05, -0.047855377197265625, -6.103515625e-05, -8.392333984375e-05, -0.0012788772583007812, -9.5367431640625e-06, -7.82012939453125e-05, -4.00543212890625e-05, -0.00060272216796875, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0008392333984375, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.01802074909210205, 0.0, -0.001857757568359375, -0.0008068084716796875, -0.0009613037109375, -0.0011882781982421875, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, -0.0004531113663688302, 0.0], "score": -5.18054624632029, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.4503803253173828, 0.0, -0.43073177337646484, -0.0002536773681640625, -2.47955322265625e-05, -4.2438507080078125e-05, 0.0, -0.0001964569091796875, -2.86102294921875e-05, -0.0001735687255859375, -3.814697265625e-06, -3.933906555175781e-06, -2.3947057723999023, -9.34600830078125e-05, -0.05572700500488281, -0.0001068115234375, -0.000308990478515625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00037384033203125, -3.0517578125e-05, -3.063678741455078e-05, 0.0, -0.0051059722900390625, 0.0, -3.814697265625e-06, -0.0006771087646484375, -0.000125885009765625, -7.62939453125e-06, -5.7220458984375e-06, -0.0005512237548828125, -0.0007884502410888672, -2.3841855067985307e-07, -2.86102294921875e-05, -0.043129920959472656, -8.0108642578125e-05, -9.1552734375e-05, -0.0009002685546875, -9.5367431640625e-06], "score": -5.186388577538736, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "overload", "<EOS>", 37, "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "overload", "value": {"_type": "Template33"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.4503803253173828, 0.0, -2.6364259719848633, -1.9073486328125e-05, -0.037975311279296875, -0.000270843505859375, -1.9073486328125e-06, -9.918212890625e-05, -0.0003376007080078125, 0.0, -0.000614166259765625, -1.9073486328125e-06, -0.19171547889709473, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -4.756447742693126e-05, 0.0, -0.0007724761962890625, -0.000247955322265625, -3.62396240234375e-05, -7.62939453125e-06, -2.1457672119140625e-06, -0.009055137634277344, -6.67572021484375e-05, -6.103515625e-05, -2.47955322265625e-05, -4.9591064453125e-05, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000270843505859375, -1.52587890625e-05, -8.96453857421875e-05, 0.0, -0.0026445388793945312, 0.0, -1.9073486328125e-06, -0.0029125213623046875, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001773834228515625, -0.0013246536254882812, -2.3841855067985307e-07, -3.0517578125e-05, -0.04637432098388672, -6.103515625e-05, -8.392333984375e-05, -0.0012578964233398438, -9.5367431640625e-06, -8.7738037109375e-05, -3.814697265625e-05, -0.0005950927734375, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000827789306640625, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.01919853687286377, 0.0, -0.0019512176513671875, -0.0007648468017578125, -0.000942230224609375, -0.0011911392211914062, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, -0.00045418416266329587, 0.0], "score": -5.211394153273858, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "overload", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "overload", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1321229934692383, 0.0, -0.021203994750976562, -0.0007190704345703125, -0.0010204315185546875, -0.004366874694824219, -0.07227325439453125, -6.115436553955078e-05, -0.004168510437011719, -0.0055027008056640625, -0.09534263610839844, -9.72747802734375e-05, -0.01871967315673828, -0.000637054443359375, -0.24690628051757812, -0.016286849975585938, -0.7370529174804688, -7.62939453125e-05, -5.53131103515625e-05, -8.392333984375e-05, -0.05177509784698486, 0.0, -0.059291958808898926, -1.9073486328125e-06, -0.0024579763412475586, -1.9073486328125e-06, -0.00096893310546875, -0.04914093017578125, -0.000896453857421875, -2.288818359375e-05, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.000518798828125, 0.0, -0.35610485076904297, -1.9073486328125e-06, -0.2730741500854492, -0.4923219680786133, -0.0001354217529296875, -0.0011692047119140625, -0.000782012939453125, -5.7220458984375e-06, -0.4569816589355469, -1.9073486328125e-06, -0.03653430938720703, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -3.826618194580078e-05, 0.0, -0.000400543212890625, -9.918212890625e-05, -3.24249267578125e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.028656005859375, -0.0001964569091796875, -2.6702880859375e-05, -1.9073486328125e-05, -3.0517578125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.0002307891845703125, -7.62939453125e-06, -5.340576171875e-05, 0.0, -0.004649162292480469, 0.0, -3.814697265625e-06, -0.004566192626953125, -7.05718994140625e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0001277923583984375, -0.0012235641479492188, -2.3841855067985307e-07, -2.6702880859375e-05, -0.04512500762939453, -6.103515625e-05, -9.1552734375e-05, -0.0011034011840820312, -9.5367431640625e-06, -4.00543212890625e-05, -4.38690185546875e-05, -0.00037384033203125, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0009613037109375, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.019492268562316895, 0.0, -0.0018672943115234375, -0.0008678436279296875, -0.000942230224609375, -0.0012502670288085938, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -0.0004506080877035856, 0.0], "score": -6.054028116137914, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "minion", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda minion: minion.card.minion_type is\n            MINION_TYPE.BEAST and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "minion", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.007273674011230469, -5.53131103515625e-05, -6.4849853515625e-05, -2.288818359375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001220703125, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.0028181076049804688, 0.0, -3.814697265625e-06, -6.031981468200684, -0.018735885620117188, -0.0002689361572265625, -7.2479248046875e-05, -8.0108642578125e-05, -0.00135040283203125, -5.53131103515625e-05, -0.00499725341796875, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.005291104316711426, -4.9591064453125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.030638694763183594, 0.0, -0.00205230712890625, -0.0009613037109375, -0.000728607177734375, -0.0011796951293945312, -3.814697265625e-06, -3.814697265625e-06, -3.24249267578125e-05, -0.00044727156637236476, 0.0], "score": -6.33832045774804, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 72, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.007273674011230469, -5.53131103515625e-05, -6.4849853515625e-05, -2.288818359375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001220703125, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.0028181076049804688, 0.0, -3.814697265625e-06, -0.0029659271240234375, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0012929439544677734, -2.3841855067985307e-07, -3.0517578125e-05, -0.04815101623535156, -6.103515625e-05, -8.0108642578125e-05, -0.001331329345703125, -9.5367431640625e-06, -8.0108642578125e-05, -3.814697265625e-05, -0.00054931640625, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000835418701171875, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.902127265930176, 0.0, -2.86102294921875e-05, -0.1517620086669922], "score": -6.348970021318053, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.increase_health(2)\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1321229934692383, 0.0, -0.021203994750976562, -0.0007190704345703125, -0.0010204315185546875, -0.004366874694824219, -0.07227325439453125, -6.115436553955078e-05, -0.004168510437011719, -0.0055027008056640625, -0.09534263610839844, -9.72747802734375e-05, -0.01871967315673828, -0.000637054443359375, -0.24690628051757812, -0.016286849975585938, -0.7370529174804688, -7.62939453125e-05, -5.53131103515625e-05, -8.392333984375e-05, -0.05177509784698486, 0.0, -0.059291958808898926, -1.9073486328125e-06, -0.0024579763412475586, -1.9073486328125e-06, -0.00096893310546875, -0.04914093017578125, -0.000896453857421875, -2.288818359375e-05, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.000518798828125, 0.0, -0.35610485076904297, -1.9073486328125e-06, -0.2730741500854492, -0.9869375228881836, -1.52587890625e-05, -1.1444091796875e-05, -0.35376453399658203, -3.814697265625e-06, -4.1961669921875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.024021148681640625, -1.9073486328125e-05, -0.0001811981201171875, -1.9073486328125e-06, -0.02449321746826172, 0.0, -0.003826141357421875, -1.9073486328125e-06, -0.4118157625198364, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -1.454353241570061e-05, 0.0, -9.34600830078125e-05, -6.866455078125e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.841255187988281e-06, -0.012843132019042969, -0.00016021728515625, -0.0001239776611328125, -1.71661376953125e-05, -6.866455078125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004863739013671875, -1.52587890625e-05, -6.866455078125e-05, 0.0, -0.0036029815673828125, 0.0, -1.9073486328125e-06, -0.00272369384765625, -8.0108642578125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001316070556640625, -0.0011430978775024414, -2.3841855067985307e-07, -2.6702880859375e-05, -0.046260833740234375, -5.340576171875e-05, -8.0108642578125e-05, -0.0011739730834960938, -9.5367431640625e-06, -4.76837158203125e-05, -4.00543212890625e-05, -0.0003910064697265625, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.000949859619140625, -1.9073486328125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.02010166645050049, 0.0, -0.001987457275390625, -0.0008029937744140625, -0.0009326934814453125, -0.00122833251953125, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -0.0004512040177360177, 0.0], "score": -6.8543531520694785, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "minion", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda minion: minion.card.minion_type is\n            MINION_TYPE.BEAST and len(game.other_player.minions))\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "minion", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -1.7785816192626953, -0.00067138671875, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.0003719329833984375, -1.9073486328125e-06, -0.019512295722961426, -5.53131103515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1321229934692383, 0.0, -0.021203994750976562, -0.0007190704345703125, -0.0010204315185546875, -0.004366874694824219, -0.07227325439453125, -6.115436553955078e-05, -0.004168510437011719, -0.0055027008056640625, -0.09534263610839844, -9.72747802734375e-05, -0.01871967315673828, -0.000637054443359375, -0.24690628051757812, -0.016286849975585938, -0.7370529174804688, -7.62939453125e-05, -5.53131103515625e-05, -8.392333984375e-05, -0.05177509784698486, 0.0, -0.059291958808898926, -1.9073486328125e-06, -0.0024579763412475586, -1.9073486328125e-06, -0.00096893310546875, -0.04914093017578125, -0.000896453857421875, -2.288818359375e-05, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.000518798828125, 0.0, -0.35610485076904297, -1.9073486328125e-06, -1.6660709381103516, -8.20159912109375e-05, -0.0026502609252929688, -1.9073486328125e-06, -0.000553131103515625, -7.62939453125e-06, -0.012773513793945312, -1.52587890625e-05, -4.57763671875e-05, -3.814697265625e-06, -0.0001316070556640625, -0.28377628326416016, -0.03847312927246094, -0.0711517333984375, -1.71661376953125e-05, -0.00274658203125, 0.0, -0.0008087158203125, 0.0, -0.00023174285888671875, 0.0, -0.00084686279296875, -0.000514984130859375, -1.9073486328125e-05, -7.62939453125e-06, -9.655952453613281e-06, -0.08878707885742188, -0.0005931854248046875, -3.814697265625e-05, -2.09808349609375e-05, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.002267003059387207, -3.814697265625e-05, -2.09808349609375e-05, 0.0, -0.003964424133300781, 0.0, -1.9073486328125e-06, -0.0047016143798828125, -6.866455078125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0002498626708984375, -0.0015845298767089844, -2.3841855067985307e-07, -4.00543212890625e-05, -0.04531097412109375, -5.91278076171875e-05, -9.1552734375e-05, -0.0011625289916992188, -1.1444091796875e-05, -3.24249267578125e-05, -4.57763671875e-05, -0.000217437744140625, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000995635986328125, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.019545674324035645, 0.0, -0.0020771026611328125, -0.0007801055908203125, -0.0009174346923828125, -0.0012187957763671875, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -0.0004495352040976286, 0.0], "score": -6.936083875567846, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "minion", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 17, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 49, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 11, 205, 53, 133, "targets", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda minion: minion.card.minion_type is\n            MINION_TYPE.BEAST and self.target in targets)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, {"comparators": [{"id": "targets", "_type": "Name"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "In"}], "_type": "Compare"}], "_type": "BoolOp"}, "args": {"hole0": "minion", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -5.847696781158447, -0.0006771087646484375, -0.0008258819580078125, -1.71661376953125e-05, -0.0003795623779296875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -7.450580596923828e-05, 0.0, -0.0028162002563476562, 0.0, -3.814697265625e-06, -0.00101470947265625, -0.0001010894775390625, -7.62939453125e-06, -5.7220458984375e-06, -0.000308990478515625, -0.0010600090026855469, -3.576278118089249e-07, -3.24249267578125e-05, -0.052611351013183594, -4.9591064453125e-05, -8.392333984375e-05, -0.0013608932495117188, -1.1444091796875e-05, -0.000476837158203125, -0.0001068115234375, -0.0054607391357421875, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.001300811767578125, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.02790653705596924, 0.0, -0.00142669677734375, -0.000637054443359375, -0.0011444091796875, -0.00125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -3.0517578125e-05, -0.0004658672260120511, 0.0, -0.00034332275390625, -0.0006313323974609375, -0.0030612945556640625, -1.52587890625e-05, -0.5361425876617432, 0.0, -0.4892549514770508, 0.0, -1.9073486328125e-06, -0.0002956390380859375, -0.00031280517578125, -0.0001735687255859375, -4.57763671875e-05, -0.0014972686767578125, -0.0006135700969025493, -1.1920928244535389e-07, -2.09808349609375e-05, -0.11742973327636719, -9.918212890625e-05, -5.53131103515625e-05, -0.00504302978515625, -1.33514404296875e-05, -0.0006961822509765625, -0.0002651214599609375, -0.0032520294189453125, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0016231536865234375, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.03872501850128174, 0.0, -0.00115966796875, -0.00079345703125, -0.0013580322265625, -0.0013933181762695312, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -0.000463721837149933, 0.0], "score": -7.383129914982781, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n        minion.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "Frostbolt", "hole2": [{"value": {"args": [{"s": "Frostbolt", "_type": "Str"}, {"_type": "Template33"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}, {"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 38}
{"beams": [{"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -0.01988077163696289, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -0.00042247772216796875, -2.3841855067985307e-07], "score": -0.023406061306758374, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -4.096882343292236, -1.9073486328125e-06, -0.0001735687255859375, -1.9073486328125e-05, -0.0004374980926513672, -2.3841855067985307e-07], "score": -4.100539001599117, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -7.109196186065674, -1.9073486328125e-06, -0.0020847320556640625, -2.6702880859375e-05, -0.0005725622177124023, -2.3841855067985307e-07], "score": -7.114906701222225, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "divine_shield", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -6.962893486022949, -0.0009174346923828125, -0.0035157203674316406, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -1.2516930837591644e-05, 0.0, -0.02211761474609375, -2.09808349609375e-05, -1.9073486328125e-06, -0.08659899234771729, -9.918212890625e-05, -0.0001049041748046875, -9.5367431640625e-06, -0.0004966259002685547, -1.1920928244535389e-07, -0.0039615631103515625, -1.9073486328125e-06, -0.05160093307495117, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -0.000303029955830425, -2.3841855067985307e-07], "score": -7.134373408196971, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "2", "<EOS>", "2", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True, taunt=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 2, "hole1": 2, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -7.081607341766357, 0.0, -0.11726570129394531, -1.52587890625e-05, -0.0010639429092407227, -5.960462772236497e-07], "score": -7.202977213040015, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "find_spell_target", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, find_spell_target=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "find_spell_target", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -8.534584045410156, -3.814697265625e-06, -0.0005201101303100586, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001406666124239564, 0.0, -7.62939453125e-06, -0.00106048583984375, -5.7220458984375e-06, -2.145764938177308e-06, -6.508827209472656e-05, -2.8418144211173058e-05, -5.841255187988281e-06, -0.019562363624572754, 0.0, -6.67572021484375e-05, -9.5367431640625e-06, -0.00041866302490234375, -2.3841855067985307e-07], "score": -8.557431011191937, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -8.578177452087402, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -0.0002797838533297181, 0.0, -5.7220458984375e-06, -0.000423431396484375, -5.7220458984375e-06, -3.099436753473128e-06, -9.560585021972656e-05, -2.7345435228198767e-05, -7.748603820800781e-06, -0.021868348121643066, 0.0, -7.2479248046875e-05, -9.5367431640625e-06, -0.00040137767791748047, -2.3841855067985307e-07], "score": -8.602627305944878, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -0.01988077163696289, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -9.021550178527832], "score": -9.044533523693872, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=False)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "hole3": {"value": false, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -9.100851058959961, 0.0, -0.061649322509765625, -1.1444091796875e-05, -0.0005220174789428711, -2.3841855067985307e-07], "score": -9.166058453694149, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "p", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, p=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "p", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.976470947265625, -0.1611175537109375, -0.06106436252593994, -2.503394898667466e-05, -2.1224688680376858e-05, -8.785724639892578e-05, -0.0204927921295166, 0.0, -3.4332275390625e-05, -4.9591064453125e-05, -0.0004093647003173828, -3.576278118089249e-07, -0.03269469738006592, 0.0, -0.00029384432127699256, 0.0, -0.0001068115234375, -0.000484466552734375, -3.24249267578125e-05, -8.344629350176547e-06, -9.78708267211914e-05, -3.374128573341295e-05, -2.491474151611328e-05, -0.00526881217956543, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -0.0005080699920654297, -2.741813204920618e-06], "score": -9.259882793946588, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 2, taunt=True)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -8.396513938903809, -1.2040065485052764e-05, -0.00013648773892782629, -7.152555099310121e-07, -0.06511661410331726, -9.059905096364673e-06, 0.0, -2.86102294921875e-05, -5.14984130859375e-05, -0.0004596710205078125, -4.768370445162873e-07, -0.0001848935498856008, -2.0265579223632812e-06, -9.5367431640625e-06, -3.290196036687121e-05, -4.172325134277344e-06, -0.0010467765387147665, 0.0, -0.00021088123321533203, 0.0, -0.0004138946533203125, 0.0, -8.106231689453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -1.52587890625e-05, -6.29425048828125e-05, -1.1920928244535389e-07, -0.26531219482421875, -0.0001354217529296875, -0.0010623931884765625, -0.0002422332763671875, -7.2479248046875e-05, -3.814697265625e-06, -0.0007957149646244943, -0.0004001055203843862, -1.71661376953125e-05, -7.62939453125e-06, -6.4849853515625e-05, -0.000492095947265625, -0.001957654720172286, -5.960462772236497e-07, -0.000667572021484375, -0.0005550384521484375, -8.0108642578125e-05, -0.0010162387043237686, -2.2649765014648438e-06, -8.392333984375e-05, -0.0012531280517578125, -0.0004119873046875, -0.0022430419921875, -0.0013256072998046875, -0.0004711151123046875, -0.004058972001075745, -0.12626421451568604, -0.08134593814611435, -0.1303185522556305, -5.483612312673358e-06, -0.02737903594970703, -0.005133628845214844, -0.00826263427734375, -1.1444091796875e-05, -0.0004884004592895508, 0.0, -0.08145999908447266, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.763240814208984e-05, -3.814697265625e-06, 0.0, -3.62396240234375e-05, -7.2479248046875e-05, -4.57763671875e-05, -0.0014868974685668945, 0.0, -3.62396240234375e-05, -0.0022869110107421875, -0.00012969970703125, -0.00035714913974516094, 0.0, -0.0013885498046875, -0.0003414154052734375, -0.000720977783203125, -6.4849853515625e-05, -0.011156082153320312, -8.20159912109375e-05, -0.0022335052490234375, -1.9073486328125e-05, -0.00048065185546875, -0.000957489013671875, -0.0007266998291015625, -6.4849853515625e-05, -0.010493678972125053, -5.006785613659304e-06, -0.001972198486328125, 0.0, -1.9073486328125e-05, 0.0, -0.013068079948425293, 0.0, -0.0022735595703125, -1.33514404296875e-05, -0.001842498779296875, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.763240814208984e-05, 0.0, -2.09808349609375e-05, -5.14984130859375e-05, -0.0002117156982421875, -0.00119781494140625, -0.00013089130516164005, 0.0, -1.9073486328125e-05, -0.002208709716796875, -4.76837158203125e-05, -0.000835418701171875, 0.0, -0.00343396351672709, 0.0], "score": -9.26869927188175, "choice_history": [77, 148, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 166, 34, 171, "Frostwolf", "Grunt", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            FrostwolfGrunt().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"hole0": "FrostwolfGrunt", "_type": "Template25"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -7.081607341766357, 0.0, -2.3081932067871094], "score": -9.392824920788598, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "find_spell_target", "<EOS>", 38], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, find_spell_target=1)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "find_spell_target", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -8.792933464050293, 0.0, -0.0005550384521484375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000110626220703125, -0.005652189254760742, 0.0, -0.07682991027832031, -0.18263530731201172, -0.06837177276611328, -0.13101255893707275, -8.701899787411094e-05, -0.0001010894775390625, -1.52587890625e-05, -0.17847585678100586, -7.343049946939573e-05, -0.0001201629638671875, -1.9073486328125e-06, -0.001368387253023684, 0.0, 0.0], "score": -9.44137598101156, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 20, 111, 25, 133, "Deathrattle", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Taunt", "<EOS>", 63, 171, "Player", "Selector", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, deathrattle=Deathrattle(Summon(Taunt()),\n            PlayerSelector()))\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "deathrattle", "hole1": 2, "hole3": {"args": [{"hole0": "Summon", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "_type": "Template14"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -10.905550003051758, -0.0047931671142578125, -7.15252917871112e-06, -1.1920928244535389e-07, -4.0532077036914416e-06, -2.0265579223632812e-06], "score": -10.911964875268488, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -8.481474876403809, -1.9073486328125e-06, -0.028202056884765625, -7.62939453125e-05, -0.08459889888763428, -1.1920928244535389e-07, -0.000156402587890625, -0.1303110122680664, 0.0, -0.16125771403312683, -0.6515219211578369, -0.0005172491073608398, -0.0011844635009765625, -0.001613616943359375, -1.9073486328125e-06, -1.9073486328125e-06, -0.2944517135620117, -5.602834789897315e-06, 0.0, -0.0001010894775390625, -0.713587760925293, -3.0517578125e-05, -0.0077109807170927525, -1.6093243175419047e-05, -0.09313979744911194, -4.0531158447265625e-06, -0.13285255432128906, -3.814697265625e-06, -0.47950196266174316, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -0.2955188751220703], "score": -11.560890515750764, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Placed", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "2", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", 205, 71], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(MinionPlaced(), ActionTag(Heal(2),\n            PlayerSelector()))])\n", "model_output": {"hole0": "FrostwolfGrunt", "hole2": [{"hole0": "Frostwolf Grunt", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 2, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionPlaced", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 2, "_type": "Template21"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}], "index": 39}
{"beams": [{"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -0.011797666549682617, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.00046443939208984375, -2.3841855067985307e-07], "score": -0.015479620672266492, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -4.652807712554932, 0.0, -0.0001468658447265625, -1.71661376953125e-05, -0.00047004222869873047, -3.576278118089249e-07], "score": -4.656583126760495, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -6.858095169067383, -0.001407623291015625, -0.003724619746208191, -3.6954863844584906e-06, -7.62939453125e-06, 0.0, -0.006469726096838713, 0.0, -0.022630691528320312, -1.71661376953125e-05, -1.9073486328125e-06, -0.06622743606567383, -0.0001125335693359375, -8.20159912109375e-05, -9.5367431640625e-06, -0.00031960010528564453, -1.1920928244535389e-07, -0.003414154052734375, -1.9073486328125e-06, -0.05579543113708496, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -0.0003496407880447805, -2.0265579223632812e-06], "score": -7.02024231779523, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "1", "<EOS>", "2", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 2, "hole1": 1, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -7.488655090332031, -1.9073486328125e-06, -0.00171661376953125, -2.09808349609375e-05, -0.0005593299865722656, -3.576278118089249e-07], "score": -7.494095262266171, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, divine_shield=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "divine_shield", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -7.451598644256592, 0.0, -0.10761070251464844, -1.52587890625e-05, -0.001139998435974121, -5.960462772236497e-07], "score": -7.563506182409185, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "find_spell_target", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, find_spell_target=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "find_spell_target", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -8.589821815490723, -1.33514404296875e-05, -4.57763671875e-05, 0.0, -0.00048065089504234493, 0.0, -9.5367431640625e-06, -0.000469207763671875, -5.7220458984375e-06, -4.649158654501662e-06, -6.496906280517578e-05, -8.511228224961087e-05, -2.0265579223632812e-06, -0.014222145080566406, 0.0, -7.43865966796875e-05, -7.62939453125e-06, -0.00045299530029296875, -2.3841855067985307e-07], "score": -8.606728967921953, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -8.907864570617676, -3.933906555175781e-06, -0.00036835618084296584, 0.0, -0.00023448467254638672, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0002167208876926452, 0.0, -1.1444091796875e-05, -0.001560211181640625, -5.7220458984375e-06, -4.649158654501662e-06, -4.780292510986328e-05, -9.321783727500588e-05, -2.0265579223632812e-06, -0.012451887130737305, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.00046443939208984375, -2.3841855067985307e-07], "score": -8.92400580041678, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -8.970541000366211, -3.814697265625e-06, -0.00040543079376220703, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00024175549333449453, 0.0, -1.1444091796875e-05, -0.00103759765625, -5.7220458984375e-06, -4.053113570989808e-06, -4.589557647705078e-05, -8.535067900083959e-05, -2.0265579223632812e-06, -0.01129615306854248, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.00046253204345703125, -2.3841855067985307e-07], "score": -8.985023555051356, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "WARRIOR", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -0.011797666549682617, 0.0, -6.866455078125e-05, -7.62939453125e-06, -9.160168647766113], "score": -9.17518359062774, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=False)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": false, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.44153881072998, -6.29425048828125e-05, -1.33514404296875e-05, -0.000591278076171875, -5.7220458984375e-06, -5.841247457283316e-06, -0.00013554096221923828, -0.0001703365269349888, -2.0265579223632812e-06, -0.01880025863647461, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.0004780292510986328, -3.576278118089249e-07], "score": -9.463059591644367, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.21402359008789, -0.16285419464111328, -0.022330760955810547, -2.3841855067985307e-07, -8.034562051761895e-05, -1.71661376953125e-05, -0.01657688617706299, 0.0, -3.4332275390625e-05, -3.24249267578125e-05, -0.0003802776336669922, -2.3841855067985307e-07, -0.04934096336364746, 0.0, -0.000640148064121604, 0.0, -8.58306884765625e-05, -0.0005245208740234375, -2.6702880859375e-05, -7.748586540401448e-06, -0.00018334388732910156, -0.0001151507967733778, -7.748603820800781e-06, -0.0036122798919677734, 0.0, -5.340576171875e-05, -9.5367431640625e-06, -0.0005477666854858398, -2.622604142743512e-06], "score": -9.471688555865, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 2, taunt=True)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -9.576750755310059, 0.0, -0.05578327178955078], "score": -9.63567500946624, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_damage=1)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -6.858095169067383, -0.001407623291015625, -0.003724619746208191, -3.6954863844584906e-06, -7.62939453125e-06, 0.0, -0.006469726096838713, 0.0, -0.022630691528320312, -1.71661376953125e-05, -1.9073486328125e-06, -0.06622743606567383, -0.0001125335693359375, -8.20159912109375e-05, -9.5367431640625e-06, -0.00031960010528564453, -1.1920928244535389e-07, -0.003414154052734375, -1.9073486328125e-06, -3.1849982738494873, -1.9073486328125e-06, -0.0002574920654296875, -1.9073486328125e-05, -0.00028645977727137506, -3.576278118089249e-07], "score": -10.149540527851904, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "1", "<EOS>", "2", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, charge=True, charge=True)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 2, "hole1": 1, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -10.742660522460938, -0.0056324005126953125, -1.013275596051244e-05, -1.2040138244628906e-05, -5.853170296177268e-05, -2.0265579223632812e-06], "score": -10.749827086643336, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -8.84990406036377, -1.9073486328125e-06, -0.02277660369873047, -6.29425048828125e-05, -0.08785045146942139, -1.1920928244535389e-07, -0.0005817413330078125, -0.11512470245361328, 0.0, -0.24640709161758423, -0.7308447360992432, -1.3589859008789062e-05, -0.0003299713134765625, -0.0010929107666015625, -3.814697265625e-06, -9.5367431640625e-06, -0.0043201446533203125, -8.702273589733522e-06, 0.0, -0.0004711151123046875, -0.9849100112915039, -5.91278076171875e-05, -0.026204226538538933, -3.2663316233083606e-05, -0.01603063941001892, -2.2649765014648438e-06, -0.19730091094970703, -2.6702880859375e-05, -3.814697265625e-06, -4.1961669921875e-05, -0.24910354614257812, -2.86102294921875e-05, 0.0, -0.6900920867919922, -0.0001392364501953125, -9.5367431640625e-06, -0.0036172866821289062, 0.0, -0.0011196136474609375, -3.814697265625e-06, -0.2712366580963135, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.2638740539550781], "score": -12.766810501086859, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Died", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, auras=[Aura(MinionDied(), ActionTag(Heal(1),\n            CharacterSelector(players=BothPlayer())))])\n", "model_output": {"hole0": "GoldshireFootman", "hole2": [{"hole0": "Goldshire Footman", "hole2": "ALL", "hole1": 1, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 2, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionDied", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}], "index": 40}
{"beams": [{"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -0.001257540425285697, -0.0001174193384940736, -0.000507354736328125, -0.0025730133056640625, -9.5367431640625e-06, -0.0006589213153347373, -0.0005900859832763672, -9.1552734375e-05, -0.004690813831984997, -3.6597251892089844e-05, -0.0003948211669921875, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.000400543212890625, -0.0001506805419921875, -2.0265579223632812e-06, -5.53131103515625e-05, -0.0014142990112304688, -0.000110626220703125, -5.340576171875e-05, -5.7220458984375e-06, -5.7816483604256064e-05, -0.00025331974029541016, 0.0, -0.000209808349609375, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.000396728515625, -3.576278118089249e-07, -0.002974987030029297, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -0.000728607177734375, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.0004119873046875], "score": -0.03422876002507991, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -0.001257540425285697, -0.0001174193384940736, -0.000507354736328125, -0.0025730133056640625, -9.5367431640625e-06, -0.0006589213153347373, -0.0005900859832763672, -9.1552734375e-05, -5.79660701751709, -3.24249267578125e-05, -7.82012939453125e-05, -0.000118255615234375, -3.814697265625e-06, -9.5367431640625e-06, -0.000789642333984375, -0.0001430511474609375, -2.0265579223632812e-06, -6.4849853515625e-05, -0.00165557861328125, -0.0001068115234375, -6.866455078125e-05, -3.814697265625e-06, -6.651873991359025e-05, -0.00034022328327409923, 0.0, -0.000213623046875, -2.09808349609375e-05, -3.814697265625e-06, -0.000148773193359375, 0.0, -0.000446319580078125, -4.768370445162873e-07, -0.002954721450805664, 0.0, -0.0001506805419921875, -1.71661376953125e-05, -0.0006961822509765625, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -0.0004520416259765625], "score": -5.826680690206437, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 2, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -5.916080951690674, -2.8252427000552416e-05, -5.316733586369082e-05, -7.62939453125e-06, -3.802745777647942e-05, 0.0, -0.0001163482666015625, -0.000614166259765625, -9.5367431640625e-06, -1.2397689715726301e-05, -1.4305078366305679e-05, -2.9802304197801277e-06, -2.0265579223632812e-06, -0.003951909951865673, -1.33514404296875e-05, -0.000431060791015625, -8.392333984375e-05, -0.0013084020465612411, -0.0001143198533100076, -0.000484466552734375, -0.0025539398193359375, -9.5367431640625e-06, -0.0007246824679896235, -0.0006378889083862305, -9.5367431640625e-05, -0.004617869853973389, -3.4689903259277344e-05, -0.0004215240478515625, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0004062652587890625, -0.000148773193359375, -2.0265579223632812e-06, -5.53131103515625e-05, -0.001415252685546875, -0.000110626220703125, -5.340576171875e-05, -5.7220458984375e-06, -5.7816483604256064e-05, -0.00025331974029541016, 0.0, -0.000209808349609375, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.0003948211669921875, -3.576278118089249e-07, -0.002975940704345703, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -0.000728607177734375, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.0004215240478515625], "score": -5.943628161876795, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "PIRATE", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -6.177196502685547, 0.0, -0.01821422576904297, -9.5367431640625e-05, -0.001796338357962668, -5.76969250687398e-05, -0.00031280517578125, -0.002475738525390625, -9.5367431640625e-06, -0.0006705930572934449, -0.0005670785903930664, -9.72747802734375e-05, -0.005598535295575857, -3.6597251892089844e-05, -0.000293731689453125, -4.57763671875e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.000400543212890625, -0.000156402587890625, -3.933906555175781e-06, -5.340576171875e-05, -0.001438140869140625, -0.0001125335693359375, -5.340576171875e-05, -5.7220458984375e-06, -5.769727795268409e-05, -0.00025141239166259766, 0.0, -0.0002079010009765625, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.000392913818359375, -3.576278118089249e-07, -0.0029807090759277344, 0.0, -0.0001926422119140625, -2.09808349609375e-05, -0.000732421875, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.0003833770751953125], "score": -6.226049366952729, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "1", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, 1=[Aura(ChangeAttack(1), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "1", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -6.031028747558594, -0.049396514892578125, -6.365765875671059e-05, -5.6743581808405e-05, -9.536736342852237e-07, -2.1696090698242188e-05, -0.1418813318014145, -0.0066547393798828125, -0.028990251943469048, -7.867813110351562e-06, -3.814697265625e-06, -0.10650920867919922, -0.000213623046875, -1.3947414117865264e-05, -7.987004210008308e-06, -5.960449470876483e-06, -2.0265579223632812e-06, -0.011710824444890022, -1.52587890625e-05, -0.000743865966796875, -8.7738037109375e-05, -0.001470450428314507, -0.0001397112791892141, -0.0004596710205078125, -0.003337860107421875, -9.5367431640625e-06, -0.0007095530163496733, -0.000655055046081543, -0.0001125335693359375, -0.003812283743172884, -3.6597251892089844e-05, -0.0007266998291015625, -5.91278076171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.000408172607421875, -0.0001506805419921875, -2.0265579223632812e-06, -5.340576171875e-05, -0.0015468597412109375, -0.000102996826171875, -4.9591064453125e-05, -5.7220458984375e-06, -5.757806866313331e-05, -0.0002493858337402344, 0.0, -0.000217437744140625, -2.09808349609375e-05, -7.62939453125e-06, -8.392333984375e-05, 0.0, -0.0004749298095703125, -3.576278118089249e-07, -0.002987384796142578, 0.0, -0.0002002716064453125, -2.09808349609375e-05, -0.0007171630859375, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.0003948211669921875], "score": -6.396855196611057, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"hole0": 1, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -6.594610214233398, -5.7100027333945036e-05, -6.0796710386057384e-06, -3.814697265625e-06, -2.8014103008899838e-05, 0.0, -0.000484466552734375, -0.0009708404541015625, -9.5367431640625e-06, -1.7523612768854946e-05, -1.5258759958669543e-05, -3.099439254583558e-06, -2.0265579223632812e-06, -0.0037601832300424576, -1.33514404296875e-05, -0.0004405975341796875, -7.43865966796875e-05, -0.0012768125161528587, -0.000120995391625911, -0.0004024505615234375, -0.002605438232421875, -9.5367431640625e-06, -0.0006283028051257133, -0.0005919933319091797, -0.0001010894775390625, -0.004464528523385525, -3.6597251892089844e-05, -0.000423431396484375, -5.53131103515625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0004138946533203125, -0.0001544952392578125, -2.0265579223632812e-06, -5.53131103515625e-05, -0.0014238357543945312, -0.0001125335693359375, -5.14984130859375e-05, -5.7220458984375e-06, -5.7935692893806845e-05, -0.00025331974029541016, 0.0, -0.0002079010009765625, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.000396728515625, -3.576278118089249e-07, -0.002974987030029297, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -0.0007266998291015625, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.000415802001953125], "score": -6.62233848747649, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "<UNK>", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -0.001257540425285697, -0.0001174193384940736, -0.000507354736328125, -0.0025730133056640625, -9.5367431640625e-06, -0.0006589213153347373, -0.0005900859832763672, -9.1552734375e-05, -0.004690813831984997, -3.6597251892089844e-05, -0.0003948211669921875, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.000400543212890625, -0.0001506805419921875, -2.0265579223632812e-06, -5.53131103515625e-05, -0.0014142990112304688, -0.000110626220703125, -5.340576171875e-05, -5.7220458984375e-06, -5.7816483604256064e-05, -0.00025331974029541016, 0.0, -0.000209808349609375, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.000396728515625, -3.576278118089249e-07, -7.021651268005371, 0.0, -0.00446319580078125, -0.000194549560546875, -0.0007326602935791016, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -0.0003910064697265625], "score": -7.05733986499029, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MECH), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MECH", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -7.376392841339111, 0.0, -0.0004253387451171875, -8.0108642578125e-05, -0.0014392848825082183, -9.882410085992888e-05, -0.0002727508544921875, -0.0023250579833984375, -9.5367431640625e-06, -0.0006084029446355999, -0.0006301403045654297, -0.0001087188720703125, -0.005270096007734537, -4.0411949157714844e-05, -0.000278472900390625, -5.7220458984375e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0003910064697265625, -0.00016021728515625, -2.0265579223632812e-06, -5.53131103515625e-05, -0.0014362335205078125, -0.0001125335693359375, -5.340576171875e-05, -5.7220458984375e-06, -6.008146010572091e-05, -0.000262975663645193, 0.0, -0.000209808349609375, -2.09808349609375e-05, -5.7220458984375e-06, -9.34600830078125e-05, 0.0, -0.0003948211669921875, -3.576278118089249e-07, -0.00295412540435791, 0.0, -0.0001926422119140625, -2.09808349609375e-05, -0.0007266998291015625, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.0003871917724609375], "score": -7.40660804616703, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "buffs", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, buffs=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "buffs", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -0.001257540425285697, -0.0001174193384940736, -0.000507354736328125, -0.0025730133056640625, -9.5367431640625e-06, -0.0006589213153347373, -0.0005900859832763672, -9.1552734375e-05, -0.004690813831984997, -3.6597251892089844e-05, -0.0003948211669921875, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.000400543212890625, -0.0001506805419921875, -2.0265579223632812e-06, -5.53131103515625e-05, -0.0014142990112304688, -0.000110626220703125, -5.340576171875e-05, -5.7220458984375e-06, -5.7816483604256064e-05, -0.00025331974029541016, 0.0, -0.000209808349609375, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.000396728515625, -3.576278118089249e-07, -7.427063941955566, -1.52587890625e-05, -0.004932403564453125, -4.38690185546875e-05, -0.0010758638381958008, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -0.000476837158203125], "score": -7.463509637138422, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "PIRATE", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -7.566879749298096, -0.006871223449707031, -0.010364532470703125, -0.06422233581542969, -2.47955322265625e-05, -0.000882634543813765, -0.000559687614440918, -8.7738037109375e-05, -0.0026628850027918816, -4.4226646423339844e-05, -0.00038909912109375, -7.82012939453125e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0003604888916015625, -0.000148773193359375, -2.0265579223632812e-06, -5.91278076171875e-05, -0.00151824951171875, -0.0001068115234375, -4.57763671875e-05, -5.7220458984375e-06, -5.304811929818243e-05, -0.0002375840995227918, 0.0, -0.000217437744140625, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.0003871917724609375, -3.576278118089249e-07, -0.0030641555786132812, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -0.00072479248046875, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.000392913818359375], "score": -7.676399683263234, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Minion", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Minion(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Minion", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -7.7134833335876465, -1.9073486328125e-06, -0.02676868438720703, -0.0001010894775390625, -0.002263031667098403, -8.571133366785944e-05, -0.00020599365234375, -0.0016937255859375, -1.1444091796875e-05, -0.0005657502915710211, -0.0005843639373779297, -8.392333984375e-05, -0.005810527130961418, -5.5789947509765625e-05, -0.0004291534423828125, -6.29425048828125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0004138946533203125, -0.0001773834228515625, -2.0265579223632812e-06, -5.7220458984375e-05, -0.0015010833740234375, -0.0001125335693359375, -5.340576171875e-05, -5.7220458984375e-06, -5.829332076245919e-05, -0.000262975663645193, 0.0, -0.00020599365234375, -2.09808349609375e-05, -5.7220458984375e-06, -9.1552734375e-05, 0.0, -0.00038909912109375, -3.576278118089249e-07, -0.0029703378677368164, 0.0, -0.000194549560546875, -1.9073486328125e-05, -0.0007228851318359375, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -0.0003795623779296875], "score": -7.770874651479907, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "use", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, use=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "use", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -0.001257540425285697, -0.0001174193384940736, -7.657580375671387, -0.0010471343994140625, -2.09808349609375e-05, -0.00043015959090553224, -0.0017080307006835938, -9.1552734375e-05, -0.02487259730696678, -0.0002167224884033203, -0.010528564453125, -0.035030364990234375, -1.9073486328125e-06, -7.62939453125e-06, -0.001224517822265625, -0.00012028217315673828, -2.0265579223632812e-06, -7.82012939453125e-05, -0.002666473388671875, -5.14984130859375e-05, -8.20159912109375e-05, -1.9073486328125e-06, -9.345999569632113e-05, -0.0004951953887939453, 0.0, -0.0001888275146484375, -2.288818359375e-05, -1.9073486328125e-06, -0.000415802001953125, 0.0, -0.000408172607421875, -3.576278118089249e-07, -0.003405928611755371, 0.0, -0.000148773193359375, -1.52587890625e-05, -0.0006543397903442383, -3.0517578125e-05, 0.0, -0.035828590393066406, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -0.9438543319702148, -0.00027680397033691406, 0.0, -0.0005779266357421875, -1.9073486328125e-05, 0.0, -0.0001049041748046875, 0.0, -0.000133514404296875, 0.0, -0.022800683975219727, 0.0, -9.5367431640625e-06, -0.0015621185302734375], "score": -8.763889757097722, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 207, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 205, 71], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()), IsType(MINION_TYPE.\n            MURLOC))])\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole2": "auras", "hole1": 1, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"args": [{"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}, {"args": [{"attr": "MURLOC", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -6.031028747558594, -0.049396514892578125, -6.365765875671059e-05, -5.6743581808405e-05, -9.536736342852237e-07, -2.1696090698242188e-05, -0.1418813318014145, -0.0066547393798828125, -0.028990251943469048, -7.867813110351562e-06, -3.814697265625e-06, -2.739410400390625, -0.06470966339111328, -2.622600959512056e-06, -2.3245793272508308e-05, -1.1920923270736239e-07, -1.811981201171875e-05], "score": -9.062395123359181, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"hole0": 1, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -9.461502075195312, -0.0040531158447265625, -9.775111720955465e-06, -4.25577127316501e-05, -1.4305119293567259e-06, -1.3947486877441406e-05], "score": -9.475756823328986, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"value": {"args": [{"s": "Grimscale Oracle", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -6.031028747558594, -0.049396514892578125, -6.365765875671059e-05, -5.6743581808405e-05, -9.536736342852237e-07, -2.1696090698242188e-05, -2.0527679920196533, -0.0002231597900390625, -9.751319885253906e-05, -0.7857491374015808, -4.398822784423828e-05, -1.9073486328125e-06, -1.9516792297363281, -0.039653778076171875, -7.867781278037e-06, -2.610682167869527e-05, -2.384184938364342e-07, -2.002716064453125e-05], "score": -10.910963892508022, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>", "Minion", "Card", "<EOS>", "Card", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        return Minion(1, 1)\n\n    def MinionCard(self, Card):\n        return Minion(1, 1)\n", "model_output": {"hole0": "GrimscaleOracle", "hole2": [{"hole0": 1, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "Card", "hole6": [{"hole0": 1, "hole1": 1, "_type": "Template16"}]}}], "index": 41}
{"beams": [{"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -0.010972794145345688, -0.0004634179931599647, -0.0319167859852314, -5.7220440794480965e-06, -7.62939453125e-05, -9.918212890625e-05, -0.00040404757601208985, -0.00012981891632080078, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.0001468658447265625, -0.0001010894775390625, -2.09808349609375e-05, -2.5510627892799675e-05, -1.0013547580456361e-05, -0.00010216236114501953, -7.748586540401448e-06], "score": -0.0716157369256436, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -0.010972794145345688, -0.0004634179931599647, -3.4654695987701416, -2.0265579223632812e-05, -0.0001239776611328125, -2.288818359375e-05, -0.0006054146215319633, -0.00011646747589111328, 0.0, -1.9073486328125e-05, 0.0, -4.172325134277344e-06, 0.0, -0.000133514404296875, -0.0001220703125, -1.9073486328125e-05, -2.336486431886442e-05, -8.940672159951646e-06, -9.644031524658203e-05, -8.583047019783407e-06], "score": -3.5053433330940535, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "5", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 5, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -4.195383071899414, -0.00299835205078125, -3.0517578125e-05, -0.3422888517379761, -8.34461570775602e-06, -0.000102996826171875, 0.0, -0.0005627870559692383, -3.2186455882765586e-06, -0.000141143798828125, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.00019073486328125, -0.000667572021484375, -2.288818359375e-05, -0.018401840701699257, -0.0014684771886095405, -0.03505164757370949, -7.867811291362159e-06, -7.82012939453125e-05, -0.000102996826171875, -0.0005186768248677254, -0.00016415119171142578, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.0001430511474609375, -0.000102996826171875, -2.09808349609375e-05, -2.4795384888420813e-05, -1.025196434056852e-05, -0.00010979175567626953, -8.106212590064388e-06], "score": -4.6048254317355415, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -4.195383071899414, -0.00299835205078125, -3.0517578125e-05, -1.5391215085983276, -1.9073486328125e-06, -0.0011749267578125, 0.0, -0.0006314516067504883, -4.768370445162873e-07, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000194549560546875, -0.000823974609375, -1.9073486328125e-05, -0.016199488192796707, -0.001524092978797853, -0.03613501042127609, -6.556507287314162e-06, -7.43865966796875e-05, -0.0001068115234375, -0.0005417917855083942, -0.00014889240264892578, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.000141143798828125, -0.0001049041748046875, -2.09808349609375e-05, -2.4795384888420813e-05, -1.013275596051244e-05, -0.00010991096496582031, -7.987004210008308e-06], "score": -5.8018202938287615, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -5.34451961517334, -0.5902048349380493, -0.025404635816812515, -0.06885404884815216, -4.5299530029296875e-06, -3.4332275390625e-05, -0.0001010894775390625, -0.00042049871990457177, -0.00013172626495361328, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -4.649161837733118e-06, 0.0, -0.0001697540283203125, -0.0001010894775390625, -2.47955322265625e-05, -2.312648211955093e-05, -1.1086422091466375e-05, -0.00010609626770019531, -5.960446742392378e-06], "score": -6.057250403825485, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Restore", "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(RestoreHeal(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "RestoreHeal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -6.040414810180664, -0.08677685260772705, -0.0016193389892578125, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00014495849609375, -1.9073486328125e-06, -0.000164031982421875, -0.00095367431640625, -1.71661376953125e-05, -0.017476771026849747, -0.0016455929726362228, -0.03855140134692192, -7.6293927122605965e-06, -4.38690185546875e-05, -5.7220458984375e-05, -0.0005409587174654007, -0.00016045570373535156, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -4.768371127283899e-06, 0.0, -0.00014495849609375, -0.0001010894775390625, -2.09808349609375e-05, -2.5153007300104946e-05, -1.013275596051244e-05, -0.00010979175567626953, -7.987004210008308e-06], "score": -6.210537211910939, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "combo", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, combo=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "combo", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -6.316210746765137, -0.0001000150223262608, -2.9683074899367057e-05, -6.717443466186523e-05, -3.0040344427106902e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0002079010009765625, -1.52587890625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -9.536738616588991e-07, -0.00022041294141672552, -0.0011088848114013672, -3.24249267578125e-05, -6.496906280517578e-05, -1.33514404296875e-05, -0.00042724609375, -7.62939453125e-06, -2.5629868105170317e-05, -6.162942008813843e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006867639604024589, -1.1920928244535389e-07, -0.0001621246337890625, -0.015588760375976562, -3.814697265625e-06, 0.0, -0.00421142578125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001373291015625, -0.001071929931640625, -2.47955322265625e-05, -0.010985583066940308, -0.00045996217522770166, -0.03191070258617401, -5.7220440794480965e-06, -7.62939453125e-05, -9.918212890625e-05, -0.0004092907765880227, -0.00012791156768798828, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.00014495849609375, -0.0001010894775390625, -2.09808349609375e-05, -2.5510627892799675e-05, -1.0013547580456361e-05, -0.00010216236114501953, -7.748586540401448e-06], "score": -6.386022866179125, "choice_history": [77, 145, "Guardian", "Of", "The", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfTheKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfTheKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -6.530667304992676, -0.0003526801010593772, -0.2027079463005066, -8.344629350176547e-06, -0.000179290771484375, -1.52587890625e-05, -0.0007328957435674965, -0.00016236305236816406, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -2.741813204920618e-06, 0.0, -0.000225067138671875, -0.000164031982421875, -3.24249267578125e-05, -1.895418972708285e-05, -1.2159294783486985e-05, -0.00012731552124023438, -9.655922440288123e-06], "score": -6.762558413800882, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -6.798916816711426, -0.0004472732252907008, -0.00010955333709716797, -7.62939453125e-06, -0.0004253387451171875, -9.5367431640625e-06, -2.7060386855737306e-05, -6.115261203376576e-05, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0007040494820103049, -2.3841855067985307e-07, -0.000164031982421875, -0.015737533569335938, -3.814697265625e-06, 0.0, -0.0041980743408203125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000141143798828125, -0.0010471343994140625, -2.47955322265625e-05, -0.011206796392798424, -0.00048474909272044897, -0.03205864503979683, -5.841253368998878e-06, -7.43865966796875e-05, -9.918212890625e-05, -0.00040869496297091246, -0.00013172626495361328, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.00014495849609375, -0.0001010894775390625, -2.09808349609375e-05, -2.5510627892799675e-05, -1.0013547580456361e-05, -0.00010216236114501953, -7.748586540401448e-06], "score": -6.8706162239991215, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "Guardian", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian Guardian Kings', 7, CHARACTER_CLASS.\n            PALADIN, CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian Guardian Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -6.788015365600586, -0.044822175055742264, -7.867813110351562e-06, -0.053006500005722046, -2.622604142743512e-06, -9.5367431640625e-05, -3.4332275390625e-05, -0.0004449353145901114, -8.606910705566406e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.861022494471399e-06, 0.0, -0.00018310546875, -0.000186920166015625, -3.62396240234375e-05, -1.800052632461302e-05, -1.2516919014160521e-05, -0.00011587142944335938, -1.025196434056852e-05], "score": -6.914213351565415, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Increase", "6", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Increase6(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Increase6", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -6.775251388549805, -0.0006329667521640658, -0.18489767611026764, -7.987013304955326e-06, -6.103515625e-05, -8.96453857421875e-05, -0.0004421809280756861, -0.00032269954681396484, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.768371127283899e-06, 0.0, -0.0001964569091796875, -0.00014495849609375, -2.86102294921875e-05, -2.2172822355059907e-05, -1.0967213711410295e-05, -0.00014460086822509766, -9.894339200400282e-06], "score": -6.989402265277469, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Health", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Health(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Health", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -6.928060054779053, -0.0010236491216346622, -0.06347407400608063, -2.741813204920618e-06, -0.000133514404296875, -7.82012939453125e-05, -0.0005171316443011165, -0.00011086463928222656, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -2.741813204920618e-06, 0.0, -0.0002155303955078125, -0.000141143798828125, -3.0517578125e-05, -1.943101960932836e-05, -1.2040087312925607e-05, -0.0001138448715209961, -9.298297300119884e-06], "score": -7.021073314102971, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "6", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(6(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "6", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -5.34451961517334, -1.421155571937561, -0.933830201625824, -1.990787495742552e-05, -0.0440235398709774, -5.483625955093885e-06, -5.53131103515625e-05, -6.866455078125e-05, -0.00044266070472076535, -0.00012981891632080078, 0.0, -1.52587890625e-05, 0.0, -4.649161837733118e-06, 0.0, -0.000125885009765625, -8.7738037109375e-05, -2.09808349609375e-05, -2.5987455956055783e-05, -9.298297300119884e-06, -0.00010216236114501953, -5.245195097813848e-06], "score": -7.771761258283725, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Restore", "With", "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(RestoreWithHeal(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "RestoreWithHeal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -7.81815767288208, -0.0012998223537579179, -0.003218640573322773, -0.00011240907042520121, -2.7224421501159668e-05, -2.67025734501658e-05, -3.4570680327306036e-06, -1.9073486328125e-06, -0.00022125244140625, -1.52587890625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023769706604070961, -0.0011774301528930664, -3.24249267578125e-05, -6.878376007080078e-05, -1.33514404296875e-05, -0.000415802001953125, -7.62939453125e-06, -2.7060355932917446e-05, -6.17486221017316e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006870023789815605, -1.1920928244535389e-07, -0.000171661376953125, -0.013278961181640625, -3.814697265625e-06, 0.0, -0.004150390625, -3.576278118089249e-07, -0.000102996826171875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001373291015625, -0.0010662078857421875, -2.47955322265625e-05, -0.010948339477181435, -0.00045412234612740576, -0.03189115226268768, -5.7220440794480965e-06, -7.62939453125e-05, -9.918212890625e-05, -0.00040428590727970004, -0.00012791156768798828, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.0001468658447265625, -0.0001010894775390625, -2.09808349609375e-05, -2.5510627892799675e-05, -1.0013547580456361e-05, -0.00010216236114501953, -7.748586540401448e-06], "score": -7.889360120158521, "choice_history": [77, 145, "<UNK>", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class <UNK>OfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "<UNK>OfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 6, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}, {"score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -4.195383071899414, -0.00299835205078125, -3.0517578125e-05, -0.3422888517379761, -8.34461570775602e-06, -0.000102996826171875, 0.0, -0.0005627870559692383, -3.2186455882765586e-06, -0.000141143798828125, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.00019073486328125, -0.000667572021484375, -2.288818359375e-05, -0.018401840701699257, -0.0014684771886095405, -3.370479106903076, -1.823902130126953e-05, -0.0001506805419921875, -2.288818359375e-05, -0.000758144713472575, -0.00015473365783691406, 0.0, -1.9073486328125e-05, 0.0, -4.172325134277344e-06, 0.0, -0.0001354217529296875, -0.0001277923583984375, -2.09808349609375e-05, -2.443776247673668e-05, -9.059880540007725e-06, -0.00010025501251220703, -8.821463779895566e-06], "score": -7.940495696825899, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "5", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "model_output": {"hole0": "GuardianOfKings", "hole2": [{"value": {"args": [{"s": "Guardian of Kings", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "DEMON", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Heal", "hole1": 5, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 5, "hole1": 6, "_type": "Template16"}]}}], "index": 42}
{"beams": [{"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.1080479621887207, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, -0.00037568609695881605, -0.0009534650598652661, -0.014840282499790192, -0.0001302877499256283, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0002651214599609375, -1.406666160619352e-05, 0.0, -0.0001125335693359375, -0.000446319580078125, -0.0014858245849609375, -0.0001995563507080078, -1.9311904907226562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016075371531769633, -0.00040364230517297983, -1.9073486328125e-06, -3.814697265625e-06, -0.021381378173828125, -0.0009212493896484375, -9.5367431640625e-06, -0.00029405896202661097, -5.14984130859375e-05, 0.0, -3.24249267578125e-05, -8.7738037109375e-05], "score": -0.1939973597352136, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -2.3323655128479004, 0.0, -1.9073486328125e-06, 0.0, -0.8135906457901001, -2.110004425048828e-05, -1.9073486328125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002079010009765625, -8.58306884765625e-06, -3.814697265625e-06, -5.7220458984375e-05, -0.003620147705078125, -0.0031795501708984375, -0.0001666545867919922, -2.5033950805664062e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0013781784800812602, -0.00042355028563179076, -1.9073486328125e-06, -3.814697265625e-06, -0.021825790405273438, -0.00124359130859375, -1.1444091796875e-05, -0.00024102322640828788, -4.38690185546875e-05, 0.0, -3.24249267578125e-05, -8.392333984375e-05], "score": -3.220813385844586, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -2.3323655128479004, 0.0, -1.9073486328125e-06, 0.0, -0.5926416516304016, -0.22229206562042236, -0.05828959867358208, -4.529858779278584e-05, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.000164031982421875, -1.2874577805632725e-05, 0.0, -0.0001068115234375, -0.0009059906005859375, -0.00197601318359375, -0.0002052783966064453, -2.1219253540039062e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016049145488068461, -0.0003952976258005947, -1.9073486328125e-06, -3.814697265625e-06, -0.020639419555664062, -0.0009059906005859375, -9.5367431640625e-06, -0.00026080640964210033, -5.340576171875e-05, 0.0, -3.4332275390625e-05, -8.58306884765625e-05], "score": -3.2752974001784523, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "MinionIsTarget", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.1080479621887207, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, -0.00037568609695881605, -0.0009534650598652661, -0.014840282499790192, -0.0001302877499256283, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0002651214599609375, -1.406666160619352e-05, 0.0, -0.0001125335693359375, -0.000446319580078125, -0.0014858245849609375, -0.0001995563507080078, -1.9311904907226562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016075371531769633, -0.00040364230517297983, -1.9073486328125e-06, -3.814697265625e-06, -4.003705024719238, -0.0001506805419921875, -0.021728515625, -0.5642423629760742, -0.005542755126953125, -1.52587890625e-05, -0.007496345322579145, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -0.0005474090576171875], "score": -4.774687881569399, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 74, 190, 100, 38, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(-1)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"op": {"_type": "USub"}, "operand": {"_type": "Template34"}, "_type": "UnaryOp"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -4.631616592407227, 0.0, -0.09814739227294922, -1.9073486328125e-06, -1.9073486328125e-06, -0.1678224802017212, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.0005790832219645381, -0.0008342429646290839, -0.01604209467768669, -9.309846791438758e-05, -1.52587890625e-05, -2.6702880859375e-05, 0.0, 0.0, -0.00026702880859375, -1.2636161045520566e-05, 0.0, -0.000102996826171875, -0.0004367828369140625, -0.0015201568603515625, -0.0001995563507080078, -2.1219253540039062e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016609429148957133, -0.0004096027696505189, -1.9073486328125e-06, -3.814697265625e-06, -0.021440505981445312, -0.0009365081787109375, -9.5367431640625e-06, -0.0002907219168264419, -5.14984130859375e-05, 0.0, -3.24249267578125e-05, -8.58306884765625e-05], "score": -4.9486799820722, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterSelector(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -4.834146499633789, -0.0007410049438476562, -0.0007686614990234375, 0.0, 0.0, -0.01504969596862793, 0.0, -1.9073486328125e-06, 0.0, -0.3867741823196411, -1.537799835205078e-05, -1.9073486328125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000171661376953125, -8.225440979003906e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.0038890838623046875, -0.0032501220703125, -0.0001609325408935547, -2.5033950805664062e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0014188288478180766, -0.000427245773607865, -1.9073486328125e-06, -3.814697265625e-06, -0.022535324096679688, -0.00128936767578125, -1.1444091796875e-05, -0.0002466257137712091, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, -8.58306884765625e-05], "score": -5.277168027409708, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "<UNK>", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "Character<UNK>", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.1080479621887207, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, -0.00037568609695881605, -0.0009534650598652661, -5.558048248291016, -0.00019097296171821654, -3.24249267578125e-05, -1.71661376953125e-05, 0.0, 0.0, -0.0008449554443359375, -1.060962586052483e-05, -1.9073486328125e-06, -0.0001239776611328125, -0.0004825592041015625, -0.002002716064453125, -0.00019538402557373047, -2.3126602172851562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.00150477874558419, -0.00041615936788730323, -1.9073486328125e-06, -3.814697265625e-06, -0.020435333251953125, -0.0012187957763671875, -1.1444091796875e-05, -0.00023172485816758126, -4.9591064453125e-05, 0.0, -3.814697265625e-05, -8.392333984375e-05], "score": -5.737618882710841, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Minion", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsMinion()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsMinion", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -2.3323655128479004, 0.0, -1.9073486328125e-06, 0.0, -0.5926416516304016, -2.8737258911132812, -0.00025212758919224143, -9.5367431640625e-06, -9.5367431640625e-05, 0.0, 0.0, -0.000133514404296875, -1.20401346066501e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.0002460479736328125, -0.0022335052490234375, -0.0001857280731201172, -2.6941299438476562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015790461329743266, -0.0004192587803117931, -1.9073486328125e-06, -3.814697265625e-06, -0.020376205444335938, -0.0011844635009765625, -1.1444091796875e-05, -0.00022719644766766578, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -8.20159912109375e-05], "score": -5.868243509209343, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Minion", "Died", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            MinionDied()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "MinionDied", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.1080479621887207, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, -0.00037568609695881605, -0.0009534650598652661, -5.772527694702148, -0.00011682510375976562, -9.5367431640625e-06, -7.62939453125e-06, 0.0, 0.0, -0.000392913818359375, -9.536741345073096e-06, 0.0, -9.918212890625e-05, -0.000347137451171875, -0.00144195556640625, -0.00017642974853515625, -2.3126602172851562e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0020495650824159384, -0.00041127175791189075, -1.9073486328125e-06, -3.814697265625e-06, -0.019865036010742188, -0.0011844635009765625, -1.1444091796875e-05, -0.00026879250071942806, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -8.392333984375e-05], "score": -5.950765324573432, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Self", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsSelf()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))]\n            )\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsSelf", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -2.3323655128479004, 0.0, -1.9073486328125e-06, 0.0, -0.5926416516304016, -3.080066680908203, -0.00010037411993835121, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -1.9073486328125e-06, -0.0001087188720703125, -8.821474693831988e-06, 0.0, -7.62939453125e-05, -0.0005645751953125, -0.0022907257080078125, -0.00019943714141845703, -2.3126602172851562e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.001318335416726768, -0.00045824021799489856, -1.9073486328125e-06, -3.814697265625e-06, -0.022562026977539062, -0.0009632110595703125, -9.5367431640625e-06, -0.00022516991884913296, -4.9591064453125e-05, 0.0, -3.814697265625e-05, -8.392333984375e-05], "score": -6.076483302963162, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Minion", "Count", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(player=\n            MinionCount()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "MinionCount", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.1080479621887207, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, -0.00037568609695881605, -0.0009534650598652661, -0.014840282499790192, -0.0001302877499256283, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0002651214599609375, -1.406666160619352e-05, 0.0, -0.0001125335693359375, -0.000446319580078125, -0.0014858245849609375, -0.0001995563507080078, -1.9311904907226562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016075371531769633, -0.00040364230517297983, -1.9073486328125e-06, -3.814697265625e-06, -4.003705024719238, -0.0001506805419921875, -0.021728515625, -1.899890422821045, -0.03435707092285156, -0.00017547607421875, -0.0015221472131088376, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -0.0012359619140625], "score": -6.134017199847868, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 74, 190, 100, 41, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(-4)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"op": {"_type": "USub"}, "operand": {"_type": "Template37"}, "_type": "UnaryOp"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -5.528596878051758, -1.9073486328125e-06, -0.0009288787841796875, 0.0, 0.0, -0.049739956855773926, 0.0, -1.9073486328125e-06, 0.0, -0.621359646320343, -2.09808349609375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001983642578125, -8.463859558105469e-06, -3.814697265625e-06, -6.29425048828125e-05, -0.0027790069580078125, -0.0030231475830078125, -0.0001628398895263672, -2.5033950805664062e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0014070271281525493, -0.000428557104896754, -1.9073486328125e-06, -3.814697265625e-06, -0.021947860717773438, -0.0012340545654296875, -1.1444091796875e-05, -0.00024388406018260866, -4.1961669921875e-05, 0.0, -3.0517578125e-05, -8.58306884765625e-05], "score": -6.238366178710486, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Died", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDied(player=BothPlayer\n            ()), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDied", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -5.422452449798584, 0.0, -5.7220458984375e-06, 0.0, -0.4400993883609772, -0.35782694816589355, 0.0, -3.4332275390625e-05, -2.09808349609375e-05, 0.0, 0.0, -0.0006542205810546875, -1.0967253729177173e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.0025920867919921875, -0.003604888916015625, -0.0001971721649169922, -2.682209014892578e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0013478993205353618, -0.000480651535326615, -1.9073486328125e-06, -3.814697265625e-06, -0.020578384399414062, -0.0014934539794921875, -1.71661376953125e-05, -0.0001697443367447704, -6.4849853515625e-05, 0.0, -4.38690185546875e-05, -8.392333984375e-05], "score": -6.294100791732227, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Minion", "Selector", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(players=\n            MinionSelector()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterDamaged", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "MinionSelector", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -6.133872032165527, -0.0013360977172851562, -0.000347137451171875, -1.9073486328125e-06, -1.9073486328125e-06, -0.12101387977600098, -2.0265579223632812e-06, -2.86102294921875e-05, 0.0, -0.0004210855986457318, -0.0008727330714464188, -0.014677644707262516, -0.0001232552749570459, -1.52587890625e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0002460479736328125, -1.406666160619352e-05, 0.0, -0.00011444091796875, -0.000438690185546875, -0.0014820098876953125, -0.0001995563507080078, -1.9311904907226562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0015465019969269633, -0.00040149653796106577, -1.9073486328125e-06, -3.814697265625e-06, -0.021320343017578125, -0.000904083251953125, -9.5367431640625e-06, -0.0002804714604280889, -5.53131103515625e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05], "score": -6.3058678073745895, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Player", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterPlayer(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "effects", "hole1": 7, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "CharacterPlayer", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"hole0": "MinionIsTarget", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Give", "hole2": [{"_type": "Template35"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "SelfSelector", "_type": "Template25"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -9.798882484436035, -0.01036834716796875, -4.29153169534402e-06, -3.576278118089249e-07, -4.768371127283899e-06, -1.4066643416299485e-05], "score": -9.811969773698728, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "7", "<EOS>"], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7)\n", "model_output": {"hole0": "GurubashiBerserker", "hole2": [{"hole0": "Gurubashi Berserker", "hole2": "ALL", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 7, "_type": "Template16"}]}}], "index": 43}
{"beams": [{"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -0.06702899932861328, -0.000274658203125, -3.814697265625e-06, -0.002549886703491211, 0.0, -4.9591064453125e-05, -0.00569915771484375, -8.20159912109375e-05, -0.0027658939361572266, 0.0, -8.0108642578125e-05, -0.0014705657958984375, -3.62396240234375e-05, -0.0009775161743164062, 0.0, -3.62396240234375e-05, -0.004604339599609375, -3.4332275390625e-05, -0.0008546113967895508, -2.0265579223632812e-06], "score": -0.49479543502999945, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -1.2643060684204102, -0.000751495361328125, -3.814697265625e-06, -0.000888824462890625, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.00043022632598876953, 0.0, -0.003308534622192383, 0.0, -2.288818359375e-05, -0.001354217529296875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001068115234375, -0.0004698038101196289, -1.9073486328125e-06, -4.9591064453125e-05, -0.09165287017822266, -0.000293731689453125, -3.814697265625e-06, -0.0025801658630371094, 0.0, -0.00067901611328125, -0.00017547607421875, -3.0517578125e-05, -0.007064104080200195, 0.0], "score": -1.3905028038807075, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -2.9000892639160156, -0.0001983642578125, -7.259596168296412e-05, -2.71793978754431e-05, -0.000209808349609375, 0.0, -0.0018371343612670898, -9.5367431640625e-06, -0.000377655029296875, -0.0011043548583984375, -8.0108642578125e-05, -0.0005599260330200195, 0.0, -5.14984130859375e-05, -0.0010814666748046875, -1.9073486328125e-05, -0.0005217790603637695, 0.0, -2.47955322265625e-05, -0.002109527587890625, -1.9073486328125e-05, -0.00061202043434605, -2.0265579223632812e-06], "score": -3.3172526264843043, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "3", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -1.2643060684204102, -0.000751495361328125, -3.814697265625e-06, -0.000888824462890625, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.00043022632598876953, 0.0, -0.003308534622192383, 0.0, -2.288818359375e-05, -0.001354217529296875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001068115234375, -0.0004698038101196289, -1.9073486328125e-06, -4.9591064453125e-05, -2.568812370300293, -0.00018310546875, -8.356237958651036e-05, -2.467606282152701e-05, -0.0001678466796875, 0.0, -0.0019267797470092773, -9.5367431640625e-06, -0.0004444122314453125, -8.7738037109375e-05, -1.52587890625e-05, -0.001550912857055664, -1.1920928244535389e-07], "score": -3.861329426112171, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "3", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 3, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -5.148457050323486, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.000347137451171875, -0.000110626220703125, -0.000885009765625, -1.9073486328125e-06, 0.0, -0.000110626220703125, 0.0, -5.53131103515625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.00055694580078125, -1.1920928244535389e-07, -0.0004023313522338867, -4.208087921142578e-05, -0.0001404285430908203, 0.0, -0.0002889622119255364, 0.0, -0.000606536865234375, -0.000247955322265625, -5.14984130859375e-05, -4.57763671875e-05, -3.6954811548639555e-06, -0.350006103515625, -0.0041370391845703125, -1.9073486328125e-05, -0.0010051727294921875, -0.00135040283203125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.00752103328704834, 0.0, -5.7220458984375e-06, -0.001373291015625, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -0.06702709197998047, -0.000274658203125, -3.814697265625e-06, -0.0025479793548583984, 0.0, -4.9591064453125e-05, -0.005707740783691406, -8.20159912109375e-05, -0.0027611255645751953, 0.0, -8.0108642578125e-05, -0.0014438629150390625, -3.62396240234375e-05, -0.0009708404541015625, 0.0, -3.4332275390625e-05, -0.004487037658691406, -3.4332275390625e-05, -0.000847935676574707, -2.0265579223632812e-06], "score": -5.610872381375422, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -5.724422454833984, -0.000995635986328125, -1.9073486328125e-06, -0.0026803016662597656, -1.9073486328125e-06, -4.57763671875e-05, -0.005475044250488281, -8.392333984375e-05, -0.0024350881576538086, 0.0, -8.7738037109375e-05, -0.0013399124145507812, -3.4332275390625e-05, -0.0009632110595703125, 0.0, -4.00543212890625e-05, -0.0034494400024414062, -3.62396240234375e-05, -0.0008219480514526367, -1.9073486328125e-06], "score": -6.151162260133759, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -6.255221843719482, -0.009018898010253906, -0.001468658447265625, -0.014360427856445312, -0.00281524658203125, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.7404556274414062e-05, 0.0, -0.0008473396301269531, 0.0, -0.003986001014709473, 0.0, -3.814697265625e-06, -0.0002422332763671875, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -6.29425048828125e-05, -0.00028121471405029297, 0.0, -3.4332275390625e-05, -0.08170318603515625, -0.0002918243408203125, -1.9073486328125e-06, -0.002424955368041992, 0.0], "score": -6.3890498810596625, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -6.004537582397461, -0.0011806488037109375, -1.9073486328125e-06, -0.0014748573303222656, -1.9073486328125e-06, -6.103515625e-05, -0.003780364990234375, -7.82012939453125e-05, -0.0032199621200561523, 0.0, -5.91278076171875e-05, -0.0013828277587890625, -3.4332275390625e-05, -0.000939488410949707, 0.0, -3.24249267578125e-05, -0.00411224365234375, -2.86102294921875e-05, -0.0006959438323974609, -1.9073486328125e-06], "score": -6.429868810731904, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -0.06702899932861328, -0.000274658203125, -3.814697265625e-06, -0.002549886703491211, 0.0, -4.9591064453125e-05, -5.521052360534668, -0.05565834045410156, -2.6702880859375e-05, -0.140106201171875, -0.00144374358933419, 0.0, -0.10132825374603271, -1.1920928244535389e-07, -0.0002269744873046875, -0.008333206176757812, -0.000152587890625, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-05, -0.007261036895215511, -3.814697265625e-06, -1.1444091796875e-05, -0.1239767074584961, -0.000530242919921875, -2.47955322265625e-05, -0.0038107633590698242, 0.0, -0.0001392364501953125, -0.00482940673828125, -3.814697265625e-05, -0.0007919073104858398, 0.0, -0.00016021728515625, -0.001514434814453125, -2.6702880859375e-05, -0.0005570650100708008, 0.0], "score": -6.450202576621415, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.hero.heal(player.effective_heal_power(3), self)\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -6.319552421569824, -0.06983280181884766, -3.4332275390625e-05, -0.00153350830078125, -0.0017528533935546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.225440979003906e-06, -1.9073486328125e-06, -0.002082347869873047, 0.0, -0.02160203456878662, 0.0, -2.86102294921875e-05, -0.000946044921875, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.82012939453125e-05, -0.00025928017566911876, 0.0, -2.47955322265625e-05, -0.04982280731201172, -0.0002593994140625, -3.814697265625e-06, -0.0022455453872680664, 0.0, -6.103515625e-05, -0.00016021728515625, -4.9591064453125e-05, -0.0020279884338378906, 0.0, -4.00543212890625e-05, -0.0002536773681640625, -2.86102294921875e-05, -0.0009129047393798828, -3.933906555175781e-06], "score": -6.4898784094347945, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -5.148457050323486, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -4.38690185546875e-05, -0.000347137451171875, -0.000110626220703125, -0.000885009765625, -1.9073486328125e-06, 0.0, -0.000110626220703125, 0.0, -5.53131103515625e-05, -3.62396240234375e-05, -4.38690185546875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.00055694580078125, -1.1920928244535389e-07, -0.0004023313522338867, -4.208087921142578e-05, -0.0001404285430908203, 0.0, -0.0002889622119255364, 0.0, -0.000606536865234375, -0.000247955322265625, -5.14984130859375e-05, -4.57763671875e-05, -3.6954811548639555e-06, -1.3274774551391602, -0.0007171630859375, -3.814697265625e-06, -0.0008697509765625, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.00043594837188720703, 0.0, -0.003335237503051758, 0.0, -2.288818359375e-05, -0.001384735107421875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001068115234375, -0.0004678964614868164, -1.9073486328125e-06, -4.9591064453125e-05, -0.09163951873779297, -0.000293731689453125, -3.814697265625e-06, -0.002578258514404297, 0.0, -0.0006885528564453125, -0.00017547607421875, -3.0517578125e-05, -0.007089853286743164, 0.0], "score": -6.595860832379451, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -6.180500030517578, -0.0032358169555664062, -5.7220458984375e-06, -0.0003470182418823242, 0.0, -5.7220458984375e-05, -0.03569602966308594, -0.000156402587890625, -0.010016560554504395, 0.0, -0.0006160736083984375, -0.0011377334594726562, -2.6702880859375e-05, -0.0010685920715332031, 0.0, -8.20159912109375e-05, -0.0025777816772460938, -3.4332275390625e-05, -0.001023411750793457, 0.0], "score": -6.644826882440583, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -1.2643060684204102, -0.000751495361328125, -3.814697265625e-06, -0.000888824462890625, -4.38690185546875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.775161743164062e-06, 0.0, -0.00043022632598876953, 0.0, -0.003308534622192383, 0.0, -2.288818359375e-05, -0.001354217529296875, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001068115234375, -0.0004698038101196289, -1.9073486328125e-06, -4.9591064453125e-05, -5.397442817687988, -0.000980377197265625, -1.9073486328125e-06, -0.0026633739471435547, -1.9073486328125e-06, -0.0002613067626953125, -0.0001926422119140625, -2.09808349609375e-05, -0.005882740020751953, 0.0], "score": -6.695471160966889, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -5.875758171081543, -0.0009427429758943617, -0.0074828388169407845, -0.00014030899910721928, -1.8358225133852102e-05, -2.7416826924309134e-06, -9.536738616588991e-07, -3.576278118089249e-07, 0.0, -0.03089618682861328, -4.00543212890625e-05, -8.20159912109375e-05, -1.33514404296875e-05, -7.62939453125e-06, -7.62939453125e-06, -7.43865966796875e-05, -1.52587890625e-05, -6.639736966462806e-05, -0.00010979175567626953, -0.0002762996591627598, -3.814697265625e-05, -1.1801716937043238e-05, -3.814697265625e-06, -0.0004444122314453125, -3.814697265625e-06, -1.9073486328125e-06, -0.0001010894775390625, -7.62939453125e-06, -8.07046890258789e-05, -7.62939453125e-06, -0.009523749351501465, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -0.00020599365234375, -0.0003337860107421875, -0.00080108642578125, -1.9073486328125e-06, 0.0, -0.0001354217529296875, 0.0, -0.0001049041748046875, -6.103515625e-05, -3.62396240234375e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -0.000583648681640625, -2.3841855067985307e-07, -0.00040400028228759766, -4.208087921142578e-05, -0.0018281936645507812, 0.0, -0.0016560553340241313, 0.0, -5.340576171875e-05, -2.288818359375e-05, -0.000316619873046875, -0.0002709627151489258, -5.364403477869928e-06, -0.26271820068359375, -0.0020236968994140625, -0.020772933959960938, -0.020127296447753906, -0.011335372924804688, -1.9073486328125e-06, -0.00083160400390625, 0.0, -1.9550323486328125e-05, 0.0, -6.651878356933594e-05, 0.0, -0.002504706382751465, 0.0, -3.814697265625e-06, -0.0005321502685546875, -1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -7.2479248046875e-05, -0.00032973289489746094, 0.0, -3.4332275390625e-05, -0.0683746337890625, -0.0002899169921875, -3.814697265625e-06, -0.003092050552368164, 0.0, -6.4849853515625e-05, -0.009848594665527344, -5.53131103515625e-05, -0.0017341375350952148, 0.0, -0.000392913818359375, -0.0015821456909179688, -2.86102294921875e-05, -0.0005837678909301758, 0.0, -0.0003261566162109375, -0.005385398864746094, -3.814697265625e-05, -0.0006654262542724609, -2.0265579223632812e-06, -0.0021619796752929688, -0.09870529174804688, -0.000766754150390625, -0.036366164684295654, -1.9073486328125e-06, -0.0035953521728515625, -0.0003490447998046875, -0.00040435791015625, -0.00022125244140625, -0.00103759765625, -0.0043487548828125, -0.004390716552734375, -1.9073486328125e-06, -0.0003070831298828125, -0.0004138946533203125, -0.0003070831298828125, -0.0001697540283203125, -0.0009788202587515116, -5.006785613659304e-06, -0.0003097057342529297, 0.0, -0.0003472566604614258, -1.9073486328125e-06, -0.0009788274765014648, 0.0, -0.0066127777099609375, -1.52587890625e-05, -0.31522178649902344, -0.00016021728515625, -4.76837158203125e-05, -6.67572021484375e-05, -0.00018858905241359025, -2.0265579223632812e-06, -0.0002593994140625, -8.7738037109375e-05, -3.62396240234375e-05, -0.0029125213623046875, -0.0009272089810110629, 0.0, -1.1444091796875e-05, -0.34567832946777344, -2.86102294921875e-05, -0.0014295578002929688, -6.103515625e-05, -0.01390846911817789, -1.1920928244535389e-07], "score": -7.190871688822334, "choice_history": [77, 148, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -4.883083820343018, -1.189011573791504, -0.003930091857910156, -0.0030707456171512604, -0.009792942553758621, -0.013157844543457031, -0.0007610321044921875, -0.0001316070556640625, -0.11009037494659424, -0.0014636515406891704, -1.33514404296875e-05, -0.0024595260620117188, -0.03404998779296875, -0.022562026977539062, -0.004157764371484518, -0.001369951292872429, -0.04989444091916084, -0.0001087188720703125, -0.07223819941282272, -0.00049591064453125, -0.0002386543492320925, -3.099440846199286e-06, -0.0028581619262695312, -1.9073486328125e-06, -0.001934051513671875, 0.0, -0.0012912750244140625, -0.24461078643798828, -0.0006847381591796875, -0.0004119873046875, -3.24249267578125e-05, -0.0036792755126953125, -7.62939453125e-06, 0.0, -0.0011444091796875, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.47955322265625e-05, -3.814697265625e-06, -4.1961669921875e-05, -5.7220458984375e-06, -8.58306884765625e-05, 0.0, -0.0002002716064453125, -2.0265579223632812e-06, -0.0004878044128417969, -8.20159912109375e-05, -0.006222724914550781, -0.006497383117675781, -0.017249226570129395, -3.814697265625e-06, -0.008213996887207031, -0.004044532775878906, -0.000110626220703125, -0.03792095184326172, -0.00147247314453125, -1.9073486328125e-06, -0.011414922773838043, -1.1920928244535389e-07, -0.0019228458404541016, 0.0, -1.1444091796875e-05, -0.0001220703125, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.000591278076171875, -0.0007404081989079714, 0.0, -1.52587890625e-05, -0.022859573364257812, -0.0003299713134765625, -1.9073486328125e-06, -0.004454493522644043, 0.0, -0.0604705810546875, -0.0002651214599609375, -2.288818359375e-05, -0.0009248256683349609, 0.0, -0.31696033477783203, -0.0024652481079101562, -3.24249267578125e-05, -0.000988602638244629, -2.3841855067985307e-07, -0.47449302673339844, -0.005158424377441406, -3.4332275390625e-05, -0.0012488364009186625, -1.0848044439626392e-05, -0.6371736526489258, -0.04506206512451172, -0.0010460095945745707, -0.5236954689025879, -0.07769718021154404, -0.3131600618362427, -0.0007905960083007812, -4.00543212890625e-05, 0.0, -0.019074559211730957, -6.687640416203067e-05, -1.9073486328125e-05, -0.06178855895996094, -0.1279315948486328, -0.04317760467529297, -0.021629637107253075, -0.0006261804956011474, -0.036535464227199554, -0.0002651214599609375, -0.04028730466961861, -0.0004482269287109375, -0.00018668139819055796, -2.384185791015625e-06, -0.0032863616943359375, -1.9073486328125e-06, -0.001926422119140625, 0.0, -0.0003414154052734375, -0.20631790161132812, -0.0009937286376953125, -0.000370025634765625, -4.1961669921875e-05, -0.0036678314208984375, -9.5367431640625e-06, 0.0, -0.000919342041015625, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -0.0001964569091796875, -2.1457672119140625e-06, -0.0004994869232177734, -8.0108642578125e-05, -0.0024814605712890625, -0.0060272216796875, -0.01666700839996338, -5.7220458984375e-06, -0.007267951965332031, -0.0030374526977539062, -0.0001087188720703125, -0.045418739318847656, -0.0020723342895507812, -1.9073486328125e-06, -0.012881970033049583, -1.1920928244535389e-07, -0.0019381046295166016, 0.0, -1.1444091796875e-05, -0.000125885009765625, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.0005970001220703125, -0.0007433884311467409, 0.0, -1.52587890625e-05, -0.022706031799316406, -0.00032806396484375, -1.9073486328125e-06, -0.004408717155456543, 0.0, -0.0609893798828125, -0.0002651214599609375, -2.288818359375e-05, -0.0009496212005615234, 0.0, -0.3180999755859375, -0.0024728775024414062, -3.4332275390625e-05, -0.0009971857070922852, -2.3841855067985307e-07], "score": -10.343601859989704, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 223, 85, 113, "Hammer", "<EOS>", 205, 53, 133, "Choice", "Card", "<EOS>", 218, 95, 160, "Hammer", " ", "3", " ", "Damage", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 205, 54, 134, "False", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 88, 118, "use", "<EOS>", 3, 217, 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 85, 113, "Hammer", "Of", "Wrath", "<EOS>", 205, 53, 133, "Choice", "Card", "<EOS>", 218, 95, 160, "Hammer", " ", "3", " ", "Damage", "<EOS>", "0", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 205, 54, 134, "False", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 88, 118, "use", "<EOS>", 3, 217, 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n\n\n        class Hammer(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Hammer 3 Damage', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, True, target_func=\n                    hearthbreaker.targeting.find_spell_target)\n\n            def use(self, player, game):\n                target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n\n\n        class HammerOfWrath(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Hammer 3 Damage', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, True, target_func=\n                    hearthbreaker.targeting.find_spell_target)\n\n            def use(self, player, game):\n                target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HammerOfWrath", "hole2": [{"value": {"args": [{"s": "Hammer of Wrath", "_type": "Str"}, {"_type": "Template37"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"body": [{"hole0": "Hammer 3 Damage", "hole2": "DRUID", "hole1": 0, "hole3": "COMMON", "_type": "Template2", "hole4": [{"value": true, "_type": "NameConstant"}], "hole5": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}]}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "args": {"_type": "Template8"}, "name": "use", "_type": "FunctionDef"}], "bases": [{"id": "ChoiceCard", "_type": "Name"}], "name": "Hammer", "_type": "ClassDef"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"body": [{"hole0": "Hammer 3 Damage", "hole2": "DRUID", "hole1": 0, "hole3": "COMMON", "_type": "Template2", "hole4": [{"value": true, "_type": "NameConstant"}], "hole5": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}]}, {"body": [{"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "args": {"_type": "Template8"}, "name": "use", "_type": "FunctionDef"}], "bases": [{"id": "ChoiceCard", "_type": "Name"}], "name": "HammerOfWrath", "_type": "ClassDef"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 44}
{"beams": [{"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.027965545654296875, 0.0, -6.198882329044864e-05, -7.867813110351562e-06, -0.039734598249197006, 0.0, -0.01013648509979248, 0.0, -0.000362396240234375, -0.0001468658447265625, -0.0004388093948364258, -3.933904736186378e-06], "score": -0.1534924940932001, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.027965545654296875, 0.0, -6.198882329044864e-05, -7.867813110351562e-06, -3.260221242904663, -2.3841855067985307e-07, -0.04641246795654297, 0.0, -0.017057418823242188, -0.0007534027099609375, -0.0006160736083984375, -3.576278118089249e-07], "score": -3.427730607408847, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.player.minions = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "minions", "value": {"attr": "player", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -3.60398006439209, -1.1444091796875e-05, -0.0003833770751953125, 0.0, -0.00021576879953499883, -2.5391578674316406e-05, -0.21186035871505737, -1.1920928244535389e-07, -0.1095365360379219, -1.1920928244535389e-07, -0.3538142442703247, 0.0, -0.007412910461425781, -0.0005092620849609375, -0.000457763671875, -7.152555099310121e-07], "score": -4.362842077921911, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.player.minions = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "minions", "value": {"attr": "player", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -4.487205982208252, -5.567073458223604e-05, -0.05549907684326172, -0.1818065643310547, -9.1552734375e-05, -0.000881195068359375, -6.103515625e-05, -0.00083160400390625, -0.0001201629638671875, -0.0001583099365234375, 0.0, -0.0249176025390625, 0.0, -6.484984623966739e-05, -5.9604644775390625e-06, -0.049959417432546616, 0.0, -0.009511709213256836, 0.0, -0.000400543212890625, -0.0001316070556640625, -0.0004044771194458008, -3.933904736186378e-06], "score": -4.833670659543998, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "attacker", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, attacker):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "attacker", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -5.226449966430664, -8.96453857421875e-05, -1.33514404296875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -4.1961669921875e-05, -0.00082564348122105, -1.9073486328125e-06, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001163482666015625, -1.33514404296875e-05, -0.000598907470703125, -1.9073486328125e-06, 0.0, -5.53131103515625e-05, 0.0, -0.0001277923583984375, -9.5367431640625e-05, -2.86102294921875e-05, 0.0, -0.0002422332763671875, 0.0, -0.0002269744873046875, -1.9073486328125e-06, -0.0002231597900390625, -4.768370445162873e-07, -0.0014491081237792969, 0.0, -2.6822088329936378e-05, 0.0, -0.0005500047700479627, 0.0, -0.000179290771484375, -4.9591064453125e-05, -2.288818359375e-05, -0.015289545059204102, -6.198863957251888e-06, -0.03253746032714844, -0.001987457275390625, -8.96453857421875e-05, -0.0005970001220703125, -4.1961669921875e-05, -0.000965118408203125, -0.000156402587890625, -0.000110626220703125, 0.0, -0.028444290161132812, 0.0, -6.294249760685489e-05, -7.867813110351562e-06, -0.04003166779875755, 0.0, -0.010109901428222656, 0.0, -0.000362396240234375, -0.0001468658447265625, -0.0004407167434692383, -3.933904736186378e-06], "score": -5.371542372347335, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_minion_spell_target\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -3.60398006439209, -1.1444091796875e-05, -0.0003833770751953125, 0.0, -0.00021576879953499883, -2.5391578674316406e-05, -1.6767489910125732, -5.8412379075889476e-06, -0.38802772760391235, 0.0, -0.17954324185848236, 0.0, -0.0034952163696289062, -0.0003795623779296875, -0.0007724761962890625, -3.576277322281385e-06], "score": -5.928226681940316, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.player.hero.divine_shield = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "hero", "value": {"attr": "player", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -5.9302449226379395, -0.006596918683499098, -8.583047019783407e-06, -2.2172927856445312e-05, -2.1457672119140625e-06, -7.62939453125e-06, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.1444091796875e-05, -0.0007724761962890625, -4.38690185546875e-05, -1.9073486328125e-05, -7.974783511599526e-05, -4.780292510986328e-05, -0.0013327598571777344, -0.02714860439300537, -0.002325296401977539, -1.1444091796875e-05, -2.09808349609375e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.14984130859375e-05, -5.7220458984375e-06, -4.875659942626953e-05, -1.52587890625e-05, -0.0008163449238054454, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.000125885009765625, -9.5367431640625e-06, -0.0009250640869140625, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002002716064453125, -9.5367431640625e-05, -2.288818359375e-05, 0.0, -0.0002040863037109375, 0.0, -0.000164031982421875, -1.9073486328125e-06, -0.0002269744873046875, -5.960462772236497e-07, -0.0015442371368408203, 0.0, -2.4676321118022315e-05, 0.0, -0.0005460730171762407, 0.0, -0.0001850128173828125, -4.9591064453125e-05, -1.9073486328125e-05, -0.014573454856872559, -6.079655122448457e-06, -0.0343780517578125, -0.0020656585693359375, -8.96453857421875e-05, -0.0005970001220703125, -4.1961669921875e-05, -0.0009670257568359375, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.028207778930664062, 0.0, -6.294249760685489e-05, -7.867813110351562e-06, -0.039844390004873276, 0.0, -0.010133743286132812, 0.0, -0.000362396240234375, -0.0001468658447265625, -0.0004407167434692383, -3.933904736186378e-06], "score": -6.108156287150734, "choice_history": [77, 147, "Hand", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"hole0": "HandProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -6.1381940841674805, -1.1920928244535389e-07, -3.0517578125e-05, -1.1444091796875e-05, -2.47955322265625e-05, -2.6702880859375e-05, -9.5367431640625e-06, -5.328655242919922e-05, -3.24249267578125e-05, -0.0006616112077608705, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.000164031982421875, -1.33514404296875e-05, -0.0003337860107421875, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, 0.0, -0.0001392364501953125, -7.82012939453125e-05, -3.4332275390625e-05, 0.0, -0.000156402587890625, 0.0, -0.0001888275146484375, -1.9073486328125e-06, -0.000232696533203125, -5.960462772236497e-07, -0.0015729665756225586, 0.0, -2.4557111828471534e-05, 0.0, -0.000516524538397789, 0.0, -0.000164031982421875, -4.76837158203125e-05, -2.09808349609375e-05, -0.014733552932739258, -6.198863957251888e-06, -0.03372764587402344, -0.0020580291748046875, -8.96453857421875e-05, -0.0005950927734375, -4.1961669921875e-05, -0.0009632110595703125, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.027410507202148438, 0.0, -6.210803257999942e-05, -7.867813110351562e-06, -0.03992092236876488, 0.0, -0.010128974914550781, 0.0, -0.0003604888916015625, -0.0001468658447265625, -0.0004388093948364258, -3.933904736186378e-06], "score": -6.287800963167051, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Shield", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Shield", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.027965545654296875, 0.0, -6.198882329044864e-05, -7.867813110351562e-06, -0.039734598249197006, 0.0, -6.385119438171387, 0.0, -0.0006313323974609375, -4.00543212890625e-05, -8.320808410644531e-05, -6.437291176553117e-06], "score": -6.528284473874294, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.taunt = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "taunt", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.027965545654296875, 0.0, -6.198882329044864e-05, -7.867813110351562e-06, -0.039734598249197006, 0.0, -6.620032787322998, 0.0, -0.0016565322875976562, -0.000118255615234375, -0.00025963783264160156, -7.152543730626348e-06], "score": -6.764478369211076, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.index = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "index", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -4.199106216430664, -0.001461029052734375, -8.96453857421875e-05, -0.000152587890625, -9.5367431640625e-06, -0.5504331588745117, -7.82012939453125e-05, -0.0002765655517578125, -1.9073486328125e-06, -0.025720596313476562, -1.9073486328125e-06, -0.0004552602767944336, -9.655952453613281e-06, -0.11588895320892334, 0.0, -0.00794219970703125, 0.0, -0.000244140625, -0.0001163482666015625, -0.0004634857177734375, -4.649158654501662e-06, -0.18291664123535156, -0.6959676742553711, -0.19767284393310547, 0.0, -0.0005397796630859375, -1.9073486328125e-06, -0.0003415346145629883, -1.9073486328125e-06, -0.0029299254529178143, 0.0, -0.0017917156219482422, -5.7220458984375e-06, -0.8338356018066406, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.2949800491333008, 0.0, -0.0001125335693359375, 0.0, -0.06275379657745361, -2.288818359375e-05, -0.09634673595428467, 0.0, -0.17654132843017578, 0.0, -0.00054168701171875, -0.0002460479736328125, -0.0001430511474609375, -1.2159336620243266e-05, -0.10132026672363281, -0.3876495361328125, -0.0013179779052734375, -1.9073486328125e-06, -0.006488322280347347, 0.0, -0.3571687936782837, -1.7881377516459906e-06, -1.1444091796875e-05, -0.08801555633544922], "score": -8.42820076744107, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>", 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        self.target.<UNK>()\n        self.target.divine_shield = True\n        target.increase_health(2)\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "<UNK>", "_type": "Template23"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"hole0": {"id": "target", "_type": "Name"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -4.199106216430664, -0.001461029052734375, -8.96453857421875e-05, -0.000152587890625, -9.5367431640625e-06, -0.5504331588745117, -7.82012939453125e-05, -0.0002765655517578125, -1.9073486328125e-06, -0.025720596313476562, -1.9073486328125e-06, -0.0004552602767944336, -9.655952453613281e-06, -0.11588895320892334, 0.0, -0.00794219970703125, 0.0, -0.000244140625, -0.0001163482666015625, -0.0004634857177734375, -4.649158654501662e-06, -0.18291664123535156, -0.6959676742553711, -0.19767284393310547, 0.0, -0.0005397796630859375, -1.9073486328125e-06, -0.0003415346145629883, -1.9073486328125e-06, -0.0029299254529178143, 0.0, -0.0017917156219482422, -5.7220458984375e-06, -0.58203125, -0.0003643035888671875, -0.0009670257568359375, 0.0, -0.001583099365234375, 0.0, -0.01969730854034424, -2.288818359375e-05, -0.002327321097254753, -1.9073486328125e-06, -0.8518534898757935, -2.622604142743512e-06, -7.62939453125e-06, -0.2096242904663086, -1.9073486328125e-06, -0.3745229244232178, -0.0008097886457107961, -0.002910614013671875, -5.340576171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -7.43865966796875e-05, -0.0009202957153320312, -3.814697265625e-06, -0.08794510364532471, 0.0, -0.29253387451171875, -3.814697265625e-06, -0.0014190673828125, -9.34600830078125e-05, -3.254413604736328e-05, -7.152555099310121e-07], "score": -8.450505778212857, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>", 97, 165, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        self.target.<UNK>()\n        self.target.change_attack(<UNK>)\n        target.taunt = True\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole1": "<UNK>", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "change_attack", "_type": "Template23"}, {"targets": [{"attr": "taunt", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -4.314635276794434, -0.024112701416015625, -0.0001277923583984375, -9.72747802734375e-05, -4.1961669921875e-05, -0.5966949462890625, -0.0004024505615234375, -0.0003376007080078125, 0.0, -0.015445709228515625, 0.0, -0.0003385543532203883, -2.1457672119140625e-06, -0.02250826358795166, 0.0, -0.009079456329345703, 0.0, -0.00054168701171875, -0.0002727508544921875, -0.0003833770751953125, -3.218649908376392e-06, -0.5584392547607422, -0.016489028930664062, -4.57763671875e-05, -0.0002593994140625, -0.12064456939697266, -4.57763671875e-05, -8.58306884765625e-05, -3.814697265625e-06, -0.07117632031440735, -2.384185791015625e-06, -6.103515625e-05, -2.86102294921875e-05, -1.9073486328125e-05, -0.11806106567382812, -1.9073486328125e-06, -0.04058837890625, -0.10119457542896271, -7.939338684082031e-05, -0.04713347181677818, -9.775161743164062e-06, -0.000247955322265625, -0.7793083190917969, -1.9073486328125e-06, -0.0008716583251953125, -1.71661376953125e-05, -0.0151174021884799, -0.00015007461479399353, -0.197662353515625, -0.0131378173828125, -0.004566192626953125, -0.029821395874023438, 0.0, -0.014287948608398438, -1.9073486328125e-06, -0.03016042709350586, -2.6941299438476562e-05, -0.001039266586303711, 0.0, -0.8696404695510864, 0.0, -1.9073486328125e-05, -0.6727733612060547, -0.027912139892578125, -0.0079193115234375, -0.009028434753417969, -0.0049610137939453125, -1.9073486328125e-06, -0.000728607177734375, 0.0, -0.0005332231521606445, -3.62396240234375e-05, -0.00016582012176513672, -1.9073486328125e-06, -0.7740316390991211, 0.0, -0.0001125335693359375, -0.1377544403076172], "score": -9.68747036060887, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 42, "opponent", "<EOS>", "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        if len(player.opponent.minions) < 7:\n            self.target.change_attack(2)\n        else:\n            self.target.change_attack(2)\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"attr": "opponent", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -4.314635276794434, -0.024112701416015625, -0.0001277923583984375, -9.72747802734375e-05, -4.1961669921875e-05, -0.5966949462890625, -0.0004024505615234375, -0.0003376007080078125, 0.0, -0.015445709228515625, 0.0, -0.0003385543532203883, -2.1457672119140625e-06, -0.02250826358795166, 0.0, -0.009079456329345703, 0.0, -0.00054168701171875, -0.0002727508544921875, -0.0003833770751953125, -3.218649908376392e-06, -0.5584392547607422, -0.016489028930664062, -4.57763671875e-05, -0.0002593994140625, -0.12064456939697266, -4.57763671875e-05, -8.58306884765625e-05, -3.814697265625e-06, -0.07117632031440735, -2.384185791015625e-06, -6.103515625e-05, -2.86102294921875e-05, -1.9073486328125e-05, -0.11806106567382812, -1.9073486328125e-06, -0.04058837890625, -0.10119457542896271, -7.939338684082031e-05, -0.04713347181677818, -9.775161743164062e-06, -0.000247955322265625, -0.7793083190917969, -1.9073486328125e-06, -0.0008716583251953125, -1.71661376953125e-05, -0.0151174021884799, -0.00015007461479399353, -0.197662353515625, -0.0131378173828125, -0.004566192626953125, -0.029821395874023438, 0.0, -0.014287948608398438, -1.9073486328125e-06, -0.03016042709350586, -2.6941299438476562e-05, -0.001039266586303711, 0.0, -1.1346207857131958, 0.0, -3.0517578125e-05, -0.12567424774169922, -0.0017681121826171875, -0.07729053497314453, -0.005260467529296875, -0.026564598083496094, -3.814697265625e-06, -0.0003910064697265625, 0.0, -0.000779271125793457, -3.0517578125e-05, -0.0001537799835205078, -1.9073486328125e-06, -1.144998550415039, 0.0, -0.000148773193359375, -0.06189441680908203], "score": -9.761461540075118, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 42, "opponent", "<EOS>", "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        if len(player.opponent.minions) < 7:\n            self.target.increase_health(4)\n        else:\n            self.target.change_attack(2)\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"attr": "opponent", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -4.314635276794434, -0.024112701416015625, -0.0001277923583984375, -9.72747802734375e-05, -4.1961669921875e-05, -0.5966949462890625, -0.0004024505615234375, -0.0003376007080078125, 0.0, -0.015445709228515625, 0.0, -0.0003385543532203883, -2.1457672119140625e-06, -0.02250826358795166, 0.0, -0.009079456329345703, 0.0, -0.00054168701171875, -0.0002727508544921875, -0.0003833770751953125, -3.218649908376392e-06, -0.5584392547607422, -0.016489028930664062, -4.57763671875e-05, -0.0002593994140625, -0.12064456939697266, -4.57763671875e-05, -8.58306884765625e-05, -3.814697265625e-06, -0.07117632031440735, -2.384185791015625e-06, -6.103515625e-05, -2.86102294921875e-05, -1.9073486328125e-05, -0.11806106567382812, -1.9073486328125e-06, -0.04058837890625, -0.10119457542896271, -7.939338684082031e-05, -0.04713347181677818, -9.775161743164062e-06, -0.000247955322265625, -0.7793083190917969, -1.9073486328125e-06, -0.0008716583251953125, -1.71661376953125e-05, -0.0151174021884799, -0.00015007461479399353, -0.197662353515625, -0.0131378173828125, -0.004566192626953125, -0.029821395874023438, 0.0, -0.014287948608398438, -1.9073486328125e-06, -0.03016042709350586, -2.6941299438476562e-05, -0.001039266586303711, 0.0, -1.1346207857131958, 0.0, -3.0517578125e-05, -0.12567424774169922, -0.0017681121826171875, -0.07729053497314453, -0.005260467529296875, -0.026564598083496094, -3.814697265625e-06, -0.0003910064697265625, 0.0, -0.000779271125793457, -3.0517578125e-05, -0.0001537799835205078, -1.9073486328125e-06, -0.9936809539794922, 0.0, -7.2479248046875e-05, -0.2945232391357422], "score": -9.842696472020918, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>", 89, 122, 21, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 42, "opponent", "<EOS>", "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72, 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 68], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n        if len(player.opponent.minions) < 7:\n            self.target.increase_health(4)\n        else:\n            self.target.increase_health(2)\n", "model_output": {"hole0": "HandOfProtection", "hole2": [{"value": {"args": [{"s": "Hand of Protection", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "increase_health", "_type": "Template23"}], "test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"attr": "opponent", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_health", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 45}
{"beams": [{"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -0.0037002533208578825, 0.0, -0.000164031982421875, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001155853271484375, -5.91278076171875e-05, 0.0, -0.001056671142578125, -5.7220458984375e-06, -1.1444091796875e-05, -0.012441754341125488, 0.0, -0.0005702972412109375, -0.0077381134033203125, -0.0006349086761474609, 0.0, -5.14984130859375e-05, -0.000885009765625], "score": -0.06777808727473911, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -4.994481086730957, -7.2479248046875e-05, -0.0001792691764421761, -3.325901343487203e-05, -9.488644718658179e-05, 0.0], "score": -5.004683464273505, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "0", "<EOS>", "2", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2)\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -4.962730884552002, -1.9073486328125e-06, -0.01066636573523283, 0.0, -0.0001678466796875, -0.0001220703125, -1.9073486328125e-06, 0.0, -0.0022487640380859375, -4.1961669921875e-05, 0.0, -0.00170135498046875, -3.814697265625e-06, -1.1444091796875e-05, -0.009893536567687988, 0.0, -0.00058746337890625, -0.007328033447265625, -0.000563502311706543, -1.1920928244535389e-07, -5.91278076171875e-05, -0.00102996826171875], "score": -5.024301504071431, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -0.0037002533208578825, 0.0, -0.000164031982421875, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001155853271484375, -5.91278076171875e-05, 0.0, -0.001056671142578125, -5.7220458984375e-06, -1.1444091796875e-05, -4.534367561340332, 0.0, -0.3159656524658203, -5.7220458984375e-06, -0.5550881624221802, -0.0010573863983154297, 0.0, -1.9073486328125e-06, -0.021497726440429688], "score": -5.473440623895833, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(player=BothPlayer())))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -0.0037002533208578825, 0.0, -0.000164031982421875, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001155853271484375, -5.91278076171875e-05, 0.0, -0.001056671142578125, -5.7220458984375e-06, -1.1444091796875e-05, -4.534367561340332, 0.0, -0.3159656524658203, -5.7220458984375e-06, -0.9016457796096802, -0.021555542945861816, 0.0, -8.7738037109375e-05, -0.0015411376953125], "score": -5.820625639574239, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Random", "Picker", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(player=RandomPicker())))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "RandomPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -0.0037002533208578825, 0.0, -0.000164031982421875, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001155853271484375, -5.91278076171875e-05, 0.0, -0.001056671142578125, -5.7220458984375e-06, -1.1444091796875e-05, -4.534367561340332, 0.0, -1.377528190612793, -0.000732421875, -0.000522613525390625, 0.0, -0.0002689361572265625, -0.000804901123046875], "score": -5.959681130068013, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "player", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(player=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -6.180731296539307, 0.0, -0.00012969970703125, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -0.00232696533203125, -2.86102294921875e-05, 0.0, -0.000858306884765625, -3.814697265625e-06, -1.1444091796875e-05, -0.0137559175491333, 0.0, -0.0006008148193359375, -0.0068950653076171875, -0.0006722211837768555, -1.1920928244535389e-07, -5.53131103515625e-05, -0.0009670257568359375], "score": -6.2463438308868575, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(2),\n            MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 2, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -5.372001647949219, -0.0006313323974609375, -0.7766284942626953, -6.866455078125e-05, -0.1491495817899704, -3.576278118089249e-07, -0.04649615287780762, 0.0, -1.33514404296875e-05, -0.01909351348876953, -2.09808349609375e-05, -0.00028228759765625, 0.0, -0.0001068115234375, -0.06266963481903076, -1.1920928244535389e-07, -0.0007839202880859375, -0.000728607177734375, -0.000888824462890625, -9.1552734375e-05, -0.00278317928314209, 0.0], "score": -6.442261497972979, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        minion.damage(player.effective_spell_damage(1), self)\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template34"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -5.885494709014893, -0.6579994559288025, -1.33514404296875e-05, -0.008495539426803589, 0.0, -0.000240325927734375, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -0.0012531280517578125, -6.103515625e-05, 0.0, -0.0024471282958984375, -5.7220458984375e-06, -1.9073486328125e-05, -0.006252408027648926, 0.0, -0.000568389892578125, -0.0045871734619140625, -0.0005005598068237305, -1.1920928244535389e-07, -4.9591064453125e-05, -0.0009212493896484375], "score": -6.596180090967195, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Increase", "<UNK>", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(\n            Increase<UNK>(1), MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Increase<UNK>", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -5.885494709014893, -0.8413481116294861, 0.0, -0.00826263427734375, 0.0, -0.0002651214599609375, -6.67572021484375e-05, -1.9073486328125e-06, 0.0, -0.001567840576171875, -5.7220458984375e-05, 0.0, -0.00185394287109375, -5.7220458984375e-06, -1.9073486328125e-05, -0.008960843086242676, -1.9073486328125e-06, -0.00052642822265625, -0.007480621337890625, -0.0005462169647216797, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0009632110595703125], "score": -6.784611502948778, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Increase", "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(\n            IncreaseHeal(1), MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "IncreaseHeal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -6.689577102661133, -0.0007781982421875, -3.814697265625e-06, -9.97731985989958e-05, -0.0004857760213781148, -4.053113570989808e-06, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0003223419189453125, -9.918212890625e-05, -1.1444091796875e-05, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0009480714797973633, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -0.0002040863037109375, -0.015596508979797363, 0.0, -0.018396377563476562, -3.814697265625e-05, -0.0002002716064453125, 0.0, -0.0006638765335083008, -1.9073486328125e-06, -0.00015842914581298828, 0.0, -3.814697265625e-06, -0.013413429260253906, -8.96453857421875e-05, -1.6689286894688848e-06, -2.264974000354414e-06, -0.00010823638149304315, 0.0, -0.0008333921432495117, 0.0, -3.24249267578125e-05, -6.29425048828125e-05, -0.00011479854583740234, 0.0, -2.47955322265625e-05, -0.0013427734375, -5.7220458984375e-06, -0.0004642009735107422, -0.00022900104522705078, -1.33514404296875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.000209808349609375, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006580352783203125, -5.7220458984375e-06, -0.01218879222869873, -0.00011444091796875, -0.003511543618515134, 0.0, -0.000156402587890625, -8.0108642578125e-05, -1.9073486328125e-06, 0.0, -0.0011997222900390625, -6.103515625e-05, 0.0, -0.0009708404541015625, -5.7220458984375e-06, -1.1444091796875e-05, -0.012785077095031738, 0.0, -0.0005512237548828125, -0.0074176788330078125, -0.0006711483001708984, -1.1920928244535389e-07, -4.38690185546875e-05, -0.0008087158203125], "score": -6.787318569652811, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -6.8056793212890625, -2.3841855067985307e-07, -0.000125885009765625, -0.000492095947265625, -3.814697265625e-06, 0.0, -0.0005779266357421875, -5.7220458984375e-05, 0.0, -0.004759788513183594, -7.62939453125e-06, -3.0517578125e-05, -0.005790829658508301, 0.0, -0.0005664825439453125, -0.0064067840576171875, -0.0004012584686279297, 0.0, -5.7220458984375e-05, -0.0009002685546875], "score": -6.865072945419307, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "<UNK>", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(0),\n            MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 0, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -6.7132463455200195, -0.016661643981933594, -6.67572021484375e-05, -5.7220458984375e-06, -0.012796401977539062, -0.0018787384033203125, 0.0, -0.0009326934814453125, -0.0002079010009765625, -4.57763671875e-05, -6.103515625e-05, -1.9073486328125e-06, -0.03981494903564453, -1.9073486328125e-06, -0.0922234058380127, -0.0006511211395263672, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0030059814453125, -6.496906280517578e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.0062007904052734375, -7.62939453125e-06, -0.01040351390838623, -9.5367431640625e-06, -0.018769264221191406, 0.0, -0.0001430511474609375, -5.7220458984375e-05, 0.0, -1.9073486328125e-06, -0.000698089599609375, -7.2479248046875e-05, 0.0, -0.00110626220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.013645291328430176, 0.0, -0.00055694580078125, -0.006557464599609375, -0.0005233287811279297, 0.0, -4.57763671875e-05, -0.000843048095703125], "score": -6.965000251594567, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Ended", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Heal(1), MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -0.0037002533208578825, 0.0, -0.000164031982421875, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.051623344421387, -0.0001239776611328125, 0.0, -0.0066070556640625, -1.52587890625e-05, -6.29425048828125e-05, -0.022020459175109863, -1.9073486328125e-06, -0.0009298324584960938, -0.0037708282470703125, -0.0005333423614501953, -1.1920928244535389e-07, -3.0517578125e-05, -0.0009288787841796875], "score": -7.129816151277723, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            CharacterSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -7.114538192749023, -2.6702880859375e-05, -0.015238761901855469, -0.00195920467376709, -3.814697265625e-06, -0.0020847320556640625, -0.0001811981201171875, -0.0001201629638671875, 0.0, -0.0009899139404296875, 0.0, -0.0002862215042114258, 0.0, -9.5367431640625e-06, -0.0074672698974609375, -0.0001125335693359375, -2.0265558760002023e-06, -2.50339189733495e-06, -0.00013684315490536392, 0.0, -0.0005240440368652344, 0.0, -3.62396240234375e-05, -9.1552734375e-05, -0.00010657310485839844, 0.0, -2.47955322265625e-05, -0.0015010833740234375, -5.7220458984375e-06, -0.0004812479019165039, -0.00023090839385986328, -1.52587890625e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.000225067138671875, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00067138671875, -5.7220458984375e-06, -0.011843204498291016, -9.1552734375e-05, -0.0036003554705530405, 0.0, -0.0001506805419921875, -7.62939453125e-05, -1.9073486328125e-06, 0.0, -0.00119781494140625, -6.103515625e-05, 0.0, -0.001003265380859375, -5.7220458984375e-06, -1.1444091796875e-05, -0.012714505195617676, 0.0, -0.00054931640625, -0.007659912109375, -0.0006587505340576172, 0.0, -4.57763671875e-05, -0.0008144378662109375], "score": -7.193128569034563, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "model_output": {"hole0": "HealingTotem", "hole2": [{"value": {"args": [{"s": "Healing Totem", "_type": "Str"}, {"_type": "Template34"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 0, "hole2": "effects", "hole1": 2, "hole3": {"hole0": "Effect", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "TurnEnded", "_type": "Template25"}, {"args": [{"hole0": "Heal", "hole1": 1, "_type": "Template21"}, {"func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "Template24"}, "_type": "Template14"}]}}], "index": 46}
{"beams": [{"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -0.010226011276245117, -3.933906555175781e-06, -4.1961669921875e-05, -0.0002269744873046875, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005588529165834188, -3.0517578125e-05, -1.9073486328125e-05, -0.0026607513427734375, -0.000133514404296875, -9.727314318297431e-05, -0.0008091052295640111, -4.00543212890625e-05, -3.814697265625e-06, -0.0020809173583984375, -7.62939453125e-06], "score": -0.078279035564087, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -3.475813865661621, -0.00038909912109375, -0.08612442016601562, -0.0002803802490234375, -0.0003833770751953125, -5.7220458984375e-06, -0.0013637542724609375, -1.9073486328125e-06, -0.000400543212890625, -1.9073486328125e-06, -0.00038933753967285156, -1.9073486328125e-06, -0.017598509788513184, -3.933906555175781e-06, -0.000156402587890625, -0.000461578369140625, -5.53131103515625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0006082055042497814, -2.682209014892578e-05, -1.52587890625e-05, -0.0030384063720703125, -0.00012969970703125, -8.72600867296569e-05, -0.0008515085792168975, -3.62396240234375e-05, -3.814697265625e-06, -0.001781463623046875, -7.62939453125e-06, -0.0001850128173828125, -0.2543935775756836, -0.0005035400390625, -0.08977675437927246, -3.933906555175781e-06, -0.0005321502685546875, -0.3505392074584961, -1.33514404296875e-05, -0.010219454765319824, -2.7298927307128906e-05, -0.000789642333984375, -0.4610261917114258, -9.5367431640625e-06, -0.009267926216125488, -4.7087669372558594e-05], "score": -4.787741524361813, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -5.3197245597839355, -2.682209014892578e-05, -8.20159912109375e-05, -0.0028247833251953125, -2.47955322265625e-05, -0.0126953125, -5.7220458984375e-06], "score": -5.3966158500969, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -3.475813865661621, -0.00038909912109375, -0.08612442016601562, -0.0002803802490234375, -0.0003833770751953125, -5.7220458984375e-06, -0.0013637542724609375, -1.9073486328125e-06, -0.000400543212890625, -1.9073486328125e-06, -0.00038933753967285156, -1.9073486328125e-06, -0.017598509788513184, -3.933906555175781e-06, -0.000156402587890625, -0.000461578369140625, -5.53131103515625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0006082055042497814, -2.682209014892578e-05, -1.52587890625e-05, -0.0030384063720703125, -0.00012969970703125, -8.72600867296569e-05, -0.0008515085792168975, -3.62396240234375e-05, -3.814697265625e-06, -0.001781463623046875, -7.62939453125e-06, -0.0001850128173828125, -0.2543935775756836, -0.0005035400390625, -0.08977675437927246, -3.933906555175781e-06, -0.0005321502685546875, -0.3505392074584961, -1.33514404296875e-05, -0.010219454765319824, -2.7298927307128906e-05, -0.000789642333984375, -1.031540870666504, -0.20040416717529297, -7.62939453125e-06, -0.01642608642578125, -0.006143331527709961, -3.24249267578125e-05, -0.03787887096405029, -4.0650367736816406e-05, -0.008493423461914062, -0.0025920867919921875, -0.0016632080078125, -6.67572021484375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.004542104434221983, -1.728534698486328e-05, -9.5367431640625e-06, -0.004032135009765625, -0.0001773834228515625, -0.00023244069598149508, -0.0006989208632148802, -3.62396240234375e-05, -3.814697265625e-06, -0.0020638704299926758, -3.814697265625e-06], "score": -5.63450546429322, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n        player.hero.heal(player.effective_heal_power(8), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -3.475813865661621, -0.00038909912109375, -0.08612442016601562, -0.0002803802490234375, -0.0003833770751953125, -5.7220458984375e-06, -0.0013637542724609375, -1.9073486328125e-06, -0.000400543212890625, -1.9073486328125e-06, -0.00038933753967285156, -1.9073486328125e-06, -0.017598509788513184, -3.933906555175781e-06, -0.000156402587890625, -0.000461578369140625, -5.53131103515625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0006082055042497814, -2.682209014892578e-05, -1.52587890625e-05, -0.0030384063720703125, -0.00012969970703125, -8.72600867296569e-05, -0.0008515085792168975, -3.62396240234375e-05, -3.814697265625e-06, -0.001781463623046875, -7.62939453125e-06, -0.0001850128173828125, -0.2543935775756836, -0.0005035400390625, -0.08977675437927246, -3.933906555175781e-06, -0.0005321502685546875, -1.274688720703125, -0.19981098175048828, -9.5367431640625e-06, -0.00165557861328125, -0.005057096481323242, -2.09808349609375e-05, -0.03781545162200928, -3.0875205993652344e-05, -0.0068111419677734375, -0.00182342529296875, -0.0013790130615234375, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0037457894068211317, -1.3470649719238281e-05, -9.5367431640625e-06, -0.0042572021484375, -0.000179290771484375, -0.0002001421817112714, -0.0008501983829773962, -3.0517578125e-05, -1.9073486328125e-06, -0.002171635627746582, -5.7220458984375e-06, -0.000244140625, -0.11072731018066406, -0.0001506805419921875, -0.05169689655303955, -1.9073486328125e-06], "score": -5.659253920011729, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.hero.heal(player.effective_heal_power(8), self)\n        player.draw()\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -3.475813865661621, -0.00038909912109375, -0.08612442016601562, -0.0002803802490234375, -0.0003833770751953125, -5.7220458984375e-06, -0.0013637542724609375, -1.9073486328125e-06, -0.000400543212890625, -1.9073486328125e-06, -0.00038933753967285156, -1.9073486328125e-06, -0.017598509788513184, -3.933906555175781e-06, -0.000156402587890625, -0.000461578369140625, -5.53131103515625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0006082055042497814, -2.682209014892578e-05, -1.52587890625e-05, -0.0030384063720703125, -0.00012969970703125, -8.72600867296569e-05, -0.0008515085792168975, -3.62396240234375e-05, -3.814697265625e-06, -0.001781463623046875, -7.62939453125e-06, -0.0001850128173828125, -1.5021228790283203, -0.0039653778076171875, -7.62939453125e-06, -0.0058040618896484375, -0.00506901741027832, -1.9073486328125e-06, -0.03539276123046875, -9.655952453613281e-06, -0.002437591552734375, -0.000324249267578125, -0.001300811767578125, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0008351760916411877, -2.6941299438476562e-05, -1.52587890625e-05, -0.0033740997314453125, -0.00023651123046875, -0.00018321574316360056, -0.0010378953302279115, -2.288818359375e-05, -1.9073486328125e-06, -0.002095341682434082, -5.7220458984375e-06, -0.000164031982421875, -0.14069271087646484, -0.0001583099365234375, -0.046473026275634766, -1.9073486328125e-06, -0.0004787445068359375, -0.37035274505615234, -1.1444091796875e-05, -0.0119093656539917, -1.5616416931152344e-05], "score": -5.745151190776419, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.hero.heal(player.effective_heal_power(8), self)\n        player.draw()\n        player.draw()\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -6.399185657501221, -0.000125885009765625, -0.000392913818359375, -0.0001163482666015625, -8.20159912109375e-05, -1.9073486328125e-06, -0.0017070770263671875, -1.9073486328125e-06, -8.7738037109375e-05, -1.9073486328125e-06, -0.00044929981231689453, -3.814697265625e-06, -0.012375712394714355, -3.933906555175781e-06, -3.814697265625e-05, -0.0002841949462890625, -5.14984130859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -0.0005033015622757375, -3.814697265625e-05, -1.9073486328125e-05, -0.002117156982421875, -0.0001316070556640625, -0.00010442500934004784, -0.0007285815081559122, -3.814697265625e-05, -3.814697265625e-06, -0.0017023086547851562, -7.62939453125e-06, -7.43865966796875e-05, -0.05043601989746094, -0.0013103485107421875, -0.10262906551361084, -7.987022399902344e-06], "score": -6.595141012423305, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n        player.draw()\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -0.010226011276245117, -3.933906555175781e-06, -4.1961669921875e-05, -0.0002269744873046875, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005588529165834188, -3.0517578125e-05, -1.9073486328125e-05, -6.558338165283203, -0.010528564453125, -0.011370648629963398, -0.0008668899536132812, -0.07123279571533203, -5.7220458984375e-06, -0.19441115856170654, -1.9073486328125e-06], "score": -6.91920182766426, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 56, 142, "Healing", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power('Healing'), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"s": "Healing", "_type": "Str"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -6.755650043487549, 0.0, -5.7220458984375e-06, -0.000186920166015625, -6.4849853515625e-05, -1.9073486328125e-06, 0.0, -0.00014495849609375, -0.18431007862091064, -3.4332275390625e-05, -4.1961669921875e-05, -0.00124359130859375, -0.0002002716064453125, -0.0001512685848865658, -0.0005708517273887992, -0.0001049041748046875, -3.814697265625e-06, -0.0020036697387695312, -7.62939453125e-06], "score": -7.005958614024898, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(8), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -7.031362056732178, 0.0, -1.52587890625e-05, -0.03436851501464844], "score": -7.126977669364173, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 68], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(2)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -7.150291442871094, -1.9073486328125e-06, -0.0004578828811645508, 0.0, -0.00024819327518343925, 0.0, -0.0009708404541015625, -0.0001373291015625, -5.53131103515625e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.03264808654785156, -0.000682830810546875, -5.340576171875e-05, -0.0001430511474609375, -0.0004425048828125, -5.7220458984375e-06, -9.1552734375e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -0.0002599954605102539, -5.7220458984375e-06, -0.0106886625289917, -3.933906555175781e-06, -3.814697265625e-05, -0.0001964569091796875, -5.53131103515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005472896154969931, -3.0517578125e-05, -1.9073486328125e-05, -0.0026569366455078125, -0.0001354217529296875, -9.643872908782214e-05, -0.0008307835669256747, -4.00543212890625e-05, -3.814697265625e-06, -0.0022058486938476562, -5.7220458984375e-06], "score": -7.220011354000057, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -0.010226011276245117, -3.933906555175781e-06, -4.1961669921875e-05, -0.0002269744873046875, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005588529165834188, -3.0517578125e-05, -1.9073486328125e-05, -0.0026607513427734375, -0.000133514404296875, -9.727314318297431e-05, -7.122358798980713, -0.08247639238834381, -0.0001201629638671875, -1.1444091796875e-05, -0.004325985908508301, -1.1444091796875e-05], "score": -7.2846417429880645, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "8", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(88), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 88, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -0.010226011276245117, -3.933906555175781e-06, -4.1961669921875e-05, -0.0002269744873046875, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005588529165834188, -3.0517578125e-05, -1.9073486328125e-05, -0.0026607513427734375, -0.000133514404296875, -9.727314318297431e-05, -0.0008091052295640111, -4.00543212890625e-05, -3.814697265625e-06, -7.259914398193359, -3.814697265625e-06], "score": -7.336108701701782, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "x", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), x)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 8, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "x", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -0.010226011276245117, -3.933906555175781e-06, -4.1961669921875e-05, -0.0002269744873046875, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005588529165834188, -3.0517578125e-05, -1.9073486328125e-05, -7.61405086517334, -0.0002593994140625, -4.38690185546875e-05, -0.0035276412963867188, -1.9073486328125e-06], "score": -7.690329657923762, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(4), self)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template37"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -7.4620232582092285, 0.0, -3.814697265625e-06, -0.3683433532714844], "score": -7.891602265006263, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_armor(2)\n", "model_output": {"hole0": "HealingTouch", "hole2": [{"value": {"args": [{"s": "Healing Touch", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 47}
{"beams": [{"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -0.08886599540710449, -1.1324880688334815e-05, -0.007940292358398438, -3.0517578125e-05, -0.00818634033203125, 0.0, -0.0008945465087890625, 0.0, -0.007344245910644531, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007719159126281738, 0.0, -0.0021209716796875, -0.0015411376953125, 0.0, -0.1616116762161255, 0.0], "score": -0.7746760107422475, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -0.08886599540710449, -1.1324880688334815e-05, -0.007940292358398438, -3.0517578125e-05, -0.00818634033203125, 0.0, -0.0008945465087890625, 0.0, -0.007344245910644531, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007719159126281738, 0.0, -0.0021209716796875, -0.0015411376953125, 0.0, -2.545659065246582, -9.298297300119884e-06], "score": -3.158732698070004, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "frog", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(frog)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "frog", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -0.08886599540710449, -1.1324880688334815e-05, -0.007940292358398438, -3.0517578125e-05, -0.00818634033203125, 0.0, -0.0008945465087890625, 0.0, -0.007344245910644531, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007719159126281738, 0.0, -0.0021209716796875, -0.0015411376953125, 0.0, -3.9010627269744873, -5.364412118069595e-06], "score": -4.514132425912727, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(<UNK>)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -3.4434711933135986, -4.792212712345645e-05, -0.6226081848144531, -4.57763671875e-05, -0.0630502700805664, 0.0, -0.0010623931884765625, 0.0, -0.0019789934158325195, 0.0, -0.0019797086715698242, -2.300739288330078e-05, -0.010732889175415039, 0.0, -0.0022754669189453125, -0.0010929107666015625, 0.0, -0.18338477611541748, 0.0], "score": -4.819127724298802, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "<UNK>", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = <UNK>\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "<UNK>", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -3.2721328735351562, -3.933904736186378e-06, -0.04016684740781784, -1.239776611328125e-05, -0.718421459197998, -5.245207830739673e-06, -0.03033393807709217, -2.4199236577260308e-05, -0.037978820502758026, -5.6028355174930766e-05, -9.72747802734375e-05, -5.7220458984375e-06, -0.002231597900390625, -0.06486320495605469, 0.0, -0.10654208809137344, -1.1920928244535389e-07, -0.01613903045654297, -0.0121917724609375, -0.000705718994140625, -1.33514404296875e-05, -0.0043811798095703125, 0.0, -0.05566895008087158, -1.8358190573053434e-05, -0.015382885932922363, 0.0, -0.0021495819091796875, -0.009474754333496094, -0.000244140625, -0.00020265043713152409, -1.1801719665527344e-05, -0.0003566741943359375, -1.71661376953125e-05, -0.0001316070556640625, -0.000896453857421875, -0.000118255615234375, -0.00496673583984375, 0.0, -0.05621206760406494, 0.0, -0.0069277286529541016, 0.0, -0.00128173828125, 0.0, -0.08741974830627441, -1.1205671398784034e-05, -0.007884979248046875, -3.0517578125e-05, -0.008291244506835938, 0.0, -0.00087738037109375, 0.0, -0.0072803497314453125, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007748723030090332, 0.0, -0.0021114349365234375, -0.0015392303466796875, 0.0, -0.16369497776031494, 0.0], "score": -4.907980587815686, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = self.target.card.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "card", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -3.4434711933135986, -4.792212712345645e-05, -0.7699470520019531, -2.288818359375e-05, -0.000110626220703125, -0.028858184814453125, -7.82012939453125e-05, -0.005702972412109375, 0.0, -0.13367021083831787, 0.0, -0.007227897644042969, 0.0, -0.00191497802734375, 0.0, -0.08950769901275635, -1.3947486877441406e-05], "score": -4.96794800532755, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "<UNK>", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = <UNK>\n        minion.card = frog\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "<UNK>", "_type": "Name"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -4.195199489593506, 0.0, -0.11511039733886719, 0.0, -0.0013427734375, 0.0, -0.07843983173370361, -1.1444089977885596e-05, -0.009983062744140625, -3.0517578125e-05, -0.0087890625, 0.0, -0.0004901885986328125, 0.0, -0.009863853454589844, 0.0, -0.0010657310485839844, -1.919269561767578e-05, -0.007326245307922363, 0.0, -0.001964569091796875, -0.0016536712646484375, 0.0, -0.17779803276062012, 0.0], "score": -5.034614727630675, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "MAGE", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        MAGE.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "MAGE", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -4.088637351989746, -1.9073486328125e-06, -0.2539435625076294, 0.0, -0.00376129150390625, -0.021209716796875, -0.000217437744140625, -0.00030396191868931055, -4.768371127283899e-06, -0.000377655029296875, -2.288818359375e-05, -0.0001735687255859375, -0.0009250640869140625, -0.0001087188720703125, -0.006270408630371094, 0.0, -0.05002725124359131, 0.0, -0.0068094730377197266, 0.0, -0.001190185546875, 0.0, -0.08987212181091309, -1.1324880688334815e-05, -0.008291244506835938, -3.0517578125e-05, -0.008261680603027344, 0.0, -0.000881195068359375, 0.0, -0.007382392883300781, 0.0, -0.0010182857513427734, -2.110004425048828e-05, -0.0076323747634887695, 0.0, -0.0021209716796875, -0.0015354156494140625, 0.0, -0.16076767444610596, 0.0], "score": -5.051212341333418, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "justice", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = justice.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "justice", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -4.164985656738281, -3.313969500595704e-05, -0.31864166259765625, -0.0005331039428710938, -0.034544944763183594, -0.0004825592041015625, -0.0001087188720703125, -2.86102294921875e-05, -0.000270843505859375, 0.0, -0.014830589294433594, 0.0, -0.014553070068359375, -7.62939453125e-06, -0.030539631843566895, -1.1920928244535389e-07, -0.005696892738342285, -8.344646857949556e-07, -0.0008000599918887019, -1.9073486328125e-06, -0.019654246047139168, -9.345589205622673e-05, -0.0056901779025793076, -0.00013792513345833868, -0.0003070831298828125, -1.71661376953125e-05, -0.00072479248046875, -0.08135604858398438, 0.0, -0.06476720422506332, -1.1920928244535389e-07, -0.01764392852783203, -0.007015228271484375, -0.0008029937744140625, -5.7220458984375e-06, -0.0053768157958984375, 0.0, -0.05371665954589844, -1.788135887181852e-05, -0.0206681489944458, 0.0, -0.0018463134765625, -0.010349273681640625, -0.0002422332763671875, -0.00021087477216497064, -1.2040138244628906e-05, -0.0003452301025390625, -2.09808349609375e-05, -0.000148773193359375, -0.0008602142333984375, -0.0001049041748046875, -0.005100250244140625, 0.0, -0.05408203601837158, 0.0, -0.006765604019165039, 0.0, -0.0013027191162109375, 0.0, -0.08868956565856934, -1.1324880688334815e-05, -0.007892608642578125, -3.0517578125e-05, -0.008229255676269531, 0.0, -0.0008945465087890625, 0.0, -0.0073451995849609375, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007736325263977051, 0.0, -0.0022144317626953125, -0.00156402587890625, 0.0, -0.15252363681793213, 0.0], "score": -5.259978698130773, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -4.29804801940918, -3.814697265625e-06, -0.21471810340881348, -3.576278118089249e-07, -0.06519293785095215, -2.145764938177308e-06, -0.035959698259830475, -1.9073486328125e-06, -0.04568372294306755, -5.984138624626212e-05, -0.000629425048828125, -1.33514404296875e-05, -0.0006561279296875, -0.04036521911621094, 0.0, -0.09285055845975876, -2.3841855067985307e-07, -0.011020660400390625, -0.007867813110351562, -0.0007801055908203125, -5.7220458984375e-06, -0.004283905029296875, 0.0, -0.05405449867248535, -1.6212441551033407e-05, -0.016262173652648926, 0.0, -0.0018529891967773438, -0.008869171142578125, -0.0002765655517578125, -0.00020348481484688818, -1.1920928955078125e-05, -0.000354766845703125, -1.9073486328125e-05, -0.00016021728515625, -0.0008792877197265625, -0.0001163482666015625, -0.004818916320800781, 0.0, -0.054876089096069336, 0.0, -0.006819009780883789, 0.0, -0.001308441162109375, 0.0, -0.08740496635437012, -1.1324880688334815e-05, -0.0078277587890625, -3.0517578125e-05, -0.008268356323242188, 0.0, -0.00089263916015625, 0.0, -0.0073375701904296875, 0.0, -0.0010173320770263672, -2.110004425048828e-05, -0.007783055305480957, 0.0, -0.002105712890625, -0.001544952392578125, 0.0, -0.16366159915924072, 0.0], "score": -5.389547479266774, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -0.08886599540710449, -1.1324880688334815e-05, -0.007940292358398438, -3.0517578125e-05, -0.00818634033203125, 0.0, -0.0008945465087890625, 0.0, -0.007344245910644531, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007719159126281738, 0.0, -0.0021209716796875, -0.0015411376953125, 0.0, -4.7857255935668945, -1.9073486328125e-06], "score": -5.398791835441649, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "new_card", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(new_card)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "new_card", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -4.322388648986816, -2.71793978754431e-05, -0.0019321441650390625, -0.19380950927734375, -0.012828826904296875, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.000743865966796875, 0.0, -0.054424285888671875, -2.47955322265625e-05, -0.014532089233398438, -5.7220458984375e-06, -0.013043522834777832, 0.0, -0.002813219791278243, -2.0265558760002023e-06, -0.003214243333786726, -3.814697265625e-06, -0.1402329057455063, -8.344317757291719e-05, -0.025895336642861366, -0.0006177424802444875, -0.0007648468017578125, -1.33514404296875e-05, -0.00025177001953125, -0.17068195343017578, 0.0, -0.05942533537745476, -1.1920928244535389e-07, -0.027250289916992188, -0.004791259765625, -0.0014514923095703125, -7.62939453125e-06, -0.0024318695068359375, 0.0, -0.052374839782714844, -1.6212441551033407e-05, -0.0210191011428833, 0.0, -0.0020771026611328125, -0.009600639343261719, -0.0002651214599609375, -0.0002100408310070634, -1.1920928955078125e-05, -0.0003509521484375, -1.9073486328125e-05, -0.0001354217529296875, -0.0008411407470703125, -0.0001087188720703125, -0.005290031433105469, 0.0, -0.05441129207611084, 0.0, -0.006666421890258789, 0.0, -0.001308441162109375, 0.0, -0.08892178535461426, -1.1324880688334815e-05], "score": -5.5435784338442105, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -4.529147148132324, -5.7220458984375e-06, -0.001094818115234375, -7.62939453125e-06, -0.012279510498046875, -1.1920928244535389e-07, -0.007141947280615568, -2.3841830625315197e-06, -0.0018614077707752585, -3.814697265625e-06, -0.006219583563506603, -0.00012039436114719138, -0.25332504510879517, -1.0251977982989047e-05, -0.0495852492749691, -5.4597774578724056e-05, -0.0001583099365234375, -1.33514404296875e-05, -0.0002536773681640625, -0.024469375610351562, 0.0, -0.05858857184648514, -1.1920928244535389e-07, -0.019021987915039062, -0.008139610290527344, -0.0008029937744140625, -5.7220458984375e-06, -0.00493621826171875, 0.0, -0.05658137798309326, -2.3722594050923362e-05, -0.025081872940063477, 0.0, -0.0018987655639648438, -0.011397361755371094, -0.000225067138671875, -0.0002411526074865833, -1.0132789611816406e-05, -0.000331878662109375, -2.09808349609375e-05, -0.0001277923583984375, -0.000888824462890625, -0.0001010894775390625, -0.005108833312988281, 0.0, -0.05318295955657959, 0.0, -0.0067522525787353516, 0.0, -0.001316070556640625, 0.0, -0.08945775032043457, -1.1324880688334815e-05, -0.008016586303710938, -3.0517578125e-05, -0.008225440979003906, 0.0, -0.0008907318115234375, 0.0, -0.0073642730712890625, 0.0, -0.0010116100311279297, -2.110004425048828e-05, -0.0076972246170043945, 0.0, -0.00214385986328125, -0.0015430450439453125, 0.0, -0.16028892993927002, 0.0], "score": -5.575229285657066, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -0.08886599540710449, -1.1324880688334815e-05, -4.8654069900512695, -2.6702880859375e-05, -6.4849853515625e-05, -0.04584503173828125, -2.6702880859375e-05, -0.008255958557128906, 0.0, -0.07739377021789551, 0.0, -0.008917808532714844, 0.0, -0.0032520294189453125, 0.0, -0.09473192691802979, -1.5735626220703125e-05], "score": -5.6801890589142445, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        minion.card = frog\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"attr": "create_minion", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -4.771611213684082, -1.1920928244535389e-07, -8.96453857421875e-05, -0.211212158203125, -0.0010356903076171875, -1.9073486328125e-05, -7.05718994140625e-05, -0.021264076232910156, -7.2479248046875e-05, -0.018706321716308594, 0.0, -0.09686040878295898, 0.0, -0.0025407075881958008, 0.0, -0.00489044189453125, 0.0, -0.10426056385040283, -5.006789251638111e-06, -0.0141448974609375, -3.4332275390625e-05, -0.012294769287109375, 0.0, -0.000865936279296875, 0.0, -0.002667546272277832, 0.0, -0.0010528564453125, -1.919269561767578e-05, -0.00820457935333252, 0.0, -0.0016384124755859375, -0.001728057861328125, 0.0, -0.17979156970977783, 0.0], "score": -5.839329056561127, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_weapon", "<EOS>", 205, 73, 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_weapon(player)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "model_output": {"hole0": "Hex", "hole2": [{"value": {"args": [{"s": "Hex", "_type": "Str"}, {"_type": "Template35"}, {"attr": "SHAMAN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "frog", "_type": "Name"}], "value": {"func": {"attr": "Frog", "value": {"attr": "<UNK>", "value": {"attr": "minions", "value": {"attr": "cards", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"_type": "Template38"}], "func": {"attr": "create_weapon", "value": {"id": "frog", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"attr": "card", "value": {"id": "minion", "_type": "Name"}, "_type": "Attribute"}], "value": {"id": "frog", "_type": "Name"}, "_type": "Assign"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "minion", "_type": "Name"}], "hole1": "<UNK>", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 48}
{"beams": [{"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001041412353515625, -1.1444091796875e-05, -0.001369476318359375, -5.53131103515625e-05, -0.0011271112598478794, -0.0002949994814116508, -1.9073486328125e-05, -1.9073486328125e-06, -0.0024995803833007812, -1.9073486328125e-06], "score": -0.047990802493579565, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -4.158571243286133, -0.0002880096435546875, -0.02440643310546875, -0.0003528594970703125, -0.0001850128173828125, -5.7220458984375e-06, -0.0065708160400390625, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0005965232849121094, 0.0, -0.01585996150970459, -3.814697265625e-06, -0.00092315673828125, -6.67572021484375e-05, -0.00011444091796875, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.0004982946556992829, -0.0015773773193359375, -9.5367431640625e-06, -0.0015125274658203125, -5.14984130859375e-05, -0.0009128943202085793, -0.00033706706017255783, -1.9073486328125e-05, -1.9073486328125e-06, -0.00240325927734375, -1.9073486328125e-06, -0.0003414154052734375, -0.6915740966796875, -0.0045032501220703125, -0.06393063068389893, 0.0, -0.0006084442138671875, -0.09827518463134766, -0.014271736145019531, 0.0, -0.013624191284179688, -0.001620650291442871, -7.62939453125e-06, -0.18275976181030273, -5.161762237548828e-05, -0.028352737426757812, -0.000171661376953125, -0.00144195556640625, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.0011601444566622376, -0.00017368793487548828, -9.5367431640625e-06, -0.0015716552734375, -0.0001087188720703125, -0.0043970816768705845, -0.00026913886540569365, -2.288818359375e-05, -3.814697265625e-06, -0.0019559860229492188, -1.9073486328125e-06, -0.000339508056640625, -0.5998525619506836, -0.0009555816650390625, -0.036518096923828125, 0.0], "score": -5.976078275176398, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.draw()\n        player.hero.heal(player.effective_heal_power(6), self)\n        player.draw()\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -4.158571243286133, -0.0002880096435546875, -0.02440643310546875, -0.0003528594970703125, -0.0001850128173828125, -5.7220458984375e-06, -0.0065708160400390625, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0005965232849121094, 0.0, -0.01585996150970459, -3.814697265625e-06, -0.00092315673828125, -6.67572021484375e-05, -0.00011444091796875, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.0004982946556992829, -0.0015773773193359375, -9.5367431640625e-06, -0.0015125274658203125, -5.14984130859375e-05, -0.0009128943202085793, -0.00033706706017255783, -1.9073486328125e-05, -1.9073486328125e-06, -0.00240325927734375, -1.9073486328125e-06, -0.0003414154052734375, -0.698521614074707, -0.0020275115966796875, -1.9073486328125e-06, -0.001903533935546875, -0.0012334585189819336, -1.9073486328125e-06, -0.12911200523376465, -7.62939453125e-06, -0.011791229248046875, -9.34600830078125e-05, -0.0014753341674804688, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.0006978510064072907, -0.0005074739456176758, -9.5367431640625e-06, -0.0015163421630859375, -0.0001010894775390625, -0.0029208273626863956, -0.0002947616740129888, -1.9073486328125e-05, -3.814697265625e-06, -0.001903533935546875, -1.9073486328125e-06, -0.0003032684326171875, -0.5528278350830078, -0.00121307373046875, -0.03843116760253906, 0.0, -0.00072479248046875, -0.11865711212158203, -0.026628494262695312, 0.0, -0.013032913208007812, -0.0014611482620239258, -7.62939453125e-06, -0.16132104396820068, -3.826618194580078e-05, -0.03816413879394531, -0.000194549560546875, -0.001468658447265625, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -0.0011650320375338197, -0.00016605854034423828, -7.62939453125e-06, -0.0015964508056640625, -0.000110626220703125, -0.004437488503754139, -0.00027831547777168453, -2.288818359375e-05, -3.814697265625e-06, -0.0019197463989257812, -1.9073486328125e-06], "score": -6.045910510809328, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.hero.heal(player.effective_heal_power(6), self)\n        player.draw()\n        player.hero.heal(player.effective_heal_power(6), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}, {"hole0": {"_type": "Template38"}, "hole1": "draw", "_type": "Template23"}, {"hole0": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -6.101923942565918, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.000270843505859375, -8.392333984375e-05, -0.0001773834228515625, -0.0007419586181640625, -1.9073486328125e-06, 0.0, -5.91278076171875e-05, 0.0, -7.62939453125e-06, -1.52587890625e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002384185791015625, 0.0, -0.000244140625, -1.9073486328125e-06, -0.002154827117919922, -7.43865966796875e-05, -0.0004711151123046875, 0.0, -0.00025558375637046993, 0.0, -0.000213623046875, -5.14984130859375e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.019654273986816406, -0.0001850128173828125, -4.38690185546875e-05, -0.000247955322265625, -0.0003604888916015625, -9.5367431640625e-06, -0.0001697540283203125, 0.0, -0.00011444091796875, 0.0, -0.00038230419158935547, -1.9073486328125e-06, -0.007208466529846191, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.5367431640625e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001056671142578125, -1.1444091796875e-05, -0.001377105712890625, -5.53131103515625e-05, -0.0011250847019255161, -0.00029571453342214227, -1.9073486328125e-05, -1.9073486328125e-06, -0.0025043487548828125, -1.9073486328125e-06], "score": -6.146698835938871, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -6.492649078369141, -2.47955322265625e-05, -1.9073486328125e-05, -0.0027256011962890625, -1.52587890625e-05, -0.005074501037597656, -1.9073486328125e-06], "score": -6.534148633618308, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -6.735440731048584, 0.0, -3.814697265625e-06, -0.019407272338867188], "score": -6.788490235943748, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_armor", "<EOS>", 205, 68], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_armor(2)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "increase_armor", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -6.746659278869629, 0.0, -1.52587890625e-05, -9.5367431640625e-05, -0.000152587890625, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, -0.02405679225921631, -0.0002880096435546875, -1.52587890625e-05, -0.0005035400390625, -0.0001049041748046875, -0.0013509707059711218, -0.00024530262453481555, -5.53131103515625e-05, -5.7220458984375e-06, -0.00177001953125, -1.9073486328125e-06], "score": -6.808977724598655, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_heal_power(6), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -6.878252983093262, 0.0, -9.5367431640625e-06, -0.003955841064453125], "score": -6.91585677875991, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 68], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(2)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -6.953437328338623, -1.9073486328125e-06, -0.0004215240478515625, 0.0, -0.00042998752905987203, 0.0, -0.00029754638671875, -5.53131103515625e-05, -4.76837158203125e-05, -9.5367431640625e-06, -2.3841855067985307e-07, -0.02194690704345703, -0.0001678466796875, -7.05718994140625e-05, -0.0002307891845703125, -0.000274658203125, -1.1444091796875e-05, -0.0001201629638671875, 0.0, -0.0001239776611328125, 0.0, -0.00019443035125732422, -3.814697265625e-06, -0.0068624019622802734, -3.933906555175781e-06, -7.43865966796875e-05, -6.4849853515625e-05, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046098220627754927, -0.0010700225830078125, -9.5367431640625e-06, -0.001354217529296875, -5.53131103515625e-05, -0.001113283447921276, -0.0002991705550812185, -1.9073486328125e-05, -1.9073486328125e-06, -0.0026025772094726562, -1.9073486328125e-06], "score": -7.0003166232999945, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001041412353515625, -1.1444091796875e-05, -0.001369476318359375, -5.53131103515625e-05, -0.0011271112598478794, -0.0002949994814116508, -1.9073486328125e-05, -1.9073486328125e-06, -7.178220748901367, -5.7220458984375e-06], "score": -7.223715785708912, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "wrath", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), wrath)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "wrath", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -7.069544792175293, -0.12401390075683594, -3.814697265625e-05, -0.0010318756103515625, -5.14984130859375e-05, -0.0005923433927819133, -0.00031871485407464206, -2.288818359375e-05, -1.9073486328125e-06, -0.0024957656860351562, -1.9073486328125e-06], "score": -7.239682318053376, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_powereffective_heal_power(6),\n            self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_powereffective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001041412353515625, -1.1444091796875e-05, -0.001369476318359375, -5.53131103515625e-05, -0.0011271112598478794, -0.0002949994814116508, -1.9073486328125e-05, -1.9073486328125e-06, -7.303241729736328, -1.9073486328125e-06], "score": -7.348732951846607, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "x", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), x)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "x", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001041412353515625, -1.1444091796875e-05, -7.396344184875488, -0.005698204040527344, -0.025668300688266754, -6.67572021484375e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.10964071750640869, -1.9073486328125e-06], "score": -7.580112077317601, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 56, 142, "Holy", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power('Holy'), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"s": "Holy", "_type": "Str"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001041412353515625, -1.1444091796875e-05, -0.001369476318359375, -5.53131103515625e-05, -7.053312301635742, -0.5009814500808716, -0.004767834208905697, -2.288818359375e-05, -9.5367431640625e-06, -0.0029745101928710938, -1.9073486328125e-06], "score": -7.606116651579207, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "Light", "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 0, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -7.849249839782715, -0.000286102294921875, -0.0078582763671875, -2.86102294921875e-05, -9.72747802734375e-05, -8.701899787411094e-05, -2.5272369384765625e-05, -3.3378591979271732e-06, -1.4305104514278355e-06, -0.038440704345703125, -9.5367431640625e-06, -0.00019073486328125, -7.2479248046875e-05, -9.5367431640625e-06, -2.47955322265625e-05, 0.0, -0.009967923164367676, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -9.918212890625e-05, -3.4332275390625e-05, -0.0002727508544921875, -5.53131103515625e-05, -8.7738037109375e-05, -9.1552734375e-05, 0.0, -0.012328267097473145, 0.0, -1.5497189451707527e-05, 0.0, -0.00057220458984375, -0.000774383544921875, -4.1961669921875e-05, -0.00011670589447021484, -1.1920928244535389e-07, -0.0021114349365234375, -7.62939453125e-06, -0.0004425048828125, -4.1961669921875e-05, -0.0001430511474609375, 0.0, -0.003467559814453125, 0.0, -8.7738037109375e-05, 0.0, -0.00041162967681884766, 0.0, -0.007855892181396484, -1.1920928244535389e-07, -5.7220458984375e-05, -5.340576171875e-05, -2.6702880859375e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.00045883640996180475, -0.001064300537109375, -1.1444091796875e-05, -0.0013446807861328125, -5.53131103515625e-05, -0.0011883809929713607, -0.00030191155383363366, -1.52587890625e-05, -3.814697265625e-06, -0.00238800048828125, -1.9073486328125e-06], "score": -7.944849962969656, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "model_output": {"hole0": "HolyLight", "hole2": [{"value": {"args": [{"s": "Holy Light", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 6, "_type": "Num"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 49}
{"beams": [{"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008596180938184261, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.014906883239746094, -0.0010395050048828125, -0.0004062652587890625, -9.5367431640625e-06, -0.006041049957275391, 0.0, -0.00038051605224609375, -1.9073486328125e-05, -0.0021686553955078125, -0.0010352134704589844, 0.0, -0.000179290771484375, -0.0002269744873046875, -1.52587890625e-05, -0.0017452239990234375, 0.0, -0.00011432170867919922, 0.0, -0.010258913040161133, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005127186421304941, -1.2040138244628906e-05, -0.000598907470703125, -2.09808349609375e-05, -0.0001354217529296875, -2.09808349609375e-05, -6.628032133448869e-05, -1.9073486328125e-06], "score": -0.2355859707584429, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -2.289536952972412, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.0517578125e-05, -0.037126898765563965, -4.0531158447265625e-06, -0.000453948974609375, -9.5367431640625e-06, -9.5367431640625e-05, -1.1444091796875e-05, -6.282326648943126e-05, -1.9073486328125e-06, -0.017194747924804688, -0.0010986328125, -0.0003910064697265625, -1.1444091796875e-05, -0.007003664970397949, 0.0, -0.00037288665771484375, -1.52587890625e-05, -0.0022525787353515625, -0.000980973243713379, 0.0, -0.0001850128173828125, -0.0002079010009765625, -1.52587890625e-05, -0.00171661376953125, 0.0, -0.00011622905731201172, 0.0, -0.01027989387512207, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005214090459048748, -1.2040138244628906e-05, -0.0005970001220703125, -2.09808349609375e-05, -0.0001430511474609375, -2.09808349609375e-05, -6.794925866415724e-05, -1.9073486328125e-06], "score": -2.4473553147307143, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -5.025522232055664, -0.000118255615234375, -9.5367431640625e-05, -1.9073486328125e-06, -0.0345306396484375, 0.0, -0.007625579833984375, -0.0001659393310546875, -8.785724639892578e-05, 0.0, -0.00548553466796875, 0.0, -6.866455078125e-05, -0.008962631225585938, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0014719963073730469, -1.1920928244535389e-07, -0.000324249267578125, -3.62396240234375e-05, -0.0001697540283203125, -2.09808349609375e-05, -8.022763358894736e-05, -3.814697265625e-06, -0.024585723876953125, -0.000583648681640625, -0.0036487579345703125, -1.1444091796875e-05, -0.0036357641220092773, -2.0265579223632812e-06, -0.000301361083984375, -2.09808349609375e-05, -0.002185821533203125, -0.0013837814331054688, 0.0, -0.000141143798828125, -0.0001430511474609375, -1.71661376953125e-05, -0.0048580169677734375, 0.0, -0.00012981891632080078, -1.9073486328125e-06, -0.010177969932556152, 0.0, -2.86102294921875e-05, -2.6702880859375e-05, -2.09808349609375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0057785483077168465, -1.5735626220703125e-05, -0.00058746337890625, -2.09808349609375e-05, -0.000133514404296875, -1.9073486328125e-05, -6.675715849269181e-05, -1.9073486328125e-06], "score": -5.190925644213898, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -4.961636066436768, -5.841255187988281e-06, -0.0005626678466796875, -9.5367431640625e-06, -0.000347137451171875, -1.71661376953125e-05, -6.532666156999767e-05, -1.9073486328125e-06, -0.01924419403076172, -0.0009441375732421875, -0.0004119873046875, -9.5367431640625e-06, -0.005185365676879883, 0.0, -0.000331878662109375, -1.71661376953125e-05, -0.0021343231201171875, -0.0009553432464599609, 0.0, -0.0001659393310546875, -0.0002002716064453125, -1.71661376953125e-05, -0.0016918182373046875, 0.0, -0.000118255615234375, 0.0, -0.010050177574157715, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005157942418009043, -1.2040138244628906e-05, -0.0006008148193359375, -2.09808349609375e-05, -0.0001430511474609375, -2.09808349609375e-05, -6.783004937460646e-05, -1.9073486328125e-06], "score": -5.191896840105812, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -4.106361389160156, -0.0009021759033203125, -0.0460205078125, -0.0001735687255859375, -0.000400543212890625, -0.00554656982421875, -9.1552734375e-05, -0.0055513991974294186, -8.34464663057588e-06, -0.00023651123046875, -1.9073486328125e-06, -0.0005474090576171875, 0.0, -8.7738037109375e-05, 0.0, -0.00047516822814941406, 0.0, -0.0001583099365234375, 0.0, -2.09808349609375e-05, -0.0001659393310546875, -2.09808349609375e-05, -3.24249267578125e-05, 0.0, -0.0009517669677734375, 0.0, -9.72747802734375e-05, -9.5367431640625e-06, -0.00017583370208740234, -0.00013554096221923828, -0.00048732757568359375, -1.9073486328125e-06, -0.00018310546875, -0.0001506805419921875, -0.0002899169921875, -1.9073486328125e-06, -0.0003758668899536133, 0.0, -0.3077971935272217, -1.33514404296875e-05, -0.000125885009765625, -9.5367431640625e-06, -7.62939453125e-06, -0.0032682418823242188, 0.0, -0.000270843505859375, -3.814697265625e-06, -0.0006866455078125, -1.9073486328125e-06, -0.1630932092666626, -4.971027374267578e-05, -0.016200900077819824, -1.33514404296875e-05, -0.027971267700195312, -6.67572021484375e-05, -9.5367431640625e-05, -1.9073486328125e-06, -0.00018703937530517578, 0.0, -0.043817996978759766, 0.0, -3.814697265625e-06, -0.0007610321044921875, -4.00543212890625e-05, -0.000759124755859375, 0.0, -0.0003662109375, -1.9073486328125e-06, -0.0002899169921875, -1.9073486328125e-06, -0.1923515796661377, -4.3034549889853224e-05, -0.004217498004436493, -1.9073486328125e-06, -0.019412994384765625, -8.20159912109375e-05, -0.0007076263427734375, -1.9073486328125e-06, -0.002564549446105957, 0.0, -0.0403515100479126, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0012340545654296875, -7.62939453125e-05, -0.00057220458984375, 0.0, -0.000720977783203125, -1.9073486328125e-06, -0.0003376007080078125, -1.9073486328125e-06, -0.17076516151428223, -3.9219852624228224e-05, -0.003846756648272276, -1.9073486328125e-06, -0.018541336059570312, -8.0108642578125e-05, -0.000789642333984375, -1.9073486328125e-06, -0.002293825149536133, 0.0, -0.037514328956604004, -1.1920928244535389e-07, -1.9073486328125e-06, -0.001285552978515625, -7.2479248046875e-05, -0.0005950927734375, 0.0, -0.0007686614990234375, -1.9073486328125e-06, -0.0003414154052734375, -1.9073486328125e-06, -0.1702587604522705, -3.9219852624228224e-05, -0.003807537257671356, -1.9073486328125e-06], "score": -5.428642837081313, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 222, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "extend", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"attr": "current_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -5.335385322570801, -8.7738037109375e-05, -0.0006295442581176758, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -8.940695806813892e-06, 0.0, -9.5367431640625e-06, -1.33514404296875e-05, -2.47955322265625e-05, -1.1682510375976562e-05, -0.0002970695495605469, -0.027611732482910156, -3.24249267578125e-05, -0.011898994445800781, -3.4332275390625e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.0010786056518554688, -1.52587890625e-05, -0.006451606750488281, -0.00016021728515625, -0.0001659393310546875, 0.0, -0.000133514404296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001125335693359375, -5.340576171875e-05, -3.62396240234375e-05, 0.0, -0.0003643035888671875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00016033649444580078, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.11038351058959961, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00858843233436346, -1.1920928244535389e-07, -0.00041961669921875, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.015089988708496094, -0.0010433197021484375, -0.0003986358642578125, -9.5367431640625e-06, -0.006084084510803223, 0.0, -0.00038051605224609375, -1.9073486328125e-05, -0.0021648406982421875, -0.0010371208190917969, 0.0, -0.000179290771484375, -0.0002269744873046875, -1.52587890625e-05, -0.001743316650390625, 0.0, -0.00011432170867919922, 0.0, -0.01025700569152832, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005129093769937754, -1.2040138244628906e-05, -0.000598907470703125, -2.09808349609375e-05, -0.0001354217529296875, -2.09808349609375e-05, -6.628032133448869e-05, -1.9073486328125e-06], "score": -5.5593048762073565, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "WARRIOR", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008596180938184261, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.014906883239746094, -0.0010395050048828125, -0.0004062652587890625, -9.5367431640625e-06, -0.006041049957275391, 0.0, -0.00038051605224609375, -1.9073486328125e-05, -0.0021686553955078125, -0.0010352134704589844, 0.0, -0.000179290771484375, -0.0002269744873046875, -1.52587890625e-05, -0.0017452239990234375, 0.0, -0.00011432170867919922, 0.0, -5.232967376708984, 0.0, -9.5367431640625e-06, -0.000125885009765625, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.14316236972808838, -1.1920928244535389e-07, -0.0006961822509765625, -2.47955322265625e-05, -0.000225067138671875, -3.4332275390625e-05, -9.119456080952659e-05, -1.9073486328125e-06], "score": -5.596607732504523, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -5.251522064208984, -0.001178741455078125, -0.013250350952148438, -8.0108642578125e-05, -0.0001983642578125, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.001076817512512207, -3.826617466984317e-05, -0.0003095864085480571, -1.9073486328125e-06, -8.58306884765625e-05, -0.0002498626708984375, -1.33514404296875e-05, -0.000698089599609375, 0.0, -0.00023305359354708344, 0.0, -0.2160961627960205, 0.0, -0.000156402587890625, -2.09808349609375e-05, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -7.43865966796875e-05, -0.017648935317993164, -7.748603820800781e-06, -0.000598907470703125, -1.33514404296875e-05, -9.1552734375e-05, -9.5367431640625e-06, -6.842610309831798e-05, -1.9073486328125e-06, -0.01671123504638672, -0.0011959075927734375, -0.000377655029296875, -1.1444091796875e-05, -0.009300708770751953, -1.1920928244535389e-07, -0.00037670135498046875, -1.52587890625e-05, -0.0023746490478515625, -0.0009914636611938477, 0.0, -0.000209808349609375, -0.0002155303955078125, -1.52587890625e-05, -0.0018901824951171875, 0.0, -0.00011229515075683594, 0.0, -0.010461091995239258, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005204315297305584, -1.2040138244628906e-05, -0.0005950927734375, -2.09808349609375e-05, -0.0001373291015625, -2.09808349609375e-05, -6.818766996730119e-05, -1.9073486328125e-06], "score": -5.615843339755706, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008596180938184261, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.014906883239746094, -0.0010395050048828125, -0.0004062652587890625, -9.5367431640625e-06, -5.280839443206787, 0.0, -0.08010578155517578, -0.0007801055908203125, -0.06608009338378906, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.011231422424316406, 0.0, -0.000873565673828125, 0.0, -0.000133514404296875, -0.0006923675537109375, -9.918212890625e-05, -2.86102294921875e-05, 0.0, -0.00096893310546875, 0.0, -8.96453857421875e-05, -5.7220458984375e-06, -0.00018131732940673828, -4.00543212890625e-05, -0.002335667610168457, -1.9073486328125e-06, -8.392333984375e-05, -0.000759124755859375, -3.0517578125e-05, -0.0001621246337890625, 0.0, -0.00012981891632080078, 0.0, -0.05375206470489502, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.013986465521156788, -4.172325134277344e-06, -0.00040435791015625, -1.33514404296875e-05, -0.0001201629638671875, -2.09808349609375e-05, -7.25984136806801e-05, -1.9073486328125e-06], "score": -5.721507713618671, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for targets in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "targets", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008596180938184261, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -5.067789077758789, -9.5367431640625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.27895641326904297, 0.0, -0.00052642822265625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -0.2478330135345459, 0.0, -1.1444091796875e-05, -0.0009250640869140625, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.015135884284973145, -2.3841855067985307e-07, -0.0004634857177734375, -3.0517578125e-05, -0.0003528594970703125, -3.814697265625e-05, -8.952582720667124e-05, -1.9073486328125e-06], "score": -5.803266811298975, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -2.289536952972412, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -3.814697265625e-06, -3.0517578125e-05, -3.412712335586548, -3.576278118089249e-07, -0.0002574920654296875, -2.09808349609375e-05, -9.34600830078125e-05, -1.9073486328125e-05, -8.809539576759562e-05, -1.9073486328125e-06, -0.013006210327148438, -0.0012664794921875, -0.0003833770751953125, -1.1444091796875e-05, -0.006978154182434082, -1.1920928244535389e-07, -0.00039005279541015625, -1.71661376953125e-05, -0.00232696533203125, -0.0010542869567871094, 0.0, -0.000209808349609375, -0.0002269744873046875, -1.52587890625e-05, -0.0017299652099609375, 0.0, -0.00011038780212402344, 0.0, -0.010479211807250977, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005163307301700115, -1.2040138244628906e-05, -0.0005950927734375, -2.09808349609375e-05, -0.0001354217529296875, -2.09808349609375e-05, -6.818766996730119e-05, -1.9073486328125e-06], "score": -5.819086714973075, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -5.604129791259766, -3.814697265625e-06, -0.0006638765335083008, -7.62939453125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.0848044439626392e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0003122091293334961, -0.026968955993652344, -3.4332275390625e-05, -0.012576103210449219, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.0010204315185546875, -1.52587890625e-05, -0.006351470947265625, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.000133514404296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001125335693359375, -5.340576171875e-05, -3.62396240234375e-05, 0.0, -0.0003604888916015625, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.11019754409790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008603810332715511, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.014782905578613281, -0.001056671142578125, -0.0004119873046875, -9.5367431640625e-06, -0.006090641021728516, 0.0, -0.0003814697265625, -1.9073486328125e-05, -0.002166748046875, -0.0010342597961425781, 0.0, -0.000179290771484375, -0.0002269744873046875, -1.52587890625e-05, -0.001750946044921875, 0.0, -0.00011432170867919922, 0.0, -0.01024937629699707, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0051215835846960545, -1.2040138244628906e-05, -0.000598907470703125, -2.09808349609375e-05, -0.0001354217529296875, -2.09808349609375e-05, -6.628032133448869e-05, -1.9073486328125e-06], "score": -5.8274429272403765, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "ROGUE", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008596180938184261, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.014906883239746094, -0.0010395050048828125, -0.0004062652587890625, -9.5367431640625e-06, -0.006041049957275391, 0.0, -0.00038051605224609375, -1.9073486328125e-05, -0.0021686553955078125, -0.0010352134704589844, 0.0, -0.000179290771484375, -0.0002269744873046875, -1.52587890625e-05, -0.0017452239990234375, 0.0, -0.00011432170867919922, 0.0, -0.010258913040161133, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.65195369720459, -4.768370445162873e-07, -0.000644683837890625, -3.0517578125e-05, -0.000102996826171875, -2.6702880859375e-05, -0.00010490351996850222, -1.9073486328125e-06], "score": -5.882468151668654, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -5.250908851623535, -2.6702880859375e-05, -0.00035858154296875, -0.002166748046875, -8.0108642578125e-05, -0.004872566554695368, -9.059900548891164e-06, -0.00016021728515625, -1.9073486328125e-06, -0.0005340576171875, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.00042176246643066406, 0.0, -0.000152587890625, 0.0, -1.9073486328125e-05, -0.0002765655517578125, -1.9073486328125e-05, -3.62396240234375e-05, 0.0, -0.000885009765625, -1.9073486328125e-06, -9.72747802734375e-05, -1.33514404296875e-05, -0.00017201900482177734, -0.00013744831085205078, -0.0004698038101196289, -1.9073486328125e-06, -0.0785989761352539, -0.0001163482666015625, -9.5367431640625e-06, 0.0, -0.059169769287109375, 0.0, -0.0007781982421875, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.11416816711425781, -0.010591506958007812, -3.4332275390625e-05, -0.000118255615234375, -1.9073486328125e-06, -0.00017130369087681174, 0.0, -0.4311482906341553, 0.0, -5.14984130859375e-05, -1.33514404296875e-05, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.015591604635119438, -1.0848044439626392e-05, -0.0002384185791015625, -2.47955322265625e-05, -0.0001087188720703125, -1.1444091796875e-05, -5.018683441448957e-05, -1.9073486328125e-06], "score": -6.020609774516572, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 25, 133, "targets", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for minion in targets:\n            minion.heal(player.effective_heal_power(2), self)\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.71661376953125e-05, -5.1761369705200195, -6.9141146923357155e-06, -0.00020430500444490463, -0.000272512377705425, -0.0016606152057647705, -8.58306884765625e-06, -0.00016987323760986328, 0.0, -0.0001087188720703125, -0.000148773193359375, -5.960462772236497e-07, -5.161762237548828e-05, -1.776205863279756e-05, -1.9073486328125e-06, -0.0001977485226234421, -4.649162292480469e-05, -0.05121147632598877, -2.288818359375e-05, -0.0007706880569458008, -1.9073486328125e-06, -0.00090789794921875, -3.814697265625e-06, -8.976459503173828e-05, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -7.2479248046875e-05, -5.5789947509765625e-05, -6.42538070678711e-05, -0.029326438903808594, -6.29425048828125e-05, -0.031022071838378906, -2.47955322265625e-05, -3.4332275390625e-05, -1.71661376953125e-05, -0.0028672218322753906, -7.62939453125e-06, -0.00292205810546875, -0.0006961822509765625, -0.0001316070556640625, 0.0, -0.0006866455078125, -1.9073486328125e-06, -0.0022765398025512695, 0.0, -0.00028228759765625, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-05, -5.340576171875e-05, -4.57763671875e-05, 0.0, -0.000385284423828125, -1.9073486328125e-06, -6.67572021484375e-05, -7.62939453125e-06, -0.00018715858459472656, -0.00015270709991455078, -0.0004544258117675781, -3.814697265625e-06, -5.7220458984375e-05, -0.0004634857177734375, -2.288818359375e-05, -0.000164031982421875, 0.0, -0.0001925229444168508, 0.0, -0.1312030553817749, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.010120748542249203, -1.1920928244535389e-07, -0.0004520416259765625, -2.09808349609375e-05, -0.0002002716064453125, -3.0517578125e-05, -8.165815233951434e-05, -1.9073486328125e-06, -0.014980316162109375, -0.00115966796875, -0.0003795623779296875, -3.814697265625e-06, -0.009805440902709961, -2.0265579223632812e-06, -0.0003986358642578125, -2.09808349609375e-05, -0.00228118896484375, -0.0010390281677246094, 0.0, -0.0001926422119140625, -0.0002231597900390625, -1.33514404296875e-05, -0.001873016357421875, 0.0, -0.00011169910430908203, -1.9073486328125e-06, -0.010548830032348633, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.09808349609375e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005160922650247812, -1.2040138244628906e-05, -0.0005950927734375, -2.09808349609375e-05, -0.0001277923583984375, -1.9073486328125e-05, -6.663794920314103e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.011387825012207031, -0.08233356475830078, -0.018690694123506546, 0.0, -0.004426002502441406, -0.00074005126953125, -0.00014495849609375, -0.0005855560302734375, -0.007495880126953125, -0.0045108795166015625, -0.05668067932128906, -1.9073486328125e-06, -0.482452392578125, -0.011426925659179688, -0.6321439743041992, -0.010465621948242188, -0.001999802654609084, -1.9073486328125e-06, -0.00347900390625, 0.0, -0.0005054473876953125, -1.1444091796875e-05, -0.007985115051269531, 0.0, -0.01097869873046875, -0.0001220703125, -0.4577960968017578, -3.814697265625e-05, -2.6702880859375e-05, 0.0, -0.00016987323760986328, 0.0, -5.7220458984375e-06, -0.004581451416015625, 0.0, -0.06118488311767578, -7.62939453125e-06, -0.4315919876098633, 0.0, -0.000217437744140625, -3.814697265625e-06, -0.0002442598342895508, -3.933906555175781e-06, -0.0028791427612304688, -7.62939453125e-06, -0.0001068115234375, -0.006724357604980469, -8.7738037109375e-05, -0.0007190704345703125], "score": -7.81136421335696, "choice_history": [77, 148, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "model_output": {"hole0": "HolyNova", "hole2": [{"hole0": "Holy Nova", "hole2": "PRIEST", "hole1": 5, "hole3": "COMMON", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"_type": "Template33"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "For"}, {"body": [{"hole0": {"id": "minion", "_type": "Name"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_heal_power", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "target": {"id": "minion", "_type": "Name"}, "iter": {"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 50}
{"beams": [{"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -0.009181976318359375, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00252532958984375, -1.71661376953125e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0002163641038350761, 0.0, -0.0002899169921875, -0.000133514404296875, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -0.001850128173828125, -3.4332275390625e-05, -4.38690185546875e-05, -0.0002765655517578125, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007238388061523438, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.000392913818359375, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -0.09250175104554614, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -2.9782116413116455, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -0.0001125335693359375, -0.00026702880859375, -0.008985519409179688, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -9.918212890625e-05, -3.814697265625e-06, -0.0025272369384765625, -2.09808349609375e-05, -7.43865966796875e-05, -1.9073486328125e-06, -0.0002136221737600863, 0.0, -0.0002880096435546875, -0.0001316070556640625, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -0.0018529891967773438, -3.4332275390625e-05, -4.38690185546875e-05, -0.0002765655517578125, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.00072479248046875, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.0003910064697265625, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -2.9998886499235766, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "MAGE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.868564605712891, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -2.6702880859375e-05, -0.0002193450927734375, -0.010343551635742188, -1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -6.103515625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.000102996826171875, -3.814697265625e-06, -0.0025310516357421875, -1.71661376953125e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.00020968826720491052, 0.0, -0.00030517578125, -0.0001430511474609375, -7.43865966796875e-05, -3.814697265625e-06, 0.0, -0.0018110275268554688, -3.24249267578125e-05, -4.1961669921875e-05, -0.0002727508544921875, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007276535034179688, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.000392913818359375, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.0010172128677368164, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -4.89147078130938, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "ROGUE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -5.602855682373047, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -0.000347137451171875, -0.00676727294921875, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.000110626220703125, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0024471282958984375, -2.09808349609375e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0002169600484194234, 0.0, -0.000293731689453125, -0.000133514404296875, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -0.0018339157104492188, -3.4332275390625e-05, -4.38690185546875e-05, -0.000274658203125, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007238388061523438, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.000392913818359375, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -5.622267237660907, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -5.844156742095947, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -0.00016021728515625, -8.96453857421875e-05, -0.0001544952392578125, -0.01947021484375, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001068115234375, 0.0, -0.0001049041748046875, -3.814697265625e-06, -0.002513885498046875, -1.9073486328125e-05, -8.0108642578125e-05, -1.9073486328125e-06, -0.00021290694712661207, 0.0, -0.0002918243408203125, -0.000133514404296875, -7.43865966796875e-05, -3.814697265625e-06, 0.0, -0.0018415451049804688, -3.4332275390625e-05, -4.38690185546875e-05, -0.0002765655517578125, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007257461547851562, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.0003910064697265625, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -5.876301518452436, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "WARRIOR", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -0.009181976318359375, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -6.469389915466309, -1.9073486328125e-06, -0.0001010894775390625, -1.9073486328125e-06, -7.653162174392492e-05, 0.0, -0.0002460479736328125, -0.000118255615234375, -0.000125885009765625, -3.814697265625e-06, 0.0, -0.0019207000732421875, -3.24249267578125e-05, -4.57763671875e-05, -0.0002880096435546875, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.000728607177734375, -1.9073486328125e-06, -6.97372670401819e-05, -3.814697265625e-06, -0.00016057491302490234, 0.0, -5.340576171875e-05, -0.0004024505615234375, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001011490821838379, -1.9073486328125e-06, -0.0003948211669921875, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.793571472167969e-05, 0.0], "score": -6.559321395012574, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -4.741028785705566, -3.814697265625e-06, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0001163482666015625, -5.7220458984375e-06, -0.0018845796585083008, -2.6702880859375e-05, -5.7220458984375e-06, -7.82012939453125e-05, -0.054137229919433594, 0.0, -0.0029954910278320312, -0.00023651123046875, -0.0018520355224609375, -0.000522613525390625, -0.12725162506103516, -2.47955322265625e-05, -0.017500877380371094, -0.0029201507568359375, -0.006671905517578125, -0.000186920166015625, -0.03664112091064453, -0.000217437744140625, -0.01621532440185547, -0.0001068115234375, -0.0008182525634765625, -5.7220458984375e-06, -0.04091668128967285, 0.0, -0.02890598773956299, -2.47955322265625e-05, -0.0002460479736328125, -0.2019939422607422, -0.0003337860107421875, -0.39543724060058594, -1.9073486328125e-06, -0.006167411804199219, 0.0, -0.3147425651550293, 0.0, -0.7093744277954102, -1.52587890625e-05, -0.013500213623046875, -0.0028400421142578125, -3.0517578125e-05, 0.0, -0.0001621246337890625, -3.814697265625e-06, -0.1482839584350586, -1.9073486328125e-06, -0.037059783935546875, -3.814697265625e-06, -0.000152587890625, -3.814697265625e-06, -0.0001785755157470703, 0.0, -0.0010051727294921875, -0.0004177093505859375, -6.67572021484375e-05, -1.1444091796875e-05, 0.0, -0.0010328292846679688, -0.0003528594970703125, -1.1444091796875e-05, -0.000518798828125, -9.34600830078125e-05, 0.0, -7.62939453125e-06, 0.0, -0.0007048845291137695, -1.9073486328125e-06, -5.829324072692543e-05, -3.814697265625e-06, -0.00022709369659423828, 0.0, -3.24249267578125e-05, -0.0004558563232421875, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0010524988174438477, -1.9073486328125e-06, -0.00042724609375, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -5.519390106201172e-05, 0.0], "score": -6.993128768867081, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health ==\n            MINION_TYPE.BEAST and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -4.741028785705566, -3.814697265625e-06, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0001163482666015625, -5.7220458984375e-06, -0.0018845796585083008, -2.6702880859375e-05, -5.7220458984375e-06, -7.82012939453125e-05, -0.054137229919433594, 0.0, -0.0029954910278320312, -0.00023651123046875, -0.0018520355224609375, -0.000522613525390625, -0.12725162506103516, -2.47955322265625e-05, -0.017500877380371094, -0.0029201507568359375, -0.006671905517578125, -0.000186920166015625, -0.03664112091064453, -0.000217437744140625, -0.01621532440185547, -0.0001068115234375, -0.0008182525634765625, -5.7220458984375e-06, -0.04091668128967285, 0.0, -0.02890598773956299, -2.47955322265625e-05, -0.0002460479736328125, -0.2019939422607422, -0.0003337860107421875, -0.39543724060058594, -1.9073486328125e-06, -0.006167411804199219, 0.0, -0.3147425651550293, 0.0, -1.0062084197998047, 0.0, -0.014301300048828125, -0.011259078979492188, -1.1444091796875e-05, 0.0, -0.001190185546875, -1.9073486328125e-06, -0.029183387756347656, -1.9073486328125e-06, -0.03178596496582031, -1.9073486328125e-06, -0.0001850128173828125, -3.814697265625e-06, -0.00012505054473876953, 0.0, -0.0009670257568359375, -0.000423431396484375, -6.4849853515625e-05, -9.5367431640625e-06, 0.0, -0.0010957717895507812, -0.0003376007080078125, -1.1444091796875e-05, -0.0005283355712890625, -9.918212890625e-05, 0.0, -7.62939453125e-06, 0.0, -0.0006819963455200195, -1.9073486328125e-06, -5.841244637849741e-05, -3.814697265625e-06, -0.00022900104522705078, 0.0, -3.4332275390625e-05, -0.000457763671875, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0010524988174438477, -1.9073486328125e-06, -0.0004291534423828125, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, -5.519390106201172e-05, 0.0], "score": -7.175786964359048, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "target", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health ==\n            MINION_TYPE.target and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"attr": "target", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -4.741028785705566, -3.814697265625e-06, -3.4332275390625e-05, -8.20159912109375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0001163482666015625, -5.7220458984375e-06, -0.0018845796585083008, -2.6702880859375e-05, -5.7220458984375e-06, -7.82012939453125e-05, -0.054137229919433594, 0.0, -0.0029954910278320312, -0.00023651123046875, -0.0018520355224609375, -0.000522613525390625, -0.12725162506103516, -2.47955322265625e-05, -0.017500877380371094, -0.0029201507568359375, -0.006671905517578125, -0.000186920166015625, -0.03664112091064453, -0.000217437744140625, -0.01621532440185547, -0.0001068115234375, -0.0008182525634765625, -5.7220458984375e-06, -0.04091668128967285, 0.0, -0.02890598773956299, -2.47955322265625e-05, -0.0002460479736328125, -0.2019939422607422, -0.0003337860107421875, -1.2924003601074219, -0.0031404495239257812, -0.002674102783203125, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0028972625732421875, -1.9073486328125e-06, -0.15661048889160156, -7.62939453125e-06, -0.0018253326416015625, -0.36995792388916016, -0.000171661376953125, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.00156402587890625, 0.0, -0.024146080017089844, -3.814697265625e-06, -0.0005817413330078125, -5.7220458984375e-06, -0.0001659393310546875, 0.0, -0.001087188720703125, -0.000640869140625, -8.58306884765625e-05, -1.52587890625e-05, 0.0, -0.001049041748046875, -0.0003337860107421875, -1.33514404296875e-05, -0.000701904296875, -0.0001163482666015625, 0.0, -7.62939453125e-06, 0.0, -0.0007439851760864258, -1.9073486328125e-06, -5.8770070609170943e-05, -3.814697265625e-06, -0.00025391578674316406, 0.0, -2.6702880859375e-05, -0.000469207763671875, -6.29425048828125e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0010752677917480469, -1.9073486328125e-06, -0.00042724609375, -3.0517578125e-05, -6.103515625e-05, 0.0, -5.519390106201172e-05, 0.0], "score": -7.222048513351382, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, filter_func=lambda target: target.health ==\n            target.calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "Eq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -0.009181976318359375, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00252532958984375, -1.71661376953125e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0002163641038350761, 0.0, -0.0002899169921875, -0.000133514404296875, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -6.953341484069824, -0.00079345703125, -0.005435943603515625, -6.4849853515625e-05, -4.00543212890625e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0029888153076171875, -3.814697265625e-06, -6.449216743931174e-05, -1.9073486328125e-06, -0.0001761913299560547, 0.0, -0.0001068115234375, -0.000629425048828125, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.0009828805923461914, -1.9073486328125e-06, -0.0003719329833984375, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -5.5670738220214844e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.0014171600341796875, -1.1444091796875e-05, 0.0, -0.07744598388671875, 0.0, -0.00611114501953125, -1.33514404296875e-05, -7.748603820800781e-06, -3.4332275390625e-05, -0.004949688911437988, 0.0, -1.1444091796875e-05, -0.0001049041748046875, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0015004873275756836, 0.0, -0.0003528594970703125, -2.6702880859375e-05, -0.00011444091796875, 0.0, -6.186962127685547e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0014514923095703125, -1.33514404296875e-05, 0.0, -0.02889251708984375, 0.0, -0.009222984313964844, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.006932377815246582, 0.0, -9.5367431640625e-06, -9.72747802734375e-05, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0015838146209716797, 0.0, -0.000362396240234375, -2.86102294921875e-05, -0.0001316070556640625, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -9.1552734375e-05, -0.0014705657958984375, -1.52587890625e-05, 0.0, -0.02094268798828125, 0.0, -0.009311676025390625, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.0075225830078125, 0.0, -9.5367431640625e-06, -8.58306884765625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.0015993118286132812, 0.0, -0.0003643035888671875, -2.86102294921875e-05, -0.000133514404296875, 0.0, -6.29425048828125e-05, -1.9073486328125e-06], "score": -7.235315791316879, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -7.482726573944092, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -7.2479248046875e-05, -0.0001239776611328125, -0.014238357543945312, -3.814697265625e-06, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -9.918212890625e-05, -3.814697265625e-06, -0.0025348663330078125, -2.09808349609375e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.00021338375518098474, 0.0, -0.0002899169921875, -0.0001354217529296875, -7.43865966796875e-05, -3.814697265625e-06, 0.0, -0.0018405914306640625, -3.4332275390625e-05, -4.38690185546875e-05, -0.0002765655517578125, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007228851318359375, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.0003910064697265625, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -7.509542695028557, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PIRATE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PIRATE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PIRATE", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -6.17938232421875, -3.814689989667386e-06, -0.00035470660077407956, -4.529942543740617e-06, -1.752290700096637e-05, -2.861022494471399e-06, -0.0008920431137084961, -1.9073486328125e-06, -0.0027093887329101562, -4.00543212890625e-05, -0.00023651123046875, -1.71661376953125e-05, -4.57763671875e-05, -0.0002689361572265625, -1.52587890625e-05, -1.71661376953125e-05, -6.5205356804654e-05, -2.682209014892578e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.67572021484375e-05, -3.814697265625e-06, -0.06988632678985596, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.0001583099365234375, -0.009077072143554688, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -0.0024356842041015625, -1.9073486328125e-05, -0.002315521240234375, -1.9073486328125e-06, -0.0006107091903686523, 0.0, -0.00022125244140625, -0.0001354217529296875, -1.52587890625e-05, -1.9073486328125e-05, -1.1920928244535389e-07, -0.24202632904052734, -3.62396240234375e-05, -0.012011528015136719, -9.918212890625e-05, -7.82012939453125e-05, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0008373260498046875, -2.47955322265625e-05, -7.343288598349318e-05, -1.9073486328125e-06, -0.00020229816436767578, 0.0, -1.71661376953125e-05, -0.000331878662109375, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0009645223035477102, -1.9073486328125e-06, -0.000446319580078125, -3.24249267578125e-05, -6.103515625e-05, 0.0, -5.698204040527344e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.04901599884033203, -0.00160980224609375, -0.00726470910012722, 0.0, -0.0031223297119140625, -0.0006923675537109375, -0.0016536712646484375, -0.00016021728515625, -0.006985664367675781, -8.58306884765625e-05, -0.009275436401367188, -1.9073486328125e-06, -0.060194969177246094, -0.000858306884765625, -0.0038290023803710938, -0.00017547607421875, -0.00442235404625535, -2.3841855067985307e-07, -0.005882620811462402, 0.0, -0.002431154251098633, 0.0, -0.005982398986816406, 0.0, -0.0016117095947265625, -1.71661376953125e-05, -0.27251529693603516, -1.9073486328125e-06, -0.1065521240234375, -1.33514404296875e-05, -0.16971313953399658, -5.7220458984375e-06, -0.00014209747314453125, -1.9073486328125e-05, -1.52587890625e-05, -0.22342491149902344, -2.288818359375e-05, -0.0002536773681640625, 0.0, -0.02202320098876953, -7.62939453125e-06, -0.0040149688720703125, 0.0, -0.19052982330322266, -1.9073486328125e-06], "score": -7.681527574068433, "choice_history": [77, 148, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", 202, 13, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game\n            ) and self.target is not MINION_TYPE.BEAST\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "IsNot"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -7.682947158813477, 0.0, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000244140625, -0.021127700805664062, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -9.5367431640625e-05, -3.814697265625e-06, -0.0025081634521484375, -1.9073486328125e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.00021064197062514722, 0.0, -0.000293731689453125, -0.0001373291015625, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -0.001834869384765625, -3.4332275390625e-05, -4.38690185546875e-05, -0.0002765655517578125, -8.0108642578125e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007266998291015625, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.000392913818359375, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -7.716617456448347, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "Damage", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.Damage,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "Damage", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -0.009181976318359375, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -7.724267959594727, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.00019884048379026353, 0.0, -0.0002765655517578125, -0.0001010894775390625, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.0020437240600585938, -3.4332275390625e-05, -4.57763671875e-05, -0.0002803802490234375, -6.67572021484375e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0007343292236328125, -1.9073486328125e-06, -6.651863805018365e-05, -3.814697265625e-06, -0.00014340877532958984, 0.0, -5.53131103515625e-05, -0.000396728515625, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.0010075569152832031, -1.9073486328125e-06, -0.0003948211669921875, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "score": -7.814322224862025, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -0.009181976318359375, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00252532958984375, -1.71661376953125e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0002163641038350761, 0.0, -0.0002899169921875, -0.000133514404296875, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -7.520021438598633, -0.0001125335693359375, -0.0002536773681640625, -6.67572021484375e-05, -3.0517578125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0014476776123046875, -3.814697265625e-06, -4.3272957555018365e-05, -1.9073486328125e-06, -9.775161743164062e-05, 0.0, -7.82012939453125e-05, -0.0007476806640625, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -0.0009365081205032766, -1.9073486328125e-06, -0.000335693359375, -3.24249267578125e-05, -6.67572021484375e-05, 0.0, -5.3524967370321974e-05, -1.9073486328125e-06, -0.0007572174072265625, -0.00183868408203125, -1.1444091796875e-05, 0.0, -0.579371452331543, 0.0, -0.010021209716796875, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0033446550369262695, 0.0, -5.7220458984375e-06, -0.000152587890625, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.0016111135482788086, 0.0, -0.000385284423828125, -2.86102294921875e-05, -8.0108642578125e-05, 0.0, -6.42538070678711e-05, -1.9073486328125e-06], "score": -8.209314933945478, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "HolySmite", "hole2": [{"value": {"args": [{"s": "Holy Smite", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 51}
{"beams": [{"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -0.24678055942058563, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, -0.000560760498046875, -0.12891483306884766, -0.010293364524841309, -2.384185791015625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0035028699785470963, -8.678137965034693e-05, -0.016094207763671875, -3.0517578125e-05, -0.0002079010009765625, -4.57763671875e-05, 0.0, -0.0006920099258422852, -6.556510470545618e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0002536773681640625, -5.340576171875e-05, -1.9073486328125e-05, 0.0, -0.0010738859418779612, -1.5020368664409034e-05, 0.0, -0.0001087188720703125, -0.012769699096679688, 0.0, -0.0001430511474609375, 0.0, -3.933906555175781e-05, -3.576278118089249e-07, -0.008840560913085938, -3.814697265625e-06, -0.00087738037109375, -1.33514404296875e-05, -1.9073486328125e-06, -0.0006940364837646484, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.001483917236328125, -0.00012290477752685547, -4.1723224057932384e-06, -8.0108642578125e-05, 0.0, -7.748603820800781e-06, 0.0, -3.0517578125e-05, -0.0003871917724609375, -7.2479248046875e-05, -1.6331530787283555e-05, -4.768367489305092e-06, -0.00017285303329117596, -8.106231689453125e-06], "score": -0.7183741735798463, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 71, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -1.3926715850830078, -0.0023990862537175417, -2.741813204920618e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00232693157158792, -0.00010573364124866202, -0.024608612060546875, -2.6702880859375e-05, -0.000156402587890625, -4.1961669921875e-05, 0.0, -0.0021883249282836914, -8.70227722771233e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.000278472900390625, -5.53131103515625e-05, -4.1961669921875e-05, 0.0, -0.0010890471749007702, -1.7166135876323096e-05, 0.0, -8.7738037109375e-05, -0.010309219360351562, 0.0, -0.0001735687255859375, 0.0, -4.3272972106933594e-05, -3.576278118089249e-07, -0.009165763854980469, -3.814697265625e-06, -0.00092315673828125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0006924867630004883, -1.9073486328125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0017892122268676758, -0.00012886524200439453, -4.29153169534402e-06, -8.96453857421875e-05, 0.0, -7.748603820800781e-06, 0.0, -3.0517578125e-05, -0.0003948211669921875, -7.2479248046875e-05, -1.5973910194588825e-05, -5.006785613659304e-06, -0.00016450841212645173, -8.225440979003906e-06], "score": -3.2674827143341787, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 71, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -2.16725754737854, -1.33514404296875e-05, -2.09808349609375e-05, -0.00017547607421875, -0.0001850128173828125, -0.08795356750488281, -0.02662181854248047, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -0.0001013278670143336, -0.7166386842727661, -4.9591064453125e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0007686614990234375, -0.099761962890625, -0.0201570987701416, -2.2649765014648438e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00434607220813632, -9.655574103817344e-05, -0.01457977294921875, -3.0517578125e-05, -0.00020599365234375, -4.57763671875e-05, 0.0, -0.0006537437438964844, -6.318092346191406e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.000232696533203125, -5.53131103515625e-05, -1.33514404296875e-05, 0.0, -0.0010167984291911125, -1.5020368664409034e-05, 0.0, -0.0001068115234375, -0.013353347778320312, 0.0, -0.000133514404296875, 0.0, -3.921985626220703e-05, -3.576278118089249e-07, -0.008843421936035156, -3.814697265625e-06, -0.0008563995361328125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0006479024887084961, -1.9073486328125e-06, -6.67572021484375e-05, -3.814697265625e-06, -0.001407623291015625, -0.00012087821960449219, -4.053113570989808e-06, -7.43865966796875e-05, 0.0, -7.748603820800781e-06, 0.0, -3.24249267578125e-05, -0.0003814697265625, -7.2479248046875e-05, -1.6212323316722177e-05, -4.768367489305092e-06, -0.00017452197789680213, -8.106231689453125e-06], "score": -3.3030195562059674, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 71, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -0.24678055942058563, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, -0.000560760498046875, -2.1160478591918945, -0.09103690832853317, -2.622604142743512e-06, -5.7220458984375e-06, 0.0, -0.00022900097246747464, -0.16216349601745605, 0.0, -5.7220458984375e-06, -0.0011138916015625, -0.002567291259765625, -0.8498830795288086, -0.03944563865661621, -4.52994936495088e-06, -1.9073486328125e-06, 0.0, -0.000259875989286229, -0.09982883185148239, 0.0, -1.33514404296875e-05, -0.0022792816162109375, -0.0048351287841796875, -0.010427474975585938, -5.53131103515625e-05, -1.9073486328125e-06, -0.005950927734375, -1.5497207641601562e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000286102294921875, -5.7220458984375e-05, -1.71661376953125e-05, 0.0, -0.00032329431269317865, -1.0013580322265625e-05, 0.0, -2.47955322265625e-05, -0.0033702850341796875, 0.0, -0.000133514404296875, 0.0, -4.601478576660156e-05, -2.2649765014648438e-06, -0.008961677551269531, -3.814697265625e-06, -0.0015239715576171875, -3.814697265625e-06, -1.9073486328125e-06, -0.0004578828811645508, -1.9073486328125e-06, -7.2479248046875e-05, -1.52587890625e-05, -0.0019168853759765625, -0.0001093149185180664, -3.218649908376392e-06, -5.53131103515625e-05, 0.0, -7.748603820800781e-06, 0.0, -4.1961669921875e-05, -0.0003681182861328125, -8.20159912109375e-05, -1.4185799955157563e-05, -6.079665126890177e-06, -0.000143885423312895, -1.0251998901367188e-05], "score": -3.935360386011169, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -2.16725754737854, -1.33514404296875e-05, -2.09808349609375e-05, -0.00017547607421875, -0.0001850128173828125, -0.08795356750488281, -0.02662181854248047, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -0.0001013278670143336, -0.6746407747268677, 0.0, -5.7220458984375e-06, -0.00054168701171875, -0.0027008056640625, -0.9567031860351562, -0.0036203856579959393, -2.503394853192731e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.002123786136507988, -0.00011264745990047231, -0.016567230224609375, -2.86102294921875e-05, -0.000171661376953125, -4.76837158203125e-05, 0.0, -0.0008069276809692383, -6.79492904964718e-06, -1.1444091796875e-05, -7.62939453125e-06, -0.0002460479736328125, -5.53131103515625e-05, -2.09808349609375e-05, 0.0, -0.0009737905347719789, -1.6808508007670753e-05, 0.0, -9.5367431640625e-05, -0.012800216674804688, 0.0, -0.000148773193359375, 0.0, -4.124641418457031e-05, -3.576278118089249e-07, -0.009020805358886719, -3.814697265625e-06, -0.0008869171142578125, -1.33514404296875e-05, -1.9073486328125e-06, -0.00070953369140625, -1.9073486328125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0015869140625, -0.00012302398681640625, -4.29153169534402e-06, -8.392333984375e-05, 0.0, -7.748603820800781e-06, 0.0, -3.0517578125e-05, -0.0003910064697265625, -7.05718994140625e-05, -1.5973910194588825e-05, -4.887576324108522e-06, -0.0001684423186816275, -8.225440979003906e-06], "score": -4.103401850894656, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 71, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -0.27785858511924744, -3.24249267578125e-05, -2.86102294921875e-05, -0.0002689361572265625, -0.000652313232421875, -0.10825347900390625, -0.020638704299926758, -2.2649765014648438e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.003253843868151307, -0.00010335005208617076, -0.0001354217529296875, -0.1643695831298828, 0.0, 0.0, -0.031125063076615334, -6.675716122117592e-06, -3.8266178307821974e-05, -0.07686614990234375, -0.13527393341064453, -3.0517578125e-05, -0.713346004486084, -0.10252536088228226, -6.222724914550781e-05, -0.49779605865478516, -7.62939453125e-06, -0.015033942647278309, -0.0004044771194458008, -4.1961669921875e-05, -6.4849853515625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0002269744873046875, -0.0010623931884765625, -0.000213623046875, -0.0005242604529485106, -1.1920928244535389e-07, -0.00014173926319926977, -2.1457672119140625e-06], "score": -4.301885048936192, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Taunt", "Treant", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            TauntTreant(), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "TauntTreant", "_type": "Template25"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -1.4239557981491089, 0.0, -3.814697265625e-06, -0.000522613525390625, -0.0024280548095703125, -0.3386383056640625, -0.04671812430024147, -3.6954863844584906e-06, -3.814697265625e-06, 0.0, -0.0001189706745208241, -0.37365350127220154, 0.0, -5.7220458984375e-06, -0.0010967254638671875, -0.00417327880859375, -0.02298450469970703, -5.340576171875e-05, -1.9073486328125e-06, -0.011494636535644531, -2.5153160095214844e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.000438690185546875, -4.57763671875e-05, -4.1961669921875e-05, 0.0, -0.00035762638435699046, -1.0013580322265625e-05, 0.0, -2.09808349609375e-05, -0.0022792816162109375, 0.0, -0.0001506805419921875, 0.0, -4.410743713378906e-05, -2.2649765014648438e-06, -0.009383201599121094, -3.814697265625e-06, -0.001499176025390625, -3.814697265625e-06, -3.814697265625e-06, -0.00046944618225097656, -1.9073486328125e-06, -7.05718994140625e-05, -1.33514404296875e-05, -0.0019626617431640625, -0.0001131296157836914, -3.218649908376392e-06, -5.91278076171875e-05, 0.0, -7.748603820800781e-06, 0.0, -4.1961669921875e-05, -0.0003681182861328125, -8.20159912109375e-05, -1.4066592484596185e-05, -6.198873961693607e-06, -0.00014173965610098094, -1.0251998901367188e-05], "score": -4.395025907723564, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeHealth(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -2.16725754737854, -1.33514404296875e-05, -2.09808349609375e-05, -0.00017547607421875, -0.0001850128173828125, -0.08795356750488281, -0.02662181854248047, -2.3841855067985307e-07, -3.814697265625e-06, 0.0, -0.0001013278670143336, -0.6746407747268677, 0.0, -5.7220458984375e-06, -0.00054168701171875, -0.0027008056640625, -0.4857521057128906, -0.04725859686732292, -3.8146954466355965e-06, -3.814697265625e-06, 0.0, -0.0001420972403138876, -0.3276701867580414, 0.0, -5.7220458984375e-06, -0.0009708404541015625, -0.0019474029541015625, -0.6142520904541016, -0.04435141384601593, -5.125993993715383e-06, -1.9073486328125e-06, 0.0, -0.00022709343465976417, -0.10277711600065231, 0.0, -1.33514404296875e-05, -0.002399444580078125, -0.0041446685791015625, -0.008005142211914062, -6.103515625e-05, -1.9073486328125e-06, -0.005805015563964844, -1.5497207641601562e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0002841949462890625, -5.7220458984375e-05, -1.71661376953125e-05, 0.0, -0.00031256553484126925, -9.894371032714844e-06, 0.0, -2.47955322265625e-05, -0.003337860107421875, 0.0, -0.0001373291015625, 0.0, -4.601478576660156e-05, -2.2649765014648438e-06, -0.009016990661621094, -3.814697265625e-06, -0.0015411376953125, -3.814697265625e-06, -1.9073486328125e-06, -0.0004597902297973633, -1.9073486328125e-06, -7.2479248046875e-05, -1.71661376953125e-05, -0.0019359588623046875, -0.0001112222671508789, -3.218649908376392e-06, -5.340576171875e-05, 0.0, -7.748603820800781e-06, 0.0, -4.1961669921875e-05, -0.000370025634765625, -8.20159912109375e-05, -1.4066592484596185e-05, -6.079665126890177e-06, -0.00014376621402334422, -1.0251998901367188e-05], "score": -4.759533456514461, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeHealth(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -0.27785858511924744, -3.24249267578125e-05, -2.86102294921875e-05, -0.0002689361572265625, -0.000652313232421875, -0.10825347900390625, -0.020638704299926758, -2.2649765014648438e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.003253843868151307, -0.00010335005208617076, -0.0001354217529296875, -2.201199531555176, -6.29425048828125e-05, 0.0, -0.0021736621856689453, -5.125998541188892e-06, -3.063678741455078e-05, -1.9073486328125e-05, -0.0005235671997070312, -3.814697265625e-05, -1.52587890625e-05, 0.0, -0.0018467026529833674, -1.8477439880371094e-05, 0.0, -0.00020599365234375, -0.012706756591796875, 0.0, -9.34600830078125e-05, 0.0, -4.565715789794922e-05, -3.576278118089249e-07, -0.00777435302734375, -3.814697265625e-06, -0.001087188720703125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0009762048721313477, -1.9073486328125e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.0019474029541015625, -0.00012099742889404297, -3.4570680327306036e-06, -0.0001087188720703125, 0.0, -7.748603820800781e-06, 0.0, -3.24249267578125e-05, -0.000415802001953125, -7.05718994140625e-05, -1.9550119759514928e-05, -4.887576324108522e-06, -0.00014817669580224901, -6.198883056640625e-06], "score": -4.794535031081992, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(IsType(\n            MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -0.27785858511924744, -3.24249267578125e-05, -2.86102294921875e-05, -0.0002689361572265625, -0.000652313232421875, -2.2810611724853516, -0.07391535490751266, -2.741813204920618e-06, -3.814697265625e-06, 0.0, -0.0002961158170364797, -0.06837880611419678, 0.0, -9.5367431640625e-06, -0.0021724700927734375, -0.0041065216064453125, -0.03073596954345703, -4.1961669921875e-05, -1.9073486328125e-06, -0.0058803558349609375, -1.5497207641601562e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002994537353515625, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -0.00034177149063907564, -1.0013580322265625e-05, 0.0, -2.47955322265625e-05, -0.003177642822265625, 0.0, -0.00012969970703125, 0.0, -4.410743713378906e-05, -2.2649765014648438e-06, -0.009236335754394531, -3.814697265625e-06, -0.0015716552734375, -3.814697265625e-06, -1.9073486328125e-06, -0.0004521608352661133, -1.9073486328125e-06, -7.05718994140625e-05, -1.1444091796875e-05, -0.0018405914306640625, -0.00011110305786132812, -3.099440846199286e-06, -6.103515625e-05, 0.0, -7.748603820800781e-06, 0.0, -4.38690185546875e-05, -0.0003662109375, -8.20159912109375e-05, -1.4662629837403074e-05, -6.079665126890177e-06, -0.0001424548972863704, -1.0251998901367188e-05], "score": -4.915101217803411, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -0.24678055942058563, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, -0.000560760498046875, -0.12891483306884766, -0.010293364524841309, -2.384185791015625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0035028699785470963, -8.678137965034693e-05, -0.016094207763671875, -3.0517578125e-05, -0.0002079010009765625, -4.57763671875e-05, 0.0, -0.0006920099258422852, -6.556510470545618e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0002536773681640625, -5.340576171875e-05, -1.9073486328125e-05, 0.0, -0.0010738859418779612, -1.5020368664409034e-05, 0.0, -0.0001087188720703125, -4.368034362792969, -3.4332275390625e-05, -0.12078644335269928, -5.960462772236497e-07, -0.0007953643798828125, -5.340576171875e-05, -5.91278076171875e-05, -0.07974731922149658, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.0046253204345703125, -0.00014507770538330078, -2.3841855067985307e-07, -0.0001087188720703125, 0.0, -2.0265579223632812e-06, 0.0, -0.000125885009765625, -0.00138092041015625, -0.0001697540283203125, -1.2278476788196713e-05, -7.033334895822918e-06, -0.00011610979709075764, -2.1457668481161818e-05], "score": -5.268808182257871, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 71, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 53, 133, "targets", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(targets), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}, {"_type": "Template36_expr_seq"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"id": "targets", "_type": "Name"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -0.24678055942058563, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, -0.000560760498046875, -2.1160478591918945, -0.09103690832853317, -2.622604142743512e-06, -5.7220458984375e-06, 0.0, -0.00022900097246747464, -0.16216349601745605, 0.0, -5.7220458984375e-06, -0.0011138916015625, -0.002567291259765625, -0.5587577819824219, -0.009492039680480957, -5.960462772236497e-07, -3.814697265625e-06, -3.814697265625e-06, -0.0018300340743735433, -0.0001256398536497727, -0.0001430511474609375, -0.25018310546875, 0.0, 0.0, -0.020509235560894012, -7.033342626527883e-06, -3.6358829675009474e-05, -0.07242012023925781, -0.17394161224365234, -3.4332275390625e-05, -0.753389835357666, -0.10607798397541046, -6.23464584350586e-05, -0.4620037078857422, -7.62939453125e-06, -0.015304076485335827, -0.0004178285598754883, -4.1961669921875e-05, -6.4849853515625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000232696533203125, -0.00131988525390625, -0.0002117156982421875, -0.0005402256501838565, -1.1920928244535389e-07, -0.00013720933930017054, -2.1457672119140625e-06], "score": -5.331582340525195, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Taunt", "Treant", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2)), Buff(Taunt())]), MinionSelector(\n            TauntTreant(), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "TauntTreant", "_type": "Template25"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -0.27785858511924744, -3.24249267578125e-05, -2.86102294921875e-05, -0.0002689361572265625, -0.000652313232421875, -0.10825347900390625, -0.020638704299926758, -2.2649765014648438e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.003253843868151307, -0.00010335005208617076, -0.0001354217529296875, -0.1643695831298828, 0.0, 0.0, -0.031125063076615334, -6.675716122117592e-06, -3.8266178307821974e-05, -0.07686614990234375, -2.127779006958008, -6.67572021484375e-05, -0.0004711151123046875, -1.9073486328125e-06, -0.3365008234977722, -0.19167983531951904, 0.0, -4.57763671875e-05, -0.018238067626953125, 0.0, -0.0025873184204101562, 0.0, -0.0002397298812866211, -7.152555099310121e-07, -0.007480025291442871, -7.62939453125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -0.02592003345489502, -0.00025177001953125, -7.62939453125e-06, -4.57763671875e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -0.002315521240234375, -0.0002269744873046875, -0.0006579319015145302, -1.1920928244535389e-07, -0.00016951504221651703, -2.3841855067985307e-07], "score": -5.550040392878863, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(IsType(\n            MINION_TYPE.BEAST), PlayerSelector())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -0.27785858511924744, -3.24249267578125e-05, -2.86102294921875e-05, -0.0002689361572265625, -0.000652313232421875, -0.10825347900390625, -0.020638704299926758, -2.2649765014648438e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.003253843868151307, -0.00010335005208617076, -0.0001354217529296875, -0.1643695831298828, 0.0, 0.0, -0.031125063076615334, -6.675716122117592e-06, -3.8266178307821974e-05, -0.07686614990234375, -0.13527393341064453, -3.0517578125e-05, -0.713346004486084, -0.10252536088228226, -6.222724914550781e-05, -1.235137939453125, -0.00222015380859375, 0.0, 0.0, -0.04754018783569336, -2.777576446533203e-05, -3.445148468017578e-05, -0.0076160430908203125, -0.07902908325195312, -1.71661376953125e-05, -0.7071825265884399, -0.0752541795372963, -0.0001879930350696668, -0.531651496887207, -5.7220458984375e-06, -0.007446682546287775, -0.0003072023391723633, -5.53131103515625e-05, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0003376007080078125, -0.0013427734375, -0.000263214111328125, -0.0003039362491108477, -2.3841855067985307e-07, -0.00014495814684778452, -2.2649765014648438e-06], "score": -6.4825519784399575, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Taunt", "Treant", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Taunt", "Treant", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            TauntTreant(), MinionSelector(TauntTreant(), PlayerSelector()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "TauntTreant", "_type": "Template25"}, {"args": [{"hole0": "TauntTreant", "_type": "Template25"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}, {"score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -1.5311843156814575, 0.0, -3.814697265625e-06, -0.0004520416259765625, -0.0020809173583984375, -0.2863740921020508, -0.0477478913962841, -3.4570680327306036e-06, -3.814697265625e-06, 0.0, -0.00011551359784789383, -0.27785858511924744, -3.24249267578125e-05, -2.86102294921875e-05, -0.0002689361572265625, -0.000652313232421875, -0.10825347900390625, -0.020638704299926758, -2.2649765014648438e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.003253843868151307, -0.00010335005208617076, -0.0001354217529296875, -0.1643695831298828, 0.0, 0.0, -0.031125063076615334, -6.675716122117592e-06, -3.8266178307821974e-05, -0.07686614990234375, -0.13527393341064453, -3.0517578125e-05, -1.7069494724273682, -0.9192355275154114, -0.005967956036329269, -0.013047933578491211, -0.015366554260253906, -0.0042285919189453125, -1.9073486328125e-06, 0.0, -0.0038880109786987305, -8.690357208251953e-05, -1.3470649719238281e-05, -0.003093719482421875, -0.18865299224853516, -4.1961669921875e-05, -0.6326241493225098, -0.1498219519853592, -0.00016510482237208635, -0.47182464599609375, -5.7220458984375e-06, -0.017524681985378265, -0.0004369020462036133, -4.00543212890625e-05, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.000347137451171875, -0.001373291015625, -0.0002765655517578125, -0.000300122715998441, -2.3841855067985307e-07, -0.00014531576016452163, -2.2649765014648438e-06], "score": -7.1059573741704725, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Minion", "Has", "Taunt", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 63, 171, "Taunt", "Treant", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            MinionHasTaunt(), MinionSelector(TauntTreant(), PlayerSelector())))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "model_output": {"hole0": "Houndmaster", "hole2": [{"value": {"args": [{"s": "Houndmaster", "_type": "Str"}, {"_type": "Template37"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"args": [{"elts": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Template19"}, {"hole0": "Buff", "hole1": {"id": "Taunt", "_type": "Name"}, "_type": "Template19"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "MinionHasTaunt", "_type": "Template25"}, {"args": [{"hole0": "TauntTreant", "_type": "Template25"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole1": 3, "_type": "Template16"}]}}], "index": 52}
{"beams": [{"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -0.0016783896135166287, 0.0, -0.000171661376953125, -0.0027790069580078125, -5.7220458984375e-05, -2.622600959512056e-06, -3.576278118089249e-07, -9.250213042832911e-05, 0.0, -0.00301110721193254, -1.9073486328125e-06, -0.0003337860107421875, -2.47955322265625e-05, -0.0001323223114013672, -9.5367431640625e-06], "score": -0.02456474192075575, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -5.278429985046387, -0.011602401733398438, -0.03499603271484375, -0.18626928329467773, -2.0265579223632812e-06, -0.11641311645507812, -2.09808349609375e-05, -5.78165017941501e-05, 0.0, -0.0001430511474609375, -0.000202178955078125, -0.0001010894775390625, -0.0002654790587257594, -1.9073486328125e-06, -0.00011885165440617129, 0.0, -0.001188448746688664, 0.0, -9.5367431640625e-05, -0.00279998779296875, -5.7220458984375e-05, -6.19888032815652e-06, -3.576278118089249e-07, -8.511180931236595e-05, 0.0, -0.00304925418458879, -1.9073486328125e-06, -0.0004596710205078125, -3.814697265625e-05, -0.00011944770812988281, -1.52587890625e-05], "score": -5.644990453027219, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -0.0016783896135166287, 0.0, -0.000171661376953125, -6.022956848144531, -0.0003566741943359375, -0.0005255924188531935, -1.5139577953959815e-05, -7.748603820800781e-06, -1.1920928244535389e-07, -0.00015914211689960212, 0.0, -0.0016727447509765625, -0.0015163421630859375, -1.9073486328125e-06, -0.0023558137472718954, -2.47955322265625e-05, -0.000415802001953125, -0.000110626220703125, -0.00011003015970345587, -7.987022399902344e-06, -0.0001354217529296875, -1.1444091796875e-05, -0.05302608013153076, -1.9073486328125e-06, -0.0014190673828125, -0.0008373260498046875, -0.0001440039777662605, -8.82148651726311e-06], "score": -6.103940962420886, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "4", "<EOS>", "2", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 2, "hole1": 4, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -6.720192909240723, -1.9073486328125e-06, -0.0003490447998046875, -0.00194549560546875, -6.29425048828125e-05, -5.483620952873025e-06, -2.3841855067985307e-07, -0.00018404220463708043, 0.0, -0.0031175613403320312, -1.9073486328125e-06, -0.0002899169921875, -2.09808349609375e-05, -0.00011336803436279297, -1.1444091796875e-05], "score": -6.74256676838192, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -0.0016783896135166287, 0.0, -0.000171661376953125, -0.0027790069580078125, -5.7220458984375e-05, -2.622600959512056e-06, -3.576278118089249e-07, -9.250213042832911e-05, 0.0, -7.097652912139893, 0.0, -7.43865966796875e-05, -1.52587890625e-05, -5.257129669189453e-05, -1.1444091796875e-05], "score": -7.11885785967678, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, taunt=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "taunt", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -7.187394618988037, 0.0, -0.012502670288085938, -0.0003147125244140625, -3.814697265625e-06, -7.379054295597598e-05, 0.0, -0.0003566741943359375, -0.000102996826171875, -7.2479248046875e-05, -0.00023436546325683594, -1.9073486328125e-06, -0.00012421606515999883, 0.0, -0.0015176637098193169, 0.0, -9.5367431640625e-05, -0.0025959014892578125, -5.53131103515625e-05, -4.1723224057932384e-06, -3.576278118089249e-07, -9.16677454370074e-05, 0.0, -0.0030035970266908407, -1.9073486328125e-06, -0.0002689361572265625, -2.288818359375e-05, -0.0001360177993774414, -9.5367431640625e-06], "score": -7.2155390649786, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "BEAST", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.BEAST, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "BEAST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -7.204909324645996, -3.4928300010506064e-05, -9.298324584960938e-06, -1.1563299267436378e-05, -1.1920928244535389e-07, 0.0, -5.91278076171875e-05, -9.5367431640625e-06, -0.0001220703125, -3.0517578125e-05, -3.814697265625e-06, -0.010221481323242188, -1.9073486328125e-06, -2.09808349609375e-05, -1.1920878932869527e-05, -0.0003185272216796875, -0.0005664825439453125, -9.34600830078125e-05, -6.103515625e-05, -0.0001010894775390625, -1.9073486328125e-06, -0.00011265277862548828, 0.0, -0.0018506050109863281, 0.0, -0.0055255889892578125, -0.0009098052978515625, -9.5367431640625e-06, -8.76188205438666e-05, -2.0265579223632812e-06, -0.00040435791015625, -0.00012969970703125, -6.103515625e-05, -0.00025308129261247814, 0.0, -0.00016927719116210938, 0.0, -0.0017090248875319958, 0.0, -0.0001678466796875, -0.0027790069580078125, -5.7220458984375e-05, -2.622600959512056e-06, -3.576278118089249e-07, -9.345571743324399e-05, 0.0, -0.0030074117239564657, -1.9073486328125e-06, -0.0003414154052734375, -2.47955322265625e-05, -0.0001323223114013672, -9.5367431640625e-06], "score": -7.234486615695623, "choice_history": [77, 145, "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "<UNK>", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -7.347701072692871, -7.62939453125e-06, -5.7220458984375e-06, -1.2397700629662722e-05, -0.006047248840332031, -0.00034332275390625, -0.000232696533203125, -1.1444091796875e-05, -0.0003299713134765625, -7.62939453125e-06, -0.00014698505401611328, 0.0, -0.0009194612503051758, 0.0, -0.0025787353515625, -2.47955322265625e-05, -0.0001354217529296875, -0.0002288818359375, -0.00028610226581804454, -1.9073486328125e-06, -0.00024497509002685547, 0.0, -0.00040566272218711674, 0.0, -0.0001583099365234375, -0.0041675567626953125, -5.14984130859375e-05, -9.059892363438848e-06, -1.1920928244535389e-07, -7.211902266135439e-05, 0.0, -0.0019286866299808025, -1.9073486328125e-06, -0.000232696533203125, -2.288818359375e-05, -0.00014925003051757812, -1.71661376953125e-05], "score": -7.368215512714407, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -7.427759647369385, 0.0, -0.0008029937744140625, -0.0009021759033203125, -5.7220458984375e-06, -8.857249486027285e-05, -2.0265579223632812e-06, -0.00045013427734375, -0.0001125335693359375, -6.67572021484375e-05, -0.0002542734146118164, 0.0, -0.00015974044799804688, 0.0, -0.0015255517791956663, 0.0, -0.0001220703125, -0.0026416778564453125, -5.53131103515625e-05, -4.29153169534402e-06, -3.576278118089249e-07, -9.238292841473594e-05, 0.0, -0.0030000207480043173, -1.9073486328125e-06, -0.0003032684326171875, -2.288818359375e-05, -0.0001341104507446289, -9.5367431640625e-06], "score": -7.445071446207237, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -0.0016783896135166287, 0.0, -0.000171661376953125, -0.0027790069580078125, -5.7220458984375e-05, -2.622600959512056e-06, -3.576278118089249e-07, -9.250213042832911e-05, 0.0, -7.497532367706299, -1.9073486328125e-06, -0.000476837158203125, -2.47955322265625e-05, -0.0001043081283569336, -7.62939453125e-06], "score": -7.519199132030906, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "divine_shield", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -7.493305206298828, -0.00040435791015625, -0.059795379638671875, -0.000518798828125, -0.0002880096435546875, -2.2292000721790828e-05, -0.0001811981201171875, -0.00311279296875, -4.1961669921875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.71661376953125e-05, -0.0007023811340332031, 0.0, -0.0034295320510864258, 0.0, -0.014184951782226562, -0.0007457733154296875, -1.1444091796875e-05, -2.753734588623047e-05, -5.7220458984375e-06, -0.00016021728515625, -4.38690185546875e-05, -0.000690460205078125, -9.5367431640625e-06, -0.0004425048828125, 0.0, -0.0010280609130859375, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.013393878936767578, 0.0, -4.76837158203125e-05, -0.0057277679443359375, -0.0001087188720703125, -4.649158654501662e-06, -3.576278118089249e-07, -0.00010430268594063818, 0.0, -0.0019332168158143759, -3.814697265625e-06, -0.000156402587890625, -2.47955322265625e-05, -0.00010561943054199219, -1.71661376953125e-05], "score": -7.601923182957705, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}, {"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -5.278429985046387, -0.011602401733398438, -0.03499603271484375, -0.18626928329467773, -2.0265579223632812e-06, -2.2197256088256836, -0.000240325927734375, -0.0001220703125, -0.00011444091796875, -0.00027716156910173595, -3.814697265625e-06, -0.0001379251480102539, 0.0, -0.00014185768668539822, 0.0, -5.340576171875e-05, -0.0038204193115234375, -5.14984130859375e-05, -6.556507287314162e-06, -2.3841855067985307e-07, -9.131014667218551e-05, 0.0, -0.003026127815246582, -1.9073486328125e-06, -0.0003795623779296875, -2.47955322265625e-05, -0.00014162063598632812, -1.1444091796875e-05], "score": -7.748121694267837, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -5.278429985046387, -0.011602401733398438, -0.03499603271484375, -2.370570659637451, -1.9073486328125e-06, -0.2610950469970703, -1.33514404296875e-05, -5.2928924560546875e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.0003108978271484375, -0.0001068115234375, -0.00025272369384765625, -1.9073486328125e-06, -0.00012266634439583868, 0.0, -0.0012897610431537032, 0.0, -8.96453857421875e-05, -0.0028095245361328125, -5.7220458984375e-05, -6.19888032815652e-06, -3.576278118089249e-07, -8.40390202938579e-05, 0.0, -0.0030627248343080282, -1.9073486328125e-06, -0.0004634857177734375, -3.814697265625e-05, -0.00011944770812988281, -1.52587890625e-05], "score": -7.974186056177075, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "RARE", "<EOS>", 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "RARE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -8.32376766204834, -0.000125885009765625, -0.000125885009765625, -0.0002193450927734375, -0.00026285636704415083, -3.814697265625e-06, -0.00045692920684814453, 0.0, -0.0005105677410028875, 0.0, -0.000133514404296875, -0.0029087066650390625, -5.53131103515625e-05, -4.52994936495088e-06, -2.3841855067985307e-07, -9.536288416711614e-05, 0.0, -0.0024228093679994345, -1.9073486328125e-06, -0.0002346038818359375, -2.288818359375e-05, -0.00015306472778320312, -1.33514404296875e-05], "score": -8.345714043111883, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -0.0016783896135166287, 0.0, -0.000171661376953125, -0.0027790069580078125, -5.7220458984375e-05, -2.622600959512056e-06, -3.576278118089249e-07, -9.250213042832911e-05, 0.0, -8.046448707580566, 0.0, -0.2902822494506836, -6.866455078125e-05, -0.0044248104095458984, -2.0265579223632812e-06], "score": -8.362277745312156, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "buffs", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, buffs=True)\n", "model_output": {"hole0": "Huffer", "hole2": [{"value": {"args": [{"s": "Huffer", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "buffs", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}], "index": 53}
{"beams": [{"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.0136185884475708, 0.0, 0.0, -0.13132095336914062, -0.0015087127685546875, -0.0025844573974609375, -0.015340805053710938, -0.000217437744140625, -0.000209808349609375, -1.71661376953125e-05, -7.43865966796875e-05, -0.0009632110595703125, -3.814697265625e-06, -0.003978729248046875, -9.5367431640625e-06, -0.0012035369873046875, -1.52587890625e-05, -1.919269561767578e-05, -5.7220458984375e-06, -0.0040283203125, -2.0265579223632812e-06], "score": -0.4191596477263957, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.0136185884475708, 0.0, 0.0, -3.0620031356811523], "score": -3.3196597068542033, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.0136185884475708, 0.0, 0.0, -3.045085906982422, -1.9073486328125e-06, -0.07880187034606934, -1.1324880688334815e-05], "score": -3.3815575807308633, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -0.2530021667480469, -0.021035194396972656, -0.0001544952392578125, -0.001644134521484375, -0.000759124755859375, -1.33514404296875e-05, -0.0023461580276489258, -7.62939453125e-06, -0.00306606269441545, -8.463848644169047e-06, -2.86102294921875e-05, -0.17202377319335938, -2.86102294921875e-05, -0.33392333984375, -0.0020313262939453125, -0.0003147125244140625, -2.09808349609375e-05, -2.288818359375e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.014644622802734375, -5.7220458984375e-06, -0.011742591857910156, 0.0, -0.0003529787063598633, -1.9073486328125e-06, -0.00014531610941048712, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -0.0001239776611328125, -0.0003930330276489258, -3.576278118089249e-07, -0.0013141632080078125, -4.9591064453125e-05, -0.0003643035888671875, -0.000362396240234375, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.6597251892089844e-05, -1.9073486328125e-06, -1.740455445542466e-05, 0.0, -0.01103222370147705, 0.0, 0.0, -0.7366771697998047, -0.002704620361328125, -0.0026063919067382812, -0.018949508666992188, -0.0002079010009765625, -0.0002765655517578125, -2.47955322265625e-05, -4.9591064453125e-05, -0.0016307830810546875, -3.814697265625e-06, -0.00321197509765625, -9.5367431640625e-06, -0.0022039413452148438, -1.71661376953125e-05, -1.537799835205078e-05, -5.7220458984375e-06, -0.004502296447753906, -2.0265579223632812e-06], "score": -3.3940784909674235, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 69, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template34"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -0.2530021667480469, -0.021035194396972656, -0.0001544952392578125, -0.001644134521484375, -0.000759124755859375, -1.33514404296875e-05, -0.0023461580276489258, -7.62939453125e-06, -0.00306606269441545, -8.463848644169047e-06, -2.86102294921875e-05, -0.17202377319335938, -2.86102294921875e-05, -0.33392333984375, -0.0020313262939453125, -0.0003147125244140625, -2.09808349609375e-05, -2.288818359375e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.014644622802734375, -5.7220458984375e-06, -0.011742591857910156, 0.0, -0.0003529787063598633, -1.9073486328125e-06, -0.00014531610941048712, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -0.0001239776611328125, -0.0003930330276489258, -3.576278118089249e-07, -0.0013141632080078125, -4.9591064453125e-05, -0.0003643035888671875, -0.000362396240234375, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.6597251892089844e-05, -1.9073486328125e-06, -1.740455445542466e-05, 0.0, -0.01103222370147705, 0.0, 0.0, -1.3719673156738281], "score": -3.9929466226049968, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 69, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template34"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -3.611868381500244, 0.0, -3.24249267578125e-05, -0.31209468841552734, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -2.47955322265625e-05, -0.0010986328125, -8.20159912109375e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.000156402587890625, -1.9073486328125e-06, -0.0001468658447265625, -1.1920928244535389e-07, -0.002722501754760742, -1.1920928244535389e-07, -3.468989962129854e-05, 0.0, -6.246445991564542e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00018358230590820312, -3.4570680327306036e-06, -0.005572319030761719, -2.09808349609375e-05, -0.0011882781982421875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.013698697090148926, 0.0, 0.0, -0.13077926635742188, -0.0015048980712890625, -0.0025854110717773438, -0.015344619750976562, -0.000217437744140625, -0.0002117156982421875, -1.71661376953125e-05, -7.43865966796875e-05, -0.0009613037109375, -3.814697265625e-06, -0.00397491455078125, -9.5367431640625e-06, -0.0012025833129882812, -1.52587890625e-05, -1.919269561767578e-05, -5.7220458984375e-06, -0.004025459289550781, -2.0265579223632812e-06], "score": -4.114346264550171, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "DRUID", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -0.2530021667480469, -0.021035194396972656, -0.0001544952392578125, -0.001644134521484375, -0.000759124755859375, -1.33514404296875e-05, -0.0023461580276489258, -7.62939453125e-06, -0.00306606269441545, -8.463848644169047e-06, -2.86102294921875e-05, -0.17202377319335938, -2.86102294921875e-05, -0.33392333984375, -0.0020313262939453125, -0.0003147125244140625, -2.09808349609375e-05, -2.288818359375e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.014644622802734375, -5.7220458984375e-06, -0.011742591857910156, 0.0, -0.0003529787063598633, -1.9073486328125e-06, -0.00014531610941048712, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -0.0001239776611328125, -0.0003930330276489258, -3.576278118089249e-07, -0.0013141632080078125, -4.9591064453125e-05, -0.0003643035888671875, -0.000362396240234375, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.6597251892089844e-05, -1.9073486328125e-06, -1.740455445542466e-05, 0.0, -0.01103222370147705, 0.0, 0.0, -1.5223064422607422, -1.9073486328125e-06, -0.04190564155578613, -1.39474832394626e-05], "score": -4.185207245579569, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 69, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template34"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -1.5035514831542969, -5.91278076171875e-05, -0.0009860992431640625, -1.9073486328125e-06, -0.006537318229675293, -1.9073486328125e-06, -0.001340031623840332, 0.0, -5.7220458984375e-06, -0.16947269439697266, -5.14984130859375e-05, -0.0035085678100585938, -9.72747802734375e-05, -1.71661376953125e-05, -0.0001811981201171875, -0.0012722015380859375, 0.0, -0.0008001327514648438, -1.9073486328125e-06, -0.10354340076446533, -2.503394853192731e-06, -0.000576019287109375, -9.34600830078125e-05, -9.72747802734375e-05, -4.00543212890625e-05, -0.00043487548828125, -9.5367431640625e-06, -0.0010766983032226562, -1.9073486328125e-05, -0.0022411346435546875, 0.0, -0.0002574920654296875, -5.7220458984375e-06, -6.771087646484375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -9.34600830078125e-05, -0.00019466876983642578, -3.576278118089249e-07, -0.0016765594482421875, -0.000102996826171875, -0.000209808349609375, -0.0004119873046875, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.4689903259277344e-05, -1.9073486328125e-06, -1.7285345165873878e-05, 0.0, -0.010761380195617676, 0.0, 0.0, -0.7595481872558594, -0.002628326416015625, -0.0026035308837890625, -0.019385337829589844, -0.0001964569091796875, -0.0002727508544921875, -2.47955322265625e-05, -4.9591064453125e-05, -0.001628875732421875, -3.814697265625e-06, -0.0032215118408203125, -9.5367431640625e-06, -0.0022449493408203125, -1.71661376953125e-05, -1.537799835205078e-05, -5.7220458984375e-06, -0.004445195198059082, -2.0265579223632812e-06], "score": -4.396048067107451, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -1.5035514831542969, -5.91278076171875e-05, -0.0009860992431640625, -1.9073486328125e-06, -0.006537318229675293, -1.9073486328125e-06, -0.001340031623840332, 0.0, -5.7220458984375e-06, -0.16947269439697266, -5.14984130859375e-05, -0.0035085678100585938, -9.72747802734375e-05, -1.71661376953125e-05, -0.0001811981201171875, -0.0012722015380859375, 0.0, -0.0008001327514648438, -1.9073486328125e-06, -0.10354340076446533, -2.503394853192731e-06, -0.000576019287109375, -9.34600830078125e-05, -9.72747802734375e-05, -4.00543212890625e-05, -0.00043487548828125, -9.5367431640625e-06, -0.0010766983032226562, -1.9073486328125e-05, -0.0022411346435546875, 0.0, -0.0002574920654296875, -5.7220458984375e-06, -6.771087646484375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -9.34600830078125e-05, -0.00019466876983642578, -3.576278118089249e-07, -0.0016765594482421875, -0.000102996826171875, -0.000209808349609375, -0.0004119873046875, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.4689903259277344e-05, -1.9073486328125e-06, -1.7285345165873878e-05, 0.0, -0.010761380195617676, 0.0, 0.0, -1.3450431823730469], "score": -4.944788096442473, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -1.5035514831542969, -5.91278076171875e-05, -0.0009860992431640625, -1.9073486328125e-06, -0.006537318229675293, -1.9073486328125e-06, -0.001340031623840332, 0.0, -5.7220458984375e-06, -0.16947269439697266, -5.14984130859375e-05, -0.0035085678100585938, -9.72747802734375e-05, -1.71661376953125e-05, -0.0001811981201171875, -0.0012722015380859375, 0.0, -0.0008001327514648438, -1.9073486328125e-06, -0.10354340076446533, -2.503394853192731e-06, -0.000576019287109375, -9.34600830078125e-05, -9.72747802734375e-05, -4.00543212890625e-05, -0.00043487548828125, -9.5367431640625e-06, -0.0010766983032226562, -1.9073486328125e-05, -0.0022411346435546875, 0.0, -0.0002574920654296875, -5.7220458984375e-06, -6.771087646484375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -9.34600830078125e-05, -0.00019466876983642578, -3.576278118089249e-07, -0.0016765594482421875, -0.000102996826171875, -0.000209808349609375, -0.0004119873046875, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.4689903259277344e-05, -1.9073486328125e-06, -1.7285345165873878e-05, 0.0, -0.010761380195617676, 0.0, 0.0, -1.5054454803466797, -1.9073486328125e-06, -0.04285728931427002, -1.39474832394626e-05], "score": -5.148063538562248, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"func": {"attr": "calculate_max_health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "left": {"attr": "health", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "ops": [{"_type": "NotEq"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "<UNK>", "_type": "Name"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.0136185884475708, 0.0, 0.0, -5.604520320892334], "score": -5.862176892065385, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -0.2530021667480469, -0.021035194396972656, -0.0001544952392578125, -0.001644134521484375, -0.000759124755859375, -1.33514404296875e-05, -0.0023461580276489258, -7.62939453125e-06, -0.00306606269441545, -8.463848644169047e-06, -2.86102294921875e-05, -0.17202377319335938, -2.86102294921875e-05, -2.847659111022949, -0.000827789306640625, -0.0008554458618164062, -2.288818359375e-05, -0.000408172607421875, -4.38690185546875e-05, -1.9073486328125e-06, -0.0022640228271484375, -1.9073486328125e-05, -0.006496429443359375, 0.0, -0.0002536773681640625, -3.814697265625e-06, -0.00011992453801212832, 0.0, -1.9073486328125e-05, -2.47955322265625e-05, -0.0001201629638671875, -0.0004063844680786133, -3.576278118089249e-07, -0.0012912750244140625, -4.57763671875e-05, -0.0003604888916015625, -0.0003528594970703125, -3.24249267578125e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -3.4689903259277344e-05, -1.9073486328125e-06, -1.740455445542466e-05, 0.0, -0.010871052742004395, 0.0, 0.0, -0.7454833984375, -0.0026597976684570312, -0.002597808837890625, -0.019086837768554688, -0.0002079010009765625, -0.0002765655517578125, -2.47955322265625e-05, -4.9591064453125e-05, -0.0016307830810546875, -3.814697265625e-06, -0.0032100677490234375, -9.5367431640625e-06, -0.0022020339965820312, -1.71661376953125e-05, -1.537799835205078e-05, -5.7220458984375e-06, -0.0045108795166015625, -2.0265579223632812e-06], "score": -5.898496148826872, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 70, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 3 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"_type": "Template35"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.0136185884475708, 0.0, 0.0, -5.7807087898254395], "score": -6.03836536099849, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 69], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -4.976217269897461, 0.0, 0.0, -1.0668983459472656], "score": -6.287153598570207, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 69], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -1.7231025695800781, -4.76837158203125e-05, -9.5367431640625e-06, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, -0.00038909912109375, -6.29425048828125e-05, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -0.000179290771484375, -1.1920928244535389e-07, -0.0024927854537963867, -1.1920928244535389e-07, -0.0001506805419921875, -0.0001049041748046875, -0.010809898376464844, 0.0, -0.007237434387207031, -0.0002765655517578125, -0.001186370849609375, -2.47955322265625e-05, -0.0005779266357421875, 0.0, -0.005051612854003906, -9.72747802734375e-05, -0.0013484954833984375, -0.000133514404296875, -0.0030040740966796875, -7.62939453125e-06, -0.2530021667480469, -0.021035194396972656, -0.0001544952392578125, -0.001644134521484375, -0.000759124755859375, -1.33514404296875e-05, -0.0023461580276489258, -7.62939453125e-06, -0.00306606269441545, -8.463848644169047e-06, -2.86102294921875e-05, -0.17202377319335938, -2.86102294921875e-05, -2.5285043716430664, -0.000133514404296875, -0.7160561084747314, -5.006789251638111e-06, -0.023164749145507812, -0.000453948974609375, -8.20159912109375e-05, -4.9591064453125e-05, -0.000606536865234375, -5.7220458984375e-06, -0.0012769699096679688, -5.7220458984375e-06, -0.002307891845703125, -1.1920928244535389e-07, -0.00021564960479736328, -3.814697265625e-06, -6.878376007080078e-05, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -0.0001201629638671875, -0.0002537965774536133, -1.1920928244535389e-07, -0.0014123916625976562, -0.0001049041748046875, -0.0002307891845703125, -0.0004425048828125, -3.4332275390625e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -4.0411949157714844e-05, -1.9073486328125e-06, -1.740455445542466e-05, 0.0, -0.011086583137512207, 0.0, 0.0, -0.7336788177490234, -0.0027151107788085938, -0.0026216506958007812, -0.019072532653808594, -0.0001983642578125, -0.000274658203125, -2.47955322265625e-05, -4.9591064453125e-05, -0.001636505126953125, -3.814697265625e-06, -0.0032024383544921875, -9.5367431640625e-06, -0.00223541259765625, -1.71661376953125e-05, -1.537799835205078e-05, -5.7220458984375e-06, -0.004430890083312988, -2.0265579223632812e-06], "score": -6.30085611129666, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 20, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_attack", "<EOS>", 202, 10, 205, 55, 138, "0", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() >= 0 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "Humility", "hole2": [{"value": {"args": [{"s": "Humility", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}, {"arg": "filter_func", "value": {"body": {"op": {"_type": "And"}, "values": [{"comparators": [{"n": 0, "_type": "Num"}], "left": {"func": {"attr": "calculate_attack", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}, {"func": {"attr": "spell_targetable", "value": {"id": "target", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}], "_type": "BoolOp"}, "args": {"hole0": "target", "_type": "Template13"}, "_type": "Lambda"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 54}
{"beams": [{"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -0.9141321182250977], "score": -1.2440785387840378, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 69], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -0.8129215240478516, -0.001895904541015625, -0.00189971923828125, -0.017271041870117188, -0.0003204345703125, -0.000980377197265625, -2.09808349609375e-05, -9.34600830078125e-05, -0.000675201416015625, -3.814697265625e-06, -0.09415245056152344, -9.5367431640625e-06, -0.00247955322265625, -1.9073486328125e-06, -2.491474151611328e-05, -5.7220458984375e-06, -0.006509900093078613, -2.3841855067985307e-07], "score": -1.2692131022300543, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -2.1410884857177734, 0.0, 0.0, -0.0326385498046875], "score": -2.223313234218608, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 69], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -2.325436592102051], "score": -2.655383012660991, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template33"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -2.5417566299438477, 0.0, -1.9073486328125e-06, -0.06897258758544922], "score": -2.660317323574077, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 69], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template34"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -0.8129215240478516, -0.001895904541015625, -0.00189971923828125, -0.017271041870117188, -0.0003204345703125, -0.000980377197265625, -2.09808349609375e-05, -9.34600830078125e-05, -0.000675201416015625, -3.814697265625e-06, -2.4198436737060547, -1.9073486328125e-06, -0.0005340576171875, -2.288818359375e-05, -0.010964393615722656, -9.5367431640625e-06, -0.00022399425506591797, -9.5367431640625e-06, -0.09419333934783936, -4.291534423828125e-06, -0.2681013345718384, -3.3378591979271732e-06], "score": -3.959941170580919, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack.\n            calculate_attack())\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -4.082618713378906], "score": -4.412565133937846, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"_type": "Template37"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -4.4417924880981445, -1.9073486328125e-06, -3.814697265625e-06, -0.3334054946899414, 0.0, -0.27749204635620117, -1.9073486328125e-06], "score": -5.102283857234966, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"id": "self", "_type": "Name"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -2.5417566299438477, 0.0, -1.9073486328125e-06, -2.937993049621582, -0.0032367706298828125, -0.0033626556396484375, -0.031104087829589844, -0.0002422332763671875, -0.0005092620849609375, -9.5367431640625e-06, -0.000179290771484375, -0.000156402587890625, -3.814697265625e-06, -0.11374473571777344, -9.5367431640625e-06, -0.003726959228515625, -1.9073486328125e-06, -2.682209014892578e-05, -3.814697265625e-06, -0.005542397499084473, -3.576278118089249e-07], "score": -5.69119837082286, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "increase_health", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -4.4417924880981445, -1.9073486328125e-06, -3.814697265625e-06, -1.3411998748779297, -0.0004482269287109375, -6.580346962437034e-05, -1.1444091796875e-05], "score": -5.833109758208252, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 54, 135, "Null", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(Null)\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"value": "Null", "_type": "NameConstant"}], "hole1": "die", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -4.8031768798828125, 0.0, -3.814697265625e-06, -0.0035953521728515625, -0.3909130096435547, -0.0003719329833984375, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -0.690414309501648, -3.8146954466355965e-06], "score": -5.938389680749985, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "1", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(1()))\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "1", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -2.1410884857177734, 0.0, 0.0, -3.7146682739257812, -0.0059661865234375, -0.002223968505859375, -0.042224884033203125, -0.0002613067626953125, -0.000141143798828125, -7.62939453125e-06, -0.0001583099365234375, -0.0006313323974609375, -3.814697265625e-06, -0.0708160400390625, -9.5367431640625e-06, -0.0036020278930664062, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.004235625267028809, -3.576278118089249e-07], "score": -6.035663388141586, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "set_health_to", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -0.8129215240478516, -0.001895904541015625, -0.00189971923828125, -0.017271041870117188, -0.0003204345703125, -0.000980377197265625, -2.09808349609375e-05, -9.34600830078125e-05, -0.000675201416015625, -3.814697265625e-06, -2.4198436737060547, -1.9073486328125e-06, -0.0005340576171875, -2.288818359375e-05, -0.010964393615722656, -9.5367431640625e-06, -0.00022399425506591797, -9.5367431640625e-06, -0.09419333934783936, -4.291534423828125e-06, -2.4203743934631348, 0.0], "score": -6.112210891613017, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", "use", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack.use())\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"op": {"_type": "Sub"}, "left": {"_type": "Template34"}, "right": {"func": {"attr": "use", "value": {"attr": "calculate_attack", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "BinOp"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -4.017728328704834, -0.014760971069335938, -1.746353268623352, -0.1509319543838501, -4.38690185546875e-05, -0.004878044128417969], "score": -6.264642856487285, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 62, 169, "self", "<EOS>", 205, 71], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self())\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "self", "hole2": [{"_type": "Template36_expr_seq"}], "_type": "Template24_expr_seq"}], "hole1": "change_attack", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -4.8031768798828125, 0.0, -3.814697265625e-06, -0.0035953521728515625, -0.3909130096435547, -0.0003719329833984375, -1.1920928244535389e-07, -0.0003223419189453125, -1.9073486328125e-06, -1.0315608978271484, -5.364416665543104e-06], "score": -6.279537818796705, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "model_output": {"hole0": "<UNK>Mark", "hole2": [{"value": {"args": [{"s": "<UNK> Mark", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"hole0": "Buff", "hole1": {"id": "Frozen", "_type": "Name"}, "_type": "Template19"}], "hole1": "add_buff", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 55}
{"beams": [{"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007266998291015625, -1.9073486328125e-05, 0.0, -0.00128173828125, -0.002277374267578125, -5.340576171875e-05, -0.00020241737365722656, 0.0, -6.866455078125e-05, 0.0, -8.106103632599115e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00043487548828125, 0.0, -0.0029287338256835938, -5.7220458984375e-06, -0.0008927583112381399, -0.00036013126373291016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, 0.0, -0.000148773193359375, -8.0108642578125e-05, -4.38690185546875e-05, -1.9073468138230965e-06, -1.4662635294371285e-05, -2.7418205718277022e-05, -3.4570680327306036e-06], "score": -0.2898599653522069, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -1.5026224851608276, -1.1920928244535389e-07, -1.71661376953125e-05, -0.0002002716064453125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005970001220703125, -1.52587890625e-05, 0.0, -0.00104522705078125, -0.00200653076171875, -5.14984130859375e-05, -0.00034165382385253906, 0.0, -7.43865966796875e-05, 0.0, -8.129971683956683e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0003910064697265625, 0.0, -0.0030164718627929688, -5.7220458984375e-06, -0.0008983612060546875, -0.00035822391510009766, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.574920654296875e-05, 0.0, -0.0001468658447265625, -8.7738037109375e-05, -4.38690185546875e-05, -2.0265558760002023e-06, -1.2397689715726301e-05, -2.741820389928762e-05, -3.4570680327306036e-06], "score": -1.537153020758744, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -4.119150161743164, -0.0001544952392578125, -2.288818359375e-05, -0.0002166032063541934, -6.6756979322235566e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.9206275939941406e-05, -7.62939453125e-06, -1.52587890625e-05, -0.001529693603515625, -0.0001773834228515625, -0.00012743139814119786, -9.202551154885441e-05, -0.23814621567726135, -2.2649765014648438e-06, -1.71661376953125e-05, -0.00054168701171875, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007190704345703125, -1.9073486328125e-05, 0.0, -0.001293182373046875, -0.002391815185546875, -5.340576171875e-05, -0.00020623207092285156, 0.0, -6.866455078125e-05, 0.0, -8.213386900024489e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00042724609375, 0.0, -0.0032033920288085938, -5.7220458984375e-06, -0.0009158849134109914, -0.00034880638122558594, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.396106719970703e-05, 0.0, -0.00014495849609375, -8.0108642578125e-05, -4.57763671875e-05, -1.9073468138230965e-06, -1.5020257706055418e-05, -2.7179790777154267e-05, -3.4570680327306036e-06], "score": -4.373323728423202, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -4.119150161743164, -0.0001544952392578125, -2.288818359375e-05, -0.0002166032063541934, -6.6756979322235566e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.9206275939941406e-05, -7.62939453125e-06, -1.52587890625e-05, -0.001529693603515625, -0.0001773834228515625, -0.00012743139814119786, -9.202551154885441e-05, -1.5604045391082764, -1.1920928244535389e-07, -1.52587890625e-05, -0.000225067138671875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0005741119384765625, -1.52587890625e-05, 0.0, -0.0010547637939453125, -0.00205230712890625, -5.340576171875e-05, -0.00033402442932128906, 0.0, -7.05718994140625e-05, 0.0, -8.904804417397827e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0003814697265625, 0.0, -0.0032529830932617188, -5.7220458984375e-06, -0.0009138583554886281, -0.00034880638122558594, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, 0.0, -0.0001430511474609375, -8.58306884765625e-05, -4.57763671875e-05, -1.9073468138230965e-06, -1.2755313036905136e-05, -2.7179788958164863e-05, -3.4570680327306036e-06], "score": -5.69468595569105, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007266998291015625, -1.9073486328125e-05, 0.0, -0.00128173828125, -0.002277374267578125, -5.340576171875e-05, -0.00020241737365722656, 0.0, -6.866455078125e-05, 0.0, -8.106103632599115e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00043487548828125, 0.0, -6.0421905517578125, -0.0005512237548828125, -0.046385884284973145, -0.0012353657511994243, -7.62939453125e-06, -0.01983078569173813, -8.225241617765278e-05, -6.020068030920811e-05, -1.9073486328125e-06, -1.3947486877441406e-05, 0.0, -4.57763671875e-05, -0.0003414154052734375, -1.9073486328125e-05, -8.344646857949556e-07, -9.059865078597795e-06, -1.6689444237272255e-05, -5.364412118069595e-06], "score": -6.396116887996982, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 32, 163, "Random", "Picker", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(2))))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "hole1": 2, "_type": "Template21"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -6.324424743652344, -0.000804901123046875, -0.0001811981201171875, -0.08422660827636719, -0.0003452301025390625, -9.72747802734375e-05, -0.0011819599894806743, -1.1920922133867862e-06, -1.9073486328125e-06, 0.0, -0.0014843940734863281, -4.410734163684538e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9311904907226562e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.0009517669677734375, -0.000110626220703125, -9.09547452465631e-05, -0.00013886943634133786, -0.24658367037773132, -2.2649765014648438e-06, -2.09808349609375e-05, -0.000530242919921875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007038116455078125, -1.9073486328125e-05, 0.0, -0.0012454986572265625, -0.002254486083984375, -5.340576171875e-05, -0.00020623207092285156, 0.0, -6.866455078125e-05, 0.0, -8.082263229880482e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00043487548828125, 0.0, -0.0029172897338867188, -5.7220458984375e-06, -0.0008908509626053274, -0.00036013126373291016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, 0.0, -0.000148773193359375, -8.0108642578125e-05, -4.38690185546875e-05, -1.9073468138230965e-06, -1.490105023549404e-05, -2.7418205718277022e-05, -3.4570680327306036e-06], "score": -6.671514497052385, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 68, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -6.650035381317139, -4.053113570989808e-06, -0.0001010894775390625, -0.000255584716796875, -1.1444091796875e-05, -1.9073486328125e-06, -0.000370025634765625, -7.62939453125e-06, 0.0, -0.001194000244140625, -0.001739501953125, -4.76837158203125e-05, -0.00025200843811035156, 0.0, -8.58306884765625e-05, 0.0, -7.116719643818215e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0003871917724609375, 0.0, -0.002422332763671875, -5.7220458984375e-06, -0.0009481906308792531, -0.00036025047302246094, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.562999725341797e-05, 0.0, -0.0001544952392578125, -7.43865966796875e-05, -4.38690185546875e-05, -2.264974000354414e-06, -8.22540732769994e-06, -2.7656618840410374e-05, -3.218649908376392e-06], "score": -6.683708206324582, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "Deal", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(0), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 0, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -7.316493034362793, -7.987019671418238e-06, -1.52587890625e-05, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -4.839897155761719e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0001220703125, -0.00011729880498023704, -0.00012480457371566445, -0.1865207552909851, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005435943603515625, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007228851318359375, -1.9073486328125e-05, 0.0, -0.001285552978515625, -0.00238037109375, -5.340576171875e-05, -0.00021386146545410156, 0.0, -6.866455078125e-05, 0.0, -8.022661495488137e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00042724609375, 0.0, -0.002964019775390625, -5.7220458984375e-06, -0.0008908509626053274, -0.00036013126373291016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, 0.0, -0.0001506805419921875, -8.0108642578125e-05, -4.38690185546875e-05, -1.9073468138230965e-06, -1.4543427823809907e-05, -2.75374131888384e-05, -3.4570680327306036e-06], "score": -7.537062125050852, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "combo", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, combo=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "combo", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -1.5026224851608276, -1.1920928244535389e-07, -1.71661376953125e-05, -0.0002002716064453125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005970001220703125, -1.52587890625e-05, 0.0, -0.00104522705078125, -0.00200653076171875, -5.14984130859375e-05, -0.00034165382385253906, 0.0, -7.43865966796875e-05, 0.0, -8.129971683956683e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0003910064697265625, 0.0, -6.013588905334473, -0.0005626678466796875, -0.048278093338012695, -0.001264452817849815, -9.5367431640625e-06, -0.018874919041991234, -0.00011920518591068685, -5.710123514290899e-05, -1.9073486328125e-06, -1.3947486877441406e-05, 0.0, -4.38690185546875e-05, -0.0003452301025390625, -1.9073486328125e-05, -8.344646857949556e-07, -8.22540732769994e-06, -1.6689444237272255e-05, -5.125993993715383e-06], "score": -7.615724848448387, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 32, 163, "Random", "Picker", "<EOS>", "2", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker(2))))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "hole1": 2, "_type": "Template21"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007266998291015625, -1.9073486328125e-05, 0.0, -7.334524154663086, -1.33514404296875e-05, -7.62939453125e-06, -0.0001474618911743164, -1.1920928244535389e-07, -5.53131103515625e-05, -1.9073486328125e-06, -0.00024162227055057883, -2.288818359375e-05, 0.0, -3.24249267578125e-05, 0.0, -7.748603820800781e-06, 0.0, -0.000133514404296875, -7.82012939453125e-05, -5.53131103515625e-05, -6.9141146923357155e-06, -4.6491513785440475e-06, -3.170965283061378e-05, -2.741813204920618e-06], "score": -7.616271795019195, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -7.344101905822754, -0.0028668642044067383, 0.0, -0.06396484375, -0.0013217926025390625, -3.0517578125e-05, -0.00025212764739990234, 0.0, -8.20159912109375e-05, 0.0, -6.806779856560752e-05, -1.33514404296875e-05, 0.0, 0.0, 0.0, -0.00042724609375, 0.0, -0.002735137939453125, -5.7220458984375e-06, -0.0008848905563354492, -0.00035452842712402344, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, 0.0, -0.00014495849609375, -8.0108642578125e-05, -4.57763671875e-05, -2.145764938177308e-06, -1.156323378381785e-05, -2.7537411369848996e-05, -3.3378591979271732e-06], "score": -7.697616294604359, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Hero", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), HeroSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "HeroSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -6.324424743652344, -0.000804901123046875, -0.0001811981201171875, -0.08422660827636719, -0.0003452301025390625, -9.72747802734375e-05, -0.0011819599894806743, -1.1920922133867862e-06, -1.9073486328125e-06, 0.0, -0.0014843940734863281, -4.410734163684538e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9311904907226562e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.0009517669677734375, -0.000110626220703125, -9.09547452465631e-05, -0.00013886943634133786, -1.5307821035385132, -1.1920928244535389e-07, -1.71661376953125e-05, -0.0001926422119140625, -1.52587890625e-05, -1.9073486328125e-06, -0.000583648681640625, -1.52587890625e-05, 0.0, -0.0010318756103515625, -0.001987457275390625, -5.14984130859375e-05, -0.00034356117248535156, 0.0, -7.43865966796875e-05, 0.0, -8.082290878519416e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0003910064697265625, 0.0, -0.0030069351196289062, -5.7220458984375e-06, -0.000896453857421875, -0.00035822391510009766, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.574920654296875e-05, 0.0, -0.0001468658447265625, -8.7738037109375e-05, -4.38690185546875e-05, -2.0265558760002023e-06, -1.2636104656849056e-05, -2.75374131888384e-05, -3.4570680327306036e-06], "score": -7.954972402470041, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 68, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "2", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 2, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007266998291015625, -1.9073486328125e-05, 0.0, -0.00128173828125, -0.002277374267578125, -5.340576171875e-05, -0.00020241737365722656, 0.0, -6.866455078125e-05, 0.0, -8.106103632599115e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00043487548828125, 0.0, -0.0029287338256835938, -5.7220458984375e-06, -7.724883079528809, -0.0002574920654296875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, 0.0, -0.00135040283203125, -0.00011444091796875, -6.4849853515625e-05, -1.1324817933200393e-05, -9.536738616588991e-07, -3.170989657519385e-05, -2.861022494471399e-06], "score": -8.014993503858022, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -8.01598834991455, -6.866455078125e-05, -0.008527073077857494, -4.410734163684538e-06, -1.71661376953125e-05, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, -2.813339051499497e-05, -7.62939453125e-06, -2.09808349609375e-05, -0.0017185211181640625, -0.00011444091796875, -0.00012123314081691206, -9.989258251152933e-05, -0.21757549047470093, -2.2649765014648438e-06, -1.52587890625e-05, -0.0005664825439453125, -1.9073486328125e-06, -1.9073486328125e-06, -0.000713348388671875, -1.9073486328125e-05, 0.0, -0.001300811767578125, -0.00229644775390625, -5.340576171875e-05, -0.00020432472229003906, 0.0, -6.866455078125e-05, 0.0, -8.022652036743239e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.000431060791015625, 0.0, -0.0031385421752929688, -5.7220458984375e-06, -0.0009120702161453664, -0.00035071372985839844, -1.9073486328125e-06, 0.0, 0.0, -0.031406402587890625, 0.0, -0.0011720657348632812, -7.62939453125e-06, -0.0020897374488413334, -0.0005339384078979492, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -1.7046926586772315e-05, 0.0, -0.000179290771484375, -8.58306884765625e-05, -4.00543212890625e-05, -2.145764938177308e-06, -1.7642851162236184e-05, -2.8252661650185473e-05, -3.218649908376392e-06], "score": -8.311275950201889, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())),\n            picker=UserPicker())\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007266998291015625, -1.9073486328125e-05, 0.0, -8.040719032287598, -0.0007114410400390625, -1.33514404296875e-05, -5.352497100830078e-05, 0.0, -5.91278076171875e-05, 0.0, -0.0001550832821521908, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -0.003429412841796875, 0.0, -0.0041046142578125, -9.5367431640625e-06, -0.0016112325247377157, -0.00033545494079589844, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.10297977924346924, 0.0, -0.00197601318359375, -1.52587890625e-05, -0.0024839628022164106, -0.00043892860412597656, 0.0, -1.1563301086425781e-05, 0.0, -3.0279157726909034e-05, 0.0, -0.000164031982421875, -8.392333984375e-05, -4.76837158203125e-05, -2.264974000354414e-06, -1.573553163325414e-05, -3.3259435440413654e-05, -3.099440846199286e-06], "score": -8.440422243652847, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 214, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "IronforgeRifleman", "hole2": [{"value": {"args": [{"s": "Ironforge Rifleman", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "<UNK>", "_type": "Template22"}, {"arg": "battlecry", "value": {"args": [{"hole0": "Damage", "hole1": 1, "_type": "Template21"}, {"func": {"id": "CharacterSelector", "_type": "Name"}, "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template25"}, "_type": "keyword"}], "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}], "index": 56}
{"beams": [{"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -0.02377450466156006, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.0002599954605102539, -3.814697265625e-06], "score": -0.07035622265152597, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -3.797988176345825, 0.0, -0.0010700225830078125, -3.814697265625e-06, -0.0006455183029174805, -2.0265579223632812e-06], "score": -3.845869156382605, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, charge=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -3.8077187538146973, -3.814697265625e-06, -6.67572021484375e-05, -0.0019702911376953125, -2.86102294921875e-05, -2.3841830625315197e-06, -7.152555099310121e-07, -9.333615162177011e-05, 0.0, -0.019634604454040527, 0.0, -0.0001697540283203125, -1.9073486328125e-06, -0.0001876354217529297, -3.814697265625e-06], "score": -3.849660729732477, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -4.198885917663574, -7.62939453125e-06, 0.0, -4.0649541915627196e-05, -6.89029402565211e-05, -2.3841855067985307e-07, -2.872943878173828e-05, -0.0008335113525390625, -0.000705718994140625, -0.002048492431640625, -0.0003948211669921875, -1.33514404296875e-05, -0.0038110017776489258, -1.1920922133867862e-06, -0.002384185791015625, -4.00543212890625e-05, -4.38690185546875e-05, -0.0003831386275123805, -3.62396240234375e-05, -0.0002161264419555664, -1.9073486328125e-06, -0.40057694911956787, -1.9073486328125e-06, -0.0004100799560546875, -0.0029926300048828125, -3.24249267578125e-05, -4.291525328881107e-06, -1.5497195136049413e-06, -0.0001565088314237073, 0.0, -0.008988261222839355, 0.0, -0.0002727508544921875, -1.9073486328125e-06, -0.00022554397583007812, -3.814697265625e-06], "score": -4.626577820621236, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -4.198885917663574, -7.62939453125e-06, 0.0, -4.0649541915627196e-05, -6.89029402565211e-05, -2.3841855067985307e-07, -2.872943878173828e-05, -0.0008335113525390625, -0.000705718994140625, -0.002048492431640625, -0.0003948211669921875, -1.33514404296875e-05, -0.0038110017776489258, -1.1920922133867862e-06, -0.002384185791015625, -4.00543212890625e-05, -4.38690185546875e-05, -0.0003831386275123805, -3.62396240234375e-05, -0.0002161264419555664, -1.9073486328125e-06, -1.113390326499939, 0.0, -0.0001163482666015625, -0.0033111572265625, -4.38690185546875e-05, -4.0531076592742465e-06, -2.145764938177308e-06, -0.00015984600759111345, 0.0, -0.011401534080505371, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.00028073787689208984, -1.9073486328125e-06], "score": -5.3419148579773434, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -5.969854354858398, -0.0003490447998046875, -0.0015146499499678612, -9.655935173213948e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.2543553970754147e-05, -1.1920928244535389e-07, -0.026071548461914062, -2.6702880859375e-05, -1.9073486328125e-06, -0.35362398624420166, -0.0001621246337890625, -0.00074005126953125, -7.62939453125e-06, -0.0006412267684936523, -3.218649908376392e-06, -0.00046539306640625, -1.9073486328125e-06, -0.04294025897979736, 0.0, -0.00026702880859375, -9.5367431640625e-06, -0.0003533362760208547, -9.179100743494928e-06], "score": -6.43996150705491, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, charge=True, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 3, "hole1": 3, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -6.527439594268799, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -0.02377450466156006, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.0002599954605102539, -3.814697265625e-06], "score": -6.596330259427987, "choice_history": [77, 145, "<UNK>", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Grizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "<UNK>Grizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -5.969854354858398, -0.0003490447998046875, -0.0015146499499678612, -9.655935173213948e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -3.2543553970754147e-05, -1.1920928244535389e-07, -0.026071548461914062, -2.6702880859375e-05, -1.9073486328125e-06, -1.2480636835098267, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.0004106760025024414, -5.841253368998878e-06, -0.0005397796630859375, -1.9073486328125e-06, -0.036589860916137695, 0.0, -0.000232696533203125, -1.1444091796875e-05, -0.00035405156086198986, -8.463848644169047e-06], "score": -7.327117159132946, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "3", "<EOS>", "3", "<EOS>", 213, 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 3, "hole1": 3, "hole3": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -7.503821849822998, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -0.02377450466156006, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.0002599954605102539, -3.814697265625e-06], "score": -7.573624378386512, "choice_history": [77, 145, "Ironfur", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Ironfur<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "Ironfur<UNK>", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -3.8077187538146973, -3.814697265625e-06, -6.67572021484375e-05, -0.0019702911376953125, -2.86102294921875e-05, -2.3841830625315197e-06, -7.152555099310121e-07, -9.333615162177011e-05, 0.0, -3.994727373123169, 0.0, -0.0014591217041015625, -3.814697265625e-06, -0.0005445480346679688, -2.0265579223632812e-06], "score": -7.8263998978995915, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 3, charge=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "p", "hole6": [{"hole0": 3, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -8.119698524475098, 0.0, -4.9591064453125e-05, -0.0015850067138671875, -3.0517578125e-05, -2.622600959512056e-06, -1.1920922133867862e-06, -8.749561675358564e-05, 0.0, -0.011345386505126953, 0.0, -0.0001983642578125, -3.814697265625e-06, -0.0001971721649169922, -5.7220458984375e-06], "score": -8.152983760923462, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "create_minion", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, create_minion):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "create_minion", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -8.427355766296387, 0.0, -7.62939453125e-06, -0.0037380452267825603, -3.099436753473128e-06, -0.0001087188720703125, -1.52587890625e-05, -3.814697265625e-05, -0.00029265880584716797, -9.5367431640625e-06, -2.7060508728027344e-05, 0.0, -0.005786895751953125, 0.0, -0.0001373291015625, -0.00182342529296875, -3.0517578125e-05, -5.841237452841597e-06, -5.960462772236497e-07, -0.00014709272363688797, 0.0, -0.010136604309082031, 0.0, -7.62939453125e-05, -1.9073486328125e-06, -0.0002237558364868164, -3.814697265625e-06], "score": -8.468910662380779, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -8.608175277709961, -0.000260226777754724, -4.577577783493325e-05, 0.0, -0.02696501836180687, 0.0, -7.2479248046875e-05, -0.0006999969482421875, -3.62396240234375e-05, -2.145764938177308e-06, -7.152555099310121e-07, -7.652912609046325e-05, 0.0, -0.025542736053466797, 0.0, -0.0001201629638671875, -1.9073486328125e-06, -0.0002601146697998047, -3.814697265625e-06], "score": -8.681615795097969, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "PIRATE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "PIRATE", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -0.02377450466156006, 0.0, -9.132369041442871], "score": -9.202303144000098, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 38], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=1)\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "taunt", "hole1": 3, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -8.334576606750488, 0.0, -0.0024061203002929688, -1.71661376953125e-05, -0.0001811981201171875, -1.9073486328125e-06, -0.0005744695663452148, -2.1457672119140625e-06, -0.001445770263671875, -0.4483013153076172, -0.0001277923583984375, -7.05718994140625e-05, -5.7220458984375e-06, -0.017760131508111954, -0.0013115816982463002, -0.000942230224609375, -0.0020875930786132812, -5.91278076171875e-05, -0.3087623715400696, -0.3562770485877991, -0.01616106927394867, -0.02588653564453125, -0.0045070648193359375, -1.33514404296875e-05, -0.0015567538794130087, -0.000152587890625, -2.0265579223632812e-06], "score": -9.569349857712723, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 20, 111, 25, 133, "Deathrattle", "<EOS>", 206, 48, 111, 25, 133, "Summon", "<EOS>", 206, 63, 171, "Minion", "Placed", "<EOS>", 68, 63, 171, "Player", "Selector", "<EOS>"], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, deathrattle=Deathrattle(Summon(MinionPlaced(), \n            2), PlayerSelector()))\n", "model_output": {"hole0": "IronfurGrizzly", "hole2": [{"value": {"args": [{"s": "Ironfur Grizzly", "_type": "Str"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 3, "hole2": "deathrattle", "hole1": 3, "hole3": {"args": [{"args": [{"hole0": "MinionPlaced", "_type": "Template25"}, {"_type": "Template33"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template25"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "_type": "Template14"}]}}], "index": 57}
{"beams": [{"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.113882064819336, -0.000186920166015625, -0.016294479370117188, -0.000492095947265625, -0.0007114410400390625, -0.00194549560546875, -9.918212890625e-05, -0.000666616833768785, -2.3841855067985307e-07, -0.0002231597900390625, -5.53131103515625e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.002231597900390625, -1.71661376953125e-05, -0.0042552947998046875, -3.814697265625e-06, -0.006954193115234375, -1.9073486328125e-06, -0.0035077333450317383, -1.71661376953125e-05, -0.0022121667861938477, -1.9073486328125e-06, -0.01715850830078125, -0.000545501708984375, -0.0001277923583984375, -0.0001220703125, -0.00039529785863123834, 0.0, -0.0012331008911132812, -0.001209259033203125, -0.004778861999511719, -0.0001583099365234375, -0.0070040225982666016, -4.589557647705078e-05, -0.0003604888916015625, -0.000324249267578125, -0.011227607727050781, -6.866455078125e-05, -0.005736351013183594, -2.47955322265625e-05, -0.004009246826171875, -3.814697265625e-06, -0.06108963489532471, 0.0, -0.01882636547088623, 0.0, -0.0021610260009765625, -5.7220458984375e-06, -0.0035333633422851562, -0.009938240051269531, -0.002201080322265625, -0.000148773193359375, 0.0, -0.00074005126953125, -3.814697265625e-06, -0.0008220672607421875, 0.0, -0.007902145385742188, 0.0, -0.0013294219970703125, -0.0041656494140625, -5.91278076171875e-05, -0.00356292724609375, -0.0060901641845703125, -1.52587890625e-05, -0.034676432609558105, 0.0, -0.010400772094726562, -0.004630088806152344, -0.0004291534423828125, -0.012305259704589844, -0.0001468658447265625, -0.053655385971069336, -1.9073486328125e-06, -0.0002765655517578125, -0.000568389892578125, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.0005588531494140625, 0.0, -0.00014030933380126953, 0.0, -7.748603820800781e-06, -5.7220458984375e-06, -0.0019578933715820312, 0.0, 0.0, -7.43865966796875e-05, -0.010891914367675781, -5.7220458984375e-06, -1.9073486328125e-06, -0.000293731689453125, -0.002325773239135742, -2.2649765014648438e-06, -8.0108642578125e-05, -0.7775812149047852, -3.24249267578125e-05, -0.002062559127807617, -4.9709131417330354e-05, -0.000377655029296875, -1.9073486328125e-06, -0.000446319580078125, 0.0, -2.6702880859375e-05, -6.67572021484375e-05, -1.33514404296875e-05, -0.00012969970703125, 0.0, -0.0001049041748046875, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.002582550048828125, 0.0, 0.0, -0.0001068115234375, -0.0003299713134765625, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-05, -0.0015538930892944336, -2.2649765014648438e-06, -0.0001010894775390625, -0.6728353500366211, -0.00051116943359375, -1.71661376953125e-05, -0.005690574645996094, 0.0], "score": -2.9540892804454586, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.113882064819336, -0.000186920166015625, -0.016294479370117188, -0.000492095947265625, -0.0007114410400390625, -0.00194549560546875, -9.918212890625e-05, -0.000666616833768785, -2.3841855067985307e-07, -0.0002231597900390625, -5.53131103515625e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.002231597900390625, -1.71661376953125e-05, -0.0042552947998046875, -3.814697265625e-06, -0.006954193115234375, -1.9073486328125e-06, -0.0035077333450317383, -1.71661376953125e-05, -0.0022121667861938477, -1.9073486328125e-06, -0.01715850830078125, -0.000545501708984375, -0.0001277923583984375, -0.0001220703125, -0.00039529785863123834, 0.0, -0.0012331008911132812, -0.001209259033203125, -0.004778861999511719, -0.0001583099365234375, -0.0070040225982666016, -4.589557647705078e-05, -0.0003604888916015625, -0.000324249267578125, -0.011227607727050781, -6.866455078125e-05, -0.005736351013183594, -2.47955322265625e-05, -0.004009246826171875, -3.814697265625e-06, -0.06108963489532471, 0.0, -0.01882636547088623, 0.0, -0.0021610260009765625, -5.7220458984375e-06, -0.0035333633422851562, -0.009938240051269531, -0.002201080322265625, -0.000148773193359375, 0.0, -0.00074005126953125, -3.814697265625e-06, -0.0008220672607421875, 0.0, -0.007902145385742188, 0.0, -0.0013294219970703125, -0.0041656494140625, -5.91278076171875e-05, -0.00356292724609375, -0.0060901641845703125, -1.52587890625e-05, -0.034676432609558105, 0.0, -0.010400772094726562, -0.004630088806152344, -0.0004291534423828125, -0.012305259704589844, -0.0001468658447265625, -0.053655385971069336, -1.9073486328125e-06, -0.0002765655517578125, -0.000568389892578125, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.0005588531494140625, 0.0, -0.00014030933380126953, 0.0, -7.748603820800781e-06, -5.7220458984375e-06, -0.0019578933715820312, 0.0, 0.0, -7.43865966796875e-05, -0.010891914367675781, -5.7220458984375e-06, -1.9073486328125e-06, -0.000293731689453125, -0.002325773239135742, -2.2649765014648438e-06, -8.0108642578125e-05, -0.7775812149047852, -3.24249267578125e-05, -0.002062559127807617, -4.9709131417330354e-05, -0.000377655029296875, -1.9073486328125e-06, -0.000446319580078125, 0.0, -2.6702880859375e-05, -6.67572021484375e-05, -1.33514404296875e-05, -0.00012969970703125, 0.0, -0.0001049041748046875, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.002582550048828125, 0.0, 0.0, -0.0001068115234375, -0.0003299713134765625, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-05, -0.0015538930892944336, -2.2649765014648438e-06, -0.0001010894775390625, -0.7821750640869141, -3.4332275390625e-05, -0.0022917985916137695, -4.279529821360484e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0005006790161132812, 0.0], "score": -3.060464973883626, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.113882064819336, -0.000186920166015625, -0.016294479370117188, -0.000492095947265625, -0.0007114410400390625, -0.00194549560546875, -9.918212890625e-05, -0.000666616833768785, -2.3841855067985307e-07, -0.0002231597900390625, -5.53131103515625e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.002231597900390625, -1.71661376953125e-05, -0.0042552947998046875, -3.814697265625e-06, -0.006954193115234375, -1.9073486328125e-06, -0.0035077333450317383, -1.71661376953125e-05, -0.0022121667861938477, -1.9073486328125e-06, -0.01715850830078125, -0.000545501708984375, -0.0001277923583984375, -0.0001220703125, -0.00039529785863123834, 0.0, -0.0012331008911132812, -0.001209259033203125, -0.004778861999511719, -0.0001583099365234375, -0.0070040225982666016, -4.589557647705078e-05, -0.0003604888916015625, -0.000324249267578125, -0.011227607727050781, -6.866455078125e-05, -0.005736351013183594, -2.47955322265625e-05, -0.004009246826171875, -3.814697265625e-06, -0.06108963489532471, 0.0, -0.01882636547088623, 0.0, -0.0021610260009765625, -5.7220458984375e-06, -0.0035333633422851562, -0.009938240051269531, -0.002201080322265625, -0.000148773193359375, 0.0, -0.00074005126953125, -3.814697265625e-06, -0.0008220672607421875, 0.0, -0.007902145385742188, 0.0, -0.0013294219970703125, -0.0041656494140625, -5.91278076171875e-05, -0.00356292724609375, -0.0060901641845703125, -1.52587890625e-05, -0.034676432609558105, 0.0, -0.010400772094726562, -0.004630088806152344, -0.0004291534423828125, -0.012305259704589844, -0.0001468658447265625, -0.053655385971069336, -1.9073486328125e-06, -0.0002765655517578125, -0.000568389892578125, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.0005588531494140625, 0.0, -0.00014030933380126953, 0.0, -7.748603820800781e-06, -5.7220458984375e-06, -0.0019578933715820312, 0.0, 0.0, -7.43865966796875e-05, -0.010891914367675781, -5.7220458984375e-06, -1.9073486328125e-06, -0.000293731689453125, -0.002325773239135742, -2.2649765014648438e-06, -8.0108642578125e-05, -0.9191493988037109, -0.0003795623779296875, -6.29425048828125e-05, -0.00762176513671875, 0.0, -1.33514404296875e-05, -0.0007152557373046875, -1.9073486328125e-05, -6.67572021484375e-05, 0.0, -6.67572021484375e-05, 0.0, -0.00011670589447021484, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.002140045166015625, 0.0, 0.0, -0.0001201629638671875, -0.000354766845703125, -3.814697265625e-06, -7.62939453125e-06, -7.43865966796875e-05, -0.0013592243194580078, -2.2649765014648438e-06, -9.1552734375e-05, -0.7256355285644531, -0.000400543212890625, -1.9073486328125e-05, -0.0061931610107421875, 0.0], "score": -3.1537985778142854, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.113882064819336, -0.000186920166015625, -0.016294479370117188, -0.000492095947265625, -0.0007114410400390625, -0.00194549560546875, -9.918212890625e-05, -0.000666616833768785, -2.3841855067985307e-07, -0.0002231597900390625, -5.53131103515625e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.002231597900390625, -1.71661376953125e-05, -0.0042552947998046875, -3.814697265625e-06, -0.006954193115234375, -1.9073486328125e-06, -0.0035077333450317383, -1.71661376953125e-05, -0.0022121667861938477, -1.9073486328125e-06, -0.01715850830078125, -0.000545501708984375, -0.0001277923583984375, -0.0001220703125, -0.00039529785863123834, 0.0, -0.0012331008911132812, -0.001209259033203125, -0.004778861999511719, -0.0001583099365234375, -0.0070040225982666016, -4.589557647705078e-05, -0.0003604888916015625, -0.000324249267578125, -0.011227607727050781, -6.866455078125e-05, -0.005736351013183594, -2.47955322265625e-05, -0.004009246826171875, -3.814697265625e-06, -0.06108963489532471, 0.0, -0.01882636547088623, 0.0, -0.0021610260009765625, -5.7220458984375e-06, -0.0035333633422851562, -0.009938240051269531, -0.002201080322265625, -0.000148773193359375, 0.0, -0.00074005126953125, -3.814697265625e-06, -0.0008220672607421875, 0.0, -0.007902145385742188, 0.0, -0.0013294219970703125, -0.0041656494140625, -5.91278076171875e-05, -0.00356292724609375, -0.0060901641845703125, -1.52587890625e-05, -0.034676432609558105, 0.0, -0.010400772094726562, -0.004630088806152344, -0.0004291534423828125, -0.012305259704589844, -0.0001468658447265625, -0.053655385971069336, -1.9073486328125e-06, -0.0002765655517578125, -0.000568389892578125, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.0005588531494140625, 0.0, -0.00014030933380126953, 0.0, -7.748603820800781e-06, -5.7220458984375e-06, -0.0019578933715820312, 0.0, 0.0, -7.43865966796875e-05, -0.010891914367675781, -5.7220458984375e-06, -1.9073486328125e-06, -0.000293731689453125, -0.002325773239135742, -2.2649765014648438e-06, -8.0108642578125e-05, -0.9191493988037109, -0.0003795623779296875, -6.29425048828125e-05, -0.00762176513671875, 0.0, -1.33514404296875e-05, -0.0007152557373046875, -1.9073486328125e-05, -6.67572021484375e-05, 0.0, -6.67572021484375e-05, 0.0, -0.00011670589447021484, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -0.002140045166015625, 0.0, 0.0, -0.0001201629638671875, -0.000354766845703125, -3.814697265625e-06, -7.62939453125e-06, -7.43865966796875e-05, -0.0013592243194580078, -2.2649765014648438e-06, -9.1552734375e-05, -0.7464694976806641, -3.24249267578125e-05, -0.0022193193435668945, -4.398734381538816e-05, -0.0003337860107421875, -1.9073486328125e-06, -0.00047588348388671875, 0.0], "score": -3.1711270776779372, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.113882064819336, -0.000186920166015625, -0.016294479370117188, -0.000492095947265625, -0.0007114410400390625, -0.00194549560546875, -9.918212890625e-05, -0.000666616833768785, -2.3841855067985307e-07, -0.0002231597900390625, -5.53131103515625e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.002231597900390625, -1.71661376953125e-05, -0.0042552947998046875, -3.814697265625e-06, -0.006954193115234375, -1.9073486328125e-06, -0.0035077333450317383, -1.71661376953125e-05, -0.0022121667861938477, -1.9073486328125e-06, -0.01715850830078125, -0.000545501708984375, -0.0001277923583984375, -0.0001220703125, -0.00039529785863123834, 0.0, -0.0012331008911132812, -0.001209259033203125, -0.004778861999511719, -0.0001583099365234375, -0.0070040225982666016, -4.589557647705078e-05, -0.0003604888916015625, -0.000324249267578125, -0.011227607727050781, -6.866455078125e-05, -0.005736351013183594, -2.47955322265625e-05, -0.004009246826171875, -3.814697265625e-06, -0.06108963489532471, 0.0, -0.01882636547088623, 0.0, -0.0021610260009765625, -5.7220458984375e-06, -0.0035333633422851562, -0.009938240051269531, -0.002201080322265625, -0.000148773193359375, 0.0, -0.00074005126953125, -3.814697265625e-06, -0.0008220672607421875, 0.0, -0.007902145385742188, 0.0, -0.0013294219970703125, -0.0041656494140625, -5.91278076171875e-05, -0.00356292724609375, -0.0060901641845703125, -1.52587890625e-05, -0.034676432609558105, 0.0, -0.010400772094726562, -0.004630088806152344, -0.0004291534423828125, -0.012305259704589844, -0.0001468658447265625, -0.053655385971069336, -1.9073486328125e-06, -0.0002765655517578125, -0.000568389892578125, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.0005588531494140625, 0.0, -0.00014030933380126953, 0.0, -7.748603820800781e-06, -5.7220458984375e-06, -0.0019578933715820312, 0.0, 0.0, -7.43865966796875e-05, -0.010891914367675781, -5.7220458984375e-06, -1.9073486328125e-06, -0.000293731689453125, -0.002325773239135742, -2.2649765014648438e-06, -8.0108642578125e-05, -2.0500450134277344, -0.0006561279296875, -0.0001373291015625, -0.0010309219360351562, 0.0, -1.71661376953125e-05, -0.0002613067626953125, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -7.62939453125e-05, 0.0, -0.00016999244689941406, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0017299652099609375, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -0.00028228759765625, -1.9073486328125e-06, -7.62939453125e-06, -4.9591064453125e-05, -0.0013000965118408203, -2.2649765014648438e-06, -9.34600830078125e-05, -0.7050409317016602, -3.0517578125e-05, -0.002247929573059082, -4.2556890548439696e-05, -0.0003528594970703125, -1.9073486328125e-06, -0.000484466552734375, 0.0], "score": -4.253470536865478, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(2), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.3571434020996094, -0.000156402587890625, -0.007940292358398438, -0.018303871154785156, -0.000209808349609375, -0.000347137451171875, -0.004630088806152344, -1.9073486328125e-06, -0.09639644622802734, -1.9073486328125e-06, -0.06808280944824219, -0.014354466460645199, -1.1920928244535389e-07, -0.022846579551696777, -5.841255187988281e-06, -0.0001201629638671875, -0.14044475555419922, -0.000782012939453125, -0.09371662139892578, -1.33514404296875e-05, -1.5554494857788086, -1.33514404296875e-05, -0.018347740173339844, 0.0, -0.02669525146484375, -3.814697265625e-06, -0.000812530517578125, -0.0073261260986328125, -9.5367431640625e-06, -0.0009250640869140625, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.008193016052246094, -1.33514404296875e-05, -1.919269561767578e-05, -0.000217437744140625, -0.0009126663208007812, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0013675689697265625, -7.62939453125e-06, -5.7220458984375e-06, -0.0001888275146484375, -0.0009379386901855469, -2.2649765014648438e-06, -8.20159912109375e-05, -0.4382743835449219, -2.09808349609375e-05, -0.002165675163269043, -2.968272747239098e-05, -0.000362396240234375, -1.9073486328125e-06, -0.00042724609375, 0.0, -2.288818359375e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.0001983642578125, 0.0, -0.0001049041748046875, 0.0, -0.0002193450927734375, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0029315948486328125, 0.0, -1.9073486328125e-06, -0.00016021728515625, -0.0003643035888671875, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-05, -0.0015807151794433594, -2.2649765014648438e-06, -0.0001010894775390625, -0.720463752746582, -0.0005245208740234375, -1.71661376953125e-05, -0.00559234619140625, 0.0], "score": -4.645569680107876, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 17, 104, 42, "hero", "<EOS>", "health", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health is MINION_TYPE.BEAST:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "health", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.3571434020996094, -0.000156402587890625, -0.007940292358398438, -0.018303871154785156, -0.000209808349609375, -0.000347137451171875, -0.004630088806152344, -1.9073486328125e-06, -0.09639644622802734, -1.9073486328125e-06, -0.06808280944824219, -0.014354466460645199, -1.1920928244535389e-07, -0.022846579551696777, -5.841255187988281e-06, -0.0001201629638671875, -0.14044475555419922, -0.000782012939453125, -0.09371662139892578, -1.33514404296875e-05, -1.5554494857788086, -1.33514404296875e-05, -0.018347740173339844, 0.0, -0.02669525146484375, -3.814697265625e-06, -0.000812530517578125, -0.0073261260986328125, -9.5367431640625e-06, -0.0009250640869140625, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -0.008193016052246094, -1.33514404296875e-05, -1.919269561767578e-05, -0.000217437744140625, -0.0009126663208007812, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -0.0013675689697265625, -7.62939453125e-06, -5.7220458984375e-06, -0.0001888275146484375, -0.0009379386901855469, -2.2649765014648438e-06, -8.20159912109375e-05, -0.4382743835449219, -2.09808349609375e-05, -0.002165675163269043, -2.968272747239098e-05, -0.000362396240234375, -1.9073486328125e-06, -0.00042724609375, 0.0, -2.288818359375e-05, -7.82012939453125e-05, -1.33514404296875e-05, -0.0001983642578125, 0.0, -0.0001049041748046875, 0.0, -0.0002193450927734375, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0029315948486328125, 0.0, -1.9073486328125e-06, -0.00016021728515625, -0.0003643035888671875, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-05, -0.0015807151794433594, -2.2649765014648438e-06, -0.0001010894775390625, -0.7336397171020508, -3.24249267578125e-05, -0.002270817756652832, -3.6596651625586674e-05, -0.0003452301025390625, -1.9073486328125e-06, -0.00047779083251953125, 0.0], "score": -4.655776378878947, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 17, 104, 42, "hero", "<EOS>", "health", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health is MINION_TYPE.BEAST:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "health", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.3571434020996094, -0.000156402587890625, -0.007940292358398438, -0.018303871154785156, -0.000209808349609375, -0.000347137451171875, -0.004630088806152344, -1.9073486328125e-06, -0.09639644622802734, -1.9073486328125e-06, -0.06808280944824219, -0.014354466460645199, -1.1920928244535389e-07, -0.022846579551696777, -5.841255187988281e-06, -0.0001201629638671875, -0.14044475555419922, -0.000782012939453125, -0.09371662139892578, -1.33514404296875e-05, -0.2505807876586914, -0.0002593994140625, -0.000331878662109375, -9.5367431640625e-06, -0.2307901382446289, 0.0, -1.0278806686401367, -5.7220458984375e-06, -0.6610918045043945, 0.0, -0.018768310546875, -0.012208938598632812, -7.05718994140625e-05, -0.001476287841796875, -1.9073486328125e-06, -6.103515625e-05, 0.0, -0.00307464599609375, -1.1444091796875e-05, -3.445148468017578e-05, -0.0002079010009765625, -0.0009899139404296875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -0.00296783447265625, -1.52587890625e-05, -9.5367431640625e-06, -0.0002880096435546875, -0.0006440877914428711, -2.1457672119140625e-06, -8.20159912109375e-05, -0.34081554412841797, -1.52587890625e-05, -0.0021543502807617188, -2.6225747205899097e-05, -0.0004444122314453125, -1.9073486328125e-06, -0.00042629241943359375, 0.0, -2.09808349609375e-05, -8.7738037109375e-05, -1.33514404296875e-05, -0.0002079010009765625, 0.0, -0.0001068115234375, 0.0, -0.000225067138671875, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0029401779174804688, 0.0, 0.0, -0.0001697540283203125, -0.0003643035888671875, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-05, -0.0015788078308105469, -2.2649765014648438e-06, -0.0001010894775390625, -0.7241001129150391, -0.000522613525390625, -1.71661376953125e-05, -0.005573272705078125, 0.0], "score": -5.142102358801132, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 17, 104, 42, "hero", "<EOS>", "health", "<EOS>", 202, 12, 205, 45, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "BEAST", "<EOS>", "find_spell_target", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health is hearthbreaker.BEAST.find_spell_target:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "find_spell_target", "value": {"attr": "BEAST", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"attr": "health", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.3571434020996094, -0.000156402587890625, -0.007940292358398438, -0.018303871154785156, -0.000209808349609375, -0.000347137451171875, -0.004630088806152344, -1.9073486328125e-06, -0.09639644622802734, -1.9073486328125e-06, -0.06808280944824219, -0.014354466460645199, -1.1920928244535389e-07, -0.022846579551696777, -5.841255187988281e-06, -0.0001201629638671875, -0.14044475555419922, -0.000782012939453125, -0.09371662139892578, -1.33514404296875e-05, -0.2505807876586914, -0.0002593994140625, -0.000331878662109375, -9.5367431640625e-06, -0.2307901382446289, 0.0, -1.0278806686401367, -5.7220458984375e-06, -0.6610918045043945, 0.0, -0.018768310546875, -0.012208938598632812, -7.05718994140625e-05, -0.001476287841796875, -1.9073486328125e-06, -6.103515625e-05, 0.0, -0.00307464599609375, -1.1444091796875e-05, -3.445148468017578e-05, -0.0002079010009765625, -0.0009899139404296875, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -0.00296783447265625, -1.52587890625e-05, -9.5367431640625e-06, -0.0002880096435546875, -0.0006440877914428711, -2.1457672119140625e-06, -8.20159912109375e-05, -0.34081554412841797, -1.52587890625e-05, -0.0021543502807617188, -2.6225747205899097e-05, -0.0004444122314453125, -1.9073486328125e-06, -0.00042629241943359375, 0.0, -2.09808349609375e-05, -8.7738037109375e-05, -1.33514404296875e-05, -0.0002079010009765625, 0.0, -0.0001068115234375, 0.0, -0.000225067138671875, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0029401779174804688, 0.0, 0.0, -0.0001697540283203125, -0.0003643035888671875, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-05, -0.0015788078308105469, -2.2649765014648438e-06, -0.0001010894775390625, -0.7301540374755859, -3.24249267578125e-05, -0.0022689104080200195, -3.623903467087075e-05, -0.00034332275390625, -1.9073486328125e-06, -0.00047779083251953125, 0.0], "score": -5.145203826298022, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 17, 104, 42, "hero", "<EOS>", "health", "<EOS>", 202, 12, 205, 45, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "BEAST", "<EOS>", "find_spell_target", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health is hearthbreaker.BEAST.find_spell_target:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"attr": "find_spell_target", "value": {"attr": "BEAST", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"attr": "health", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.3571434020996094, -0.000156402587890625, -0.007940292358398438, -0.018303871154785156, -0.000209808349609375, -0.000347137451171875, -0.004630088806152344, -1.9073486328125e-06, -0.09639644622802734, -1.9073486328125e-06, -0.06808280944824219, -0.014354466460645199, -1.1920928244535389e-07, -0.022846579551696777, -5.841255187988281e-06, -0.0001201629638671875, -2.1968860626220703, -0.004299163818359375, -0.054863929748535156, -5.14984130859375e-05, -0.009095923975110054, -2.884823152271565e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -6.67572021484375e-05, 0.0, -0.0003414154052734375, 0.0, -4.792213439941406e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.1961669921875e-05, -0.0012798309326171875, 0.0, 0.0, -0.0001277923583984375, -0.000244140625, -1.9073486328125e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0011581182479858398, -2.0265579223632812e-06, -0.000110626220703125, -0.7052679061889648, -0.000457763671875, -1.71661376953125e-05, -0.005410194396972656, 0.0, -1.1444091796875e-05, -0.000347137451171875, -2.288818359375e-05, -0.0001373291015625, 0.0, -6.866455078125e-05, 0.0, -0.00015866756439208984, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0025997161865234375, 0.0, 0.0, -0.000133514404296875, -0.0004329681396484375, -3.814697265625e-06, -7.62939453125e-06, -9.918212890625e-05, -0.0014755725860595703, -2.2649765014648438e-06, -9.5367431640625e-05, -0.7244844436645508, -3.0517578125e-05, -0.002190709114074707, -3.5285393096273765e-05, -0.0002899169921875, -1.9073486328125e-06, -0.00044155120849609375, 0.0], "score": -5.328245057917449, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 17, 104, 42, "hero", "<EOS>", "health", "<EOS>", 202, 15, 205, 55, 138, "5", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health <= 5:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"n": 5, "_type": "Num"}], "left": {"attr": "health", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "LtE"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -1.3571434020996094, -0.000156402587890625, -0.007940292358398438, -0.018303871154785156, -0.000209808349609375, -0.000347137451171875, -0.004630088806152344, -1.9073486328125e-06, -0.09639644622802734, -1.9073486328125e-06, -0.06808280944824219, -0.014354466460645199, -1.1920928244535389e-07, -0.022846579551696777, -5.841255187988281e-06, -0.0001201629638671875, -2.1968860626220703, -0.004299163818359375, -0.054863929748535156, -5.14984130859375e-05, -0.009095923975110054, -2.884823152271565e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -6.67572021484375e-05, 0.0, -0.0003414154052734375, 0.0, -4.792213439941406e-05, -1.9073486328125e-06, -1.71661376953125e-05, -4.1961669921875e-05, -0.0012798309326171875, 0.0, 0.0, -0.0001277923583984375, -0.000244140625, -1.9073486328125e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0011581182479858398, -2.0265579223632812e-06, -0.000110626220703125, -0.7435722351074219, -4.00543212890625e-05, -0.0023421049118041992, -1.7642851162236184e-05, -0.0003948211669921875, -1.9073486328125e-06, -0.00043010711669921875, 0.0, -3.24249267578125e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0001811981201171875, 0.0, -0.0001220703125, 0.0, -0.0002288818359375, -3.814697265625e-06, -2.288818359375e-05, -7.62939453125e-06, -0.002933502197265625, 0.0, -1.9073486328125e-06, -0.00016021728515625, -0.0003814697265625, -1.9073486328125e-06, -7.62939453125e-06, -8.0108642578125e-05, -0.001601576805114746, -2.2649765014648438e-06, -0.000102996826171875, -0.7117929458618164, -0.000514984130859375, -1.71661376953125e-05, -0.0055675506591796875, 0.0], "score": -5.35463322668533, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 89, 122, 21, 114, 17, 104, 17, 104, 42, "hero", "<EOS>", "health", "<EOS>", 202, 15, 205, 55, 138, "5", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health <= 5:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"n": 5, "_type": "Num"}], "left": {"attr": "health", "value": {"attr": "hero", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "LtE"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -0.972625732421875, -0.01827239990234375, -0.0037441253662109375, -0.0001583099365234375, -8.58306884765625e-05, -0.00336456298828125, -7.05718994140625e-05, -0.028427356854081154, -4.053113570989808e-06, -0.0034246444702148438, -0.0011453628540039062, -3.62396240234375e-05, -1.9073486328125e-06, -0.0017223358154296875, -2.09808349609375e-05, -0.010194778442382812, -1.9073486328125e-06, -0.024164199829101562, 0.0, -0.004193544387817383, -1.33514404296875e-05, -0.002365708351135254, -1.9073486328125e-06, -0.013781547546386719, -0.0009784698486328125, -0.0001926422119140625, -0.0002040863037109375, -0.0003361698181834072, 0.0, -0.00150299072265625, -0.0011043548583984375, -0.006379127502441406, -0.0001468658447265625, -0.007304549217224121, -4.398822784423828e-05, -0.0003337860107421875, -0.0003261566162109375, -0.012212753295898438, -7.2479248046875e-05, -0.005528450012207031, -2.47955322265625e-05, -0.00366973876953125, -3.814697265625e-06, -0.062430500984191895, 0.0, -0.01787269115447998, 0.0, -0.0021666288375854492, -5.7220458984375e-06, -0.0036029815673828125, -0.009975433349609375, -0.00220489501953125, -0.0001506805419921875, 0.0, -0.0007457733154296875, -3.814697265625e-06, -0.0008363723754882812, 0.0, -0.007929801940917969, 0.0, -0.8655891418457031, -0.0033435821533203125, -0.0001506805419921875, -0.000263214111328125, -0.04922962188720703, -3.4332275390625e-05, -0.025842905044555664, 0.0, -0.024896621704101562, -0.0042705535888671875, -0.0019426345825195312, -0.014211654663085938, -0.0001316070556640625, -0.04754137992858887, -1.9073486328125e-06, -0.000705718994140625, -0.0009365081787109375, -5.91278076171875e-05, -6.103515625e-05, 0.0, -0.000457763671875, 0.0, -0.00015366077423095703, 0.0, -5.841255187988281e-06, -9.5367431640625e-06, -0.0020895004272460938, 0.0, 0.0, -7.43865966796875e-05, -0.011392593383789062, -5.7220458984375e-06, -1.9073486328125e-06, -0.000301361083984375, -0.0022913217544555664, -2.2649765014648438e-06, -8.0108642578125e-05, -0.7945995330810547, -3.24249267578125e-05, -0.002062559127807617, -5.257001248537563e-05, -0.0003757476806640625, -1.9073486328125e-06, -0.00044727325439453125, 0.0, -0.0001087188720703125, -9.34600830078125e-05, -9.5367431640625e-06, -0.0001163482666015625, 0.0, -0.000102996826171875, 0.0, -0.0002307891845703125, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0026226043701171875, 0.0, 0.0, -0.00012969970703125, -0.000316619873046875, -1.9073486328125e-06, -9.5367431640625e-06, -8.0108642578125e-05, -0.001529097557067871, -2.2649765014648438e-06, -9.918212890625e-05, -0.6980533599853516, -0.0005340576171875, -1.52587890625e-05, -0.005583763122558594, 0.0, -0.0024967193603515625, -0.0013980865478515625, -0.0005435943603515625, -1.9073486328125e-06, -0.0010433197021484375, 0.0, -0.000865936279296875, 0.0, -1.537799835205078e-05, -1.1444091796875e-05, -0.29146766662597656, 0.0, -7.62939453125e-06, -0.0004291534423828125, -0.0006542205810546875, -7.62939453125e-06, -7.62939453125e-06, -0.0001010894775390625, -0.0018514394760131836, -2.1457672119140625e-06, -9.5367431640625e-05, -0.587031364440918, -0.000560760498046875, -2.09808349609375e-05, -0.004960060119628906, 0.0, -0.0016651153564453125, -0.0037593841552734375, -0.0016880035400390625, -1.9073486328125e-06, -0.0020961761474609375, -1.9073486328125e-06, -0.0008106231689453125, 0.0, -1.537799835205078e-05, -1.1444091796875e-05, -0.39327335357666016, 0.0, -7.62939453125e-06, -0.0004825592041015625, -0.000698089599609375, -7.62939453125e-06, -7.62939453125e-06, -8.58306884765625e-05, -0.0020710229873657227, -2.1457672119140625e-06, -9.918212890625e-05, -0.5941390991210938, -0.0006084442138671875, -2.47955322265625e-05, -0.0050449371337890625, 0.0], "score": -5.724277965225838, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -0.972625732421875, -0.01827239990234375, -0.0037441253662109375, -0.0001583099365234375, -8.58306884765625e-05, -0.00336456298828125, -7.05718994140625e-05, -0.028427356854081154, -4.053113570989808e-06, -0.0034246444702148438, -0.0011453628540039062, -3.62396240234375e-05, -1.9073486328125e-06, -0.0017223358154296875, -2.09808349609375e-05, -0.010194778442382812, -1.9073486328125e-06, -0.024164199829101562, 0.0, -0.004193544387817383, -1.33514404296875e-05, -0.002365708351135254, -1.9073486328125e-06, -0.013781547546386719, -0.0009784698486328125, -0.0001926422119140625, -0.0002040863037109375, -0.0003361698181834072, 0.0, -0.00150299072265625, -0.0011043548583984375, -0.006379127502441406, -0.0001468658447265625, -0.007304549217224121, -4.398822784423828e-05, -0.0003337860107421875, -0.0003261566162109375, -0.012212753295898438, -7.2479248046875e-05, -0.005528450012207031, -2.47955322265625e-05, -0.00366973876953125, -3.814697265625e-06, -0.062430500984191895, 0.0, -0.01787269115447998, 0.0, -0.0021666288375854492, -5.7220458984375e-06, -0.0036029815673828125, -0.009975433349609375, -0.00220489501953125, -0.0001506805419921875, 0.0, -0.0007457733154296875, -3.814697265625e-06, -0.0008363723754882812, 0.0, -0.007929801940917969, 0.0, -0.8655891418457031, -0.0033435821533203125, -0.0001506805419921875, -0.000263214111328125, -0.04922962188720703, -3.4332275390625e-05, -0.025842905044555664, 0.0, -0.024896621704101562, -0.0042705535888671875, -0.0019426345825195312, -0.014211654663085938, -0.0001316070556640625, -0.04754137992858887, -1.9073486328125e-06, -0.000705718994140625, -0.0009365081787109375, -5.91278076171875e-05, -6.103515625e-05, 0.0, -0.000457763671875, 0.0, -0.00015366077423095703, 0.0, -5.841255187988281e-06, -9.5367431640625e-06, -0.0020895004272460938, 0.0, 0.0, -7.43865966796875e-05, -0.011392593383789062, -5.7220458984375e-06, -1.9073486328125e-06, -0.000301361083984375, -0.0022913217544555664, -2.2649765014648438e-06, -8.0108642578125e-05, -0.7945995330810547, -3.24249267578125e-05, -0.002062559127807617, -5.257001248537563e-05, -0.0003757476806640625, -1.9073486328125e-06, -0.00044727325439453125, 0.0, -0.0001087188720703125, -9.34600830078125e-05, -9.5367431640625e-06, -0.0001163482666015625, 0.0, -0.000102996826171875, 0.0, -0.0002307891845703125, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0026226043701171875, 0.0, 0.0, -0.00012969970703125, -0.000316619873046875, -1.9073486328125e-06, -9.5367431640625e-06, -8.0108642578125e-05, -0.001529097557067871, -2.2649765014648438e-06, -9.918212890625e-05, -0.7545833587646484, -3.24249267578125e-05, -0.002286076545715332, -4.3033709516748786e-05, -0.0003833770751953125, -1.9073486328125e-06, -0.0005102157592773438, 0.0, -0.000152587890625, -0.025061607360839844, -0.0010128021240234375, -1.9073486328125e-06, -0.0057125091552734375, -1.9073486328125e-06, -0.0027933120727539062, -1.9073486328125e-06, -2.110004425048828e-05, -1.71661376953125e-05, -0.19042491912841797, 0.0, -5.7220458984375e-06, -0.000576019287109375, -0.0005626678466796875, -5.7220458984375e-06, -7.62939453125e-06, -7.62939453125e-05, -0.00225222110748291, -2.1457672119140625e-06, -0.000102996826171875, -0.5840997695922852, -0.000530242919921875, -3.0517578125e-05, -0.005207061767578125, 0.0, -0.0019130706787109375, -0.005779266357421875, -0.00264739990234375, -1.9073486328125e-06, -0.002513885498046875, -1.9073486328125e-06, -0.0008039474487304688, 0.0, -1.537799835205078e-05, -1.1444091796875e-05, -0.42548370361328125, 0.0, -9.5367431640625e-06, -0.0004787445068359375, -0.0006999969482421875, -7.62939453125e-06, -7.62939453125e-06, -6.4849853515625e-05, -0.0022754669189453125, -2.2649765014648438e-06, -0.000102996826171875, -0.620020866394043, -0.000644683837890625, -3.0517578125e-05, -0.00533294677734375, 0.0], "score": -5.765266886500967, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -0.972625732421875, -0.01827239990234375, -0.0037441253662109375, -0.0001583099365234375, -8.58306884765625e-05, -0.00336456298828125, -7.05718994140625e-05, -0.028427356854081154, -4.053113570989808e-06, -0.0034246444702148438, -0.0011453628540039062, -3.62396240234375e-05, -1.9073486328125e-06, -0.0017223358154296875, -2.09808349609375e-05, -0.010194778442382812, -1.9073486328125e-06, -0.024164199829101562, 0.0, -0.004193544387817383, -1.33514404296875e-05, -0.002365708351135254, -1.9073486328125e-06, -0.013781547546386719, -0.0009784698486328125, -0.0001926422119140625, -0.0002040863037109375, -0.0003361698181834072, 0.0, -0.00150299072265625, -0.0011043548583984375, -0.006379127502441406, -0.0001468658447265625, -0.007304549217224121, -4.398822784423828e-05, -0.0003337860107421875, -0.0003261566162109375, -0.012212753295898438, -7.2479248046875e-05, -0.005528450012207031, -2.47955322265625e-05, -0.00366973876953125, -3.814697265625e-06, -0.062430500984191895, 0.0, -0.01787269115447998, 0.0, -0.0021666288375854492, -5.7220458984375e-06, -0.0036029815673828125, -0.009975433349609375, -0.00220489501953125, -0.0001506805419921875, 0.0, -0.0007457733154296875, -3.814697265625e-06, -0.0008363723754882812, 0.0, -0.007929801940917969, 0.0, -0.8655891418457031, -0.0033435821533203125, -0.0001506805419921875, -0.000263214111328125, -0.04922962188720703, -3.4332275390625e-05, -0.025842905044555664, 0.0, -0.024896621704101562, -0.0042705535888671875, -0.0019426345825195312, -0.014211654663085938, -0.0001316070556640625, -0.04754137992858887, -1.9073486328125e-06, -0.000705718994140625, -0.0009365081787109375, -5.91278076171875e-05, -6.103515625e-05, 0.0, -0.000457763671875, 0.0, -0.00015366077423095703, 0.0, -5.841255187988281e-06, -9.5367431640625e-06, -0.0020895004272460938, 0.0, 0.0, -7.43865966796875e-05, -0.011392593383789062, -5.7220458984375e-06, -1.9073486328125e-06, -0.000301361083984375, -0.0022913217544555664, -2.2649765014648438e-06, -8.0108642578125e-05, -0.8966989517211914, -0.0003662109375, -6.29425048828125e-05, -0.007664680480957031, 0.0, -4.57763671875e-05, -0.00154876708984375, -1.52587890625e-05, -6.866455078125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00014722347259521484, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0021352767944335938, 0.0, 0.0, -0.0001354217529296875, -0.00034332275390625, -3.814697265625e-06, -7.62939453125e-06, -7.2479248046875e-05, -0.001349806785583496, -2.2649765014648438e-06, -9.1552734375e-05, -0.7447595596313477, -0.0004177093505859375, -1.9073486328125e-05, -0.0060977935791015625, 0.0, -0.0030040740966796875, -0.0008544921875, -0.000438690185546875, 0.0, -0.0005931854248046875, 0.0, -0.0008869171142578125, 0.0, -1.537799835205078e-05, -1.33514404296875e-05, -0.234283447265625, 0.0, -7.62939453125e-06, -0.00041961669921875, -0.000652313232421875, -7.62939453125e-06, -7.62939453125e-06, -0.000102996826171875, -0.0017502307891845703, -2.1457672119140625e-06, -9.34600830078125e-05, -0.5960912704467773, -0.00054168701171875, -1.9073486328125e-05, -0.0049228668212890625, 0.0, -0.0015506744384765625, -0.0027599334716796875, -0.0011234283447265625, -1.9073486328125e-06, -0.001682281494140625, 0.0, -0.0008182525634765625, 0.0, -1.537799835205078e-05, -1.1444091796875e-05, -0.3506307601928711, 0.0, -7.62939453125e-06, -0.00048065185546875, -0.0006885528564453125, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-05, -0.0019469261169433594, -2.1457672119140625e-06, -9.72747802734375e-05, -0.5883350372314453, -0.0005817413330078125, -2.288818359375e-05, -0.004965782165527344, 0.0], "score": -5.7795398168671, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -0.972625732421875, -0.01827239990234375, -0.0037441253662109375, -0.0001583099365234375, -8.58306884765625e-05, -0.00336456298828125, -7.05718994140625e-05, -0.028427356854081154, -4.053113570989808e-06, -0.0034246444702148438, -0.0011453628540039062, -3.62396240234375e-05, -1.9073486328125e-06, -0.0017223358154296875, -2.09808349609375e-05, -0.010194778442382812, -1.9073486328125e-06, -0.024164199829101562, 0.0, -0.004193544387817383, -1.33514404296875e-05, -0.002365708351135254, -1.9073486328125e-06, -0.013781547546386719, -0.0009784698486328125, -0.0001926422119140625, -0.0002040863037109375, -0.0003361698181834072, 0.0, -0.00150299072265625, -0.0011043548583984375, -0.006379127502441406, -0.0001468658447265625, -0.007304549217224121, -4.398822784423828e-05, -0.0003337860107421875, -0.0003261566162109375, -0.012212753295898438, -7.2479248046875e-05, -0.005528450012207031, -2.47955322265625e-05, -0.00366973876953125, -3.814697265625e-06, -0.062430500984191895, 0.0, -0.01787269115447998, 0.0, -0.0021666288375854492, -5.7220458984375e-06, -0.0036029815673828125, -0.009975433349609375, -0.00220489501953125, -0.0001506805419921875, 0.0, -0.0007457733154296875, -3.814697265625e-06, -0.0008363723754882812, 0.0, -0.007929801940917969, 0.0, -0.8655891418457031, -0.0033435821533203125, -0.0001506805419921875, -0.000263214111328125, -0.04922962188720703, -3.4332275390625e-05, -0.025842905044555664, 0.0, -0.024896621704101562, -0.0042705535888671875, -0.0019426345825195312, -0.014211654663085938, -0.0001316070556640625, -0.04754137992858887, -1.9073486328125e-06, -0.000705718994140625, -0.0009365081787109375, -5.91278076171875e-05, -6.103515625e-05, 0.0, -0.000457763671875, 0.0, -0.00015366077423095703, 0.0, -5.841255187988281e-06, -9.5367431640625e-06, -0.0020895004272460938, 0.0, 0.0, -7.43865966796875e-05, -0.011392593383789062, -5.7220458984375e-06, -1.9073486328125e-06, -0.000301361083984375, -0.0022913217544555664, -2.2649765014648438e-06, -8.0108642578125e-05, -0.8966989517211914, -0.0003662109375, -6.29425048828125e-05, -0.007664680480957031, 0.0, -4.57763671875e-05, -0.00154876708984375, -1.52587890625e-05, -6.866455078125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.00014722347259521484, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0021352767944335938, 0.0, 0.0, -0.0001354217529296875, -0.00034332275390625, -3.814697265625e-06, -7.62939453125e-06, -7.2479248046875e-05, -0.001349806785583496, -2.2649765014648438e-06, -9.1552734375e-05, -0.7254419326782227, -3.0517578125e-05, -0.002217411994934082, -4.3868138163816184e-05, -0.0003376007080078125, -1.9073486328125e-06, -0.00048542022705078125, 0.0, -0.000148773193359375, -0.022428512573242188, -0.0009613037109375, -1.9073486328125e-06, -0.00518798828125, -1.9073486328125e-06, -0.0026950836181640625, -1.9073486328125e-06, -2.110004425048828e-05, -1.71661376953125e-05, -0.17696475982666016, 0.0, -5.7220458984375e-06, -0.000576019287109375, -0.00055694580078125, -5.7220458984375e-06, -7.62939453125e-06, -7.43865966796875e-05, -0.00225222110748291, -2.1457672119140625e-06, -0.000102996826171875, -0.5841856002807617, -0.0005321502685546875, -3.0517578125e-05, -0.0052471160888671875, 0.0, -0.001918792724609375, -0.00576019287109375, -0.0026578903198242188, -1.9073486328125e-06, -0.0024967193603515625, -1.9073486328125e-06, -0.000804901123046875, 0.0, -1.537799835205078e-05, -1.1444091796875e-05, -0.42647266387939453, 0.0, -9.5367431640625e-06, -0.000476837158203125, -0.0006999969482421875, -7.62939453125e-06, -7.62939453125e-06, -6.4849853515625e-05, -0.002277374267578125, -2.2649765014648438e-06, -0.000102996826171875, -0.6201658248901367, -0.000644683837890625, -3.0517578125e-05, -0.005335807800292969, 0.0], "score": -5.8282402678376, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 89, 122, 21, 114, 25, 133, "<UNK>", "<EOS>", 202, 12, 205, 54, 135, "Null", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 217, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>"], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "model_output": {"hole0": "KillCommand", "hole2": [{"value": {"args": [{"s": "Kill Command", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "game", "value": {"_type": "Template38"}, "_type": "Attribute"}, {"body": {"comparators": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "left": {"attr": "minion_type", "value": {"attr": "card", "value": {"id": "x", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "args": {"hole0": "x", "_type": "Template13"}, "_type": "Lambda"}], "func": {"attr": "<UNK>", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"body": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "test": {"comparators": [{"value": "Null", "_type": "NameConstant"}], "left": {"id": "<UNK>", "_type": "Name"}, "ops": [{"_type": "Is"}], "_type": "Compare"}, "orelse": [{"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "_type": "If"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template35"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 58}
{"beams": [{"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -0.0018075702246278524, 0.0, -0.00417327880859375], "score": -0.009762565634048315, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -0.0018075702246278524, 0.0, -5.529421806335449, -0.0001583099365234375, -0.0004363059997558594, -3.576277322281385e-06], "score": -5.535609285374505, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=True)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -7.521742343902588, -1.9073486328125e-06, -0.00047326082130894065, 0.0, -3.814697265625e-06, 0.0, -0.0002584425965324044, 0.0, -3.814697265625e-06, -0.000156402587890625, -9.5367431640625e-06, -2.861022494471399e-06, -1.728527968225535e-05, -3.863670281134546e-05, -6.4373016357421875e-06, -0.0018432136857882142, 0.0, -0.003810882568359375], "score": -7.529898444968978, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "WARRIOR", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -7.57220983505249, 0.0, -0.0002528427285142243, 0.0, -3.814697265625e-06, 0.0, -0.0004906615358777344, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -2.861022494471399e-06, -1.4781910977035295e-05, -3.971227852161974e-05, -6.318092346191406e-06, -0.001831292756833136, 0.0, -0.004116058349609375], "score": -7.580654186026379, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "MAGE", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -7.781210422515869, -1.9073486328125e-06, -0.3112373352050781], "score": -8.096231381670407, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "stealth", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -8.283280372619629, -3.814697265625e-06, -0.006201143376529217, 0.0, -3.814697265625e-06, 0.0, -0.00029706748318858445, 0.0, -5.7220458984375e-06, -0.000179290771484375, -7.62939453125e-06, -2.622604142743512e-06, -1.6093217709567398e-05, -3.9366583223454654e-05, -6.318092346191406e-06, -0.001829743036068976, 0.0, -0.0043811798095703125], "score": -8.297783783442412, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "Player", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.Player,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "Player", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -8.379210472106934, -0.09069442749023438, -1.33514404296875e-05, -3.814697265625e-06, -0.000209808349609375, -5.7220458984375e-06, -2.741813204920618e-06, -9.655935173213948e-06, -4.5210414100438356e-05, -4.172325134277344e-06, -0.0016406772192567587, 0.0, -0.0047206878662109375], "score": -8.479785615839148, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, MinionCard):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -7.769457817077637, -0.12496280670166016, -0.0005502700805664062, -3.2543666748097166e-05, -8.70443182066083e-06, -5.9604644775390625e-06, -0.0033507337793707848, 0.0, -0.06964302062988281, -0.76533043384552, 0.0, -0.005502352025359869, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0017185211181640625, -2.09808349609375e-05, -7.152551916078664e-06, -1.7881340681924485e-05, -3.79160774173215e-05, -1.7642974853515625e-05, -0.0015846480382606387, 0.0, -0.004367828369140625], "score": -8.7473738650813, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38, "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 2, spell_damage=1)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -8.38817024230957, -5.7220458984375e-06, -0.40889930725097656], "score": -8.800856988207272, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "use", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, use=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "use", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -9.031306266784668, 0.0, -0.009857177734375], "score": -9.04494516111987, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "create_weapon", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, create_weapon=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "create_weapon", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -7.781210422515869, -1.9073486328125e-06, -1.320302963256836, -3.0517578125e-05, -0.00027954578399658203, -3.6954863844584906e-06], "score": -9.10561076857067, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "stealth", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, stealth=True)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "stealth", "hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -7.769457817077637, -0.12496280670166016, -0.0005502700805664062, -3.2543666748097166e-05, -8.70443182066083e-06, -5.9604644775390625e-06, -0.0033507337793707848, 0.0, -0.06964302062988281, -1.9424916505813599, 0.0, -0.027667582035064697, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0022678375244140625, -2.09808349609375e-05, -7.390969585685525e-06, -1.728529969113879e-05, -3.982416819781065e-05, -1.7523765563964844e-05, -0.0016685714945197105, 0.0, -0.00431060791015625], "score": -9.947279669837172, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38, "spell_damage", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 2, spell_damage=1)\n\n    def spell_damage(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "spell_damage", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -7.4640350341796875, -1.1920928244535389e-07, -2.2530493879457936e-05, -1.5735502529423684e-05, -0.07010871917009354, -5.722038622479886e-06, -1.537799835205078e-05, -2.6702880859375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -9.536738616588991e-07, -0.00010240043775411323, -1.9073486328125e-06, -9.5367431640625e-06, -1.251728281204123e-05, -2.0265579223632812e-06, -0.005267024040222168, 0.0, -0.0004475116729736328, 0.0, -0.008072853088378906, -1.9073486328125e-06, -0.00019669532775878906, 0.0, -9.5367431640625e-05, -0.0003662109375, -0.000125885009765625, -6.055827907403e-05, -1.2755313036905136e-05, -1.2103757858276367, -5.53131103515625e-05, -0.0002002716064453125, -0.0029811859130859375, -0.006186485290527344, 0.0, -0.08639873564243317, -0.0009894242975860834, -0.000522613525390625, -8.20159912109375e-05, -0.000148773193359375, 0.0, -0.008558392524719238, -3.576278118089249e-07, -0.0029582977294921875, -0.011481285095214844, -5.91278076171875e-05, -0.0011821701191365719, -3.2186455882765586e-06, -0.07993698120117188, -0.0075130462646484375, -0.00017547607421875, -0.010913848876953125, -0.004412651062011719, -0.0007839202880859375, -0.00999163743108511, -0.6843248605728149, -0.011778505519032478, -1.311301275563892e-06, -0.004383087158203125, -0.2473583221435547, -0.000621795654296875, -5.7220458984375e-06, -0.003430008888244629, 0.0, -0.0022687911987304688, -1.52587890625e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.001817464828491211, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, -4.57763671875e-05, -9.1552734375e-05, -0.0005967617034912109, 0.0, -5.14984130859375e-05, -0.0014801025390625, -0.00028228759765625, -0.00036096517578698695, 0.0, -0.0010166168212890625, -0.0002117156982421875, -0.006114959716796875, -5.53131103515625e-05, -0.000732421875, -0.00014495849609375, -0.0001392364501953125, -0.002605438232421875, -0.0004749298095703125, -0.017580032348632812, -0.0009479522705078125, -8.58306884765625e-05, -0.03492135927081108, -4.7802906919969246e-05, -0.0022126436233520508, 0.0, -2.1457672119140625e-05, 0.0, -0.01259613037109375, 0.0, -0.002471923828125, -3.814697265625e-06, -0.00124359130859375, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -5.435943603515625e-05, 0.0, -0.00012969970703125, -3.814697265625e-05, -6.866455078125e-05, -0.008007049560546875, -0.00016808509826660156, 0.0, -3.24249267578125e-05, -0.02475738525390625, -9.5367431640625e-06, -0.07315444946289062, -4.1961669921875e-05, -0.010869582183659077, -2.3841855067985307e-07], "score": -10.154975865739878, "choice_history": [77, 148, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 166, 34, 171, "Kobold", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            Kobold().summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"body": [{"hole0": {"hole0": "Kobold", "_type": "Template25"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -7.769457817077637, -0.12496280670166016, -0.0005502700805664062, -3.2543666748097166e-05, -8.70443182066083e-06, -5.9604644775390625e-06, -0.0033507337793707848, 0.0, -0.06964302062988281, -2.485879898071289, 0.0, -0.005469111260026693, -1.1920928244535389e-07, -1.52587890625e-05, -0.0032100677490234375, -2.288818359375e-05, -9.536735888104886e-06, -1.9907896785298362e-05, -3.374256630195305e-05, -1.9550323486328125e-05, -0.0016413916600868106, 0.0, -0.00424957275390625], "score": -10.469329777942043, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38, "create_weapon", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 2, spell_damage=1)\n\n    def create_weapon(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}], "hole1": "MinionCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "spell_damage", "hole1": 2, "hole3": {"_type": "Template34"}, "_type": "Template14"}]}}, {"score_history": [-1.9073486328125e-05, -7.4640350341796875, -1.1920928244535389e-07, -2.2530493879457936e-05, -1.5735502529423684e-05, -0.07010871917009354, -5.722038622479886e-06, -1.537799835205078e-05, -2.6702880859375e-05, -7.05718994140625e-05, -2.6702880859375e-05, -9.536738616588991e-07, -0.00010240043775411323, -1.9073486328125e-06, -9.5367431640625e-06, -1.251728281204123e-05, -2.0265579223632812e-06, -0.005267024040222168, 0.0, -0.0004475116729736328, 0.0, -0.008072853088378906, -1.9073486328125e-06, -0.00019669532775878906, 0.0, -9.5367431640625e-05, -0.0003662109375, -0.000125885009765625, -6.055827907403e-05, -1.2755313036905136e-05, -0.406341552734375, -0.0013980865478515625, -0.002376556396484375, -7.62939453125e-06, -9.5367431640625e-06, -0.0001125335693359375, -4.57763671875e-05, -0.4722774922847748, -7.510169325541938e-06, -0.0005207061767578125, -3.814697265625e-06, -0.0070438385009765625, -3.0517578125e-05, -0.08599662780761719, -1.9073486328125e-06, -0.001795053482055664, 0.0, -0.0019495487213134766, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -0.000377655029296875, -0.1082906723022461, -0.006836414337158203, 0.0, -0.03201103210449219, -0.10473918914794922, -0.004601478576660156, -1.9073486328125e-06, -0.23685729503631592, 0.0, -0.732460618019104, -1.1920928244535389e-07, -1.1444091796875e-05, -0.007906913757324219, -2.288818359375e-05, -0.000209808349609375, -0.0007933378219604492, 0.0, -0.20372581481933594, -0.0050506591796875, -5.7220458984375e-05, 0.0, -0.11300015449523926, -9.30981186684221e-05, -0.0003223419189453125, -0.00284576416015625, -5.7220458984375e-06, -7.62939453125e-06, -0.042402029037475586, 0.0, -0.0007305145263671875, -0.006682395935058594, -2.86102294921875e-05, -0.0048640877939760685, -7.629365427419543e-06, -0.15816783905029297, -0.008686065673828125, -0.000118255615234375, -0.003082275390625, -0.5659189224243164, -1.33514404296875e-05, -0.2652597427368164, -0.00025507534155622125, -0.037449296563863754, -5.960462772236497e-07, -0.0028247833251953125, -0.00576019287109375, -0.0007610321044921875, -1.71661376953125e-05, -0.0004731416702270508, 0.0, -0.0038480758666992188, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.00040340423583984375, 0.0, -7.62939453125e-06, -2.6702880859375e-05, -3.0517578125e-05, -6.103515625e-05, -0.00040519237518310547, 0.0, -5.53131103515625e-05, -0.00177001953125, -0.0002765655517578125, -0.0003088705416303128, 0.0, -0.001056671142578125, -0.000213623046875, -0.006206512451171875, -6.103515625e-05, -0.000728607177734375, -0.0001354217529296875, -0.0001239776611328125, -0.0019664764404296875, -0.000507354736328125, -0.021394729614257812, -0.0009918212890625, -8.96453857421875e-05, -0.036807119846343994, -4.6372391807381064e-05, -0.0022679567337036133, 0.0, -2.1457672119140625e-05, 0.0, -0.012202143669128418, 0.0, -0.0024385452270507812, -3.814697265625e-06, -0.00125885009765625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -5.435943603515625e-05, 0.0, -0.0001277923583984375, -3.814697265625e-05, -7.05718994140625e-05, -0.00798797607421875, -0.00016999244689941406, 0.0, -3.24249267578125e-05, -0.025926589965820312, -9.5367431640625e-06, -0.07487869262695312, -4.00543212890625e-05, -0.010523638688027859, -2.3841855067985307e-07], "score": -11.408409782385903, "choice_history": [77, 148, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 97, 166, 25, 133, "game", "<EOS>", "extend", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 166, 25, 133, "<UNK>", "<EOS>", "summon", "<EOS>", 207, 73, 53, 133, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.minions)\n        game.extend(player.minions)\n        for i in range(0, 2):\n            <UNK>.summon(player, game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "model_output": {"hole0": "KoboldGeomancer", "hole2": [{"hole0": "Kobold Geomancer", "hole2": "ALL", "hole1": 2, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "Lt"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "game", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "extend", "_type": "Template23"}, {"body": [{"hole0": {"id": "<UNK>", "_type": "Name"}, "hole2": [{"_type": "Template38"}, {"id": "game", "_type": "Name"}, {"args": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "hole1": "summon", "_type": "Template23"}], "target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"_type": "Template33"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 59}
{"beams": [{"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -0.005023360252380371, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06, -0.0013812780380249023, -1.1920928244535389e-07], "score": -0.1816631828259787, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -1.9947857856750488, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -0.005023360252380371, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06, -0.0013812780380249023, -1.1920928244535389e-07], "score": -2.029968691320356, "choice_history": [77, 145, "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK><UNK>", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -4.828981876373291, 0.0, -2.610682167869527e-05, -1.1920928244535389e-07, -7.43865966796875e-05, 0.0, -0.00039374822517856956, 0.0, -3.814697265625e-06, -0.0046844482421875, -7.62939453125e-06, -7.152555099310121e-07, -8.344646857949556e-07, -3.063631083932705e-05, -2.3841855067985307e-07, -0.0051081180572509766, -1.9073486328125e-06, -0.0002193450927734375, -7.62939453125e-06, -0.0014404058456420898, -1.1920928244535389e-07], "score": -4.993121533903675, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "MAGE", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -5.241504192352295, 0.0, -2.6226038244203664e-05, 0.0, -0.0002155303955078125, 0.0, -0.00033938881824724376, 0.0, -3.814697265625e-06, -0.019214630126953125, -7.62939453125e-06, -5.960462772236497e-07, -5.960462772236497e-07, -3.0755516490899026e-05, -2.3841855067985307e-07, -0.005213141441345215, -1.9073486328125e-06, -0.000213623046875, -7.62939453125e-06, -0.0013356208801269531, -1.1920928244535389e-07], "score": -5.420255094117316, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "ROGUE", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -5.220186233520508, -0.0007076263427734375, -4.885951057076454e-06, -2.0265579223632812e-06, -5.7220458984375e-06, 0.0, -0.0007126330165192485, 0.0, -0.024526596069335938, -0.0003719329833984375, -3.814697265625e-06, -0.006507396697998047, -2.47955322265625e-05, -0.00012969970703125, -1.9073486328125e-05, -0.00011265277862548828, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.1343144178390503, 0.0, -0.0009708404541015625, -5.14984130859375e-05, -0.00017070770263671875, -1.2040138244628906e-05], "score": -5.5577389262111865, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 3, "hole1": 4, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -6.024264335632324, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -0.005023360252380371, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06, -0.0013812780380249023, -1.1920928244535389e-07], "score": -6.202507717331137, "choice_history": [77, 145, "Kor'kron", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "Kor'kronElite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -6.294396877288818, 0.0, -3.3736090699676424e-05, 0.0, -6.67572021484375e-05, 0.0, -0.00037479394813999534, 0.0, -3.814697265625e-06, -0.01093292236328125, -7.62939453125e-06, -5.960462772236497e-07, -5.960462772236497e-07, -3.027869388461113e-05, -2.3841855067985307e-07, -0.005002260208129883, -1.9073486328125e-06, -0.0002117156982421875, -7.62939453125e-06, -0.0014652013778686523, -1.1920928244535389e-07], "score": -6.464676528372443, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "PRIEST", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -6.632152080535889, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.00033032894134521484, -1.1920928244535389e-07], "score": -6.807603624911245, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "taunt", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -1.9947857856750488, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -4.828981876373291, 0.0, -2.610682167869527e-05, -1.1920928244535389e-07, -7.43865966796875e-05, 0.0, -0.00039374822517856956, 0.0, -3.814697265625e-06, -0.0046844482421875, -7.62939453125e-06, -7.152555099310121e-07, -8.344646857949556e-07, -3.063631083932705e-05, -2.3841855067985307e-07, -0.0051081180572509766, -1.9073486328125e-06, -0.0002193450927734375, -7.62939453125e-06, -0.0014404058456420898, -1.1920928244535389e-07], "score": -6.8414270423980525, "choice_history": [77, 145, "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK><UNK>", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "MAGE", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -0.005023360252380371, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06, -6.717946529388428, -1.9073486328125e-06], "score": -6.898230222315732, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "False", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -1.9947857856750488, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -5.241504192352295, 0.0, -2.6226038244203664e-05, 0.0, -0.0002155303955078125, 0.0, -0.00033938881824724376, 0.0, -3.814697265625e-06, -0.019214630126953125, -7.62939453125e-06, -5.960462772236497e-07, -5.960462772236497e-07, -3.0755516490899026e-05, -2.3841855067985307e-07, -0.005213141441345215, -1.9073486328125e-06, -0.000213623046875, -7.62939453125e-06, -0.0013356208801269531, -1.1920928244535389e-07], "score": -7.268560602611693, "choice_history": [77, 145, "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "<UNK><UNK>", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "ROGUE", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -1.9947857856750488, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -5.220186233520508, -0.0007076263427734375, -4.885951057076454e-06, -2.0265579223632812e-06, -5.7220458984375e-06, 0.0, -0.0007126330165192485, 0.0, -0.024526596069335938, -0.0003719329833984375, -3.814697265625e-06, -0.006507396697998047, -2.47955322265625e-05, -0.00012969970703125, -1.9073486328125e-05, -0.00011265277862548828, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -0.1343144178390503, 0.0, -0.0009708404541015625, -5.14984130859375e-05, -0.00017070770263671875, -1.2040138244628906e-05], "score": -7.406044434705564, "choice_history": [77, 145, "<UNK>", "<UNK>", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n", "model_output": {"hole0": "<UNK><UNK>", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 3, "hole1": 4, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -6.69420862197876, 0.0, -0.0006103515625, -0.000186920166015625, -0.024936549365520477, -2.622604142743512e-06, -0.0159149169921875, -0.03506183624267578, -3.814697265625e-06, -0.04185361787676811, -0.008312221616506577, -0.21152591705322266, -0.0004978179931640625, -0.18276214599609375, -1.7523765563964844e-05, -1.1920928244535389e-07, -3.814697265625e-06, -1.9073486328125e-06, -0.024437423795461655, -9.512448741588742e-05, -0.00040435791015625, -0.07434844970703125], "score": -7.490219433253252, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Charge", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, auras=[Aura(Charge(), MinionSelector(Adjacent()))])\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "auras", "hole1": 3, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "Charge", "_type": "Template25"}, {"hole0": "MinionSelector", "hole1": {"id": "Adjacent", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -7.122795581817627, -0.1459304690361023, -0.29124146699905396, -4.52994936495088e-06, -3.063678741455078e-05, -5.9604644775390625e-06, -1.0728830375228426e-06, 0.0, -0.000213623046875, -1.9073486328125e-05, -1.490105023549404e-05, -5.1617604185594246e-05, -2.1457672119140625e-06, -1.9073486328125e-06, -0.000391555018723011, -1.4305012882687151e-05, -0.01616525463759899, 0.0, -1.6927717297221534e-05, 0.0, -3.0517578125e-05, 0.0, -0.0002661942853592336, 0.0, -3.814697265625e-06, -0.0036468505859375, -7.62939453125e-06, -5.960462772236497e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -0.00493466854095459, -1.9073486328125e-06, -0.00020599365234375, -7.62939453125e-06, -0.0013660192489624023, -1.1920928244535389e-07], "score": -7.588908383756369, "choice_history": [77, 145, "Force", "Tank", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class ForceTankElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "model_output": {"hole0": "ForceTankElite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 4, "hole2": "charge", "hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -5.220186233520508, -0.0007076263427734375, -4.885951057076454e-06, -2.0265579223632812e-06, -5.7220458984375e-06, 0.0, -0.0007126330165192485, 0.0, -0.024526596069335938, -0.0003719329833984375, -3.814697265625e-06, -0.006507396697998047, -2.47955322265625e-05, -0.00012969970703125, -1.9073486328125e-05, -0.00011265277862548828, 0.0, -3.0517578125e-05, -2.09808349609375e-05, -3.131784200668335, 0.0, -0.000423431396484375, -1.9073486328125e-05, -0.00011074542999267578, -1.2278556823730469e-05], "score": -8.554569151202031, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "4", "<EOS>", "3", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, taunt=True)\n", "model_output": {"hole0": "<UNK>Elite", "hole2": [{"hole0": "Kor'kron Elite", "hole2": "WARRIOR", "hole1": 4, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 3, "hole1": 4, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}], "index": 60}
{"beams": [{"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -0.1548919677734375, -1.33514404296875e-05, -0.0011876821517944336, -0.0016326898476108909, -1.9073486328125e-06, -0.024722224101424217, -1.1920928955078125e-05, -0.001483917236328125, -1.9073486328125e-05, -0.006483912467956543, -0.00020837783813476562, 0.0, -4.38690185546875e-05, -0.00347900390625], "score": -0.2218351709039439, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -0.33589252829551697, -0.4762149751186371, -0.00376129150390625, -1.71661376953125e-05, -0.345156192779541, -0.00042593071702867746, -5.364418029785156e-05, -9.5367431640625e-06, -0.0038928985595703125], "score": -3.615106071609773, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "have", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(have(), HeroSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "have", "_type": "Template25"}, {"hole0": "HeroSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -1.850197672843933, -0.021044254302978516, -0.16306114196777344, -5.53131103515625e-05, -0.3116163909435272, -0.0005278586759231985, -1.2040138244628906e-05, -5.7220458984375e-06, -0.001605987548828125], "score": -4.797808289151874, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "minions", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(minions(), MinionSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "minions", "_type": "Template25"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -0.33589252829551697, -0.4762149751186371, -0.00376129150390625, -1.71661376953125e-05, -1.57173752784729, -0.00031447375658899546, -1.7642974853515625e-05, -5.7220458984375e-06, -0.003185272216796875], "score": -4.840828507471599, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "have", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(have(), MinionSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "have", "_type": "Template25"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -0.1548919677734375, -1.33514404296875e-05, -0.0011876821517944336, -0.0016326898476108909, -1.9073486328125e-06, -4.651076316833496, -1.537799835205078e-05, -0.00385284423828125, -0.00023651123046875, -0.08435548841953278, -0.0001683235022937879, -1.1920928244535389e-07, -1.52587890625e-05, -0.0026702880859375], "score": -4.9277734002267195, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(2), MinionSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 2, "_type": "Template21"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -0.33589252829551697, -1.9113456010818481, -0.16827939450740814, -5.125993266119622e-05, -0.0904998779296875, -0.06141853332519531, -6.115417636465281e-05, -0.0006121397018432617, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.004568338394165039, -0.0007032155990600586, 0.0, -0.0001506805419921875, -0.001308441162109375, -5.7220458984375e-06, -4.76837158203125e-05, -1.9073486328125e-06, -0.00019073486328125, -2.3841855067985307e-07, -0.0024682283401489258, 0.0, -2.09808349609375e-05, -0.0014781951904296875], "score": -5.02880011442042, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "have", "Spell", "Target", "<EOS>", 59, 157, "Minion", "Selector", "<EOS>", 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(haveSpellTarget(), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "haveSpellTarget", "_type": "Template25"}, {"hole0": "MinionSelector", "hole2": [{"attr": "BEAST", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "hole1": {"id": "IsType", "_type": "Name"}, "_type": "Template19"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -0.1548919677734375, -1.33514404296875e-05, -0.0011876821517944336, -0.0016326898476108909, -1.9073486328125e-06, -5.169257164001465, -3.468989962129854e-05, -0.00412750244140625, -2.47955322265625e-05, -0.1045307070016861, -0.0002231597900390625, 0.0, -2.09808349609375e-05, -0.0029296875], "score": -5.466531558921417, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "Hero", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(0), MinionSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 0, "_type": "Template21"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -0.1548919677734375, -1.33514404296875e-05, -0.0011876821517944336, -0.0016326898476108909, -1.9073486328125e-06, -0.024722224101424217, -1.1920928955078125e-05, -0.001483917236328125, -1.9073486328125e-05, -5.25736141204834, -0.001793503761291504, 0.0, -3.814697265625e-05, -0.00359344482421875], "score": -5.474406515279554, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), HeroSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"hole0": "HeroSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -0.33589252829551697, -0.4762149751186371, -0.00376129150390625, -1.71661376953125e-05, -2.897066593170166, -0.00022828570217825472, -1.990795135498047e-05, -1.33514404296875e-05, -0.008880615234375], "score": -6.171776622128675, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "have", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(have(), SelfSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "have", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -0.33589252829551697, -3.270310878753662, -0.00021946430206298828, -0.012050628662109375, -5.14984130859375e-05, -0.18639858067035675, -0.00036620692117139697, -2.8848648071289062e-05, -3.814697265625e-06, -0.0072002410888671875], "score": -6.262204598026585, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "have", "Attack", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(haveAttack(), HeroSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "haveAttack", "_type": "Template25"}, {"hole0": "HeroSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -6.2615132331848145, 0.0, -0.019771575927734375, -0.0298919677734375, -0.009835902601480484, -2.145764938177308e-06], "score": -6.3390065605418044, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, HUNTER=True)\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "HUNTER", "hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -2.4219369888305664, -8.96453857421875e-05, -2.639666795730591, -0.6592880487442017, -1.537799835205078e-05, -0.132537841796875, -5.7220458984375e-05, -0.5440899133682251, -0.0016610577004030347, -4.816052023670636e-05, -3.814697265625e-06, -0.0026378631591796875], "score": -6.42968800174873, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 63, 171, "Minion", "Selector", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(MinionSelector(), MinionSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "MinionSelector", "_type": "Template25"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -7.832823276519775, -7.62939453125e-06, -0.001361846923828125, -0.00677490234375, -0.0012510712258517742, -2.7418097943154862e-06], "score": -7.86021320350693, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True)\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "charge", "hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -8.156401634216309, -0.0033893585205078125, -1.2516919014160521e-05, -0.0011970112100243568, -0.0001625764707569033, -0.0008847475401125848, -0.016966771334409714, -0.02028656005859375, -6.687641143798828e-05, -0.08553214371204376, -0.0001010894775390625, -1.33514404296875e-05, 0.0, -0.013136863708496094, -0.0002498626708984375, -9.5367431640625e-06, -5.14984130859375e-05, -2.09808349609375e-05, -0.004611968994140625, -2.288818359375e-05, -7.62939453125e-06, -3.242446109652519e-05, 0.0, -0.000457763671875, -6.103515625e-05, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -0.00012600421905517578, 0.0, -0.00034308433532714844, 0.0, -0.00232696533203125, -0.00505828857421875, -7.62939453125e-06, -0.00024282930826302618, -2.3841855067985307e-07, -0.000972747802734375, -1.71661376953125e-05, -0.0001316070556640625, -0.0007776021957397461, -2.1457672119140625e-06], "score": -8.314337693451279, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>"], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 4)\n\n    def MinionCard(self, MinionCard):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n", "model_output": {"hole0": "Leokk", "hole2": [{"hole0": 2, "hole1": 4, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -0.1548919677734375, -1.33514404296875e-05, -0.0011876821517944336, -0.0016326898476108909, -1.9073486328125e-06, -0.024722224101424217, -1.1920928955078125e-05, -0.001483917236328125, -1.9073486328125e-05, -0.006483912467956543, -0.00020837783813476562, 0.0, -4.38690185546875e-05, -5.8501434326171875, -0.0029239654541015625, -0.011274099349975586, -2.1457672119140625e-06, -9.5367431640625e-06, -0.3060140609741211, -0.0001678466796875, -0.29428011178970337, -1.483803629875183, -0.07972061634063721, -0.00958251953125, -7.62939453125e-06, -0.8497854471206665, -0.0008269548416137695, -2.741813204920618e-06, -9.5367431640625e-06, -0.0005016326904296875], "score": -9.107412074723527, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 62, 170, "Aura", "<EOS>", 206, 63, 171, "have", "Minion", "<EOS>", 63, 171, "Self", "Selector", "<EOS>", 205, 71], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector()),\n            Aura(haveMinion(), SelfSelector())])\n", "model_output": {"hole0": "Leokk", "hole2": [{"value": {"args": [{"s": "Leokk", "_type": "Str"}, {"_type": "Template35"}, {"attr": "HUNTER", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "BEAST", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole2": "auras", "hole1": 4, "hole3": {"hole0": "Aura", "hole2": [{"hole0": "Aura", "hole2": [{"_type": "Template36_expr_seq"}], "hole1": [{"hole0": "haveMinion", "_type": "Template25"}, {"hole0": "SelfSelector", "_type": "Template25"}], "_type": "Template24_expr_seq"}], "hole1": [{"hole0": "ChangeAttack", "hole1": 1, "_type": "Template21"}, {"hole0": "MinionSelector", "_type": "Template25"}], "_type": "Template24"}, "_type": "Template14"}]}}], "index": 61}
{"beams": [{"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -0.3500537872314453, -0.001495361328125, -0.0015859752893447876, -5.125993266119622e-05, -8.225440979003906e-06, 0.0, -0.00025054969592019916, -2.3841855067985307e-07, -0.0008854866027832031, 0.0, -0.0037232637405395508, 0.0, -0.001434326171875, 0.0, -0.0001274294627364725, 0.0, -2.86102294921875e-05, -0.0004367828369140625, -0.0008144378662109375, -0.00010001159535022452, -2.9802322387695312e-05, 0.0, 0.0, -0.0005588451749645174, 0.0], "score": -0.36408514247503376, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"hole0": "<UNK> Justice", "hole2": "PALADIN", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -0.051911354064941406, -0.0002689361572265625, -0.000171661376953125, -0.04954834282398224, -0.0005103349685668945, -6.866350304335356e-05, -1.1920928244535389e-07, -6.29425048828125e-05, -8.20159912109375e-05, 0.0, 0.0, -2.288818359375e-05, -1.4066696166992188e-05, -7.62939453125e-06, -0.0010061264038085938, 0.0, -5.53131103515625e-05, -5.7220458984375e-05, -7.2479248046875e-05, -0.0021800994873046875, -3.814697265625e-06, -3.62396240234375e-05, -3.24249267578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.007293701171875, 0.0, -2.6702815375756472e-05, 0.0, -0.0063495635986328125, -0.000202178955078125, -0.000789642333984375, -0.00011455354979261756, -6.794924956921022e-06, 0.0, 0.0, -0.0003095715364906937, 0.0], "score": -1.3481734083787202, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Gallywix's", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -3.105985641479492, -0.0040683746337890625, -0.0045623779296875, -0.06945650279521942, -0.0008680820465087891, -8.523281576344743e-05, -3.576278118089249e-07, -0.0001049041748046875, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-05, -6.103515625e-05, -0.0006201267242431641, -3.814697265625e-06, -0.001495957374572754, 0.0, -3.814697265625e-06, -9.918212890625e-05, -0.0019931793212890625, -7.82012939453125e-05, -1.1444091796875e-05, -5.7220458984375e-05, -2.86102294921875e-05, -3.4332275390625e-05, -1.52587890625e-05, -7.2479248046875e-05, -5.14984130859375e-05, -0.00220489501953125, -1.1444091796875e-05, -0.0009136199951171875, 0.0, -0.3272066116333008, -3.0517578125e-05, -0.274139404296875, 0.0, -2.694117938517593e-05, 0.0, -0.0008907318115234375, -0.003147125244140625, -0.000392913818359375, -0.0003728170704562217, -6.914134246471804e-06, -2.3841855067985307e-07, 0.0, -0.0005687334341928363, 0.0], "score": -5.02679878007504, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Gallywix's", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -3.105985641479492, -0.0040683746337890625, -0.0045623779296875, -0.06945650279521942, -0.0008680820465087891, -8.523281576344743e-05, -3.576278118089249e-07, -0.0001049041748046875, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-05, -6.103515625e-05, -0.0006201267242431641, -3.814697265625e-06, -0.001495957374572754, 0.0, -3.814697265625e-06, -9.918212890625e-05, -0.0019931793212890625, -7.82012939453125e-05, -1.1444091796875e-05, -5.7220458984375e-05, -2.86102294921875e-05, -3.4332275390625e-05, -1.52587890625e-05, -7.2479248046875e-05, -5.14984130859375e-05, -0.00220489501953125, -1.1444091796875e-05, -0.0009136199951171875, 0.0, -1.6577425003051758, -5.7220458984375e-06, -0.14316177368164062, 0.0, -2.8490905606304295e-05, 0.0, -0.00151824951171875, -0.006337165832519531, -0.0005359649658203125, -0.0009713218896649778, -5.125993993715383e-06, -3.576278118089249e-07, 0.0, -0.0006542797782458365, 0.0], "score": -6.230976783993981, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Gallywix's", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, MINION_TYPE.DRAGON)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "DRAGON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -0.3500537872314453, -0.001495361328125, -0.0015859752893447876, -5.125993266119622e-05, -8.225440979003906e-06, 0.0, -0.00025054969592019916, -2.3841855067985307e-07, -0.0008854866027832031, 0.0, -6.090547561645508, -7.62939453125e-06, -0.004405975341796875, 0.0, -0.000109550790512003, 0.0, -3.814697265625e-05, -0.0001239776611328125, -0.0010623931884765625, -0.00013279033009894192, -1.9073484509135596e-05, 0.0, 0.0, -0.0003466260386630893, 0.0], "score": -6.453625357922448, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "RARE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"hole0": "<UNK> Justice", "hole2": "PALADIN", "hole1": 1, "hole3": "RARE", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -3.105985641479492, -0.0040683746337890625, -0.0045623779296875, -0.06945650279521942, -0.0008680820465087891, -8.523281576344743e-05, -3.576278118089249e-07, -0.0001049041748046875, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-05, -6.103515625e-05, -0.0006201267242431641, -3.814697265625e-06, -0.001495957374572754, 0.0, -3.814697265625e-06, -9.918212890625e-05, -0.0019931793212890625, -7.82012939453125e-05, -1.1444091796875e-05, -5.7220458984375e-05, -2.86102294921875e-05, -3.4332275390625e-05, -1.52587890625e-05, -7.2479248046875e-05, -5.14984130859375e-05, -0.00220489501953125, -1.1444091796875e-05, -0.0009136199951171875, 0.0, -0.3272066116333008, -3.0517578125e-05, -1.73004150390625, 0.0, -2.1338444639695808e-05, 0.0, -0.000102996826171875, -0.17194175720214844, -0.0006084442138671875, -0.00017617580306250602, -1.2040118235745467e-05, -1.1920928244535389e-07, 0.0, -0.0006077166181057692, 0.0], "score": -6.650765053009074, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Gallywix's", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "TOTEM", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -0.051911354064941406, -0.0002689361572265625, -0.000171661376953125, -5.4194512367248535, -0.0003261566162109375, -3.6835510400123894e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -6.866455078125e-05, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -9.775161743164062e-06, -7.62939453125e-06, -0.0009658336639404297, 0.0, -5.7220458984375e-05, -6.103515625e-05, -7.2479248046875e-05, -0.0020751953125, -3.814697265625e-06, -3.4332275390625e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.007839202880859375, 0.0, -2.5510735213174485e-05, 0.0, -0.006855010986328125, -0.0001983642578125, -0.0007686614990234375, -0.00011348078987793997, -7.033342626527883e-06, 0.0, 0.0, -0.00030969144427217543, 0.0], "score": -6.71871979574626, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Battlecry", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Battlecry Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Battlecry Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -0.051911354064941406, -0.0002689361572265625, -0.000171661376953125, -5.340075969696045, -0.09857412427663803, -8.26120376586914e-05, -0.0001220703125, -0.00017547607421875, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -3.635883331298828e-05, -3.814697265625e-06, -0.001030564308166504, 0.0, -3.814697265625e-05, -4.38690185546875e-05, -4.57763671875e-05, -0.003021240234375, -3.814697265625e-06, -4.00543212890625e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0072765350341796875, 0.0, -1.8358190573053434e-05, 0.0, -0.0012340545654296875, -8.0108642578125e-05, -0.00069427490234375, -0.0001058522320818156, -7.987013304955326e-06, 0.0, 0.0, -0.0003281724639236927, 0.0], "score": -6.732401174822201, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, " ", "<UNK>", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(' <UNK>', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.\n            FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": " <UNK>", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -6.589623928070068, -0.0037636321503669024, -7.772143726469949e-05, -5.447763396659866e-05, -7.152555099310121e-07, 0.0, -0.1582469940185547, -0.0018672943115234375, -0.0020362152718007565, -5.841230449732393e-05, -1.0132789611816406e-05, 0.0, -0.0001910868741106242, -3.576278118089249e-07, -0.0008854866027832031, 0.0, -0.004026532173156738, 0.0, -0.0014972686767578125, 0.0, -0.00012885962496511638, 0.0, -2.86102294921875e-05, -0.0004177093505859375, -0.0008182525634765625, -9.83428253675811e-05, -2.9921531677246094e-05, 0.0, 0.0, -0.0005353738670237362, 0.0], "score": -6.7649495884176645, "choice_history": [77, 145, "<UNK>", "<UNK>", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK><UNK>(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK><UNK>", "hole2": [{"hole0": "<UNK> Justice", "hole2": "PALADIN", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -0.051911354064941406, -0.0002689361572265625, -0.000171661376953125, -5.616410732269287, -0.0005255937576293945, -5.352408697945066e-05, -1.1920928244535389e-07, -4.57763671875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -1.5497207641601562e-05, -7.62939453125e-06, -0.0010802745819091797, 0.0, -4.76837158203125e-05, -7.2479248046875e-05, -5.91278076171875e-05, -0.0018901824951171875, -3.814697265625e-06, -3.814697265625e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.007839202880859375, 0.0, -2.5629942683735862e-05, 0.0, -0.006443023681640625, -0.00019073486328125, -0.000759124755859375, -0.00011240802996326238, -7.033342626527883e-06, 0.0, 0.0, -0.0003093342238571495, 0.0], "score": -6.915356233921379, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "PALADIN", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('PALADIN Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "PALADIN Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -3.105985641479492, -0.0040683746337890625, -0.0045623779296875, -0.06945650279521942, -0.0008680820465087891, -8.523281576344743e-05, -3.576278118089249e-07, -0.0001049041748046875, -0.000164031982421875, -3.814697265625e-06, -1.9073486328125e-05, -6.103515625e-05, -0.0006201267242431641, -3.814697265625e-06, -0.001495957374572754, 0.0, -3.814697265625e-06, -9.918212890625e-05, -0.0019931793212890625, -7.82012939453125e-05, -1.1444091796875e-05, -5.7220458984375e-05, -2.86102294921875e-05, -3.4332275390625e-05, -1.52587890625e-05, -7.2479248046875e-05, -5.14984130859375e-05, -0.00220489501953125, -1.1444091796875e-05, -0.0009136199951171875, 0.0, -2.6243391036987305, 0.0, -0.09868240356445312, 0.0, -3.1351912184618413e-05, 0.0, -0.0011348724365234375, -0.004464149475097656, -0.0004940032958984375, -0.0007247679168358445, -8.225431884056889e-06, -2.3841855067985307e-07, 0.0, -0.0005518147954717278, 0.0], "score": -7.150446762401515, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Gallywix's", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True, MINION_TYPE.DEMON)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}, {"attr": "DEMON", "value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -0.3500537872314453, -0.001495361328125, -0.0015859752893447876, -5.125993266119622e-05, -8.225440979003906e-06, 0.0, -0.00025054969592019916, -2.3841855067985307e-07, -0.0008854866027832031, 0.0, -0.0037232637405395508, 0.0, -6.8427534103393555, 0.0, -7.29556631995365e-05, 0.0, -1.1444091796875e-05, -0.0014810562133789062, -0.000988006591796875, -8.940297266235575e-05, -3.170967102050781e-05, 0.0, 0.0, -0.0005912553169764578, 0.0], "score": -7.20657413767529, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"hole0": "<UNK> Justice", "hole2": "PALADIN", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -0.3500537872314453, -0.001495361328125, -7.09813928604126, -0.00040686127613298595, -6.639936327701434e-05, 0.0, -0.000246605952270329, -2.3841855067985307e-07, -0.0009311437606811523, 0.0, -0.0037614107131958008, 0.0, -0.0016689300537109375, 0.0, -0.00012421113206073642, 0.0, -3.24249267578125e-05, -0.0004520416259765625, -0.0008182525634765625, -0.00010168035078095272, -2.777576446533203e-05, 0.0, 0.0, -0.000551099656149745, 0.0], "score": -7.46137825929307, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Light", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Light Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"hole0": "Light Justice", "hole2": "PALADIN", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -0.3500537872314453, -0.001495361328125, -7.471973419189453, -0.06391045451164246, -0.014499664306640625, -7.355205889325589e-05, -3.576278118089249e-07, -0.0008789300918579102, 0.0, -0.0038224458694458008, 0.0, -0.0012989044189453125, 0.0, -0.00013589220179710537, 0.0, -3.24249267578125e-05, -0.0004444122314453125, -0.0008296966552734375, -9.870042413240299e-05, -3.170967102050781e-05, 0.0, 0.0, -0.0005943517317064106, 0.0], "score": -7.912674813611147, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(' Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"hole0": " Justice", "hole2": "PALADIN", "hole1": 1, "hole3": "FREE", "_type": "Template6"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Weapon", "hole2": 4, "hole1": 1, "_type": "Template20"}]}}, {"score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -1.2237730026245117, -7.62939453125e-06, -1.9073486328125e-06, -0.0002079010009765625, -0.00045013427734375, -0.051911354064941406, -0.0002689361572265625, -0.000171661376953125, -0.04954834282398224, -0.0005103349685668945, -6.866350304335356e-05, -1.1920928244535389e-07, -6.29425048828125e-05, -8.20159912109375e-05, 0.0, 0.0, -2.288818359375e-05, -1.4066696166992188e-05, -7.62939453125e-06, -0.0010061264038085938, 0.0, -5.53131103515625e-05, -5.7220458984375e-05, -7.2479248046875e-05, -0.0021800994873046875, -3.814697265625e-06, -3.62396240234375e-05, -3.24249267578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.007293701171875, 0.0, -2.6702815375756472e-05, 0.0, -5.069011688232422, -0.0012359619140625, -1.9073486328125e-06, -2.09808349609375e-05, -3.4332275390625e-05, 0.0, -1.3579742908477783, -1.5497195136049413e-06, -0.984074592590332, -0.06093025207519531, -0.009344100952148438, -3.0517578125e-05, -0.42235565185546875, -3.814697265625e-06, -0.7403467893600464, 0.0, -0.017430424690246582, 0.0, -2.86102294921875e-05, -0.0014781951904296875, -3.814697265625e-06, -0.0060901641845703125, 0.0, -0.0064105987548828125, -1.9073486328125e-06, -0.13089203834533691, 0.0, -0.20986127853393555, 0.0, -0.6640143394470215, -3.814697265625e-06, -0.025055885314941406, -0.04599475860595703, -3.62396240234375e-05, -3.814697265625e-06, -0.4606679677963257, 0.0, -0.6149396896362305, 0.0, -3.814697265625e-06, -0.010483741760253906, -1.9073486328125e-06, -0.051868438720703125, -0.18311715126037598, 0.0], "score": -12.414156129342182, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Gallywix's", " ", "Justice", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 218, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>"], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, True)\n\n    def create_weapon(self, player):\n        <UNK> = copy.copy(self.target.divine_shield)\n        targets.append(player.minions)\n", "model_output": {"hole0": "<UNK>Justice", "hole2": [{"value": {"args": [{"s": "Gallywix's Justice", "_type": "Str"}, {"_type": "Template34"}, {"attr": "PALADIN", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "WeaponCard", "hole3": "create_weapon", "_type": "Template0", "hole4": "player", "hole6": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"args": [{"attr": "divine_shield", "value": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"attr": "copy", "value": {"id": "copy", "_type": "Name"}, "_type": "Attribute"}, "_type": "Call"}, "_type": "Assign"}, {"hole0": {"id": "targets", "_type": "Name"}, "hole2": [{"attr": "minions", "value": {"_type": "Template38"}, "_type": "Attribute"}], "hole1": "append", "_type": "Template23"}]}}], "index": 62}
{"beams": [{"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -0.028873443603515625, -9.5367431640625e-06, -5.328655970515683e-05, -4.768370445162873e-07, -7.343290781136602e-05, 0.0, -0.01643967628479004, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.0003972053527832031, 0.0], "score": -0.06267401753831336, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -3.5954294204711914, -0.00099945068359375, -0.0007319375872612, -2.8848648071289062e-05, -9.417533874511719e-06, -2.3841855067985307e-07, -0.19840610027313232, -2.3841855067985307e-07, -0.12932586669921875, -1.9073486328125e-05, -1.9073486328125e-06, -0.027575135231018066, -4.76837158203125e-05, -2.86102294921875e-05, -5.53131103515625e-05, -9.942054748535156e-05, -2.3841855067985307e-07, -0.0002002716064453125, -1.9073486328125e-06, -0.0586470365524292, 0.0, -0.0002593994140625, -4.76837158203125e-05, -0.0001664161536609754, -7.271760750882095e-06], "score": -4.02877661017223, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 6, "hole1": 6, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -0.028873443603515625, -9.5367431640625e-06, -5.328655970515683e-05, -4.768370445162873e-07, -7.343290781136602e-05, 0.0, -4.187832832336426, -1.9073486328125e-06, -0.0001583099365234375, -1.33514404296875e-05, -0.00044536590576171875, 0.0], "score": -4.234149666418318, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, charge=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "charge", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -5.436155796051025, -0.0030640363693237305, -0.0011140411952510476, -0.00028955924790352583, -2.3841855067985307e-07, -1.087784767150879e-06, -5.245207830739673e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000362396240234375, -5.91278076171875e-05, -0.00043594837188720703, -0.00010597705841064453, -0.0004884004010818899, -0.0001583099365234375, -0.00023388858244288713, -0.0005054473876953125, -0.0043663871474564075, -7.62939453125e-06, -0.00023281572794076055, -1.1920928244535389e-07, -5.352497100830078e-05, 0.0, -0.00026667118072509766, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -3.874296817230061e-05, 0.0, -5.7220458984375e-06, -0.029048919677734375, -9.5367431640625e-06, -5.316735041560605e-05, -4.768370445162873e-07, -7.152555917855352e-05, 0.0, -0.016269922256469727, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.0003972053527832031, 0.0], "score": -5.494105134914967, "choice_history": [77, 145, "<UNK>", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class <UNK>OfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "<UNK>OfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -3.5954294204711914, -0.00099945068359375, -0.0007319375872612, -2.8848648071289062e-05, -9.417533874511719e-06, -2.3841855067985307e-07, -1.71504545211792, 0.0, -0.07509613037109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.04770958423614502, -8.7738037109375e-05, -2.86102294921875e-05, -2.6702880859375e-05, -0.00011456012725830078, -1.1920928244535389e-07, -0.000308990478515625, -1.9073486328125e-06, -0.09438419342041016, 0.0, -0.000270843505859375, -3.814697265625e-05, -0.0001423358917236328, -4.887576324108522e-06], "score": -5.547175848774621, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "6", "<EOS>", "5", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, charge=True, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 5, "hole1": 6, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -5.9695820808410645, -0.0015707015991210938, -0.01237989217042923, -3.814697265625e-06, -0.0007946680998429656, 0.0, -0.00013554096221923828, -1.9073486328125e-06, -0.0002186298370361328, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -3.1232797482516617e-05, 0.0, -3.814697265625e-06, -0.02886199951171875, -9.5367431640625e-06, -5.1617629651445895e-05, -3.576278118089249e-07, -7.35521171009168e-05, 0.0, -0.01715397834777832, 0.0, -0.0001316070556640625, -9.5367431640625e-06, -0.0003972053527832031, 0.0], "score": -6.042793167972263, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -6.237674713134766, 0.0, -0.002225514966994524, 0.0, -0.00015079975128173828, -1.9073486328125e-06, -0.0002040863037109375, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.8623758882749826e-05, 0.0, -5.7220458984375e-06, -0.037387847900390625, -9.5367431640625e-06, -4.947186243953183e-05, -4.768370445162873e-07, -7.379053568001837e-05, 0.0, -0.015608072280883789, 0.0, -0.0001277923583984375, -9.5367431640625e-06, -0.0003914833068847656, 0.0], "score": -6.305335147625385, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "6", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the 6', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the 6", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -6.25779914855957, -0.012107590213418007, -0.00045812129974365234, -2.0325183868408203e-05, -8.463859558105469e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010814666748046875, -4.76837158203125e-05, -0.0004169940948486328, -8.666515350341797e-05, -0.0005015134229324758, -0.0001087188720703125, -0.00024330611631739885, -0.00047969818115234375, -0.005446767900139093, -3.814697265625e-06, -0.0002760865609161556, 0.0, -7.450580596923828e-05, 0.0, -0.0003070831298828125, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -3.206725523341447e-05, 0.0, -3.814697265625e-06, -0.029447555541992188, -9.5367431640625e-06, -5.137921107234433e-05, -4.768370445162873e-07, -7.343290781136602e-05, 0.0, -0.01633000373840332, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.0003914833068847656, 0.0], "score": -6.330560702386606, "choice_history": [77, 145, "Lord", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -3.5954294204711914, -0.00099945068359375, -0.0007319375872612, -2.8848648071289062e-05, -9.417533874511719e-06, -2.3841855067985307e-07, -0.19840610027313232, -2.3841855067985307e-07, -3.171170234680176, -0.000347137451171875, 0.0, -0.16122734546661377, -0.000186920166015625, -4.76837158203125e-05, -4.9591064453125e-05, -0.00012052059173583984, -7.152555099310121e-07, -0.009667396545410156, -1.9073486328125e-06, -0.08642494678497314, -1.9073486328125e-06, -0.0010223388671875, -7.82012939453125e-05, -0.00024509429931640625, -5.245203283266164e-06, -0.016173362731933594, -1.9073486328125e-06, -0.06714510917663574, -1.9073486328125e-06, -0.0007228851318359375, -0.0001049041748046875, -0.0003453492827247828, -1.1324854312988464e-05, -0.012098312377929688, -1.9073486328125e-06, -0.0843583345413208, -1.9073486328125e-06, -0.0009632110595703125, -0.00040435791015625, -0.000614166259765625, -1.3947435945738107e-05], "score": -7.425853455247875, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>", 215, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True, taunt=True, taunt=True, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 6, "hole1": 6, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -3.5954294204711914, -0.00099945068359375, -0.0007319375872612, -2.8848648071289062e-05, -9.417533874511719e-06, -2.3841855067985307e-07, -0.19840610027313232, -2.3841855067985307e-07, -0.12932586669921875, -1.9073486328125e-05, -1.9073486328125e-06, -0.027575135231018066, -4.76837158203125e-05, -2.86102294921875e-05, -5.53131103515625e-05, -9.942054748535156e-05, -2.3841855067985307e-07, -0.0002002716064453125, -1.9073486328125e-06, -3.4943549633026123, -1.9073486328125e-06, -0.000980377197265625, -0.0010509490966796875, -9.393691289005801e-05, -1.9073468138230965e-06], "score": -7.4661328437804, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>", 213, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True, charge=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 6, "hole1": 6, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -3.5954294204711914, -0.00099945068359375, -0.0007319375872612, -2.8848648071289062e-05, -9.417533874511719e-06, -2.3841855067985307e-07, -0.19840610027313232, -2.3841855067985307e-07, -3.4434919357299805, -0.0003185272216796875, 0.0, -0.1917095184326172, -1.9073486328125e-05, -4.38690185546875e-05, -2.09808349609375e-05, -0.00018513202667236328, -2.3841855067985307e-07, -0.009258270263671875, 0.0, -0.026318907737731934, 0.0, -0.0005054473876953125, -8.96453857421875e-05, -0.00018310546875, -5.9604562920867465e-06, -0.02185344696044922, -1.9073486328125e-06, -0.03223145008087158, 0.0, -0.00022125244140625, -0.0001659393310546875, -0.0006678104400634766, -8.344629350176547e-06], "score": -7.539594137934586, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 96, 162, "Minion", "<EOS>", "6", "<EOS>", "6", "<EOS>", 214, 76, 195, "charge", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>", 76, 195, "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True, taunt=True, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": "Minion", "hole2": 6, "hole1": 6, "hole3": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "_type": "Template20"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -7.531373500823975, -0.00012611920828931034, -0.004693031311035156, -0.0001068115234375, -0.0075081586837768555, -0.0004968643188476562, -0.00696503184735775, -3.814697265625e-06, -0.00021267111878842115, 0.0, -4.4226646423339844e-05, 0.0, -0.0002442598051857203, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.494184395298362e-05, 0.0, -5.7220458984375e-06, -0.030038833618164062, -9.5367431640625e-06, -5.507469904841855e-05, -3.576278118089249e-07, -7.152555917855352e-05, 0.0, -0.016206026077270508, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.0003991127014160156, 0.0], "score": -7.608350371206029, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "of", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('of of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "of of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -7.554799556732178, -5.245203283266164e-06, -8.314847946166992e-06, -4.88758041683468e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.001140594482421875, -5.340576171875e-05, -0.0005372762680053711, -8.475780487060547e-05, -0.0004265307798050344, -0.0001239776611328125, -0.00021803376148454845, -0.00037384033203125, -0.005348902195692062, -5.7220458984375e-06, -0.00026821932988241315, 0.0, -7.641315460205078e-05, 0.0, -0.00024187564849853516, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.206725523341447e-05, 0.0, -3.814697265625e-06, -0.027837753295898438, -9.5367431640625e-06, -5.137921107234433e-05, -4.768370445162873e-07, -7.331369852181524e-05, 0.0, -0.016362428665161133, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.0003933906555175781, 0.0], "score": -7.615894380405166, "choice_history": [77, 145, "Lord", "Of", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordOfArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -0.028873443603515625, -9.5367431640625e-06, -5.328655970515683e-05, -4.768370445162873e-07, -7.343290781136602e-05, 0.0, -8.04830551147461, -1.9073486328125e-06, -0.001766204833984375, -2.47955322265625e-05, -0.00033605098724365234, 0.0], "score": -8.096132369627242, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, divine_shield=True)\n", "model_output": {"hole0": "LordOfTheArena", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "divine_shield", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}, {"score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -8.060689926147461, -0.00018405838636681437, -4.4673681259155273e-05, -5.125998541188892e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0041656494140625, -6.29425048828125e-05, -0.0007632970809936523, -7.700920104980469e-05, -0.0005892514600418508, -0.0001125335693359375, -0.00018286700651515275, -0.0003662109375, -0.005447832401841879, -5.7220458984375e-06, -0.00025463016936555505, 0.0, -7.641315460205078e-05, 0.0, -0.0002925395965576172, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.4213022445328534e-05, 0.0, -5.7220458984375e-06, -0.030290603637695312, -9.5367431640625e-06, -5.1498420361895114e-05, -4.768370445162873e-07, -7.35521171009168e-05, 0.0, -0.01650261878967285, 0.0, -0.0001277923583984375, -9.5367431640625e-06, -0.0003952980041503906, 0.0], "score": -8.129116556220538, "choice_history": [77, 145, "Lord", "Of", "The", "the", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"], "inferred_code": "class LordOfThethe(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "model_output": {"hole0": "LordOfThethe", "hole2": [{"hole0": "Lord of the Arena", "hole2": "ALL", "hole1": 6, "hole3": "COMMON", "_type": "Template6"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 6, "hole2": "taunt", "hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "_type": "Template14"}]}}], "index": 63}
{"beams": [{"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -0.0006194304442033172, -2.1457672119140625e-06, -6.151010165922344e-05, -5.14984130859375e-05, -0.0001850128173828125, -2.09808349609375e-05, -8.58306884765625e-05, -0.0004444122314453125, -0.0002701109042391181, -8.344646857949556e-07, -0.000244140625, -2.288818359375e-05, -1.71661376953125e-05, -0.0011796948965638876, 0.0, -5.841255187988281e-06, 0.0, -6.639886123593897e-05, -1.1920928244535389e-07, -0.00086212158203125, -0.0003070831298828125, -2.86102294921875e-05, -1.4305111108114943e-05, -8.344646857949556e-07, -0.0006489753723144531, -1.4901099348207936e-05], "score": -0.01673952342274987, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -5.434110641479492, -2.6702880859375e-05, -0.02005767822265625, -2.6702880859375e-05, -5.7220458984375e-06, -1.3232143828645349e-05, -0.00039301515789702535, -2.503394853192731e-06, -3.9934315282152966e-05, -6.67572021484375e-05, -0.000797271728515625, -1.52587890625e-05, -7.43865966796875e-05, -0.0005130767822265625, -0.0002413939801044762, -5.960462772236497e-07, -0.00013387203216552734, -1.9073486328125e-06, -0.0012902020243927836, 0.0, -0.000244140625, -0.0005550384521484375, -1.52587890625e-05, -1.2874577805632725e-05, -5.960462772236497e-07, -0.00041496753692626953, -1.4543494216923136e-05], "score": -5.463404072696335, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -5.566898345947266, -0.003620147705078125, -0.0003853919915854931, -6.675719760096399e-06, -0.003929495811462402, -3.0398361559491605e-05, -0.4118915796279907, -0.20409393310546875, -0.29856276512145996, -0.0001766681671142578, -3.814697265625e-06, -0.19379234313964844, -0.000202178955078125, -7.033334895822918e-06, -2.861022494471399e-06, -6.699562072753906e-05, -1.3947477782494389e-05], "score": -6.683852817167008, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -7.110115051269531, -6.29425048828125e-05, -1.9073486328125e-06, -1.9073468138230965e-06, -0.0005482504493556917, -1.3470649719238281e-05, -2.5152843591058627e-05, -8.58306884765625e-05, -0.000644683837890625, -0.0002460479736328125, -2.09808349609375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.022740960121154785, -1.1920928244535389e-07, -7.748603820800781e-06, 0.0, -4.0888502553571016e-05, -1.1920928244535389e-07, -0.00144195556640625, -0.0004825592041015625, -7.82012939453125e-05, -5.602834789897315e-06, -3.933904736186378e-06, -0.0002696514129638672, -1.0967213711410295e-05], "score": -7.146004600942419, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -0.0006194304442033172, -2.1457672119140625e-06, -6.151010165922344e-05, -5.14984130859375e-05, -0.0001850128173828125, -2.09808349609375e-05, -8.58306884765625e-05, -0.0004444122314453125, -0.0002701109042391181, -8.344646857949556e-07, -0.000244140625, -2.288818359375e-05, -1.71661376953125e-05, -0.0011796948965638876, 0.0, -5.841255187988281e-06, 0.0, -6.639886123593897e-05, -1.1920928244535389e-07, -0.00086212158203125, -0.0003070831298828125, -2.86102294921875e-05, -1.4305111108114943e-05, -8.344646857949556e-07, -7.345644474029541, -9.179109838441946e-06], "score": -7.361729300090467, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 2, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -5.566898345947266, -0.003620147705078125, -0.0003853919915854931, -6.675719760096399e-06, -0.003929495811462402, -3.0398361559491605e-05, -1.128816843032837, -2.300739288330078e-05, -9.5367431640625e-06, -0.7222506999969482, -4.172325134277344e-06, -2.09808349609375e-05, 0.0, -0.04963874816894531, -0.0002727508544921875, -3.814697265625e-06, -0.008977890014648438, -0.00525665283203125, -0.017368316650390625, -1.1444091796875e-05, 0.0, -1.2397689715726301e-05, -0.000972545356489718, -2.1457672119140625e-06, -5.125868119648658e-05, -4.00543212890625e-05, -0.0001697540283203125, -4.1961669921875e-05, -0.0001277923583984375, -0.0003452301025390625, -0.00040575291495770216, -1.0728830375228426e-06, -0.000164031982421875, -2.47955322265625e-05, -1.71661376953125e-05, -0.001427411800250411, 0.0], "score": -7.511496925758252, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "Minion", "Card", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def MinionCard(self, MinionCard):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -5.566898345947266, -0.003620147705078125, -0.0003853919915854931, -6.675719760096399e-06, -0.003929495811462402, -3.0398361559491605e-05, -1.128816843032837, -2.300739288330078e-05, -9.5367431640625e-06, -0.7158581018447876, -7.236003875732422e-05, -3.814697265625e-06, -0.1670093536376953, -0.0001354217529296875, -1.1801687833212782e-05, -3.218649908376392e-06, -0.00014531612396240234, -1.2278553185751662e-05], "score": -7.587139751052291, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "Minion", "Card", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def MinionCard(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "MinionCard", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -5.566898345947266, -0.003620147705078125, -0.0003853919915854931, -6.675719760096399e-06, -0.003929495811462402, -3.0398361559491605e-05, -0.4118915796279907, -0.20409393310546875, -1.4050722122192383, -6.079673767089844e-06, -3.0517578125e-05, 0.0, -0.06777191162109375, -0.0004425048828125, -3.814697265625e-06, -0.023401260375976562, -0.002880096435546875, -0.013669967651367188, -1.33514404296875e-05, 0.0, -1.1801649634435307e-05, -0.0010212818160653114, -2.2649765014648438e-06, -4.660974445869215e-05, -4.1961669921875e-05, -0.0001773834228515625, -4.1961669921875e-05, -0.000118255615234375, -0.0003414154052734375, -0.0003882322052959353, -1.0728830375228426e-06, -0.00016021728515625, -2.6702880859375e-05, -1.71661376953125e-05, -0.001295566326007247, 0.0], "score": -7.708007819894078, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def create_minion(self, MinionCard):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "MinionCard", "hole6": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -0.0006194304442033172, -2.1457672119140625e-06, -6.151010165922344e-05, -5.14984130859375e-05, -0.0001850128173828125, -2.09808349609375e-05, -8.58306884765625e-05, -0.0004444122314453125, -0.0002701109042391181, -8.344646857949556e-07, -0.000244140625, -2.288818359375e-05, -1.71661376953125e-05, -7.812498569488525, 0.0, -2.3603439331054688e-05, 0.0, -3.564313010429032e-05, -1.1920928244535389e-07, -0.0020465850830078125, -0.000293731689453125, -4.9591064453125e-05, -1.740455445542466e-05, -1.311301275563892e-06, -0.0007206201553344727, -1.7881295207189396e-05], "score": -7.829315698622047, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MURLOC", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -7.722733020782471, -0.6265422701835632, -0.00012969970703125, -0.0001163482666015625, -3.24249267578125e-05, -0.0001277923583984375, -0.0004901885986328125, -0.0004066942201461643, -1.1920922133867862e-06, -0.0002117156982421875, -2.09808349609375e-05, -1.71661376953125e-05, -0.0014176367549225688, 0.0, -5.841255187988281e-06, 0.0, -6.425316678360105e-05, -1.1920928244535389e-07, -0.0008602142333984375, -0.000293731689453125, -2.47955322265625e-05, -1.4662737157777883e-05, -5.960462772236497e-07, -0.0007257461547851562, -1.013275596051244e-05], "score": -8.365831899940126, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('MechanicalDragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "MechanicalDragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -5.566898345947266, -0.003620147705078125, -0.0003853919915854931, -6.675719760096399e-06, -0.003929495811462402, -3.0398361559491605e-05, -0.4118915796279907, -1.6917533874511719, -0.0021305084228515625, -0.4677407145500183, -0.00027930736541748047, -3.814697265625e-06, -0.3032093048095703, -0.0003757476806640625, -9.059892363438848e-06, -2.9802317840221804e-06, -8.249282836914062e-05, -7.867811291362159e-06], "score": -8.45252546226584, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "create_minion", "Card", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def create_minionCard(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minionCard", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -7.722733020782471, -0.7645109295845032, -0.006720347795635462, -4.57763671875e-05, -0.0002574920654296875, -2.47955322265625e-05, -6.103515625e-05, -0.0002498626708984375, -0.0003295858041383326, -8.344646857949556e-07, -0.0001964569091796875, -2.47955322265625e-05, -1.71661376953125e-05, -0.0014611480291932821, 0.0, -5.841255187988281e-06, 0.0, -6.77100324537605e-05, -1.1920928244535389e-07, -0.0008563995361328125, -0.000301361083984375, -2.47955322265625e-05, -1.4424319488171022e-05, -7.152555099310121e-07, -0.0007140636444091797, -1.3351394954952411e-05], "score": -8.510216704693327, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", "Dragonling", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('MechanicalDragonlingDragonling', 1,\n            CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, True, minion_type=\n            MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "MechanicalDragonlingDragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -0.0006194304442033172, -2.1457672119140625e-06, -6.151010165922344e-05, -5.14984130859375e-05, -0.0001850128173828125, -2.09808349609375e-05, -8.58306884765625e-05, -0.0004444122314453125, -8.59465217590332, -1.9907789464923553e-05, -0.000274658203125, -1.33514404296875e-05, -1.33514404296875e-05, -0.00117671478074044, 0.0, -7.62939453125e-06, 0.0, -6.69950240990147e-05, -1.1920928244535389e-07, -0.000835418701171875, -0.0002841949462890625, -2.86102294921875e-05, -1.4424319488171022e-05, -8.344646857949556e-07, -0.0006204843521118164, -1.3828227565682027e-05], "score": -8.61107819632263, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "Dragonling", "<EOS>", 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "MECH", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -0.0006194304442033172, -2.1457672119140625e-06, -6.151010165922344e-05, -5.14984130859375e-05, -0.0001850128173828125, -2.09808349609375e-05, -8.58306884765625e-05, -0.0004444122314453125, -0.0002701109042391181, -8.344646857949556e-07, -0.000244140625, -2.288818359375e-05, -1.71661376953125e-05, -8.611642837524414, 0.0, -4.780292510986328e-05, 0.0, -2.682194099179469e-05, 0.0, -0.0010700225830078125, -0.000255584716796875, -2.6702880859375e-05, -1.8119808373739943e-05, -1.4305104514278355e-06, -0.0009219646453857422, -2.145751568605192e-05], "score": -8.627643383262694, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "minions", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.minions)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "keywords": [{"hole0": "minions", "_type": "Template22"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"hole0": 2, "hole1": 1, "_type": "Template16"}]}}, {"score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -5.566898345947266, -0.003620147705078125, -0.0003853919915854931, -6.675719760096399e-06, -0.003929495811462402, -3.0398361559491605e-05, -0.4118915796279907, -0.20409393310546875, -0.29856276512145996, -0.0001766681671142578, -3.814697265625e-06, -1.7385673522949219, -0.0005245208740234375, -1.9073486328125e-06, -0.46773719787597656, -4.76837158203125e-05, -0.0015010833740234375, -0.0001277923583984375, -3.814697265625e-06, -1.9430925021879375e-05, -0.0009164725197479129, -2.503394853192731e-06, -3.5523738915799186e-05, -6.67572021484375e-05, -0.000606536865234375, -2.288818359375e-05, -8.58306884765625e-05, -0.00030517578125, -0.00027393511845730245, -7.152555099310121e-07], "score": -8.700614579828652, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>"], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        return Minion(2, 1)\n\n    def create_minion(self, player):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n", "model_output": {"hole0": "MechanicalDragonling", "hole2": [{"hole0": 2, "hole1": 1, "_type": "Template16"}], "hole1": "MinionCard", "hole3": "create_minion", "_type": "Template0", "hole4": "player", "hole6": [{"value": {"args": [{"s": "Mechanical Dragonling", "_type": "Str"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"value": true, "_type": "NameConstant"}], "func": {"_type": "Template18"}, "_type": "Call"}, "_type": "Expr"}]}}], "index": 64}
{"beams": [{"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -0.004244327079504728, -1.9073486328125e-06, -0.0011883974075317383, 0.0, -1.9073486328125e-06, -0.0002193450927734375, -0.0001163482666015625, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -0.0001296996488235891, 0.0, -3.0517578125e-05, -0.020254135131835938, -1.9073486328125e-06, -0.0001802320621209219, -0.0001089572615455836, -9.5367431640625e-05, 0.0, -0.0001316070556640625, -1.9073486328125e-06], "score": -0.049831523259477706, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -0.004244327079504728, -1.9073486328125e-06, -0.0011883974075317383, 0.0, -1.9073486328125e-06, -0.0002193450927734375, -0.0001163482666015625, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -0.0001296996488235891, 0.0, -3.0517578125e-05, -4.003809928894043, -8.58306884765625e-05, -1.71661376953125e-05, -1.52587890625e-05, -1.9073486328125e-06], "score": -4.032987501477315, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"_type": "Template33"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -5.612795829772949, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00024280555953737348, 0.0, -0.000141143798828125, -0.0001010894775390625, -5.91278076171875e-05, -9.775161743164062e-06, -1.1920922133867862e-06, -0.0029993057250976562, -1.9073486328125e-06, -0.0035858154296875, -0.0002536773681640625, -7.2479248046875e-05, -6.4849853515625e-05, -9.5367431640625e-06, -0.00020599365234375, -2.288818359375e-05, -3.814697265625e-06, -0.0002460479736328125, 0.0, -0.0018048286437988281, -0.0002709627151489258, -0.004434227477759123, -1.9073486328125e-06, -0.0011563301086425781, 0.0, -1.9073486328125e-06, -0.0002155303955078125, -0.0001125335693359375, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.00012993805285077542, 0.0, -3.0517578125e-05, -0.020303726196289062, -1.9073486328125e-06, -0.0001807088265195489, -0.0001070499129127711, -9.72747802734375e-05, 0.0, -0.0001316070556640625, -1.9073486328125e-06], "score": -5.659504909073085, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "EPIC", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "EPIC", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -5.544031143188477, -7.62939453125e-06, -9.5367431640625e-06, -0.0001201629638671875, -5.53131103515625e-05, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -4.0531076592742465e-06, -4.303455352783203e-05, -1.5974044799804688e-05, -1.072883515007561e-05, -0.000286102294921875, -1.52587890625e-05, -1.9073486328125e-06, -0.0001239776611328125, -1.9073486328125e-06, -0.004710197448730469, 0.0, -0.29132115840911865, -9.34600830078125e-05, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, -0.000286102294921875, -0.0003509521484375, -0.009487152099609375, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.20159912109375e-05, -3.0517578125e-05, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.000217437744140625, -5.7220458984375e-06, -0.7721977233886719, 0.0, -2.110004425048828e-05, 0.0, -0.000276446167845279, 0.0, -0.0006237030029296875, -4.00543212890625e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.013672828674316406, -9.5367431640625e-06, -1.9073486328125e-05, -0.0002079010009765625, -8.20159912109375e-05, 0.0, -0.00098419189453125, 0.0, -0.0021772384643554688, 0.0, -1.7523765563964844e-05, -3.814697265625e-06, -0.0004845857620239258, 0.0, -5.7220458984375e-06, -0.0003452301025390625, -0.0001506805419921875, -3.814697265625e-06, -5.7220458984375e-06, -7.2479248046875e-05, -0.00014102458953857422, 0.0, -2.86102294921875e-05, -0.019649505615234375, -3.814697265625e-06, -0.0001529375440441072, -0.00011706348595907912, -6.4849853515625e-05, 0.0, -0.000118255615234375, -1.9073486328125e-06], "score": -6.666878290364359, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Mind", " ", "Blast", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -6.901632785797119, -1.1920928244535389e-07, -0.007086591329425573, 0.0, -1.9073486328125e-06, -0.0008945465087890625, -0.0001354217529296875, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -0.00013232228229753673, -1.9073486328125e-06, -3.4332275390625e-05, -0.011674880981445312, -1.9073486328125e-06, -0.00014340173220261931, -0.00012052054080413654, -0.00011444091796875, 0.0, -0.00012123584747314453, -1.9073486328125e-06], "score": -6.945234632510235, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.<UNK>.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "<UNK>", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -6.95106315612793, -2.47955322265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.00012516349670477211, 0.0, -0.0001163482666015625, -0.0001010894775390625, -7.05718994140625e-05, -9.775161743164062e-06, -1.311301275563892e-06, -0.0032806396484375, -1.9073486328125e-06, -0.0030803680419921875, -0.00026702880859375, -6.67572021484375e-05, -6.67572021484375e-05, -9.5367431640625e-06, -0.0002193450927734375, -2.288818359375e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0017502307891845703, -0.0002633333206176758, -0.004443406593054533, -1.9073486328125e-06, -0.0010890960693359375, 0.0, -1.9073486328125e-06, -0.0002307891845703125, -0.000110626220703125, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -0.00013017647142987698, 0.0, -3.0517578125e-05, -0.020200729370117188, -1.9073486328125e-06, -0.0001759411970851943, -0.00010931488213827834, -9.72747802734375e-05, 0.0, -0.00013077259063720703, -1.9073486328125e-06], "score": -6.997276700652002, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "RARE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "RARE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -7.001596450805664, 0.0, -0.011448264122009277, -0.00017178058624267578, -0.011052489280700684, 0.0, -1.1444091796875e-05, -0.0022945404052734375, -9.34600830078125e-05, -9.5367431640625e-06, -3.814697265625e-06, -6.866455078125e-05, -0.00013387201761361212, 0.0, -2.6702880859375e-05, -0.0216064453125, -1.9073486328125e-06, -0.00018464210734236985, -0.00010716912220232189, -0.00011444091796875, 0.0, -0.0001354217529296875, -1.9073486328125e-06], "score": -7.069829358229605, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.game.other_player.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "other_player", "value": {"attr": "game", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -7.080707550048828, -1.9073486328125e-06, -0.009130477905273438, 0.0, -1.9073486328125e-05, 0.0, -0.00015579666069243103, 0.0, -0.0001678466796875, -4.38690185546875e-05, -9.5367431640625e-05, -1.3470649719238281e-05, -5.960462772236497e-07, -0.0022230148315429688, -1.9073486328125e-06, -0.0022869110107421875, -0.0002079010009765625, -4.9591064453125e-05, -6.4849853515625e-05, -1.71661376953125e-05, -0.0003757476806640625, -2.86102294921875e-05, -3.814697265625e-06, -0.000270843505859375, 0.0, -0.0019960403442382812, -0.00023472309112548828, -0.004207014571875334, 0.0, -0.0011894702911376953, 0.0, -1.9073486328125e-06, -0.000213623046875, -0.000118255615234375, -3.814697265625e-06, -1.9073486328125e-06, -5.340576171875e-05, -0.0001316069974564016, 0.0, -3.0517578125e-05, -0.02028656005859375, -1.9073486328125e-06, -0.00017927854787558317, -0.0001089572615455836, -9.72747802734375e-05, 0.0, -0.00013065338134765625, -1.9073486328125e-06], "score": -7.1327572196512605, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "ROGUE", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -5.544031143188477, -7.62939453125e-06, -9.5367431640625e-06, -0.0001201629638671875, -5.53131103515625e-05, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -4.0531076592742465e-06, -4.303455352783203e-05, -1.5974044799804688e-05, -1.072883515007561e-05, -0.000286102294921875, -1.52587890625e-05, -1.9073486328125e-06, -0.0001239776611328125, -1.9073486328125e-06, -0.004710197448730469, 0.0, -0.29132115840911865, -9.34600830078125e-05, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, -0.000286102294921875, -0.0003509521484375, -0.009487152099609375, 0.0, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -8.20159912109375e-05, -3.0517578125e-05, -5.7220458984375e-06, -9.918212890625e-05, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.000217437744140625, -5.7220458984375e-06, -1.2945680618286133, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -0.00022530541173182428, 0.0, -0.00072479248046875, -3.814697265625e-05, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.011460304260253906, -9.5367431640625e-06, -2.09808349609375e-05, -0.0002346038818359375, -8.0108642578125e-05, -1.9073486328125e-06, -0.0009307861328125, 0.0, -0.0024690628051757812, 0.0, -1.7523765563964844e-05, -1.9073486328125e-06, -0.0005112886428833008, 0.0, -5.7220458984375e-06, -0.0003681182861328125, -0.0001659393310546875, -3.814697265625e-06, -5.7220458984375e-06, -8.7738037109375e-05, -0.00013887882232666016, 0.0, -2.86102294921875e-05, -0.019952774047851562, -3.814697265625e-06, -0.00015842021093703806, -0.00011670586536638439, -6.29425048828125e-05, 0.0, -0.00011920928955078125, -1.9073486328125e-06], "score": -7.1877917711526536, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Mind", " ", "Blast", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"value": {"args": [{"s": "Mind Blast", "_type": "Str"}, {"_type": "Template33"}, {"attr": "PRIEST", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute"}, {"attr": "FREE", "value": {"_type": "Template30"}, "_type": "Attribute"}], "func": {"_type": "Template18"}, "keywords": [{"arg": "target_func", "value": {"attr": "find_enemy_minion_spell_target", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "_type": "keyword"}], "_type": "Call"}, "_type": "Expr"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "target", "value": {"id": "self", "_type": "Name"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -7.157804012298584, -0.0017948150634765625, 0.0, -3.24249267578125e-05, -0.0010852813720703125, -6.29425048828125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001282691810047254, 0.0, -3.24249267578125e-05, -0.023393630981445312, -1.9073486328125e-06, -0.0001908399717649445, -0.00010061261127702892, -0.000118255615234375, 0.0, -0.00014019012451171875, -1.9073486328125e-06], "score": -7.208004844729281, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player..damage(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -7.38612699508667, -5.7220458984375e-06, -0.003785371780395508, 0.0, -2.6702880859375e-05, -0.000232696533203125, -0.000453948974609375, -7.62939453125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -0.00013339519500732422, -1.9073486328125e-06, -4.00543212890625e-05, -0.020730972290039062, -3.814697265625e-06, -0.00016878999304026365, -0.0001327990903519094, -7.82012939453125e-05, 0.0, -0.00010979175567626953, -1.9073486328125e-06], "score": -7.435180918667889, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.minions.damage(player.effective_spell_damage(5), self\n            )\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -0.004244327079504728, -1.9073486328125e-06, -7.509035587310791, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -0.000164031982421875, -2.09808349609375e-05, -7.62939453125e-06, -4.1961669921875e-05, -0.0011298656463623047, 0.0, -3.4332275390625e-05, -0.0079498291015625, -3.814697265625e-06, -9.917907300405204e-05, -0.00011384473327780142, -6.4849853515625e-05, 0.0, -7.069110870361328e-05, -1.9073486328125e-06], "score": -7.5461020699127275, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.heal(player.effective_spell_damage(5), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "heal", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -0.004244327079504728, -1.9073486328125e-06, -0.0011883974075317383, 0.0, -1.9073486328125e-06, -0.0002193450927734375, -0.0001163482666015625, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -0.0001296996488235891, 0.0, -3.0517578125e-05, -6.90352725982666, -0.5566997528076172, -0.1112406849861145, -2.5510787963867188e-05, -0.011579513549804688, -5.7220458984375e-06, -1.0825839042663574, -0.4083118438720703, -0.021892547607421875, -0.9816446304321289, -0.008345603942871094, -7.62939453125e-06, -0.016722679138183594, -7.62939453125e-06], "score": -10.13165232167156, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 59, 157, "Buff", "<EOS>", 25, 133, "Buff", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(Buff(\n            Buff(2))), self)\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"hole0": "Buff", "hole2": [{"_type": "Template33"}], "hole1": {"id": "Buff", "_type": "Name"}, "_type": "Template19"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -5.78079891204834, -5.960462772236497e-07, -0.00017248348740395159, -0.00015413743676617742, -0.001220986247062683, -3.6954863844584906e-06, -0.0006104707135818899, 0.0, -6.29425048828125e-05, -0.0009975433349609375, -7.152555099310121e-07, -5.3048133850097656e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.0009793005883693695, -4.291534423828125e-06, -0.024596333503723145, -1.9073486328125e-06, -0.004881024360656738, 0.0, -0.10105323791503906, 0.0, -1.2278556823730469e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001087188720703125, -0.00013566017150878906, -2.50339189733495e-06, -1.0950689315795898, -1.9073486328125e-06, -0.07323646545410156, -0.0016574859619140625, -0.0004100799560546875, -0.0001678466796875, -0.0016956329345703125, -0.007232666015625, -0.003261566162109375, -0.000247955322265625, -0.002367258071899414, 0.0, -0.006124734878540039, -6.687641143798828e-05, -0.005317568313330412, 0.0, -0.0013632774353027344, 0.0, -1.9073486328125e-06, -0.000133514404296875, -0.0001316070556640625, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.00012993805285077542, 0.0, -4.00543212890625e-05, -0.018846511840820312, -1.9073486328125e-06, -0.00013589343870989978, -0.00010383124026702717, -0.0001049041748046875, 0.0, -0.00011932849884033203, -1.9073486328125e-06, -7.62939453125e-06, -0.031044960021972656, -0.001972198486328125, -0.05071436986327171, 0.0, -0.0007610321044921875, -0.0031566619873046875, -0.006384849548339844, -0.000926971435546875, -0.004105567932128906, -0.001678466796875, -0.0027446746826171875, -3.814697265625e-06, -0.00333404541015625, -0.000125885009765625, -0.000141143798828125, -5.53131103515625e-05, -0.000392195419408381, -3.814697265625e-06, -0.001678466796875, 0.0, -8.58306884765625e-05, 0.0, -0.016000747680664062, 0.0, -0.0044689178466796875, -1.9073486328125e-06, -0.2010965347290039, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.0014497041702270508, -5.7220458984375e-06, -0.00031280517578125, -0.00937652587890625, -3.4332275390625e-05, -0.03644752502441406, -3.814697265625e-06, -0.2662200927734375, 0.0, -0.000194549560546875, 0.0, -0.00012540817260742188, -7.62939453125e-06, -0.007007002830505371, -1.1444091796875e-05, -2.288818359375e-05, -0.14288616180419922, -0.000728607177734375, -1.1107416152954102, -1.9073486328125e-05, -0.13225746154785156, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.0733509063720703, 0.0, -0.015100717544555664, -2.09808349609375e-05, -0.027701854705810547, -3.814697265625e-06], "score": -10.28894831327608, "choice_history": [77, 148, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= game.other_player.hero\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}, {"score_history": [-7.62939453125e-06, -5.78079891204834, -5.960462772236497e-07, -0.00017248348740395159, -0.00015413743676617742, -0.001220986247062683, -3.6954863844584906e-06, -0.0006104707135818899, 0.0, -6.29425048828125e-05, -0.0009975433349609375, -7.152555099310121e-07, -5.3048133850097656e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.0009793005883693695, -4.291534423828125e-06, -0.024596333503723145, -1.9073486328125e-06, -0.004881024360656738, 0.0, -0.10105323791503906, 0.0, -1.2278556823730469e-05, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -0.0001087188720703125, -0.00013566017150878906, -2.50339189733495e-06, -1.0950689315795898, -1.9073486328125e-06, -0.07323646545410156, -0.0016574859619140625, -0.0004100799560546875, -0.0001678466796875, -0.0016956329345703125, -0.007232666015625, -0.003261566162109375, -0.000247955322265625, -0.002367258071899414, 0.0, -0.006124734878540039, -6.687641143798828e-05, -0.005317568313330412, 0.0, -0.0013632774353027344, 0.0, -1.9073486328125e-06, -0.000133514404296875, -0.0001316070556640625, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.00012993805285077542, 0.0, -4.00543212890625e-05, -0.018846511840820312, -1.9073486328125e-06, -0.00013589343870989978, -0.00010383124026702717, -0.0001049041748046875, 0.0, -0.00011932849884033203, -1.9073486328125e-06, -7.62939453125e-06, -0.031044960021972656, -0.001972198486328125, -0.05071436986327171, 0.0, -0.0007610321044921875, -0.0031566619873046875, -0.006384849548339844, -0.000926971435546875, -0.004105567932128906, -0.001678466796875, -0.0027446746826171875, -3.814697265625e-06, -0.00333404541015625, -0.000125885009765625, -0.000141143798828125, -5.53131103515625e-05, -0.000392195419408381, -3.814697265625e-06, -0.001678466796875, 0.0, -8.58306884765625e-05, 0.0, -0.016000747680664062, 0.0, -0.0044689178466796875, -1.9073486328125e-06, -0.2010965347290039, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -0.0014497041702270508, -5.7220458984375e-06, -0.00031280517578125, -0.00937652587890625, -3.4332275390625e-05, -0.03644752502441406, -3.814697265625e-06, -0.2662200927734375, 0.0, -0.000194549560546875, 0.0, -0.00012540817260742188, -7.62939453125e-06, -0.007007002830505371, -1.1444091796875e-05, -2.288818359375e-05, -0.14288616180419922, -0.000728607177734375, -1.1107416152954102, -1.9073486328125e-05, -0.13225746154785156, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.45139026641845703, 0.0, -0.27877235412597656, -1.9073486328125e-06, -1.1729679107666016, -4.9591064453125e-05], "score": -11.075952068845538, "choice_history": [77, 148, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 45, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "other_player", "<EOS>"], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= hearthbreaker.targeting.other_player\n", "model_output": {"hole0": "MindBlast", "hole2": [{"hole0": "Mind Blast", "hole2": "PRIEST", "hole1": 2, "hole3": "FREE", "_type": "Template6"}], "hole1": "SpellCard", "hole3": "use", "hole7": [{"body": [{"value": {"op": {"_type": "And"}, "values": [{"hole0": {"hole0": "super", "_type": "Template25"}, "hole2": "player", "hole1": "can_use", "hole3": "game", "_type": "Template17"}, {"comparators": [{"attr": "other_player", "value": {"attr": "targeting", "value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "left": {"args": [{"attr": "minions", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "ops": [{"_type": "GtE"}], "_type": "Compare"}], "_type": "BoolOp"}, "_type": "Return"}], "args": {"_type": "Template8"}, "name": "can_use", "_type": "FunctionDef"}], "_type": "Template0", "hole4": "player", "hole6": [{"_type": "Template10"}, {"hole0": {"attr": "hero", "value": {"attr": "other_player", "value": {"id": "game", "_type": "Name"}, "_type": "Attribute"}, "_type": "Attribute"}, "hole2": [{"args": [{"n": 5, "_type": "Num"}], "func": {"attr": "effective_spell_damage", "value": {"_type": "Template38"}, "_type": "Attribute"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "hole1": "damage", "_type": "Template23"}], "hole5": [{"arg": "game", "_type": "arg"}]}}], "index": 65}
