{"gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Blade", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Blade", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 111, 123, 156], "score_history": [-0.0002593994140625, -6.29425048828125e-05, 0.0, -0.00028228759765625, -0.0001049041748046875, -3.600120544433594e-05, -0.001043133088387549, -2.4080271032289602e-05, -1.9073486328125e-06, -0.011135101318359375, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -2.09808349609375e-05, -7.82012939453125e-05, -0.000774383544921875, -2.6702880859375e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0061588287353515625, -6.4849853515625e-05, -1.9073486328125e-06, -0.0003559252363629639, -4.38690185546875e-05, -7.676783570786938e-05, -2.2649765014648438e-06, -0.007755279541015625, -0.13109397888183594, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0006542205810546875, -1.3470649719238281e-05, -0.017637014389038086, -1.9073486328125e-06, -0.056937217712402344, -3.814697265625e-06, -1.9073486328125e-06, -0.0028667449951171875, 0.0, -0.0001392364501953125, -3.0517578125e-05, -0.000102996826171875, -2.6702880859375e-05, -0.0020627975463867188, -0.0027170181274414062, -0.0009136199951171875, -0.0010967254638671875, -0.38379764556884766, -0.37465572357177734, -2.47955322265625e-05], "model_output": {"body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "name": "<UNK>Blade", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "<UNK> Blade", "_type": "Str"}, {"_type": "Template46"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"func": {"_type": "Template79"}, "_type": "Call", "args": [{"_type": "Template40"}, {"_type": "Template58"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_weapon"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.0034330042708461, "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 8)\n"}]}
{"gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Boulderfist", "Ogre", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Boulderfist", " ", "Ogre", "<EOS>", 120, 95, 100, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 304, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Ogre", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 79, 171, 25, 194, "In", "Graveyard", "<EOS>", 302, 93, 213, "6", "<EOS>", 156], "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.0003868784988299012, -0.005833505652844906, -0.01067358534783125, -3.814697265625e-05, -0.0001049041748046875, -9.34600830078125e-05, -8.0108642578125e-05, -9.5367431640625e-06, -2.491474151611328e-05, -5.960462772236497e-07, -1.9073486328125e-06, -0.00034332275390625, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.5203094482421875, 0.0, -0.0014553070068359375, -2.47955322265625e-05, -3.814697265625e-06, -8.583047019783407e-06, -2.014636993408203e-05, -2.622600959512056e-06, -0.00020229816436767578, -0.000347137451171875, -0.0004329681396484375, -0.017547607421875, -0.0010318756103515625, -7.43865966796875e-05, -3.635883331298828e-05, -1.1920922133867862e-06, -0.0002765655517578125, -0.00011444091796875, -0.000247955322265625, -1.33514404296875e-05, -3.2305535569321364e-05, -1.311301275563892e-06, -0.004660474136471748, -4.9948692321777344e-05, -0.2945404052734375, -0.0003604888916015625, -0.000171661376953125, -0.0004329681396484375, -0.0003910064697265625, -0.42429161071777344, -0.13343429565429688, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.002007126808166504, -0.0015014410018920898, -0.000545501708984375, -0.0008678436279296875, -9.5367431640625e-06, -0.7894805669784546, -0.0365072600543499, -0.00310516357421875, -5.7220458984375e-06, -0.0743032693862915, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001621246337890625, -0.000118255615234375, -0.0003032684326171875, 0.0, -0.018741607666015625, -0.0019947290420532227, -1.71661376953125e-05, -0.008708953857421875, -7.43865966796875e-05, -2.86102294921875e-05, -1.064568281173706, -0.0005763763911090791, -8.58306884765625e-05], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "BoulderfistOgre", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template25"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 6, "hole2": "deathrattle", "hole1": 7, "_type": "Template6", "hole3": {"func": {"_type": "Template77"}, "_type": "Call", "args": [{"func": {"id": "Summon", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Ogre", "_type": "Template16"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}, {"func": {"id": "InGraveyard", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "6", "_type": "Template16"}]}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.4219184954075104, "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Ogre()),\n            PlayerSelector(), InGraveyard(6())))\n"}]}
{"gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Deadly", "Poison", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Deadly", " ", "Poison", "<EOS>", 109, 101, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 151, 182, 21, 174, 17, 164, 43, "cards_played", "<EOS>", 299, 9, 302, 122, 315, 148, 176, 20, 171, 17, 164, 33, "change_temp_attack", "<EOS>", 302, 108, 315, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.8742269680369645e-05, -4.887569048150908e-06, -0.0002872542245313525, -9.72747802734375e-05, -7.05718994140625e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -5.006785613659304e-06, -2.288818359375e-05, -7.62939453125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.0001697540283203125, -0.008365631103515625, -6.67572021484375e-05, -0.015203475952148438, -1.9073486328125e-06, -5.7220458984375e-06, -7.271502545336261e-05, -1.5974044799804688e-05, -3.933904736186378e-06, -0.00011848788562929258, -0.000446319580078125, -0.33946895599365234, -0.0001277923583984375, -1.9073486328125e-06, -0.0002994537353515625, -0.00048421998508274555, -4.172325134277344e-06, -4.00543212890625e-05, -0.03275871276855469, -2.47955322265625e-05, -0.29102325439453125, -0.02687549591064453, -0.0026874542236328125, -0.00493621826171875, -0.002750396728515625, 0.0, -0.0024566650390625, -0.3335219621658325, -3.814697265625e-06, -0.000499725341796875, -0.003376007080078125, -5.340576171875e-05, -0.001110076904296875, -0.3123035430908203, -5.91278076171875e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.0001239776611328125, -9.1552734375e-05, -0.06584739685058594, -0.5771712064743042, -0.0046844482421875, -0.000518798828125, -0.05847454071044922, -0.017566680908203125, -0.00054168701171875, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -4.76837158203125e-05, -8.96453857421875e-05, -0.016187667846679688, -0.591673731803894, -0.00014257429575081915, -0.000217437744140625, -0.0015201568603515625, -9.1552734375e-05, -0.0064067840576171875, -7.62939453125e-06, -0.10041427612304688, -0.01137542724609375, -0.5296768546104431, -0.00030143657932057977, -2.09808349609375e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "DeadlyPoison", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Deadly Poison", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template26"}, {"_type": "Template23"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "change_temp_attack"}, "_type": "Call", "args": [{"_type": "Template36"}]}}], "_type": "If", "test": {"_type": "Compare", "comparators": [{"_type": "Template55"}], "left": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "cards_played"}, "ops": [{"_type": "Gt"}]}, "orelse": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_buff"}, "_type": "Call", "args": [{"func": {"_type": "Template66"}, "_type": "Call", "args": [{"hole0": "Frozen", "_type": "Template16"}]}]}}]}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.3635091361684317, "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.cards_played > 0:\n            self.target.change_temp_attack(2)\n        else:\n            self.target.add_buff(Buff(Frozen()))\n"}]}
{"gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Fire", "Elemental", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fire", " ", "Elemental", "<EOS>", 120, 105, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 111, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "6", "<EOS>", "5", "<EOS>", 156], "score_history": [-1.9073486328125e-06, 0.0, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.01896101050078869, -0.000563702080398798, -2.0265579223632812e-06, -1.9073486328125e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -2.0265579223632812e-06, -3.099440846199286e-06, -1.9073486328125e-06, -0.0001850128173828125, -4.57763671875e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.1815101717947982e-05, -7.557858771178871e-05, -3.576277322281385e-06, -5.7220458984375e-06, -0.0002918243408203125, -0.606114387512207, -0.0053157806396484375, -0.001461029052734375, -0.000152587890625, -1.1444091796875e-05, -0.0017746686935424805, -1.9073468138230965e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, -0.0007839202880859375, -5.340576171875e-05, -3.814697265625e-06, -0.019460678100585938, -3.814697265625e-06, -0.0006559167522937059, -5.00675814691931e-05, -9.5367431640625e-06, -0.08567619323730469, -0.0031528472900390625, -0.0005817413330078125, -0.12601852416992188, -8.58306884765625e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.00010156631469726562, -4.5299530029296875e-06, -0.0014276504516601562, -1.33514404296875e-05, -7.450580596923828e-05, -7.998943328857422e-05, -1.9073486328125e-06, -0.000263214111328125, -7.62939453125e-06, -0.000240325927734375, -4.0531158447265625e-06, -0.015773773193359375, -1.9073486328125e-05, -0.00039708614349365234, -0.0011882781982421875, -2.0265579223632812e-06, -5.14984130859375e-05, -3.814697265625e-06, -2.2172887838678434e-05, -1.1920928244535389e-07, -0.0003069638623856008, 0.0, -5.7220458984375e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "FireElemental", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"id": "Damage", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template40"}]}, {"func": {"_type": "Template70"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template16"}, "_type": "keyword", "arg": "picker"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Fire Elemental", "_type": "Str"}, {"_type": "Template52"}, {"_type": "Template31"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 6, "hole1": 5, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.8917893627419673, "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}]}
{"gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Gnomish", "Inventor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Gnomish", " ", "Inventor", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Draw", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score_history": [-8.7738037109375e-05, -5.7220458984375e-06, -0.000408172607421875, -2.6702880859375e-05, -1.52587890625e-05, -0.0002748588449321687, -7.748303323751315e-05, -0.0002921477425843477, -6.67572021484375e-05, -6.866455078125e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -2.3841855067985307e-07, -3.218649908376392e-06, -5.7220458984375e-06, -0.0001773834228515625, -9.5367431640625e-06, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -8.7738037109375e-05, -0.0004329681396484375, -9.5367431640625e-06, -1.52587890625e-05, -3.0517168852384202e-05, -3.528591332724318e-05, -0.002901161788031459, -9.5367431640625e-06, -0.000217437744140625, -6.29425048828125e-05, -4.76837158203125e-05, -5.91278076171875e-05, -6.866455078125e-05, -5.7220458984375e-06, -5.733966827392578e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -2.09808349609375e-05, -3.62396240234375e-05, -0.00032862380612641573, -0.00028987551922909915, -0.0001678466796875, 0.0, -0.0008037077495828271, -1.811981201171875e-05, -1.0967253729177173e-05, -0.005184173583984375, -7.62939453125e-06, -0.0027615800499916077, -1.1920928244535389e-07, -3.8146745282574557e-06, -3.576278118089249e-07, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "GnomishInventor", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"hole0": "Draw", "_type": "Template16"}, {"hole0": "PlayerSelector", "_type": "Template16"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Gnomish Inventor", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 2, "hole1": 4, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.015337732550406713, "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}]}
{"gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Heroic", "Strike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Heroic", " ", "Strike", "<EOS>", 108, 102, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 108, 156], "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.2172682292875834e-05, -1.3947389561508317e-05, -1.7166048564831726e-05, -1.33514404296875e-05, -3.814697265625e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000171661376953125, -9.417526598554105e-06, -1.1444091796875e-05, -7.62939453125e-06, -6.103515625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0027027130126953125, -0.000255584716796875, -0.0001430511474609375, -1.9073486328125e-06, -1.9073486328125e-06, -6.437280717364047e-06, -1.7285345165873878e-05, -1.7404405298293568e-05, -2.1338462829589844e-05, -9.5367431640625e-06, -0.6893606185913086, -0.1369619369506836, -1.9073486328125e-06, -2.6702880859375e-05, -1.668929871811997e-05, -1.9073486328125e-06, -8.58306884765625e-05, -0.2979145050048828, -7.82012939453125e-05, -0.05949211120605469, -6.4849853515625e-05, -0.0006618499755859375, -0.018411636352539062, -2.86102294921875e-05, -0.004080772399902344, -0.000580549007281661, 0.0, -0.007877349853515625, -0.0010471343994140625, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.24249267578125e-05, -0.0058307647705078125, -0.10085320472717285, -7.62939453125e-06, -4.9591064453125e-05, -0.6202831268310547, -3.814697265625e-06], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "HeroicStrike", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Heroic Strike", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template23"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "change_temp_attack"}, "_type": "Call", "args": [{"_type": "Template36"}]}}], "_type": "For", "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.9474055758582836, "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}]}
{"gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Ironbark", "Protector", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Ironbark", " ", "Protector", "<EOS>", 123, 106, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 68, 156], "score_history": [0.0, 0.0, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.013456474989652634, -4.458328112377785e-05, -3.8385387597372755e-05, -4.57763671875e-05, -0.000247955322265625, -1.9073486328125e-06, 0.0, 0.0, -2.0265579223632812e-06, -2.861022494471399e-06, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.96453857421875e-05, -1.1444091796875e-05, -0.001110076904296875, -1.1444091796875e-05, -4.38690185546875e-05, -0.00011848701251437888, -2.5153151000267826e-05, -3.4570634852570947e-06, -1.728534698486328e-05, -0.0006656646728515625, -0.7494134902954102, -0.026269912719726562, -7.62939453125e-06, 0.0, -3.8504374970216304e-05, -8.821114897727966e-05, -0.0001983642578125, -0.00016021728515625, -0.011407852172851562, -2.6702880859375e-05, -1.0132768693438265e-05, -0.004469064064323902, -9.675437468104064e-06, -4.7086890845093876e-05, -0.0028020013123750687, 0.0, -0.0002155303955078125, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "IronbarkProtector", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Ironbark Protector", "_type": "Str"}, {"_type": "Template58"}, {"_type": "Template33"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 8, "hole2": "taunt", "hole1": 8, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.8111390193880652, "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}]}
{"gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n", "beams": []}
{"gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Multi-Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Multi-Shot", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 79, 171, 35, 302, 79, 171, 17, 164, 25, 194, "game", "<EOS>", "<UNK>", "<EOS>", 303, 108, 111, 113, 156], "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073468138230965e-06, -0.00014328956604003906, -0.0001392364501953125, -7.82012939453125e-05, -0.01061248779296875, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -2.384185791015625e-06, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.2531585693359375, 0.0, -0.008626937866210938, -4.00543212890625e-05, -3.814697265625e-06, -1.5497195136049413e-06, -1.2874597814516164e-05, -0.0001735687255859375, -0.001190185546875, 0.0, -2.288818359375e-05, -0.0001010894775390625, -3.695487976074219e-05, -1.9073486328125e-06, -0.0007851123227737844, -1.9073486328125e-06, -0.010530471801757812, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -0.005629539489746094, -7.62939453125e-06, -0.001087188720703125, -2.288818359375e-05, -0.1634998321533203, -0.0001735687255859375, -0.003200531005859375, -0.000148773193359375, 0.0, -0.00124359130859375, 0.0, -0.051621437072753906, -5.841255187988281e-06, -0.002086162567138672, -4.172325134277344e-06, -0.0002994537353515625, -0.000141143798828125, -9.5367431640625e-06, -4.1961669921875e-05, -0.0004313357640057802, -1.7046921129804105e-05, -0.001483917236328125, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.0007343292236328125, -0.004248380661010742, -1.1920928244535389e-07, -2.86102294921875e-05, -0.6319608688354492, -2.09808349609375e-05, -0.01486968994140625, -7.82012939453125e-05, -0.0048656463623046875, -0.0017299652099609375, -0.39437389373779297, -0.02129364013671875, -9.5367431640625e-05, 0.0, -0.003571629524230957, -9.5367431640625e-06, -0.011213898658752441, -9.894371032714844e-06, -0.0030384063720703125, -0.006829261779785156, -0.09901142120361328, -0.000652313232421875, -6.67572021484375e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Multi-Shot", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Multi-Shot", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "MAGE"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "_type": "Call", "args": [{"func": {"_type": "Template24"}, "_type": "Call", "args": [{"func": {"_type": "Attribute", "value": {"id": "game", "_type": "Name"}, "attr": "<UNK>"}, "_type": "Call", "args": [{"_type": "Template36"}, {"_type": "Template40"}]}]}, {"_type": "Template42"}]}}], "_type": "For", "target": {"_type": "Template54"}, "iter": {"func": {"_type": "Attribute", "value": {"id": "copy", "_type": "Name"}, "attr": "copy"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.7156954176449446, "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 3)), self\n                )\n"}]}
{"gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Power", "Word", "Shield", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Power", " ", "Word", " ", "Shield", "<EOS>", 109, 105, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "player", "<EOS>", "append", "<EOS>", 302, 76, 164, 43, "hero", "<EOS>", 156], "score_history": [-7.62939453125e-06, -7.62939453125e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-05, -7.986703712958843e-05, -0.2009260058403015, -0.07204904407262802, -3.7073958083055913e-05, -1.9073486328125e-05, -8.58306884765625e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -9.655952453613281e-06, -8.439677185378969e-05, -5.7220458984375e-06, -3.0517578125e-05, -2.47955322265625e-05, 0.0, -1.1444091796875e-05, -0.00078582763671875, -2.6702880859375e-05, -0.0005321502685546875, -2.47955322265625e-05, -1.9073486328125e-06, -0.0006959426682442427, -8.237361907958984e-05, -0.16107554733753204, -0.0004177093505859375, -2.0265573766664602e-05, -7.748603820800781e-06, -2.86102294921875e-05, -0.018079757690429688, -0.0019741058349609375, -0.4080390930175781, -0.0074481964111328125, -1.33514404296875e-05, -1.9073486328125e-06, -1.6570091247558594e-05, -2.3841855067985307e-07, -4.57763671875e-05, -0.02392101287841797, -0.000377655029296875, -0.02728557586669922, -9.5367431640625e-06, 0.0, -0.1616687774658203, 0.0, -1.1444091796875e-05, -0.4364442825317383, -1.9073486328125e-06, -0.13439369201660156, -0.7037439942359924, -2.7418097943154862e-06, -0.7630996704101562, 0.0, -3.62396240234375e-05, -0.061835289001464844, 0.0, -0.10993194580078125, -0.05091547966003418, -1.7762025890988298e-05, -3.814697265625e-06], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "PowerWordShield", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Power Word Shield", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "player"}, "attr": "append"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "hero"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.346451490513317, "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.player.append(player.hero)\n"}]}
{"gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Sen'jin", "Shieldmasta", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Sen'jin", " ", "Shieldmasta", "<EOS>", 115, 95, 99, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score_history": [0.0, 0.0, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -0.00025567124248482287, -0.00010668662434909493, -3.135204315185547e-05, -4.38690185546875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.5101784204889555e-06, -3.1947638490237296e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.014386177062988281, -3.4332275390625e-05, -5.14984130859375e-05, -7.390960945485858e-06, -3.433220990700647e-05, -7.390948667307384e-06, -2.1457672119140625e-06, -0.0008220672607421875, -0.0001220703125, -0.0042781829833984375, -1.52587890625e-05, -0.00012969970703125, -3.6477853427641094e-05, -0.005797996651381254, -5.14984130859375e-05, -5.91278076171875e-05, -0.001499176025390625, -5.7220458984375e-06, -1.9669480025186203e-05, -0.0002725955273490399, -2.9086697395541705e-05, -4.41074053014745e-06, -0.001479429192841053, -5.7220458984375e-06, -0.000247955322265625, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Sen'jinShieldmasta", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Sen'jin Shieldmasta", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template23"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 3, "hole2": "taunt", "hole1": 5, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.030069093451402296, "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}]}
{"gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Sinister", "Strike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Sinister", " ", "Strike", "<EOS>", 109, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.435795901576057e-05, -2.145764938177308e-06, -4.053113570989808e-06, -4.1961669921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00012969970703125, -1.1682510375976562e-05, -2.133846101060044e-05, -7.62939453125e-06, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -0.0010013580322265625, -9.5367431640625e-06, -0.0013256072998046875, -2.288818359375e-05, -5.7220458984375e-06, -2.3483953555114567e-05, -2.014636993408203e-05, -2.264974000354414e-06, -4.7206878662109375e-05, -0.00034332275390625, -0.6178340911865234, -0.0004749298095703125, -1.9073486328125e-06, -3.814697265625e-06, -7.700837159063667e-05, -7.867813110351562e-06, -0.0001220703125, -0.000186920166015625, -9.5367431640625e-06, -0.009778976440429688, -3.814697265625e-05, -0.017644882202148438, -0.0009860992431640625, -0.000339508056640625, -0.0001544952392578125, -1.1444091796875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.0009489059448242188, -5.841255187988281e-06, -0.0009920597076416016, -1.537799835205078e-05, -0.000270843505859375, -3.62396240234375e-05, -5.7220458984375e-06, -2.6702880859375e-05, -8.857158536557108e-05, -4.994868504581973e-05, -0.0002288818359375, -4.1961669921875e-05, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -7.05718994140625e-05, -0.000232696533203125, -0.009940147399902344, -0.0024727582931518555, -1.1920928244535389e-07, -5.53131103515625e-05, -0.008747100830078125, -9.34600830078125e-05, -0.0012934160185977817, -2.6464434995432384e-05, -0.00011444091796875, -2.288818359375e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "SinisterStrike", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Sinister Strike", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "_type": "Call", "args": [{"hole0": 3, "_type": "Template8"}, {"_type": "Template42"}]}}], "_type": "For", "target": {"_type": "Template54"}, "iter": {"func": {"_type": "Attribute", "value": {"id": "copy", "_type": "Name"}, "attr": "copy"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.6766981995390253, "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}]}
{"gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Succubus", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Succubus", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Discard", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 156], "score_history": [0.0, 0.0, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -6.985420623095706e-05, -0.0004483461380004883, -9.5367431640625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.0728830375228426e-06, 0.0, -0.00012969970703125, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0001888275146484375, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1205610462639015e-05, -8.106231689453125e-06, -4.9591064453125e-05, -0.0002384185791015625, 0.0, 0.0, 0.0, -0.0002976655960083008, -5.3882598876953125e-05, -0.012897372245788574, -5.328652332536876e-05, -0.03629112243652344, -2.47955322265625e-05, -3.814697265625e-06, 0.0, -0.00013744831085205078, -4.768370445162873e-07, -0.00016295908426400274, -3.933906555175781e-06, -0.007871627807617188, -0.000988006591796875, -7.62939453125e-06, -0.012760162353515625, 0.0, -9.34600830078125e-05, 0.0, 0.0, 0.0, -3.0517578125e-05, 0.0, -0.035042762756347656, -7.62939453125e-06, -0.000396728515625, -1.9073486328125e-05, -3.814697265625e-06, -3.933898824470816e-06, -1.52587890625e-05, -0.000835418701171875, -0.0007476806640625, -3.0517578125e-05, -0.00012886524200439453, -4.2437604861333966e-05, -1.1324880688334815e-05, 0.0, -0.005446195602416992, 0.0, -0.0031948089599609375, -0.0010738372802734375, -5.53131103515625e-05, -9.5367431640625e-06, -0.03495025634765625, -0.000118255615234375, -0.000843048095703125, -2.86102294921875e-05, -0.04685930162668228, -0.001017199014313519, -0.08493995666503906, -0.08196067810058594, -7.62939453125e-06, -0.12035135924816132, -0.41418254375457764, -0.030391693115234375, 0.0, -0.01062929630279541, -5.7220458984375e-06, -7.748603820800781e-06, -1.9073486328125e-05], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Succubus", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Succubus", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 4, "hole2": "deathrattle", "hole1": 3, "_type": "Template6", "hole3": {"func": {"_type": "Template77"}, "_type": "Call", "args": [{"func": {"id": "Summon", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Discard", "_type": "Template16"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.946332400118763, "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY\n            .EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Summon(Discard()),\n            PlayerSelector()))\n"}]}
{"gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "War", "Golem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "War", " ", "Golem", "<EOS>", 118, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "7", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 304, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Thaddius", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 79, 171, 25, 194, "In", "Graveyard", "<EOS>", 302, 93, 213, "Stalagg", "<EOS>", 156], "score_history": [-1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -2.47955322265625e-05, -0.02624761313199997, -0.0025522299110889435, -3.802741048275493e-05, -2.6702880859375e-05, -5.340576171875e-05, -4.1961669921875e-05, -0.00014495849609375, -1.52587890625e-05, -7.987022399902344e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -0.0003108978271484375, -9.918212890625e-05, 0.0, 0.0, -0.43485450744628906, 0.0, -0.00152587890625, -1.71661376953125e-05, -3.814697265625e-06, -2.8490614567999728e-05, -1.9431114196777344e-05, -2.6940935640595853e-05, -3.814697265625e-06, -0.0005340576171875, -0.000244140625, -0.20395183563232422, -0.03833770751953125, -5.7220458984375e-06, -2.1576881408691406e-05, -1.0728830375228426e-06, -0.0001506805419921875, -0.0001010894775390625, -0.0005645751953125, -4.38690185546875e-05, -1.0251955245621502e-05, -3.933904736186378e-06, -0.00035358493914827704, -1.0251998901367188e-05, -0.429440975189209, -2.491474151611328e-05, -0.000354766845703125, -0.0011997222900390625, -0.0005435943603515625, -0.03173637390136719, -0.06026458740234375, -7.62939453125e-06, -2.86102294921875e-05, -2.86102294921875e-05, -0.0008739233016967773, -0.00035500526428222656, -0.0002956390380859375, -4.57763671875e-05, -3.814697265625e-06, -0.8624953031539917, -0.0016027117380872369, -0.0001239776611328125, -4.00543212890625e-05, -0.09867429733276367, -1.33514404296875e-05, -1.9073486328125e-06, -0.00046539306640625, -1.71661376953125e-05, -0.001087188720703125, -1.9073486328125e-06, -0.025959014892578125, -0.0017949342727661133, -6.866455078125e-05, -0.00043487548828125, -1.9073486328125e-05, -7.62939453125e-06, -1.2282816171646118, -0.0006277561187744141, -3.814697265625e-05], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "WarGolem", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "War Golem", "_type": "Str"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 7, "hole2": "deathrattle", "hole1": 7, "_type": "Template6", "hole3": {"func": {"_type": "Template77"}, "_type": "Call", "args": [{"func": {"id": "Summon", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Thaddius", "_type": "Template16"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}, {"func": {"id": "InGraveyard", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Stalagg", "_type": "Template16"}]}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.457362197625798, "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n"}]}
{"gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Acidmaw", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidmaw", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 97, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Minion", "Died", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Is", "Minion", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "2", "<EOS>", 92, 110, 156], "score_history": [-8.392333984375e-05, -0.000179290771484375, -2.47955322265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.0004363300104159862, -0.00026428699493408203, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -1.311301275563892e-06, -1.9073486328125e-06, -9.34600830078125e-05, -9.5367431640625e-06, 0.0, 0.0, -0.03958320617675781, -3.814697265625e-06, -0.002101898193359375, -5.7220458984375e-06, -1.9073486328125e-06, -3.814689989667386e-06, -5.841255187988281e-06, -0.0016574859619140625, -0.002681732177734375, 0.0, 0.0, 0.0, -0.0005304812802933156, -1.5497207641601562e-05, -0.0033745765686035156, -2.4437898900941946e-05, -0.09654617309570312, -0.0001316070556640625, -0.00037384033203125, 0.0, -0.0002117156982421875, 0.0, -0.000133514404296875, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.0010881423950195312, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -3.814697265625e-06, -0.000331878662109375, -0.00034332275390625, -0.0001125335693359375, -1.5377996533061378e-05, -9.536738616588991e-07, -7.748600182821974e-05, 0.0, -0.014508366584777832, 0.0, -9.5367431640625e-05, 0.0, -0.00026702880859375, -1.9073486328125e-06, -0.0001239776611328125, -9.5367431640625e-05, -1.9073486328125e-06, -0.0064716339111328125, -0.02022552490234375, -0.000240325927734375, -3.814697265625e-06, -0.29687273502349854, -0.023160338401794434, -3.814697265625e-06, -2.288818359375e-05, -0.0001506805419921875, 0.0, -0.19663715362548828, -1.71661376953125e-05, -0.09893321990966797, -7.82012939453125e-05, -0.026743292808532715, -0.008854031562805176, -4.9591064453125e-05, -0.00121307373046875, -2.86102294921875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -8.58306884765625e-05, -0.001583099365234375, -0.6345024108886719, -0.000202178955078125, -0.3419189453125, -0.0001220703125, -0.07734179496765137, -5.7220458984375e-06, -0.0002841949462890625, -0.039936065673828125, -0.00054168701171875], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Acidmaw", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Acidmaw", "_type": "Str"}, {"_type": "Template48"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 4, "hole2": "effects", "hole1": 2, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"func": {"id": "MinionDied", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template16"}, "_type": "keyword", "arg": "condition"}], "_type": "Call"}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"hole0": 2, "_type": "Template12"}]}, {"_type": "Template15"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.9419744253741271, "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(MinionDied(condition=IsMinion()\n            ), ActionTag(Give(ChangeAttack(2)), SelfSelector()))])\n"}]}
{"gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Boar", "<EOS>", 111, 95, 94, 119, 154, 205, "4", "<EOS>", "2", "<EOS>", 156], "score_history": [-1.9073486328125e-05, -9.5367431640625e-06, -4.57763671875e-05, -3.814697265625e-06, -1.71661376953125e-05, -2.4318398573086597e-05, -6.198883056640625e-06, -7.62939453125e-06, -0.0005664825439453125, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.123283386230469e-05, -4.410734163684538e-06, -1.1444091796875e-05, -1.71661376953125e-05, -0.000156402587890625, 0.0, 0.0, -0.02968597412109375, -0.000324249267578125, -0.0657501220703125, -9.5367431640625e-05, -7.62939453125e-06, -0.00012385078298393637, 0.0, -0.0003833770751953125, -0.0008258819580078125, -0.020740509033203125, -9.5367431640625e-05, -0.24579524993896484, -3.62396240234375e-05, -2.0146166207268834e-05, -2.1457672119140625e-06, -0.0013642311096191406, 0.0, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Boar", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Boar", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 4, "hole1": 2, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.3661900676956975, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n"}]}
{"gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Anodized", "Robo", "Cub", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 108, 101, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score_history": [-0.0002155303955078125, -8.58306884765625e-05, -1.9073486328125e-06, -0.0007476806640625, -4.00543212890625e-05, -0.0033786569256335497, -0.012539967894554138, -0.01365677174180746, -0.0002926264132838696, -3.814697265625e-06, -2.6702880859375e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0001354217529296875, -9.059622243512422e-05, -2.5033637939486653e-05, -3.814697265625e-06, -0.0011348724365234375, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.00020599365234375, -4.00543212890625e-05, -5.7220458984375e-06, -0.00010394736455054954, -6.294249760685489e-05, -0.001315584871917963, -0.0009537935256958008, -0.00026163982693105936, -1.71661376953125e-05, -6.866455078125e-05, -0.5512170791625977, -0.000335693359375, -0.0001735687255859375, -5.7220458984375e-05, -5.7220458984375e-06, -0.0024663209915161133, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-05, 0.0, -0.0001354217529296875, 0.0, -0.6823339462280273, -1.9073486328125e-06, -0.0009479522705078125, -2.09808349609375e-05, -2.15768777707126e-05, -3.3378591979271732e-06, -2.86102294921875e-05, -6.103515625e-05, -0.3055992126464844, -0.0002956390380859375, -7.152374746510759e-05, -5.960462203802308e-06, -0.000163497548783198, 0.0, -0.007501363754272461, 0.0, -0.004405021667480469, -5.7220458984375e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "AnodizedRoboCub", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "TOTEM"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Anodized Robo Cub", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template26"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "taunt", "hole1": 2, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.5914428597538972, "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}]}
{"gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Burrowing", "Mine", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Burrowing", " ", "Mine", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 32, 213, "draw", "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 156], "score_history": [-3.4332275390625e-05, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.4066597032069694e-05, -5.364412118069595e-06, -0.0002669956593308598, -5.91278076171875e-05, -0.000152587890625, -2.6702880859375e-05, 0.0, -7.62939453125e-06, -7.748603820800781e-06, -7.152543730626348e-06, -7.62939453125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.008699417114257812, -3.0517578125e-05, -0.0782022476196289, 0.0, -3.814697265625e-06, -1.3947389561508317e-05, -1.633167266845703e-05, -2.3245658667292446e-05, -4.38690185546875e-05, -0.005267143249511719, -0.10365486145019531, 0.0, -3.814697265625e-06, 0.0, -2.1696090698242188e-05, -6.675716122117592e-06, -0.14054548740386963, -7.6293927122605965e-06, -0.12293815612792969, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-05, 0.0, -4.7683570301160216e-05, -4.971027374267578e-05, 0.0, -5.7220458984375e-06, -2.47955322265625e-05, -2.0265579223632812e-06, -1.1444091796875e-05, -0.06181049346923828, -0.0002651214599609375, -0.019014358520507812, -1.1444091796875e-05, -0.14606857299804688, 0.0, -0.03936207294464111, -1.6689286894688848e-06, -0.0003376007080078125, -1.33514404296875e-05, -1.1444091796875e-05, -0.000408172607421875, -0.0009009838104248047, -0.00013040694466326386, -7.43865966796875e-05, -0.0001678466796875, -0.5541372299194336, -0.000152587890625, -0.0005359649658203125, -0.00057220458984375, -1.9073486328125e-06, -0.000278472900390625, 0.0, -0.01958274655044079, -0.0007069232524372637, -0.5476837158203125, -0.000270843505859375, -0.5483565330505371, -0.17463912069797516, -0.0006920098094269633, -0.0003757476806640625, -5.7220458984375e-06, 0.0, -0.6695737838745117, -1.9073486328125e-06, -1.9073486328125e-06, -0.10373878479003906, -6.67572021484375e-05, -0.0091552734375, -0.0003918962029274553, -0.039676595479249954, -5.7220458984375e-06, -0.000118255615234375, -0.00018310546875, -0.4616432189941406, 0.0, -0.0007257461547851562, -0.0010545250261202455, -7.82012939453125e-05, -0.0022983551025390625, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.008228302001953125, -4.88758041683468e-06, -7.62939453125e-06, -0.0003204345703125, 0.0, -0.17058181762695312, -0.0014559030532836914, -1.1920928244535389e-07, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "BurrowingMine", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Burrowing Mine", "_type": "Str"}, {"_type": "Template55"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "_type": "Assign", "value": {"hole0": "draw<UNK>", "_type": "Template16"}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"id": "<UNK>", "_type": "Name"}, "attr": "summon"}, "_type": "Call", "args": [{"_type": "Template43"}, {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}]}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template55"}, {"_type": "Template36"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -4.046416607818166, "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            <UNK> = draw<UNK>()\n            <UNK>.summon(player, player.game, len(player.minions))\n"}]}
{"gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Crackle", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Crackle", "<EOS>", 108, 101, 94, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 138, 291, "overload", "<EOS>", 39, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score_history": [0.0, -9.5367431640625e-06, -1.33514404296875e-05, -0.000152587890625, -1.9073486328125e-06, -1.764281842042692e-05, -6.0558319091796875e-05, -7.62939453125e-06, -5.340576171875e-05, -3.814697265625e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, 0.0, -0.0003147125244140625, -0.0001163482666015625, -0.0001468658447265625, -0.0001773834228515625, -3.814697265625e-06, -9.5367431640625e-06, -3.8146954466355965e-06, -1.6093243175419047e-05, -1.1444091796875e-05, -0.01363372802734375, -9.918212890625e-05, -0.1264476776123047, -0.3820772171020508, -7.62939453125e-06, -0.00363767147064209, -5.9604644775390625e-06, -9.5367431640625e-06, 0.0, -0.0003871917724609375, -0.0015549659729003906, -3.24249267578125e-05, -0.000217437744140625, -1.33514404296875e-05, -0.01236259937286377, -1.1920928244535389e-07, -0.014002799987792969, -5.91278076171875e-05, -7.05718994140625e-05, -5.841255187988281e-06, -3.814697265625e-06, -0.0001506805419921875, -0.00012969970703125, -8.0108642578125e-05, -0.0004520416259765625, -2.09808349609375e-05, -0.000629425048828125, -0.0025691986083984375, -6.866455078125e-05, -2.86102294921875e-05, -0.00022125244140625, -0.00025963777443394065, 0.0, -1.9073486328125e-05, -0.0004482269287109375, -7.62939453125e-05, -0.0007792351534590125, -0.00021970272064208984, -0.000537872314453125, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Crackle", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "_type": "keyword", "arg": "target_func"}, {"value": {"_type": "Template38"}, "_type": "keyword", "arg": "overload"}], "_type": "Call", "args": [{"s": "Crackle", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template26"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "_type": "Call", "args": [{"hole0": 6, "_type": "Template8"}, {"_type": "Template42"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.5624972219866251, "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}]}
{"gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Emergency", "Coolant", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Emergency", " ", "Coolant", "<EOS>", 109, 95, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.145764938177308e-06, -5.245195097813848e-06, -3.4570680327306036e-06, -3.62396240234375e-05, -0.0008678436279296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.364416665543104e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.14181900024414062, -1.1444091796875e-05, -0.00148773193359375, -2.09808349609375e-05, -7.43865966796875e-05, -3.576272320060525e-06, -2.8133332307334058e-05, -1.1920922133867862e-06, -0.00010383129119873047, -8.392333984375e-05, -8.392333984375e-05, -2.47955322265625e-05, -9.72747802734375e-05, 0.0, -0.000896453857421875, -6.4849853515625e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.0001125335693359375, -0.0001201629638671875, -3.814697265625e-06, -0.000732421875, 0.0, -3.814697265625e-06, -0.33548831939697266, -1.9073486328125e-06, -2.6702880859375e-05, -0.00061798095703125, -0.15794086456298828, -2.491474151611328e-05, -0.000110626220703125, -0.000423431396484375, -0.000244140625, -0.000827789306640625, -1.33514404296875e-05, -0.00269317626953125, -0.000492095947265625, -0.4657115638256073, -2.9205850296420977e-05, -4.38690185546875e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "EmergencyCoolant", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Emergency Coolant", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_buff"}, "_type": "Call", "args": [{"func": {"_type": "Template66"}, "_type": "Call", "args": [{"hole0": "Frozen", "_type": "Template16"}]}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.1114971334588972, "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n"}]}
{"gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Flying", "Machine", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flying", " ", "Machine", "<EOS>", 111, 95, 94, 310, 135, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 68, 156], "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -2.6702880859375e-05, -6.151010165922344e-05, -0.00011908298620255664, -2.6702864488470368e-05, -0.0001049041748046875, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -6.079673767089844e-06, -1.6689286894688848e-06, -7.62939453125e-06, -3.814697265625e-05, -4.9591064453125e-05, -3.814697265625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.00031280517578125, -2.288818359375e-05, -7.62939453125e-06, -1.3232166566012893e-05, -2.3365011657006107e-05, -3.576272320060525e-06, -7.748603820800781e-06, -0.00043487548828125, -1.71661376953125e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.35721778869628906, -1.71661376953125e-05, -3.814697265625e-06, -1.6450881958007812e-05, -5.245203283266164e-06, -0.000209808349609375, -0.0013980865478515625, -0.000286102294921875, -0.00016021728515625, -1.4305012882687151e-05, -5.125993993715383e-06, -0.00011479187378427014, -7.987022399902344e-06, -0.023616433143615723, 0.0, -0.00145721435546875, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "FlyingMachine", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template13"}], "_type": "Call", "args": [{"s": "Flying Machine", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole2": "windfury", "hole1": 4, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.3859455426795648, "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}]}
{"gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Goblin", "Auto-Barber", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Goblin", " ", "Auto-Barber", "<EOS>", 108, 106, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 91, 211, "3", "<EOS>", 79, 171, 49, 302, 79, 171, 59, 302, 98, 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.003312935121357441, -0.0006186263635754585, -2.503394352970645e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.3841830625315197e-06, -7.986990567587782e-06, -3.814697265625e-06, -4.9591064453125e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, -5.14984130859375e-05, -9.5367431640625e-06, -0.000186920166015625, -5.7220458984375e-06, -1.9073486328125e-06, -0.00010799778101500124, -9.09566879272461e-05, -1.5020257706055418e-05, -3.254413604736328e-05, -1.9073486328125e-05, -0.06156635284423828, -0.002887725830078125, -0.002899169921875, -0.0004024505615234375, -3.814697265625e-06, -0.0024302005767822266, -1.9073486328125e-06, -0.0001125335693359375, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-05, 0.0, -0.9395190477371216, 0.0, -0.000362396240234375, -1.33514404296875e-05, -0.0003871917724609375, -1.1920928244535389e-07, -0.000194549560546875, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001316070556640625, -0.47103404998779297, -0.00011444091796875, -0.000507354736328125, -0.0004711151123046875, -0.0874166488647461, -0.0002498626708984375, -0.6831895112991333, -0.00026798248291015625, -0.0011692047119140625, -0.10206413269042969, -0.0070476531982421875, -0.0053272247314453125, -0.3661022186279297, -1.52587890625e-05, -0.008813858032226562, -0.0002117156982421875, -0.2877960205078125, -0.00394439697265625, -0.000518798828125, -1.5497207641601562e-05, -9.977777517633513e-05, -9.739398956298828e-05, 0.0, -7.62939453125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "GoblinAuto-Barber", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "<UNK>"}, "_type": "keyword", "arg": "minion_type"}, {"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"hole0": 3, "_type": "Template14"}]}, {"func": {"_type": "Template50"}, "_type": "Call", "args": [{"func": {"_type": "Template61"}, "_type": "Call", "args": [{"_type": "Template21"}]}]}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 3, "hole1": 2, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.042132171931364, "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give(ChangeHealth(3)), MinionSelector(IsType(\n            MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}]}
{"gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Iron", "Sensei", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Iron", " ", "Sensei", "<EOS>", 111, 101, 97, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 79, 171, 62, 302, 93, 213, "2", "<EOS>", 93, 213, "Hero", "Selector", "<EOS>", 110, 156], "score_history": [-8.96453857421875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002574920654296875, -7.62939453125e-06, -0.05461031571030617, -0.00014840484072919935, -3.802754508797079e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -8.940695806813892e-06, -1.1920922133867862e-06, -1.9073486328125e-06, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.00042724609375, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.858122211880982e-05, -0.0001131296157836914, -0.0001998939987970516, -2.86102294921875e-05, -0.0010395050048828125, -0.6815662384033203, -0.0143585205078125, -3.814697265625e-06, -0.0057621002197265625, -1.9073486328125e-06, -0.02263963222503662, -5.53131103515625e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -6.4849853515625e-05, 0.0, -0.3091316223144531, 0.0, -2.47955322265625e-05, -0.0001068115234375, -4.2557716369628906e-05, -2.741813204920618e-06, -0.000194549560546875, -0.00011444091796875, -0.0014705657958984375, -1.1444091796875e-05, -6.437280262616696e-06, -2.384185791015625e-06, -3.2941403333097696e-05, -1.9073486328125e-06, -0.0003924369812011719, 0.0, -8.20159912109375e-05, -7.62939453125e-05, -8.392333984375e-05, -7.62939453125e-06, -0.000133514404296875, -3.62396240234375e-05, -4.57763671875e-05, -0.00058746337890625, -1.33514404296875e-05, -0.00026654504472389817, -0.006075263023376465, 0.0, -0.00084686279296875, -5.7220458984375e-06, -9.5367431640625e-06, -0.0002384185791015625, -1.9073486328125e-06, -3.814697265625e-05, -0.4880657196044922, -1.9073486328125e-05, -0.07005500793457031, -7.82012939453125e-05, -0.009768486022949219, -2.288818359375e-05, -0.35161590576171875, -8.0108642578125e-05, -0.7454054355621338, -2.5033637939486653e-05, -0.009429931640625, -4.9591064453125e-05, -0.20698416233062744, -3.4332275390625e-05, 0.0, -0.001617431640625, -3.62396240234375e-05], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "IronSensei", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "TOTEM"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Iron Sensei", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "effects", "hole1": 2, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"hole0": "TurnEnded", "_type": "Template16"}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"func": {"_type": "Template66"}, "_type": "Call", "args": [{"hole0": "2", "_type": "Template16"}]}]}, {"hole0": "HeroSelector", "_type": "Template16"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.9850530031528706, "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            Buff(2())), HeroSelector()))])\n"}]}
{"gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Mal'Ganis", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Mal'Ganis", "<EOS>", 86, 198, "9", "<EOS>", 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 100, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Immune", "<EOS>", 79, 171, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 110, 156], "score_history": [-1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.288818359375e-05, -5.53131103515625e-05, -0.001517921919003129, -0.0016350746154785156, -1.9073486328125e-06, -1.9073486328125e-05, -0.0002841949462890625, -9.72747802734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, 0.0, -0.0005016326904296875, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -0.0002002716064453125, -1.9073486328125e-06, -3.24249267578125e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002065896987915039, -1.0013580322265625e-05, -0.0007038116455078125, -6.4849853515625e-05, -0.0009980467148125172, -0.00022792816162109375, -1.2912015914916992, -1.9073486328125e-06, 0.0, 0.0, -0.00014913082122802734, -2.0265579223632812e-06, -0.12166965007781982, -8.463855920126662e-06, -0.004329681396484375, -0.0002155303955078125, -0.0069637298583984375, 0.0, -6.4849853515625e-05, 0.0, -0.0007534027099609375, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, 0.0, -0.01972198486328125, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, -3.576278118089249e-07, -5.91278076171875e-05, -0.0003414154052734375, -0.0004901885986328125, -2.09808349609375e-05, -4.410743713378906e-06, -0.00023016665363684297, -7.224076398415491e-05, -5.841255187988281e-06, -0.0446399450302124, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -0.0017871856689453125, 0.0, -1.9073486328125e-06, -0.005123138427734375, -0.0016040802001953125, -0.42846107482910156, 0.0, -0.40384620428085327, -0.013243913650512695, -0.04691505432128906, -0.11855125427246094, -0.26176929473876953, -0.06170654296875, -0.20371627807617188, -0.00030517578125, -0.0010204315185546875, -0.0005168914794921875, -0.033206939697265625, 0.0, -5.7220458984375e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.396220326423645, 0.0, -0.0007686614990234375, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Mal'Ganis", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Template25"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 9, "hole2": "auras", "hole1": 7, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template60"}, "_type": "Call", "args": [{"hole0": "Immune", "_type": "Template16"}, {"func": {"_type": "Template50"}, "_type": "Call", "args": [{"func": {"_type": "Template61"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "PIRATE"}]}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.476672262175043, "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsType(\n            MINION_TYPE.PIRATE)))])\n"}]}
{"gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Mistress", "Of", "Pain", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Mistress", " ", "of", " ", "Pain", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Damaged", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mistress", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 110, 156], "score_history": [-1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-05, -2.09808349609375e-05, -0.00018177833408117294, -0.0002755994792096317, -0.004534447565674782, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -2.384185791015625e-06, -5.722029527532868e-06, 0.0, -8.96453857421875e-05, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0001926422119140625, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, 0.0, -7.867782187531702e-06, -4.9233411118621007e-05, -5.62665009056218e-05, -6.35385513305664e-05, -8.29695345601067e-05, -1.311301275563892e-06, -8.96453857421875e-05, -0.008983612060546875, -1.9073486328125e-06, 0.0, 0.0, -0.0018825531005859375, -3.24249267578125e-05, -0.023943543434143066, -0.00015687942504882812, -0.023944854736328125, 0.0, -0.0943450927734375, 0.0, -6.4849853515625e-05, 0.0, -0.01728343963623047, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.10544204711914062, -0.0001773834228515625, -3.62396240234375e-05, -1.9073486328125e-06, -7.62939453125e-06, -4.768370445162873e-07, -9.5367431640625e-06, -0.000141143798828125, -0.0004787445068359375, -4.57763671875e-05, -5.960462772236497e-07, -1.1920928244535389e-07, -1.5497195136049413e-06, -1.9073486328125e-06, -0.0009952783584594727, 0.0, -7.43865966796875e-05, -3.814697265625e-06, -0.00025177001953125, -3.814697265625e-06, -0.000263214111328125, -2.47955322265625e-05, -5.7220458984375e-06, -0.0017719268798828125, -0.0001544952392578125, -0.05432707071304321, -0.0005017518997192383, -0.04274559020996094, -0.0001239776611328125, -0.0001068115234375, -0.0003204345703125, -0.0001010894775390625, -0.00493621826171875, -0.001773834228515625, -1.9073486328125e-06, -0.5446794033050537, -3.099440846199286e-06, -0.0032939910888671875, -1.71661376953125e-05, 0.0, -0.1300758421421051, -0.10906805843114853, -5.91278076171875e-05, 0.0, -0.6254814863204956, -1.9073486328125e-06, -4.172325134277344e-06, -0.0001316070556640625, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "MistressOfPain", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Mistress of Pain", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole2": "effects", "hole1": 4, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"hole0": "Damaged", "_type": "Template16"}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"id": "Summon", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Mistress", "_type": "Template16"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.804302501641864, "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Summon(\n            Mistress()), PlayerSelector()))])\n"}]}
{"gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Powermace", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Powermace", "<EOS>", 111, 105, 97, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 172, 73, 303, 111, 108, 310, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "<UNK>", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 91, 211, "2", "<EOS>", 92, 110, 156], "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -1.1444091796875e-05, -0.030089519917964935, -0.0013560056686401367, -1.9073486328125e-06, -0.0075130462646484375, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -7.2479248046875e-05, 0.0, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -3.349725011503324e-05, -4.0531158447265625e-06, -0.0005035400390625, -0.5460395812988281, -0.4112548828125, -1.9073486328125e-06, 0.0, -0.03256630897521973, 0.0, -0.0020046234130859375, -1.33514404296875e-05, -0.001239776611328125, -4.00543212890625e-05, -0.000324249267578125, -0.16424179077148438, -0.0026073455810546875, -3.814697265625e-05, -0.004268646240234375, -0.0013828277587890625, -0.00020599365234375, -0.000152587890625, -1.1444091796875e-05, -0.0052642822265625, 0.0, -0.0003376007080078125, 0.0, -0.0037593841552734375, -1.1444091796875e-05, -1.33514404296875e-05, -0.0062160491943359375, -1.9073486328125e-05, -0.19473838806152344, -3.814697265625e-05, -0.9277410507202148, -0.004479083698242903, -0.0001544952392578125, -0.0002899169921875, -0.000762939453125, -5.7220458984375e-06, -0.00087738037109375, -3.814697265625e-06, -0.037947654724121094, -7.43865966796875e-05, -0.8116245269775391, -0.0003204345703125, -0.005374986678361893, -2.3841855067985307e-07, -0.5641984939575195, -0.0002384185791015625, -9.5367431640625e-05], "model_output": {"body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "name": "Powermace", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Powermace", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template31"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"func": {"_type": "Template79"}, "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"hole0": "<UNK>", "_type": "Template16"}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"hole0": 2, "_type": "Template14"}]}, {"_type": "Template15"}]}]}, {"_type": "Template39_expr_seq"}]}, "_type": "keyword", "arg": "effects"}], "_type": "Call", "args": [{"_type": "Template40"}, {"_type": "Template36"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_weapon"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.7708364863865143, "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(<UNK>(), ActionTag(Give(\n            ChangeHealth(2)), SelfSelector()))])\n"}]}
{"gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Screwjank", "Clunker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Screwjank", " ", "Clunker", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 303, 79, 171, 48, 302, 91, 211, "2", "<EOS>", 79, 172, 49, 302, 79, 171, 59, 302, 98, 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 156], "score_history": [0.0, 0.0, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.018440475687384605, -0.0001245659514097497, -5.0782990001607686e-05, -4.00543212890625e-05, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.7762025890988298e-05, -1.9073486328125e-06, -8.392333984375e-05, -5.7220458984375e-05, -3.814697265625e-06, -1.71661376953125e-05, -4.9591064453125e-05, -6.67572021484375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.6569954823353328e-05, -3.945821663364768e-05, -4.410734163684538e-06, -5.841255187988281e-06, -0.00017547607421875, -0.19904136657714844, -5.7220458984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003429650969337672, -1.6570065781706944e-05, -0.514092206954956, -4.0531158447265625e-06, -0.05549049377441406, -0.1900930404663086, -0.37711048126220703, 0.0, -0.03336143493652344, 0.0, -0.0709228515625, 0.0, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.8619003295898438, -1.9073486328125e-06, -0.0001201629638671875, -1.71661376953125e-05, -0.00023829936981201172, -7.581423415103927e-05, -1.52587890625e-05, -0.000568389892578125, -0.0064544677734375, -0.0004749298095703125, -2.2291886125458404e-05, -1.013275596051244e-05, -3.850450593745336e-05, -2.861022494471399e-06, -0.7572265267372131, -2.861022494471399e-06, -0.000614166259765625, -0.018570899963378906, -0.0014257431030273438, -3.814697265625e-06, -3.814697265625e-06, -0.00078582763671875, -0.01729106903076172, -0.0011539459228515625, -0.7615470886230469, -0.00428009033203125, -0.07532479614019394, -2.0265579223632812e-06, -0.005126953125, -0.011075973510742188, -0.005398750305175781, -0.000125885009765625, -0.014041900634765625, -0.0010967254638671875, -0.0001354217529296875, -4.00543212890625e-05, -0.05259895324707031, -1.33514404296875e-05, -0.006983757019042969, -7.62939453125e-06, -0.17840886116027832, -4.768370445162873e-07, -0.0001583099365234375, -9.5367431640625e-06, -0.02346503734588623, -7.510183058911934e-05, -5.7220458984375e-06, -0.0002117156982421875], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "ScrewjankClunker", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "MURLOC"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "deathrattle", "hole1": 5, "_type": "Template6", "hole3": {"func": {"_type": "Template77"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"hole0": 2, "_type": "Template14"}]}, {"func": {"_type": "Template50"}, "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template16"}, "_type": "keyword", "arg": "picker"}], "_type": "Call", "args": [{"func": {"_type": "Template61"}, "_type": "Call", "args": [{"_type": "Template21"}]}]}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -4.267039121618723, "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 5, deathrattle=Deathrattle(Give(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n"}]}
{"gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Old", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 123, 95, 100, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 79, 170, 57, 310, 138, 291, "conditions", "<EOS>", 23, 189, 304, 79, 171, 25, 194, "Mana", "Cost", "<EOS>", 302, 108, 93, 213, "Is", "Minion", "<EOS>", 110, 93, 213, "Player", "Selector", "<EOS>", 156], "score_history": [-3.814697265625e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-05, -0.009472440928220749, -0.028256632387638092, -0.0533067062497139, -2.86102294921875e-05, -7.05718994140625e-05, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -5.841255187988281e-06, -2.861018856492592e-06, 0.0, -0.0004520416259765625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -2.09808349609375e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0151877636089921, -9.5367431640625e-05, -0.0007404133211821318, -0.2304210662841797, -0.0002779844799079001, -3.933906555175781e-06, -0.0044994354248046875, -0.0007305145263671875, -2.86102294921875e-05, -3.814697265625e-06, -0.17921733856201172, 0.0, -0.0002651214599609375, 0.0, -0.002716064453125, -1.9073486328125e-06, 0.0, 0.0, -2.6702880859375e-05, 0.0, -0.0017213821411132812, -9.72747802734375e-05, -0.000957489013671875, -3.814697265625e-06, -6.508827209472656e-05, -3.576278118089249e-07, -2.288818359375e-05, -0.0002689361572265625, -0.001911163330078125, -4.76837158203125e-05, -7.212162017822266e-05, -2.8609872970264405e-05, -0.000370370369637385, -1.537799835205078e-05, -0.0002911090850830078, 0.0, -0.0022830963134765625, -0.0003414154052734375, -0.000179290771484375, -0.000827789306640625, -0.001636505126953125, -5.7220458984375e-06, -6.103515625e-05, -4.57763671875e-05, -0.0016450881958007812, -6.270235462579876e-05, -0.0019702911376953125, -0.046970367431640625, -0.1721200942993164, -0.007281303405761719, -0.02106475830078125, -0.0001373291015625, -5.91278076171875e-05, -0.0017448607832193375, -0.0004313302633818239, -0.013881683349609375, -3.814697265625e-06, -0.001010894775390625, -0.0005970001220703125, -5.7220458984375e-06, -0.0001049041748046875, 0.0, -0.007372856140136719, -0.004471300635486841, -0.002609729766845703, -1.52587890625e-05, -0.5690860748291016, -0.017383575439453125, -3.814697265625e-06, -0.0005298852920532227, -0.009616613388061523, -4.00543212890625e-05, -0.04216194152832031, -0.00072479248046875, 0.0, -0.0007572174072265625, -3.814697265625e-06, -1.71661376953125e-05, -0.0001850128173828125], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "<UNK>Old", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "<UNK> Old Shredder", "_type": "Str"}, {"_type": "Template58"}, {"_type": "Template18"}, {"_type": "Template25"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 5, "hole2": "deathrattle", "hole1": 7, "_type": "Template6", "hole3": {"func": {"_type": "Template77"}, "_type": "Call", "args": [{"func": {"id": "Summon", "_type": "Name"}, "_type": "Call", "args": [{"func": {"_type": "Template59"}, "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template36"}]}, {"hole0": "IsMinion", "_type": "Template16"}, {"_type": "Template39_expr_seq"}]}, "_type": "keyword", "arg": "conditions"}], "_type": "Call"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.4614263391735562, "inferred_code": "class <UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n"}]}
{"gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Toshley", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Toshley", "<EOS>", 120, 95, 100, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 67, 302, 79, 170, 57, 311, 138, 291, "source", "<EOS>", 17, 164, 25, 194, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 138, 291, "source_list", "<EOS>", 70, 93, 213, "Player", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "7", "<EOS>", 156], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.0517578125e-05, -8.0108642578125e-05, -6.6757183958543465e-06, -0.002045975998044014, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.0728830375228426e-06, 0.0, -0.026002883911132812, -0.00011444091796875, -5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.960446742392378e-06, -2.5033950805664062e-05, -0.00151824951171875, -0.0004329681396484375, -3.24249267578125e-05, -5.53131103515625e-05, -0.000179290771484375, 0.0, -0.18343639373779297, 0.0, -0.0003147125244140625, -2.09808349609375e-05, -9.5367431640625e-06, -0.025350570678710938, -0.000812530517578125, -6.103515625e-05, -0.13886547088623047, -0.15410614013671875, -0.000553131103515625, -0.0001544952392578125, -6.103515625e-05, -0.4127616882324219, -0.000392913818359375, -3.0517578125e-05, -0.052457571029663086, -2.1457672119140625e-06, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0014238357543945312, -4.649161837733118e-06, -0.02054273895919323, -2.0146346287219785e-05, -0.000244140625, -1.52587890625e-05, -0.050782203674316406, -2.4199485778808594e-05, -0.617156982421875, -0.00049591064453125, -5.53131103515625e-05, -0.0007686614990234375, -5.7220458984375e-06, -7.62939453125e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.18342775106430054, 0.0, -0.016698108986020088, -1.9073486328125e-06, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Toshley", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"_type": "Template71"}, "_type": "Call", "args": [{"func": {"_type": "Template59"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "CARD_SOURCE", "_type": "Name"}, "attr": "LIST"}, "_type": "keyword", "arg": "source"}, {"value": {"_type": "Template74"}, "_type": "keyword", "arg": "source_list"}], "_type": "Call"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Toshley", "_type": "Str"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template25"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 5, "hole1": 7, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.891839178234818, "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n"}]}
{"gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Warbot", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Warbot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 92, 110, 156], "score_history": [0.0, -2.288818359375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.33514404296875e-05, -7.605552673339844e-05, -0.0006859302520751953, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -8.344650268554688e-06, -2.0265558760002023e-06, -3.814697265625e-06, -1.52587890625e-05, -4.76837158203125e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0024394989013671875, -1.9073486328125e-06, -7.62939453125e-06, -3.3020973205566406e-05, -6.318092346191406e-06, -0.000164031982421875, -0.00048828125, 0.0, 0.0, -3.814697265625e-06, -6.139273318694904e-05, -4.410743713378906e-06, -0.007371664047241211, -8.332579454872757e-05, -0.0001773834228515625, -0.0001239776611328125, -0.0001277923583984375, 0.0, -1.52587890625e-05, 0.0, -0.0001049041748046875, 0.0, -4.76837158203125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.02625751495361328, -3.814697265625e-05, -7.62939453125e-06, -0.00054931640625, -8.7738037109375e-05, -1.1920922133867862e-06, -6.67572021484375e-05, -0.0026073455810546875, -0.013652801513671875, -0.0002040863037109375, -4.053107204526896e-06, 0.0, -6.937788566574454e-05, 0.0, -0.09374654293060303, 0.0, -0.0007762908935546875, -3.814697265625e-06, -0.00157928466796875, -1.9073486328125e-06, -4.76837158203125e-05, -0.000812530517578125, -0.008150100708007812, -0.0012950897216796875, -1.33514404296875e-05, -0.12648454308509827, -1.9073486328125e-06, -0.0073089599609375, -0.00916290283203125, -1.33514404296875e-05], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Warbot", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Warbot", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole2": "enrage", "hole1": 3, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template60"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template12"}, {"_type": "Template15"}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.30523827323804653, "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}]}
{"gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Deathlord", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Deathlord", "<EOS>", 111, 95, 97, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 79, 171, 25, 194, "<UNK>", "deck", "<EOS>", 303, 109, 115, 92, 156], "score_history": [-5.7220458984375e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002855854982044548, -0.0003558305324986577, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, 0.0, -3.814697265625e-06, -5.960462772236497e-07, 0.0, -3.24249267578125e-05, -5.91278076171875e-05, 0.0, 0.0, -6.103515625e-05, -1.9073486328125e-06, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -0.00012468514614738524, -4.57763671875e-05, -0.0001678466796875, -8.58306884765625e-05, -0.030181884765625, 0.0, 0.0, -4.1484832763671875e-05, -6.997340824455023e-05, -0.0001277923583984375, -2.6702880859375e-05, -0.1859455108642578, -5.340576171875e-05, -1.1920928244535389e-07, -5.960446742392378e-06, -0.008607983589172363, -1.0490381100680679e-05, -0.21195828914642334, -1.9073486328125e-06, -0.0037899017333984375, -0.0029659271240234375, -0.00020599365234375, -9.5367431640625e-06, -8.96453857421875e-05, -3.814697265625e-06, -9.34600830078125e-05, -2.6702880859375e-05, -0.35819172859191895, -0.0012941547902300954, -0.3764686584472656, -0.3883829116821289, -0.0023097991943359375, -0.01775074005126953, -3.24249267578125e-05, -0.06560157239437103, -0.6763452291488647, -0.12495412677526474, -0.6507139205932617, -0.1206207275390625, -0.030516624450683594, -0.0934152603149414, -0.0001068115234375], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Deathlord", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Deathlord", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "deathrattle", "hole1": 8, "_type": "Template6", "hole3": {"func": {"_type": "Template77"}, "_type": "Call", "args": [{"func": {"id": "Summon", "_type": "Name"}, "_type": "Call", "args": [{"func": {"id": "<UNK>deck", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template38"}, {"_type": "Template44"}]}]}, {"_type": "Template15"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.352338280823737, "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(<UNK>deck(1, 4)),\n            SelfSelector()))\n"}]}
{"gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Nerub'ar", "Weblord", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Nerub'ar", " ", "Weblord", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 79, 171, 25, 194, "Mana", "Change", "<EOS>", 302, 108, 79, 170, 25, 194, "Card", "Selector", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Is", "Minion", "<EOS>", 110, 156], "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -3.313963316031732e-05, -2.884823152271565e-05, -5.4240030294749886e-05, -2.6702880859375e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.152555099310121e-07, -1.9073486328125e-06, -0.0001392364501953125, -1.33514404296875e-05, 0.0, 0.0, -0.627716064453125, 0.0, -8.20159912109375e-05, -3.814697265625e-06, -1.52587890625e-05, -1.26361273942166e-05, -2.0980827684979886e-05, -1.823885577323381e-05, -9.655952453613281e-06, -7.62939453125e-05, -0.0001068115234375, -0.0001163482666015625, -1.9073486328125e-06, -0.0008296966552734375, 0.0, -0.03264808654785156, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -0.10786819458007812, 0.0, -0.0006389617919921875, -3.814697265625e-05, -3.814697265625e-06, -2.1457672119140625e-06, -6.103515625e-05, -0.0001697540283203125, -0.0069484710693359375, -2.6702880859375e-05, -8.702239938429557e-06, -2.9801878554280847e-05, -5.721964953409042e-06, -1.1920928244535389e-07, -0.1318432092666626, 0.0, -0.0002307891845703125, -5.7220458984375e-06, -0.00035858154296875, -1.9073486328125e-06, 0.0, -0.002170562744140625, -0.012750625610351562, -0.001934051513671875, -5.340576171875e-05, -1.52587890625e-05, 0.0, -0.004189491271972656, -0.000609278678894043, -5.14984130859375e-05, -0.0001049041748046875, -0.6700887680053711, -0.0035419464111328125, -0.0007991790771484375, -0.0012493133544921875, -1.9073486328125e-06, -0.14519262313842773, -0.000518798828125, -0.000484466552734375, -0.0001544952392578125, -1.1444091796875e-05, -3.24249267578125e-05, -0.025786399841308594, -0.0012426376342773438, -0.14895057678222656, -5.7220458984375e-06, -0.005621433258056641, -0.3092843294143677, -0.0005779266357421875, -0.0003070831298828125, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Nerub'arWeblord", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "PIRATE"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Nerub'ar Weblord", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole2": "auras", "hole1": 4, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template60"}, "_type": "Call", "args": [{"func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template36"}]}, {"func": {"id": "CardSelector", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template16"}, "_type": "keyword", "arg": "condition"}], "_type": "Call"}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.246004579495768, "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsMinion()))])\n"}]}
{"gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Spectral", "Knight", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Spectral", " ", "Knight", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 123, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Damaged", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 110, 156], "score_history": [-7.62939453125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0008824745309539139, -0.0006353147909976542, -2.741813204920618e-06, -2.86102294921875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -3.0517578125e-05, -8.821474693831988e-06, 0.0, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.03409004211425781, -1.9073486328125e-06, -3.0517578125e-05, -4.172316494077677e-06, -5.352461084839888e-05, -6.914126061019488e-06, -3.814697265625e-06, -0.000225067138671875, -0.000110626220703125, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005645751953125, -0.00013697147369384766, -0.00035804594517685473, -0.000499725341796875, -4.76837158203125e-05, -0.4051361083984375, -1.71661376953125e-05, -0.000682830810546875, -0.0010738372802734375, -0.008269309997558594, -9.5367431640625e-06, -0.0069828033447265625, -0.07133960723876953, -0.0026035308837890625, -0.16592979431152344, -1.9073486328125e-06, -0.8273611068725586, -7.390969585685525e-06, -0.01915454864501953, -0.07173919677734375, -0.00017547607421875, -0.9278106689453125, -1.9073486328125e-06, -0.000598907470703125, -6.866455078125e-05, -0.0008869171142578125, -7.05718994140625e-05, -1.1444091796875e-05, -0.0022830963134765625, -1.9073486328125e-05, -0.0007114410400390625, -3.814697265625e-06, -0.9648277163505554, -2.2649765014648438e-06, -0.0002002716064453125, -1.9073486328125e-06, -0.0002307891845703125, -0.4221839904785156, -0.22425460815429688, -1.52587890625e-05, -0.7377026677131653, -2.1457672119140625e-06, -0.00072479248046875, -0.001743316650390625, -0.1816082000732422, 0.0, -0.45542144775390625, -0.0004799365997314453, -3.7670135498046875e-05, -0.0059604644775390625, -5.7220458984375e-06, -0.000194549560546875, -1.4600415229797363, -0.0006266829441301525, -1.9073486328125e-06, -0.0005397796630859375, -5.53131103515625e-05], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "SpectralKnight", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Spectral Knight", "_type": "Str"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"func": {"_type": "Template47"}, "keywords": [{"value": {"_type": "Template72"}, "_type": "keyword", "arg": "charge"}, {"value": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"hole0": "Damaged", "_type": "Template16"}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"hole0": "Kill", "_type": "Template16"}, {"func": {"id": "WeaponSelector", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "EnemyPlayer", "_type": "Template16"}]}]}]}, {"_type": "Template39_expr_seq"}]}, "_type": "keyword", "arg": "effects"}], "_type": "Call", "args": [{"_type": "Template44"}, {"_type": "Template58"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -7.007772164454764, "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 8, charge=True, effects=[Effect(Damaged(),\n            ActionTag(Kill(), WeaponSelector(EnemyPlayer())))])\n"}]}
{"gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Wailing", "Soul", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Wailing", " ", "Soul", "<EOS>", 115, 95, 97, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Silence", "<EOS>", 79, 170, 49, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "3", "<EOS>", "5", "<EOS>", 156], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.0006398299592547119, -0.00011002412065863609, -3.337860107421875e-05, -5.340576171875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -2.145764938177308e-06, -1.9073486328125e-06, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -7.2479248046875e-05, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -3.814697265625e-05, -8.702254490344785e-06, -3.230568836443126e-05, -1.633156898606103e-05, -5.9604644775390625e-06, -0.000263214111328125, -0.0008602142333984375, -0.0002346038818359375, -5.7220458984375e-06, -0.0003910064697265625, 0.0, -0.0004197359085083008, -2.3841855067985307e-07, -0.000102996826171875, -5.7220458984375e-06, -7.62939453125e-06, -0.000286102294921875, -0.0132904052734375, -2.47955322265625e-05, -0.013833386823534966, -0.00126008247025311, -0.04147148132324219, -0.0013065338134765625, -0.001438140869140625, -0.010515213012695312, -1.9073486328125e-05, 0.0, -0.03464555740356445, -5.7220458984375e-06, -7.82012939453125e-05, -9.5367431640625e-06, -0.0034084320068359375, -2.491474151611328e-05, -5.7220458984375e-06, -0.0004138946533203125, -3.814697265625e-06, -0.000713348388671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.00020802021026611328, -0.00014722347259521484, 0.0, -0.001308441162109375, 0.0, -1.656998210819438e-05, -9.536738616588991e-07, -8.463859558105469e-06, -1.1920928244535389e-07, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "WailingSoul", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"hole0": "Silence", "_type": "Template16"}, {"func": {"_type": "Template50"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template16"}, "_type": "keyword", "arg": "picker"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Wailing Soul", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 3, "hole1": 5, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.1279680045779159, "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}]}
{"gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Amani", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Amani", " ", "Berserker", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 111, 311, 136, 138, 291, "enrage", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "3", "<EOS>", 92, 110, 156], "score_history": [-1.9073486328125e-06, 0.0, 0.0, -1.33514404296875e-05, -1.33514404296875e-05, -0.00010871296399272978, -0.00018618757894728333, -8.463848644169047e-06, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.861022494471399e-06, -1.5973946574376896e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002574920654296875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -6.29425048828125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.3470558769768104e-05, -2.455709909554571e-05, -8.583032467868179e-06, 0.0, -0.000438690185546875, -0.000789642333984375, -3.4332275390625e-05, -2.09808349609375e-05, -4.00543212890625e-05, -1.2755334864777979e-05, -0.001661591581068933, -9.34600830078125e-05, -3.24249267578125e-05, -0.37374305725097656, -8.0108642578125e-05, -9.918212890625e-05, -0.0001068115234375, -0.001056671142578125, -9.5367431640625e-06, -0.00031280517578125, -0.05240058898925781, -0.005832672119140625, -0.011394500732421875, -0.00037384033203125, -0.0007572174072265625, -0.15390586853027344, -6.079673767089844e-06, -0.0029592514038085938, -1.9073486328125e-06, -0.0021877288818359375, -5.14984130859375e-05, -1.9073486328125e-06, -0.00043487548828125, -0.00011444091796875, -0.00278472900390625, -0.0002536773681640625, -0.6558206677436829, -0.0008033514022827148, -0.0002231597900390625, -8.7738037109375e-05, -0.000362396240234375], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "AmaniBerserker", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Amani Berserker", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"func": {"_type": "Template47"}, "keywords": [{"_type": "Template32"}, {"value": {"_type": "List", "elts": [{"func": {"_type": "Template60"}, "_type": "Call", "args": [{"hole0": 3, "_type": "Template12"}, {"_type": "Template15"}]}, {"_type": "Template39_expr_seq"}]}, "_type": "keyword", "arg": "enrage"}], "_type": "Call", "args": [{"_type": "Template36"}, {"_type": "Template40"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.2700690916631174, "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True, enrage=[Aura(ChangeAttack(3),\n            SelfSelector())])\n"}]}
{"gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Archmage", "Antonidas", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Archmage", " ", "Antonidas", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 97, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 171, 63, 302, 79, 171, 25, 194, "Mana", "Cost", "<EOS>", 302, 109, 79, 171, 54, 303, 79, 171, 67, 302, 79, 170, 57, 310, 138, 291, "conditions", "<EOS>", 23, 189, 303, 79, 171, 59, 302, 98, 110, 93, 213, "Player", "Selector", "<EOS>", 110, 156], "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.0028954509180039167, -0.00021002470748499036, -3.325928992126137e-05, -1.9073486328125e-05, -5.340576171875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.245203283266164e-06, -1.9073486328125e-06, -0.0028781890869140625, -5.7220458984375e-06, 0.0, 0.0, -0.0002346038818359375, -4.00543212890625e-05, -3.4332275390625e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.8596476365928538e-05, -2.1457668481161818e-05, -4.887569048150908e-06, -9.655952453613281e-06, -0.0007190704345703125, -0.05318641662597656, 0.0, -1.9073486328125e-06, 0.0, -0.0007480382919311523, -1.454353241570061e-05, -0.09831617027521133, -0.0008011601166799664, -0.10817146301269531, -1.9073486328125e-06, 0.0, -0.0003358125686645508, -1.0728830375228426e-06, -1.9073486328125e-05, -6.67572021484375e-05, -0.0002422332763671875, -0.000152587890625, -6.616114114876837e-05, -5.113947918289341e-05, -0.00014972491771914065, -6.318092346191406e-06, -0.0007776021957397461, 0.0, -6.4849853515625e-05, 0.0, -0.0012683868408203125, -3.814697265625e-06, -1.9073486328125e-05, -0.0003204345703125, -0.0001964569091796875, -0.030675888061523438, -0.002330780029296875, -0.0043792724609375, -0.015119552612304688, -0.08022308349609375, -0.013286590576171875, -0.0001468658447265625, -1.9073486328125e-06, -0.004850148223340511, -0.0324886217713356, -7.033333531580865e-05, -0.00018310546875, -0.0023431777954101562, -0.000156402587890625, -0.0059661865234375, -0.000591278076171875, -7.62939453125e-06, -0.0001087188720703125, -0.0002918243408203125, -0.00048828125, -0.010419845581054688, -0.014788627624511719, -8.58306884765625e-05, -0.00112152099609375, -0.0028448104858398438, -0.0004138946533203125, -4.00543212890625e-05, -0.0018910156795755029, -0.00014161548460833728, -0.0036725997924804688, -0.0001735687255859375, -0.002727508544921875, -0.00498199462890625, -0.000244140625, -0.007443428039550781, -0.00019073486328125, -0.010266304016113281, -0.000881195068359375, -0.0002346038818359375, -3.24249267578125e-05, -0.0002498626708984375, -8.392333984375e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "ArchmageAntonidas", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Archmage Antonidas", "_type": "Str"}, {"_type": "Template48"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 5, "hole2": "effects", "hole1": 7, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"func": {"_type": "Template67"}, "_type": "Call", "args": [{"func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template38"}]}]}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"_type": "Template71"}, "_type": "Call", "args": [{"func": {"_type": "Template59"}, "keywords": [{"value": {"_type": "List", "elts": [{"func": {"_type": "Template61"}, "_type": "Call", "args": [{"_type": "Template21"}]}, {"_type": "Template39_expr_seq"}]}, "_type": "keyword", "arg": "conditions"}], "_type": "Call"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.5289273581414591, "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector()))])\n"}]}
{"gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Bananas", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Bananas", "<EOS>", 109, 95, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 109, 156], "score_history": [-7.62939453125e-06, -2.09808349609375e-05, -6.103515625e-05, -2.47955322265625e-05, -0.0001049041748046875, 0.0, -0.00024795078206807375, -4.00543212890625e-05, -0.0002880096435546875, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -2.1457672119140625e-06, -3.862357698380947e-05, -3.814697265625e-06, -0.0001049041748046875, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0048313140869140625, -3.24249267578125e-05, -0.6196737289428711, -4.00543212890625e-05, -0.0004787445068359375, -1.1920928244535389e-07, -0.00020716659491881728, -0.00012969970703125, -0.0007724761962890625, -0.0006046295166015625, -0.0007152557373046875, -1.1444091796875e-05, -0.06611347198486328, -0.000614166259765625, -0.0003032684326171875, -3.6835670471191406e-05, -2.2649765014648438e-06, -0.000217437744140625, -0.0003681182861328125, -7.62939453125e-06, -0.000640869140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.41294002532958984, -1.33514404296875e-05, -1.71661376953125e-05, -0.0002422332763671875, -0.6099165678024292, -0.00044476985931396484, -3.814697265625e-06, -1.2305145263671875, -1.71661376953125e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Bananas", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Bananas", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "increase_health"}, "_type": "Call", "args": [{"_type": "Template38"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.950888013758224, "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n"}]}
{"gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Blessed", "Champion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessed", " ", "Champion", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 84, 194, "temp_attack", "<EOS>", 156], "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -0.0001599660754436627, -7.2953560447786e-05, -7.510169325541938e-06, -4.00543212890625e-05, -1.52587890625e-05, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -5.1856040954589844e-05, -0.00015376845840364695, -5.53131103515625e-05, -0.0001316070556640625, -9.72747802734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0026226043701171875, -0.00011444091796875, -0.00350189208984375, -1.9073486328125e-06, -7.62939453125e-06, -5.1020273531321436e-05, -2.0742409105878323e-05, -2.3126376618165523e-05, -7.581423415103927e-05, -8.392333984375e-05, -0.008264541625976562, 0.0, -2.47955322265625e-05, 0.0, -0.015500783920288086, -8.2254373410251e-06, -0.021366840228438377, 0.0, -0.04060649871826172, -0.0002288818359375, -0.0005664825439453125, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -0.005069732666015625, -0.00025177001953125, -0.022317886352539062, -7.62939453125e-06, -1.9073486328125e-06, -0.01806640625, -7.62939453125e-06, -2.288818359375e-05, -0.0047168731689453125, -0.6078612804412842, -5.7220415328629315e-05, -0.0001544952392578125, -0.12427234649658203, -1.9073486328125e-06, -0.9201593399047852, -0.00447459751740098, -0.0055065155029296875], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "BlessedChampion", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Blessed Champion", "_type": "Str"}, {"_type": "Template46"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "<UNK>"}, "_type": "Call", "args": [{"id": "temp_attack", "_type": "Name"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.8069741044914664, "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(temp_attack)\n"}]}
{"gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Cabal", "Shadow", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Cabal", " ", "Shadow", "<EOS>", 120, 103, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Kill", "<EOS>", 79, 171, 49, 304, 79, 171, 25, 194, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 302, 111, 93, 213, "Enemy", "Player", "<EOS>", 93, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -6.67572021484375e-05, -7.62939453125e-06, -0.0009947833605110645, -0.002176959766075015, -0.6170239448547363, -6.67572021484375e-05, -3.24249267578125e-05, -7.43865966796875e-05, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -2.9802317840221804e-06, -1.9073486328125e-06, -0.000286102294921875, -1.33514404296875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -7.62939453125e-06, -3.62396240234375e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, -5.280842015054077e-05, -4.2200084862997755e-05, -0.00011086171434726566, -0.41121983528137207, -0.0005626678466796875, -0.0845785140991211, -0.12961196899414062, -0.000247955322265625, -2.47955322265625e-05, 0.0, -1.0371208190917969e-05, -4.887576324108522e-06, -0.00021004669542890042, -3.933906555175781e-06, -0.0001049041748046875, -0.000934600830078125, -1.9073486328125e-06, -0.0003070831298828125, -1.9073486328125e-06, -0.0002346038818359375, -1.9073486328125e-06, -9.5367431640625e-06, -4.9591064453125e-05, -0.3470115661621094, -1.71661376953125e-05, -0.056188229471445084, -1.1920928244535389e-07, -1.33514404296875e-05, -1.71661376953125e-05, -0.0016307830810546875, -0.0026454925537109375, -9.918212890625e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.3624715805053711, -0.0017192363739013672, -0.031549423933029175, -0.00144485745113343, -0.038408711552619934, -0.008276224136352539, -9.894371032714844e-06, -4.57763671875e-05, -0.6968307495117188, -0.0006580352783203125, -3.814697265625e-06, -0.1039741039276123, -4.0531158447265625e-06, 0.0, -2.6702880859375e-05, 0.0, -0.07502710819244385, -0.00017607209156267345, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.3960770704434253e-05, -2.741813204920618e-06, -0.02557814121246338, 0.0, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "CabalShadow", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"hole0": "Kill", "_type": "Template16"}, {"func": {"_type": "Template50"}, "_type": "Call", "args": [{"func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template40"}]}, {"hole0": "EnemyPlayer", "_type": "Template16"}, {"hole0": "UserPicker", "_type": "Template16"}]}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Cabal Shadow", "_type": "Str"}, {"_type": "Template52"}, {"_type": "Template28"}, {"_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 4, "hole1": 5, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.003125574585276, "inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(3), EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}]}
{"gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Cone", "Of", "Cold", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Cone", " ", "of", " ", "Cold", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.82012939453125e-05, -9.5367431640625e-06, -8.58306884765625e-05, -8.666155918035656e-05, -6.747190491296351e-05, -0.0024508077185600996, -5.9604644775390625e-06, -9.5367431640625e-06, -3.0517578125e-05, -0.00319671630859375, 0.0, 0.0, -5.7220458984375e-06, -3.576278118089249e-07, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -0.0001544952392578125, -1.9073486328125e-06, -0.0038909912109375, -1.9073486328125e-06, -2.86102294921875e-05, -1.2397711543599144e-05, -2.4318689611391164e-05, -6.782907439628616e-05, -2.5272369384765625e-05, -0.0003613230655901134, -4.0411949157714844e-05, -0.0001964569091796875, -0.0007724761962890625, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00018322467803955078, -1.3828277587890625e-05, -0.9115471839904785, -8.58306884765625e-05, -0.024732589721679688, -5.7220458984375e-06, -0.13849544525146484, -4.00543212890625e-05, 0.0, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -0.5677928924560547, 0.0, -0.07856082916259766, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-05, -0.00274658203125, -0.0021370649337768555, 0.0, -1.33514404296875e-05, -0.003787994384765625, -3.4332275390625e-05, -0.09077441692352295, -2.09808349609375e-05, -0.0014019012451171875, -0.0014476776123046875, 0.0, -3.814697265625e-06, -0.0021839141845703125, 0.0, -0.000152587890625, -0.03471565246582031, -0.1661233901977539, -5.7220458984375e-06, -0.0002155303955078125, -0.0006732940673828125, -0.0007476806640625, -0.001007080078125, -2.288818359375e-05, -0.0084991455078125, -0.00019073486328125, -0.004340915009379387, -3.242446109652519e-05, -3.24249267578125e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "ConeOfCold", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Cone of Cold", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template8"}, {"_type": "Template42"}]}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_buff"}, "_type": "Call", "args": [{"func": {"_type": "Template66"}, "_type": "Call", "args": [{"hole0": "Frozen", "_type": "Template16"}]}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.054510241685364, "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}]}
{"gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Defender", "Of", "Argus", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Defender", " ", "of", " ", "Argus", "<EOS>", 115, 95, 97, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 304, 79, 171, 48, 302, 82, 189, 304, 79, 171, 62, 302, 90, 209, "1", "<EOS>", 79, 171, 62, 302, 91, 211, "1", "<EOS>", 110, 92, 79, 172, 25, 194, "Greater", "Than", "<EOS>", 302, 79, 171, 25, 194, "Count", "<EOS>", 302, 93, 213, "Card", "Selector", "<EOS>", 310, 138, 291, "value", "<EOS>", 53, 154, 205, "2", "<EOS>", "3", "<EOS>", 156], "score_history": [0.0, 0.0, 0.0, -1.52587890625e-05, -4.57763671875e-05, -3.588141771615483e-05, -0.0032352632842957973, -0.0006871285731904209, -2.932548159151338e-05, -1.9073486328125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.576277322281385e-06, -5.960446742392378e-06, -1.9073486328125e-06, -0.0001354217529296875, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, 0.0, -7.390960945485858e-06, -5.245207648840733e-05, -2.062309613393154e-05, -8.33272933959961e-05, -0.0002660749014467001, -8.344650268554688e-06, -0.0003376007080078125, -6.29425048828125e-05, -0.0005741119384765625, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -0.0001952648162841797, -2.264974000354414e-06, -0.0006885528564453125, -1.9073486328125e-06, -1.1444091796875e-05, -0.5480709075927734, -0.02942657470703125, -3.814697265625e-06, -0.0038051605224609375, -9.918212890625e-05, -0.000701904296875, -1.71661376953125e-05, -0.0035552978515625, -6.67572021484375e-05, -9.5367431640625e-06, -0.0001087188720703125, -0.0005397796630859375, -0.2680978775024414, -0.0002079010009765625, -0.014605074189603329, -1.9073486328125e-05, -0.000118255615234375, -2.86102294921875e-05, -0.0011425018310546875, -0.0001506805419921875, -0.0009365081787109375, -0.0002498626708984375, -0.6281812191009521, -4.1961669921875e-05, -0.0008754730224609375, -0.0046634674072265625, -0.0035552978515625, -0.0050506591796875, -0.006748199462890625, 0.0, -0.0006543397903442383, -0.0036301552318036556, -7.033346628304571e-05, -3.62396240234375e-05, -0.003879547119140625, -0.0002574920654296875, -4.57763671875e-05, 0.0, -0.003238201141357422, -6.556510470545618e-06, -2.288818359375e-05, -0.3500175476074219, -1.9073486328125e-06, -1.3590892553329468, -0.0023865699768066406, -1.1920928244535389e-07, -3.62396240234375e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.6463794708251953, -5.7220458984375e-06, -0.006178855895996094, -0.0003871917724609375, -1.1444091796875e-05, -3.218649908376392e-06, -3.576278118089249e-07, -2.622604188218247e-05, 0.0, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "DefenderOfArgus", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"_type": "List", "elts": [{"func": {"_type": "Template66"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template12"}]}, {"func": {"_type": "Template66"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template14"}]}, {"_type": "Template39_expr_seq"}]}]}, {"_type": "Template15"}, {"func": {"id": "GreaterThan", "_type": "Name"}, "keywords": [{"value": {"_type": "Template55"}, "_type": "keyword", "arg": "value"}], "_type": "Call", "args": [{"func": {"id": "Count", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "CardSelector", "_type": "Template16"}]}]}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Defender of Argus", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 2, "hole1": 3, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.9042121876247435, "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(Count(\n            CardSelector()), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}]}
{"gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Doomhammer", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Doomhammer", "<EOS>", 116, 106, 97, 310, 138, 291, "overload", "<EOS>", 38, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 108, 108, 156], "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -1.2874532330897637e-05, -0.0004562963731586933, -1.9073486328125e-06, -0.0024166107177734375, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.00014495849609375, -0.0002593994140625, 0.0, -3.814697265625e-06, -0.0001621246337890625, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -6.914134246471804e-06, -8.392333984375e-05, -0.68505859375, -0.0178985595703125, -9.5367431640625e-06, -0.08091163635253906, -1.9073486328125e-06, -0.010785698890686035, -3.576278118089249e-07, -0.06192779541015625, -9.5367431640625e-06, -1.9073486328125e-06, -0.021825790405273438, -6.675719760096399e-06, -0.0002002716064453125, -0.0004215240478515625, -0.000194549560546875, -1.1444091796875e-05, -0.0004787445068359375, -0.6258544921875, -0.0007781982421875, -0.000896453857421875, -0.000240325927734375, -0.19788169860839844, -0.000522613525390625], "model_output": {"body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "name": "Doomhammer", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Template36"}, "_type": "keyword", "arg": "overload"}], "_type": "Call", "args": [{"s": "Doomhammer", "_type": "Str"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"func": {"_type": "Template79"}, "_type": "Call", "args": [{"_type": "Template36"}, {"_type": "Template36"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_weapon"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.7095460523089443, "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n"}]}
{"gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Earth", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Earth", " ", "Shock", "<EOS>", 109, 106, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "1", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "extend", "<EOS>", 302, 76, 164, 17, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 151, 181, 21, 174, 17, 164, 17, 164, 43, "hero", "<EOS>", "health", "<EOS>", 299, 8, 302, 122, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score_history": [-1.1444091796875e-05, -3.0517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00011729506513802335, -4.768367489305092e-06, -0.00019035983132198453, -2.86102294921875e-05, -9.1552734375e-05, -5.7220458984375e-05, 0.0, 0.0, -1.9073486328125e-06, -3.099440846199286e-06, -1.9073486328125e-06, -0.00022125244140625, -5.7220458984375e-06, 0.0, -3.814697265625e-05, -0.000118255615234375, -4.00543212890625e-05, -0.00017547607421875, -1.9073486328125e-06, -7.43865966796875e-05, -0.0001567479339428246, -2.0861623852397315e-05, -3.6954863844584906e-06, -2.9802317840221804e-06, -9.34600830078125e-05, -0.32971763610839844, -0.00043487548828125, -0.0001068115234375, -0.00107574462890625, -1.9073486328125e-05, -1.9073486328125e-06, -2.110004425048828e-05, -2.1457672119140625e-06, -2.09808349609375e-05, -0.043964385986328125, -7.62939453125e-06, -0.5769968032836914, -7.82012939453125e-05, -0.01604175567626953, -2.6702880859375e-05, -0.001560211181640625, -9.536738616588991e-07, -9.72747802734375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -0.0002638101577758789, -1.8477303456165828e-05, -0.0037689208984375, -5.7220458984375e-06, -0.39232921600341797, -0.0020322799682617188, -0.002554435282945633, -9.5367431640625e-06, -0.28743553161621094, -0.0195159912109375, -6.4849853515625e-05, -1.9073486328125e-06, -0.368255615234375, -9.5367431640625e-06, -0.0003108978271484375, -9.918212890625e-05, -8.96453857421875e-05, -0.0004405975341796875, 0.0, -0.08094120025634766, -1.1920928244535389e-07, -0.0017834901809692383, -4.768370445162873e-07, -9.5367431640625e-06, -0.0005588531494140625, -1.9073486328125e-06, -0.003147125244140625, -0.0004314738616812974, -1.0013571227318607e-05, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.05313301086425781, -0.011177420616149902, 0.0, -1.9073486328125e-06, -0.000370025634765625, -1.9073486328125e-06, -0.06777763366699219, 0.0, -0.1204681396484375, -3.814697265625e-06, -0.0004177093505859375, -3.0517578125e-05, -0.0024198293685913086, -0.0002244459028588608, -0.016699030995368958, -8.225431884056889e-06, -0.3768777847290039, -1.1444091796875e-05, 0.0, -0.00026702880859375, -3.814697265625e-06, -2.09808349609375e-05, -0.12269878387451172, -0.008580446243286133, -1.311301275563892e-06, -5.14984130859375e-05, -0.032990455627441406, -1.71661376953125e-05, -0.008503809571266174, -3.62396240234375e-05, -0.09522438049316406, -0.23674392700195312, -0.000423431396484375, -0.016500473022460938, -9.72747802734375e-05, -0.14075374603271484, 0.0, -0.08774662017822266, -3.814697265625e-06, -0.15889930725097656, -0.3921210765838623, -1.1920919860131107e-05, -0.03710867837071419, -2.2649765014648438e-06, -5.7220458984375e-06, -0.6208591461181641, -0.0002269744873046875, -0.32151317596435547, -0.059764862060546875, -0.029807090759277344, 0.0, -1.9073486328125e-06, -0.0001544952392578125, -9.5367431640625e-06, -3.62396240234375e-05, -0.0008602142333984375, -0.16538405418395996, -1.1920928244535389e-07, -2.86102294921875e-05, -0.00079345703125, -1.33514404296875e-05, -0.004028156399726868, -1.9073486328125e-05, -0.015420913696289062, -2.09808349609375e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "EarthShock", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Earth Shock", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"targets": [{"_type": "Template78"}], "_type": "Assign", "value": {"func": {"_type": "Attribute", "value": {"id": "copy", "_type": "Name"}, "attr": "copy"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template78"}, "attr": "extend"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"id": "game", "_type": "Name"}, "attr": "current_player"}, "attr": "minions"}]}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "damage"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template8"}, {"_type": "Template42"}]}}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template8"}, {"_type": "Template42"}]}}], "_type": "If", "test": {"_type": "Compare", "comparators": [{"_type": "Template55"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "hero"}, "attr": "health"}, "ops": [{"_type": "Eq"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template55"}, {"hole0": 1, "_type": "Template8"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.343265251293687, "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(1)):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.current_player.minions)\n            target.damage(player.effective_spell_damage(1), self)\n            if player.hero.health == 0:\n                self.target.damage(player.effective_spell_damage(1), self)\n"}]}
{"gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Eye", "<UNK>", "The", "Eye", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Eye", " ", "for", " ", "Eye", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 111, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 32, 213, "Eye", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "summon", "<EOS>", 304, 114, 84, 194, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 156], "score_history": [-9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.24249267578125e-05, -0.006567454431205988, -0.3797323405742645, -0.6347247362136841, -0.00012028068886138499, -2.2292000721790828e-05, -1.33514404296875e-05, -0.004439353942871094, -0.0028076171875, -3.814697265625e-06, 0.0, -1.2159347534179688e-05, -2.7418097943154862e-06, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, 0.0, 0.0, -0.0456085205078125, -1.9073486328125e-06, -0.0023937225341796875, -0.0001773834228515625, -1.9073486328125e-06, -0.0032858513295650482, -5.471706026582979e-05, -0.01908176578581333, -0.0004787445068359375, -0.0021715164184570312, -2.300739288330078e-05, -6.29425048828125e-05, -0.020006179809570312, 0.0, -7.62939453125e-06, 0.0, -5.984306335449219e-05, -1.5497176718781702e-05, -0.09028184413909912, -1.9550323486328125e-05, -0.28914928436279297, -1.9073486328125e-06, 0.0, -0.0005512237548828125, 0.0, -2.09808349609375e-05, -0.04506206512451172, -0.0002346038818359375, -0.0035305023193359375, -3.814697265625e-06, -0.11800098419189453, 0.0, -0.0031251907348632812, -9.536738616588991e-07, -0.001373291015625, -1.9073486328125e-06, -0.0002498626708984375, -9.5367431640625e-06, -0.001674652099609375, -3.576278118089249e-07, -4.1961669921875e-05, -9.5367431640625e-06, -0.7254304885864258, -0.003261566162109375, -9.1552734375e-05, -4.9591064453125e-05, -2.288818359375e-05, -0.0002689361572265625, -5.7220458984375e-06, -0.0010178087977692485, -0.0014593007508665323, -0.005522727966308594, -0.000152587890625, -0.4743925631046295, -0.01141343079507351, -0.000400543212890625, -0.0001125335693359375, 0.0, -0.00046539306640625, -2.288818359375e-05, -0.0002727508544921875, -0.005621910095214844, -1.9073486328125e-06, -0.007233738899230957, -5.9604593843687326e-05, -0.01930546760559082, 0.0, -0.000148773193359375, -7.2479248046875e-05, -0.009413719177246094, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -0.045627593994140625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0005311965942382812, -1.537799835205078e-05, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -0.3577098846435547, -0.001152839045971632, -4.0531158447265625e-06, -1.1444091796875e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Eye<UNK>TheEye", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Eye for Eye", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "_type": "Assign", "value": {"hole0": "Eye", "_type": "Template16"}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"id": "<UNK>", "_type": "Name"}, "attr": "summon"}, "_type": "Call", "args": [{"_type": "Template43"}, {"id": "game", "_type": "Name"}, {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template55"}, {"_type": "Template40"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.346765395522368, "inferred_code": "class Eye<UNK>TheEye(SpellCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK> = Eye()\n            <UNK>.summon(player, game, len(game.other_player.minions))\n"}]}
{"gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Flare", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flare", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 97, 150, 178, "use", "<EOS>", 2, 317, 155, 152, 183, "<UNK>", "<EOS>", 292, 287, "Stealth", "<EOS>", "0", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 32, 213, "Stealth", "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "<UNK>", "<EOS>", 302, 121, 156], "score_history": [-7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.145764938177308e-06, -3.719329470186494e-05, -1.71661376953125e-05, -9.72747802734375e-05, -7.43865966796875e-05, -0.0004405975341796875, -1.1444091796875e-05, -1.3113020031596534e-05, -1.2397729733493179e-05, -9.5367431640625e-06, -6.866455078125e-05, -0.0001163482666015625, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -2.09808349609375e-05, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.3126571250031702e-05, -1.0967240996251348e-05, -7.62939453125e-06, -0.0007266998291015625, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -0.0006774663925170898, -9.40561294555664e-05, -0.7640072107315063, -0.0014236895367503166, -0.07021713256835938, -5.7220458984375e-05, -3.814697265625e-06, -4.398822784423828e-05, -6.914137884450611e-06, -7.43865966796875e-05, -0.07002735137939453, -0.0003147125244140625, -0.19652271270751953, -0.0016689300537109375, -0.6951069831848145, -4.303455352783203e-05, -0.003284454345703125, -0.000629425048828125, -0.1209319531917572, -0.0182807557284832, -0.01837117411196232, -2.09808349609375e-05, -0.020921707153320312, -8.58306884765625e-05, -0.6802272796630859, 0.0, -0.020818471908569336, -2.2172887838678434e-05, -0.18584823608398438, -0.000110626220703125, -7.62939453125e-06, -7.62939453125e-06, -0.0002366303524468094, -0.0009704995900392532, -0.00012969970703125, -0.000408172607421875, -0.03153228759765625, -0.020496368408203125, -0.0004367828369140625, -7.82012939453125e-05, -1.9073486328125e-06, -0.0001888275146484375, -3.0517578125e-05, -0.0001003726792987436, -0.026116274297237396, -0.714874267578125, -0.00042724609375, -0.2454613596200943, -0.4100086987018585, -0.00019859753956552595, -0.000301361083984375, -2.47955322265625e-05, 0.0, -0.2109813690185547, -0.0001049041748046875, -1.9073486328125e-05, -0.0001850128173828125, -7.62939453125e-06, -0.003493783064186573, -0.002991959685459733, -0.6711477041244507, -6.914137884450611e-06, -0.0207977294921875, -0.21290302276611328, -5.340576171875e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Flare", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Flare", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"level": 0, "_type": "ImportFrom", "module": "<UNK>", "names": [{"_type": "alias", "name": "Stealth"}]}, {"body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "_type": "Assign", "value": {"hole0": "Stealth<UNK>", "_type": "Template16"}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"id": "<UNK>", "_type": "Name"}, "attr": "<UNK>"}, "_type": "Call", "args": [{"_type": "Template54"}]}}], "_type": "For", "target": {"id": "i", "_type": "Name"}, "iter": {"func": {"id": "range", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template55"}, {"_type": "Template36"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.446400307905151, "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from <UNK> import Stealth\n        for i in range(0, 2):\n            <UNK> = Stealth<UNK>()\n            <UNK>.<UNK>(minion)\n"}]}
{"gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Gorehowl", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Gorehowl", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 79, 171, 25, 194, "Buff", "Until", "<EOS>", 303, 90, 209, "2", "<EOS>", 79, 170, 25, 194, "Turn", "Ended", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Is", "Minion", "<EOS>", 79, 170, 49, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 111, 108, 156], "score_history": [0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0005583763122558594, -0.002724404213950038, -5.7220458984375e-06, -0.023868560791015625, -2.6702880859375e-05, 0.0, 0.0, -1.5616416931152344e-05, -3.576277322281385e-06, -3.814697265625e-06, -5.14984130859375e-05, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -0.6226997375488281, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -3.8146954466355965e-06, -4.780292510986328e-05, -0.002475738525390625, -0.09862518310546875, 0.0, -3.814697265625e-06, 0.0, -0.00015676021575927734, -2.1457672119140625e-06, -0.051015593111515045, 0.0, -0.02243518829345703, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.00016485690139234066, -2.2649765014648438e-06, -2.86102294921875e-05, -0.40389156341552734, -2.47955322265625e-05, -0.4829978942871094, -1.1920928244535389e-07, -0.03961467742919922, -5.7220458984375e-06, -3.0517578125e-05, -4.1961669921875e-05, -0.013477325439453125, -7.62939453125e-06, -0.009237289428710938, -0.00017547607421875, -0.27480602264404297, -0.0001392364501953125, -0.1475067138671875, -2.288818359375e-05, -0.8050690293312073, -0.0018977333093062043, -2.837159627233632e-05, -0.005565643310546875, -0.7353525161743164, -0.0001087188720703125, -0.10383675992488861, -7.62939453125e-06, -0.0669393539428711, -0.0049877166748046875, -0.00032806396484375, 0.0, -0.08860898017883301, -0.0026824474334716797, 0.0, -3.814697265625e-06, -0.0001125335693359375, -9.5367431640625e-06, -0.40717506408691406, -5.7220458984375e-06, -0.21919727325439453, -5.340576171875e-05, -0.02043907716870308, -0.06078064814209938, -0.00012302398681640625, -0.5520896911621094, -0.0001087188720703125, -0.0016307830810546875, -0.01059722900390625, -8.7738037109375e-05, -1.9073486328125e-06, -0.00014698505401611328, -2.1934505639364943e-05, -0.0006351470947265625, -2.09808349609375e-05, -0.0006676912307739258, -6.771087646484375e-05, 0.0, -0.00109100341796875, -5.7220458984375e-06, -0.03792762756347656, -7.748603820800781e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.0007671117782592773, -6.73532485961914e-05, -1.9073486328125e-06, -0.002193450927734375, -1.9073486328125e-06, -0.00653839111328125, -1.9073486328125e-06, -0.0001239776611328125, -0.0019683837890625, -0.004322052001953125, -9.72747802734375e-05, -6.29425048828125e-05, -0.0004215240478515625, -0.0017728805541992188, -7.05718994140625e-05, -0.5799455642700195, -0.04823589324951172, -5.7220458984375e-06], "model_output": {"body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "name": "Gorehowl", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"func": {"id": "BuffUntil", "_type": "Name"}, "_type": "Call", "args": [{"hole0": 2, "_type": "Template12"}, {"func": {"id": "TurnEnded", "_type": "Name"}, "keywords": [{"value": {"hole0": "IsMinion", "_type": "Template16"}, "_type": "keyword", "arg": "condition"}], "_type": "Call"}]}]}, {"func": {"_type": "Template50"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template16"}, "_type": "keyword", "arg": "picker"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Gorehowl", "_type": "Str"}, {"_type": "Template48"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Return", "value": {"func": {"_type": "Template79"}, "_type": "Call", "args": [{"_type": "Template40"}, {"_type": "Template36"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_weapon"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.972198586805909, "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give(BuffUntil(\n            ChangeAttack(2), TurnEnded(condition=IsMinion()))),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n"}]}
{"gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Hound", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 158, 283, "1", "<EOS>", "1", "<EOS>", 156], "score_history": [-5.340576171875e-05, -5.14984130859375e-05, -2.86102294921875e-05, -0.0003070831298828125, -1.33514404296875e-05, -5.483625955093885e-06, -4.267649637768045e-05, -2.288818359375e-05, -0.0005359649658203125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.463859558105469e-06, -4.410734163684538e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.71661376953125e-05, 0.0, 0.0, -0.06561470031738281, -7.82012939453125e-05, -0.002880096435546875, -1.9073486328125e-05, -0.0001125335693359375, -6.794917680963408e-06, -1.4781842764932662e-05, -0.14833450317382812, -0.007061004638671875, 0.0, 0.0, -1.9073486328125e-06, -0.0054465532302856445, -1.0847986231965479e-05, -0.011065114289522171, -0.0029227931518107653, -0.0797567367553711, -0.00275421142578125, -0.011037826538085938, -1.9073486328125e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000545501708984375, 0.0, -0.004099249839782715, -1.2874597814516164e-05, -0.0031585693359375, -1.71661376953125e-05, -0.0001125335693359375, -3.3378591979271732e-06, -0.024261474609375, -0.0004825592041015625, -0.00225830078125, -2.47955322265625e-05, -0.000152587890625, -5.7220458984375e-06, -0.0009799002436921, -1.9073486328125e-06, -0.003017425537109375, -0.0038013458251953125, -0.0002460479736328125, -3.695419218274765e-05, -0.00027798913652077317, -5.054799112258479e-05, -1.072883515007561e-05, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Hound", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Hound", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "HUNTER"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole1": 1, "_type": "Template9"}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}]}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.3818348681252246, "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}]}
{"gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Injured", "Blademaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Injured", " ", "Blademaster", "<EOS>", 111, 95, 97, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 115, 79, 171, 49, 304, 85, 195, "Null", "<EOS>", 93, 213, "Enemy", "Player", "<EOS>", 93, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "7", "<EOS>", 156], "score_history": [-3.814697265625e-06, -9.1552734375e-05, 0.0, -2.47955322265625e-05, -7.62939453125e-06, -0.10861733555793762, -0.002690626075491309, -4.673003058996983e-05, -4.00543212890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.960462772236497e-07, -1.9073486328125e-06, -0.0007476806640625, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, -3.576277322281385e-06, -3.5047458368353546e-05, -2.944431616924703e-05, -1.71661376953125e-05, -0.001781463623046875, -3.0517578125e-05, -0.00069427490234375, -0.000308990478515625, -0.0001678466796875, 0.0, -0.00025200843811035156, -2.3841855067985307e-07, -4.1961669921875e-05, 0.0, -2.47955322265625e-05, -0.007825851440429688, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.021352849900722504, -3.528593879309483e-05, -0.00069427490234375, -0.0016002655029296875, -0.0004405975341796875, -0.006565093994140625, -0.008543014526367188, -0.0034732818603515625, -0.007172584533691406, -0.0015430450439453125, -0.017007827758789062, -7.748603820800781e-06, -4.9591064453125e-05, 0.0, -0.007143855094909668, -0.00011849403381347656, -3.814697265625e-06, -0.009992599487304688, 0.0, -0.2853437662124634, -0.005664440803229809, -6.79492904964718e-06, -0.00014495849609375, -5.7220458984375e-06, -0.0003504753112792969, -1.1920928244535389e-07, -1.4066696166992188e-05, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "InjuredBlademaster", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"id": "Damage", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template44"}]}, {"func": {"_type": "Template50"}, "_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}, {"hole0": "EnemyPlayer", "_type": "Template16"}, {"hole0": "UserPicker", "_type": "Template16"}]}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Injured Blademaster", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 4, "hole1": 7, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.5009265320748213, "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}]}
{"gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Knife", "Juggler", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Knife", " ", "Juggler", "<EOS>", 108, 95, 97, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 171, 25, 194, "Card", "Used", "<EOS>", 302, 93, 213, "Is", "Spell", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 49, 311, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 110, 156], "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-05, -0.001013718661852181, -9.548207890475169e-05, -0.0001726067712297663, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, 0.0, -1.9073486328125e-06, -1.0728830375228426e-06, 0.0, -0.00017547607421875, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -0.000171661376953125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.8013790142722428e-05, -2.0980827684979886e-05, -2.706014311115723e-05, -1.811981201171875e-05, -0.0001430511474609375, -8.58306884765625e-05, -0.003704071044921875, -1.9073486328125e-06, -1.9073486328125e-06, -4.863737922278233e-05, -5.722029527532868e-06, -4.76837158203125e-05, -1.9073486328125e-05, -0.000171661376953125, -0.000217437744140625, -1.2397729733493179e-05, -3.814689989667386e-06, -9.584226063452661e-05, 0.0, -0.00044286251068115234, 0.0, -3.814697265625e-05, 0.0, -0.0007724761962890625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004119873046875, -5.14984130859375e-05, -0.025693893432617188, -0.5227270126342773, -0.0063991546630859375, -1.9073486328125e-06, -0.2844381332397461, -0.02535724639892578, -3.2782554626464844e-05, -0.001102447509765625, -0.0004730224609375, 0.0, -0.00209283409640193, -0.3583683669567108, -0.0011923976708203554, -0.010938644409179688, -2.86102294921875e-05, -0.0001087188720703125, -0.007843017578125, -4.38690185546875e-05, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -0.001927018165588379, -0.00037453422555699944, -3.814697265625e-06, -0.023181915283203125, -0.0060062408447265625, -0.0030975341796875, -0.5619392395019531, -0.056285858154296875, -0.000415802001953125, -9.5367431640625e-06, -0.074127197265625, -3.24249267578125e-05, -0.0024328231811523438, -0.0001239776611328125, -0.0001201629638671875, -1.9073486328125e-06, -0.0001354217529296875, -5.7220458984375e-06, -0.0003070831298828125, -1.9073486328125e-06, -0.00038909912109375, 0.0, -0.048316001892089844, -0.000316619873046875, -1.1444091796875e-05, -0.00042724609375, -3.814697265625e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "KnifeJuggler", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Knife Juggler", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 3, "hole2": "effects", "hole1": 2, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"func": {"id": "CardUsed", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "IsSpell", "_type": "Template16"}]}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"id": "Damage", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template38"}]}, {"func": {"_type": "Template50"}, "keywords": [{"value": {"_type": "NameConstant", "value": "Null"}, "_type": "keyword", "arg": "condition"}, {"value": {"hole0": "EnemyPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}], "_type": "Call"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.035076933999676, "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(condition=Null, players=EnemyPlayer())))]\n            )\n"}]}
{"gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Lightwell", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lightwell", "<EOS>", 108, 105, 97, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 93, 213, "Draw", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 110, 156], "score_history": [-3.4332275390625e-05, -3.0517578125e-05, -4.00543212890625e-05, -0.0001926422119140625, -5.7220458984375e-06, -0.00015496701234951615, -0.0009022951126098633, -5.7220458984375e-06, -9.72747802734375e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.3841855067985307e-07, -1.9073486328125e-06, -8.0108642578125e-05, -3.814697265625e-06, 0.0, 0.0, -0.00017547607421875, -2.47955322265625e-05, -0.0002079010009765625, -1.9073486328125e-05, 0.0, -6.675708846159978e-06, -7.748603820800781e-06, -3.814697265625e-05, -0.28589916229248047, -0.0060214996337890625, 0.0, 0.0, -2.586840491858311e-05, -6.794906312279636e-06, -8.0108642578125e-05, -7.2479248046875e-05, -0.0035114288330078125, -1.9073486328125e-05, -1.9788742065429688e-05, -1.4543453289661556e-05, -1.5497195136049413e-06, 0.0, -0.005410552024841309, 0.0, -0.0001277923583984375, -1.9073486328125e-06, -0.001399993896484375, -1.9073486328125e-05, -8.20159912109375e-05, -4.00543212890625e-05, -4.1961669921875e-05, -4.38690185546875e-05, -9.5367431640625e-06, -0.0004922098596580327, -0.48548710346221924, 0.0, -0.0018711090087890625, -1.52587890625e-05, -7.62939453125e-06, -0.000133514404296875, -0.06005096435546875, -1.9073486328125e-06, -0.04481077194213867, -4.172325134277344e-06, -0.0005054473876953125, 0.0, -0.0001074075698852539, -3.0517578125e-05, -7.069110870361328e-05, -0.0008907318115234375, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Lightwell", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Lightwell", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 0, "hole2": "effects", "hole1": 5, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"hole0": "TurnEnded", "_type": "Template16"}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"hole0": "Draw", "_type": "Template16"}, {"hole0": "PlayerSelector", "_type": "Template16"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.8993617191341343, "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Draw(),\n            PlayerSelector()))])\n"}]}
{"gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Mana", "Wyrm", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mana", " ", "Wyrm", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 171, 25, 194, "Minion", "Died", "<EOS>", 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 91, 211, "1", "<EOS>", 92, 110, 156], "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.3841855067985307e-07, -9.775161743164062e-06, -1.1801710570580326e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.049041748046875e-05, -6.9141146923357155e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, -0.0157012939453125, -1.71661376953125e-05, -3.814697265625e-06, -4.51792984677013e-05, -7.462478970410302e-05, -3.4570634852570947e-06, -1.1563301086425781e-05, -5.53131103515625e-05, -0.00048828125, 0.0, -3.814697265625e-06, 0.0, -2.9087066650390625e-05, -6.4373016357421875e-06, -0.07977092266082764, -1.9073486328125e-06, -0.0003986358642578125, -0.0007686614990234375, 0.0, -0.00022125244140625, -3.576278118089249e-07, -5.7220458984375e-06, -0.0005321502685546875, -0.0001468658447265625, -0.00029754638671875, -1.5497193999181036e-06, -5.483620952873025e-06, -0.0002920492261182517, -2.3841855067985307e-07, -0.0015766620635986328, 0.0, -0.000141143798828125, 0.0, -0.0004215240478515625, -5.7220458984375e-06, -3.24249267578125e-05, -0.0037059783935546875, -4.00543212890625e-05, -6.103515625e-05, -0.002643585205078125, -0.7225847244262695, -0.0001392364501953125, -0.0004097221535630524, -0.838240385055542, -7.2479248046875e-05, -1.9073486328125e-06, -0.6580076217651367, -3.814697265625e-06, -0.0042781829833984375, -1.9073486328125e-06, -0.11060428619384766, -7.62939453125e-06, -6.866455078125e-05, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.23609411716461182, -2.1457672119140625e-06, -0.0005035400390625, -3.0517578125e-05, -9.1552734375e-05, -1.1444091796875e-05, -0.0019741058349609375, -1.9073486328125e-05, -0.000762939453125, -5.7220458984375e-06, -0.6679878234863281, -0.00054168701171875, -0.0242922306060791, 0.0, -0.04049110412597656, -3.62396240234375e-05, -3.814697265625e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "ManaWyrm", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Mana Wyrm", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "MAGE"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole2": "effects", "hole1": 3, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template57"}, "_type": "Call", "args": [{"func": {"id": "MinionDied", "_type": "Name"}, "_type": "Call", "args": [{"func": {"_type": "Template61"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}]}]}, {"func": {"_type": "Template56"}, "_type": "Call", "args": [{"func": {"_type": "Template49"}, "_type": "Call", "args": [{"hole0": 1, "_type": "Template14"}]}, {"_type": "Template15"}]}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.415065392750307, "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            BEAST)), ActionTag(Give(ChangeHealth(1)), SelfSelector()))])\n"}]}
{"gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Mogu'shan", "Warden", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mogu'shan", " ", "Warden", "<EOS>", 115, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 68, 156], "score_history": [-1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -3.790783375734463e-05, -3.58813522325363e-05, -2.2411331883631647e-05, -5.14984130859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.741813204920618e-06, -8.821474693831988e-06, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.0008087158203125, -1.9073486328125e-06, -1.9073486328125e-06, -5.9604562920867465e-06, -2.956386742880568e-05, -1.1920922133867862e-06, -4.172325134277344e-06, -0.00041961669921875, -4.57763671875e-05, -4.76837158203125e-05, -7.62939453125e-06, -3.4332275390625e-05, -1.4424300388782285e-05, -0.0015907922061160207, -0.0003108978271484375, -6.4849853515625e-05, -0.000446319580078125, -2.09808349609375e-05, -1.9192666513845325e-05, -2.348410453123506e-05, -6.0557744291145355e-05, -5.5431850341847166e-05, -0.00599799444898963, -5.7220458984375e-06, -0.0002651214599609375, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Mogu'shanWarden", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Mogu'shan Warden", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 1, "hole2": "taunt", "hole1": 7, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.010586539999849265, "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}]}
{"gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Nourish", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Nourish", "<EOS>", 116, 103, 94, 310, 138, 291, "choices", "<EOS>", 23, 189, 304, 79, 171, 25, 194, "Choice", "<EOS>", 304, 93, 213, "<UNK>", "Of", "Mana", "<EOS>", 93, 213, "Mana", "Crystals", "<EOS>", 79, 170, 64, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 79, 171, 25, 194, "Choice", "<EOS>", 304, 93, 213, "Mana", "<UNK>", "<EOS>", 93, 213, "Draw", "<EOS>", 79, 170, 64, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 79, 171, 25, 194, "Choice", "<EOS>", 304, 93, 213, "Mana", "<UNK>", "<EOS>", 93, 213, "Draw", "<EOS>", 79, 170, 64, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score_history": [-9.5367431640625e-06, 0.0, -1.1444091796875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.0002499818510841578, -0.00175832852255553, -5.7220458984375e-06, -0.37474727630615234, -0.02634429931640625, -4.00543212890625e-05, 0.0, -1.5854835510253906e-05, -3.4570634852570947e-06, -9.5367431640625e-06, -0.0005550384521484375, -0.0001735687255859375, 0.0, -1.9073486328125e-06, -0.0001125335693359375, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, 0.0, -2.1457672119140625e-06, -1.0013561222876888e-05, -0.00063323974609375, -0.10743045806884766, -0.3708333969116211, -1.9073486328125e-06, -8.392333984375e-05, -1.9073486328125e-06, -0.0422900915145874, -6.103373016230762e-05, -0.0014801025390625, -5.7220458984375e-06, -0.000171661376953125, -0.0030059814453125, -1.9073486328125e-06, -0.0008401870727539062, 0.0, -0.0020017623901367188, -0.00011932849156437442, -0.000209808349609375, -5.340576171875e-05, -1.9073486328125e-06, -0.5065960884094238, -0.12655387818813324, -0.3861710727214813, -0.0028858273290097713, -0.0028533935546875, 0.0, -0.23516307771205902, -0.2274000644683838, -0.0022773086093366146, -0.00482940673828125, -0.35816192626953125, -0.0945577621459961, -0.011266708374023438, -1.9073486328125e-05, -5.7220458984375e-06, -0.001465439796447754, -9.775161743164062e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.0009499788284301758, -1.728534698486328e-05, -1.9073486328125e-06, -0.49151611328125, -1.9073486328125e-06, -0.0006084442138671875, 0.0, -0.027086377143859863, -0.0012112855911254883, -0.00095367431640625, -2.09808349609375e-05, -1.9073486328125e-06, -0.23309610784053802, -0.22720366716384888, -7.963179814396426e-05, -0.11459541320800781, 0.0, -0.5591209530830383, -0.0006839133566245437, -0.00959014892578125, -0.008495330810546875, -0.1514444351196289, -0.008182525634765625, -2.09808349609375e-05, -1.1444091796875e-05, -0.000392913818359375, -7.62939453125e-06, -1.52587890625e-05, -3.814697265625e-06, -0.001018524169921875, -1.537799835205078e-05, -3.814697265625e-06, -0.5565433502197266, -1.9073486328125e-06, -0.000514984130859375, 0.0, -0.032627105712890625, -0.0012360811233520508, -0.0008697509765625, -2.288818359375e-05, -1.9073486328125e-06, -0.2398352324962616, -0.23333027958869934, -7.975100743351504e-05, -0.11487197875976562, 0.0, -0.546920895576477, -0.0006691413000226021, -0.008539199829101562, -0.008535385131835938, -0.14866256713867188, -0.008039474487304688, -2.09808349609375e-05, -1.33514404296875e-05, -0.0004216432571411133, -7.62939453125e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0010700225830078125, -1.537799835205078e-05, -3.814697265625e-06, -0.04821014404296875, -7.62939453125e-06, -0.04694080352783203, -1.5497195136049413e-06, -0.000377655029296875, -0.0002346038818359375, -0.016721725463867188, -5.91278076171875e-05, -0.14852070808410645, -9.536738616588991e-07, -0.8445112705230713, 0.0, -0.6339333057403564, -1.33514404296875e-05, -6.67572021484375e-05, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Nourish", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "List", "elts": [{"func": {"id": "Choice", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "<UNK>OfMana", "_type": "Template16"}, {"hole0": "ManaCrystals", "_type": "Template16"}, {"func": {"_type": "Template68"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}], "_type": "Call"}]}, {"func": {"id": "Choice", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Mana<UNK>", "_type": "Template16"}, {"hole0": "Draw", "_type": "Template16"}, {"func": {"_type": "Template68"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}], "_type": "Call"}]}, {"func": {"id": "Choice", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Mana<UNK>", "_type": "Template16"}, {"hole0": "Draw", "_type": "Template16"}, {"func": {"_type": "Template68"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}], "_type": "Call"}]}]}, "_type": "keyword", "arg": "choices"}], "_type": "Call", "args": [{"s": "Nourish", "_type": "Str"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "charge", "hole1": 2, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -8.372459299522802, "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, choices=[Choice(<UNK>OfMana(), ManaCrystals(),\n            PlayerSelector(players=BothPlayer())), Choice(Mana<UNK>(), Draw\n            (), PlayerSelector(players=BothPlayer())), Choice(Mana<UNK>(),\n            Draw(), PlayerSelector(players=BothPlayer()))])\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True)\n"}]}
{"gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Preparation", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Preparation", "<EOS>", 122, 101, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 172, 25, 194, "<UNK>", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 310, 138, 291, "<UNK>", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "m", "<EOS>", 17, 164, 25, 194, "m", "<EOS>", "<UNK>", "<EOS>", 316, 149, 177, 25, 194, "deathrattle", "<EOS>", 17, 164, 52, "deathrattle", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 25, 194, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 302, 121, 151, 181, 17, 164, 43, "<UNK>", "<EOS>", 315, 149, 177, 25, 194, "deathrattle", "<EOS>", 17, 164, 52, "deathrattle", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 25, 194, "deathrattle", "<EOS>", "<UNK>", "<EOS>", 302, 121, 156], "score_history": [0.0, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -9.5367431640625e-06, -0.0002847504511009902, -0.00027918812702409923, -2.6702880859375e-05, -2.09808349609375e-05, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00049591064453125, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0012035369873046875, -5.91278076171875e-05, 0.0, 0.0, -0.0004711151123046875, -5.7220458984375e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.9073486328125e-06, -0.00010561384988250211, -4.00543212890625e-05, -0.001552581787109375, -0.6893205642700195, -0.03555870056152344, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.924701690673828e-05, -1.9073486328125e-06, -3.349775215610862e-05, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -0.018876075744628906, -6.67572021484375e-05, -0.003665924072265625, -1.33514404296875e-05, -0.03783702850341797, -0.0013217926025390625, -0.0867462158203125, -0.0002536773681640625, -9.5367431640625e-06, -0.0014142990112304688, -1.943111237778794e-05, -0.0075016021728515625, -0.05990409851074219, 0.0, -0.03010082244873047, -0.003321161726489663, -5.960462772236497e-07, -0.0014801025390625, -0.001495361328125, -4.9591064453125e-05, -0.04962754249572754, -6.401346036000177e-05, -0.010042190551757812, -0.000133514404296875, -0.0004425048828125, -0.005157470703125, -0.00011444091796875, -0.00121307373046875, -4.00543212890625e-05, -0.21802473068237305, -4.0531158447265625e-06, -0.0781717300415039, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.03764164447784424, -2.0265579223632812e-06, -0.0023429393768310547, -9.655952453613281e-06, -0.017015457153320312, -0.027139663696289062, -0.0015106201171875, -1.1444091796875e-05, -1.9073486328125e-06, -0.28174710273742676, -0.0006587505340576172, -0.048928260803222656, -7.62939453125e-06, -0.2734222412109375, -0.02419757843017578, -7.62939453125e-06, -0.002468109130859375, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, -0.0002880096435546875, -7.05718994140625e-05, 0.0, -0.015705108642578125, -1.9073486328125e-06, -0.3275991678237915, -5.91278076171875e-05, -0.44149065017700195, 0.0, -0.000553131103515625, -0.3971433639526367, -0.14880657196044922, -7.43865966796875e-05, -0.5417642593383789, -6.29425048828125e-05, -0.04671669006347656, -0.00411379337310791, -3.933906555175781e-06, -0.001689910888671875, -0.06441974639892578, -7.05718994140625e-05, -0.0045299530029296875, -3.814697265625e-06, -0.07427990436553955, -0.0009922981262207031, -0.3403453826904297, -5.7220458984375e-06, -0.01822662353515625, -0.004246711730957031, -9.5367431640625e-06, -0.0015392303466796875, -8.392333984375e-05, 0.0, 0.0, -0.0033550262451171875, -4.1961669921875e-05, -1.9073486328125e-06, -0.12001895904541016, -1.9073486328125e-06, -0.2208852767944336, -4.76837158203125e-05, -0.44606709480285645, 0.0, -0.0007572174072265625, -0.27428245544433594, -7.62939453125e-06], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Preparation", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Preparation", "_type": "Str"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"id": "deathrattle", "_type": "Name"}, "attr": "<UNK>"}, "_type": "Call", "args": [{"_type": "Template54"}]}}], "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}, "iter": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "deathrattle"}}, {"body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"id": "deathrattle", "_type": "Name"}, "attr": "<UNK>"}, "_type": "Call", "args": [{"_type": "Template54"}]}}], "_type": "For", "target": {"id": "deathrattle", "_type": "Name"}, "iter": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "deathrattle"}}], "_type": "If", "test": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "<UNK>"}}], "_type": "For", "target": {"_type": "Template54"}, "iter": {"func": {"id": "<UNK>", "_type": "Name"}, "keywords": [{"value": {"body": {"_type": "Attribute", "value": {"id": "m", "_type": "Name"}, "attr": "<UNK>"}, "_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "m"}]}}, "_type": "keyword", "arg": "<UNK>"}], "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}]}}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.564442577362399, "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            for deathrattle in minion.deathrattle:\n                deathrattle.<UNK>(minion)\n            if player.<UNK>:\n                for deathrattle in minion.deathrattle:\n                    deathrattle.<UNK>(minion)\n"}]}
{"gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Repentance", "<EOS>", 302, 127, 318, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Repentance", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "_reveal", "<EOS>", 5, 289, 296, 0, 1, 288, "minion", "<EOS>", 316, 148, 176, 20, 171, 17, 164, 52, "increase_health", "<EOS>", 302, 108, 148, 176, 20, 169, 17, 164, 32, 213, "super", "<EOS>", "reveal", "<EOS>", 150, 178, "activate", "<EOS>", 3, 316, 148, 176, 20, 171, 17, 164, 17, 164, 17, 164, 43, "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 303, 87, 202, "minion_played", "<EOS>", 76, 164, 42, "_reveal", "<EOS>", 144, 163, 302, 76, 164, 42, "player", "<EOS>", 43, 150, 178, "deactivate", "<EOS>", 3, 316, 148, 176, 20, 171, 17, 164, 17, 164, 17, 164, 43, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 303, 87, 202, "minion_played", "<EOS>", 76, 164, 42, "_reveal", "<EOS>", 144, 163, 302, 76, 164, 42, "player", "<EOS>", 43, 156], "score_history": [-1.1444091796875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -4.1961669921875e-05, -2.6702880859375e-05, -2.86102294921875e-06, -0.00020873545145150274, -1.1444091796875e-05, -0.0080718994140625, -0.0014257431030273438, -4.57763671875e-05, -1.1444091796875e-05, -0.0001163482666015625, -1.9073486328125e-06, -8.7738037109375e-05, -0.46584510803222656, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -0.0019283294677734375, -1.71661376953125e-05, -1.9073486328125e-06, -7.152555099310121e-07, -6.794924956921022e-06, -1.71661376953125e-05, -8.58306884765625e-05, 0.0, -5.7220458984375e-05, -0.000110626220703125, -0.00024795529316179454, -2.1457672119140625e-06, -0.3563131093978882, -4.172325134277344e-06, -0.0016613006591796875, -6.103515625e-05, -8.7738037109375e-05, -0.12405204772949219, 0.0, -0.004244804382324219, -2.288818359375e-05, -0.10338973999023438, -0.000152587890625, -3.814697265625e-05, -1.9073486328125e-06, -0.025482773780822754, 0.0, -0.4869556427001953, -0.5375881195068359, -5.7220458984375e-06, 0.0, -0.0014553070068359375, -0.0002574920654296875, -6.4849853515625e-05, -0.03025341033935547, -0.7038922309875488, -9.5367431640625e-06, -0.0001392364501953125, -0.2518119812011719, -0.06203651428222656, -1.9073486328125e-05, -1.9073486328125e-06, -0.0053615570068359375, -7.62939453125e-06, 0.0, -0.003932952880859375, -2.288818359375e-05, -0.001112365280278027, -6.4849853515625e-05, -0.0005434724153019488, -1.52587890625e-05, -4.00543212890625e-05, -5.7220458984375e-06, -0.001819610595703125, -0.0001087188720703125, -0.0001239776611328125, -0.44910621643066406, -0.0022430419921875, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -2.6702880859375e-05, -6.4849853515625e-05, -0.18850231170654297, -7.62939453125e-06, -0.30208301544189453, -1.9073486328125e-05, -0.0015306472778320312, -0.05536830425262451, -1.9073486328125e-05, -0.0023791585117578506, -2.7298907298245467e-05, -0.010274017229676247, -7.748603820800781e-06, -0.001712799072265625, -6.67572021484375e-05, -7.62939453125e-06, -0.16311335563659668, -0.0017490386962890625, -0.0009069442749023438, -9.5367431640625e-06, -0.0002307891845703125, -0.0009403228759765625, -1.9073486328125e-06, -0.003963470458984375, -0.0001373291015625, -1.52587890625e-05, -9.34600830078125e-05, 0.0, -0.0002346038818359375, -0.004103660583496094, -1.9073486328125e-06, -0.048371315002441406, -0.0005855560302734375, -1.71661376953125e-05, -0.010309219360351562, -7.62939453125e-06, -0.000217437744140625, -0.004245758056640625, -0.0002613067626953125, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, -3.814697265625e-05, -0.00012969970703125, -0.0974111557006836, -4.1961669921875e-05, -0.33649253845214844, -7.2479248046875e-05, -0.0007724761962890625, -0.03313302993774414, -2.288818359375e-05, -0.004433336667716503, -3.540514808264561e-05, -0.12188800424337387, -0.0003012418746948242, -0.000209808349609375, -8.7738037109375e-05, -3.814697265625e-06, -0.10994231700897217, -0.0007658004760742188, -0.0006847381591796875, -5.7220458984375e-06, -0.0002040863037109375, -0.0010013580322265625, -1.9073486328125e-06, -0.00531005859375, -6.29425048828125e-05, -1.33514404296875e-05, -9.918212890625e-05, 0.0, -0.00023651123046875, -0.005856513977050781, -1.9073486328125e-06, -0.0601654052734375, -3.62396240234375e-05], "model_output": {"body": [{"bases": [{"_type": "Template65"}], "_type": "ClassDef", "name": "Repentance", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Repentance", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "PALADIN"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "increase_health"}, "_type": "Call", "args": [{"_type": "Template36"}]}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"hole0": "super", "_type": "Template16"}, "attr": "reveal"}, "_type": "Call"}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template34"}, {"_type": "arg", "arg": "minion"}]}, "name": "_reveal"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, "attr": "current_player"}, "attr": "bind"}, "_type": "Call", "args": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "_reveal"}]}}, {"targets": [{"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}], "_type": "Assign", "value": {"_type": "Template43"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "activate"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}, "_type": "Call", "args": [{"s": "minion_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "_reveal"}]}}, {"targets": [{"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}], "_type": "Assign", "value": {"_type": "Template43"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "deactivate"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.214227904660902, "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.increase_health(2)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n        self.player = player\n"}]}
{"gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Shadow", "Of", "Nothing", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 109, 105, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Shadow", "<UNK>", "<UNK>", "<EOS>", 93, 213, "Hero", "Selector", "<EOS>", 110, 156], "score_history": [-1.71661376953125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -4.1961669921875e-05, -8.392333984375e-05, -0.00012242044613230973, -0.005298405420035124, -0.266874223947525, -0.0016354038380086422, -8.96453857421875e-05, -0.00077056884765625, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -8.940695806813892e-06, -1.0967240996251348e-05, 0.0, -0.0001068115234375, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, -0.0002841949462890625, -7.62939453125e-06, -0.7199258804321289, -0.0003528594970703125, -1.9073486328125e-06, -1.3947389561508317e-05, -8.249255188275129e-05, -0.0006914814002811909, -3.0517578125e-05, -0.0005257129669189453, -2.47955322265625e-05, -5.340576171875e-05, -0.2129993438720703, -0.0789194107055664, -0.0024242401123046875, -0.02910900115966797, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -0.037758827209472656, 0.0, -0.17749810218811035, -3.814697265625e-06, -0.000274658203125, -4.57763671875e-05, -0.0001354217529296875, -1.1920928244535389e-07, -8.58306884765625e-05, -0.0032672882080078125, -0.0011196136474609375, -1.33514404296875e-05, -2.4914739697123878e-05, -0.0005193791585043073, -1.072883515007561e-05, -2.0265579223632812e-06, -0.010164481587707996, -1.9073486328125e-06, -0.0001220703125, -1.9073486328125e-06, -0.015344619750976562, -1.9073486328125e-06, -5.7220458984375e-06, -0.001178741455078125, -0.07812690734863281, -0.5627517700195312, -1.9073486328125e-06, -0.20887231826782227, -0.008772119879722595, -0.28210994601249695, -0.03811876103281975, -0.4638328552246094, 0.0, -0.02726149559020996, -4.00543212890625e-05, -1.9073486328125e-06, -0.0056400299072265625, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "ShadowOfNothing", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "TOTEM"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 0, "hole2": "auras", "hole1": 1, "_type": "Template6", "hole3": {"_type": "List", "elts": [{"func": {"_type": "Template60"}, "_type": "Call", "args": [{"hole0": "Shadow<UNK><UNK>", "_type": "Template16"}, {"hole0": "HeroSelector", "_type": "Template16"}]}, {"_type": "Template39_expr_seq"}]}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.2438436086831572, "inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(Shadow<UNK><UNK>(), HeroSelector())])\n"}]}
{"gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Slam", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Slam", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 17, 164, 17, 164, 43, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 151, 182, 19, 167, 6, 303, 80, 174, 17, 164, 17, 164, 33, "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 104, 80, 174, 33, 299, 11, 302, 132, 316, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.2636104656849056e-05, -1.5616416931152344e-05, -1.52587890625e-05, -0.0001316070556640625, -0.0005207061767578125, 0.0, 0.0, -7.62939453125e-06, -2.741813204920618e-06, -7.62939453125e-06, -0.000156402587890625, -1.1444091796875e-05, 0.0, -2.6702880859375e-05, -5.340576171875e-05, -9.5367431640625e-06, -0.0001506805419921875, -6.4849853515625e-05, -3.814697265625e-05, -1.6689286894688848e-06, -2.133843008778058e-05, -5.7220458984375e-06, -0.2664642333984375, -0.00030517578125, -1.9073486328125e-06, -2.86102294921875e-05, -0.000244140625, -2.86102294921875e-05, -0.004208207130432129, -5.7220458984375e-06, -0.0006160736083984375, -4.76837158203125e-05, -0.0016002655029296875, -0.0002899169921875, 0.0, -0.000102996826171875, 0.0, -8.0108642578125e-05, -0.01649761199951172, -1.9073486328125e-06, -0.010046958923339844, -2.6702880859375e-05, -1.71661376953125e-05, -0.0004901885986328125, -0.0001621246337890625, -6.103515625e-05, -8.58306884765625e-05, -5.7220458984375e-06, -0.0012454986572265625, -1.9073486328125e-06, -0.0027112960815429688, -1.9073486328125e-06, -0.00579988956451416, -3.933906555175781e-06, -1.52587890625e-05, -0.000213623046875, -1.9073486328125e-06, -0.10263538360595703, -1.52587890625e-05, -0.014141082763671875, -1.9073486328125e-06, -0.011968612670898438, -0.0013692353386431932, -8.96453857421875e-05, -0.005627033766359091, -1.013275596051244e-05, -0.0002820489171426743, -4.053113570989808e-06, -0.00348663330078125, -0.0046062469482421875, -0.0006580352783203125, -0.0001544952392578125, -5.53131103515625e-05, -7.62939453125e-06, -0.022256851196289062, -9.5367431640625e-06, -0.0002079010009765625, 0.0, -0.005059242248535156, -3.814697265625e-06, -0.14132404327392578, -0.002899050246924162, -7.462501525878906e-05, -0.0003191200958099216, 0.0, -3.814697265625e-06, -0.059632301330566406, -1.1444091796875e-05, -0.0083465576171875, -0.0007419586181640625, -3.814697265625e-06, -0.0039234161376953125, -0.000560760498046875, -0.010964393615722656, -0.00012969970703125, -0.0029325485229492188, -0.000537872314453125, -0.0002880096435546875, 0.0, 0.0, -1.71661376953125e-05, -6.67572021484375e-05, -0.000232696533203125, -0.0002384185791015625, -0.05858457088470459, -7.62939453125e-06, -4.76837158203125e-05, -0.0013580322265625, -0.000217437744140625, -1.1444091796875e-05, -3.814697265625e-06, -0.16617774963378906, -3.814697265625e-06, 0.0, -0.4968996047973633, -0.1150813102722168, -1.71661376953125e-05, -0.015533447265625, -0.04612922668457031, -1.9073486328125e-06, -2.47955322265625e-05, -0.0015811920166015625, -2.09808349609375e-05, -1.52587890625e-05, -0.0009212493896484375, -0.024586796760559082, -1.1920928244535389e-07, -6.4849853515625e-05, -0.9474287033081055, -0.000244140625, -0.017979055643081665, -1.33514404296875e-05, -0.004673004150390625, -2.86102294921875e-05], "model_output": {"body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "name": "Slam", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "_type": "Call", "args": [{"s": "Slam", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "WARLOCK"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"_type": "Template2"}, {"targets": [{"_type": "Template78"}], "_type": "Assign", "value": {"func": {"_type": "Attribute", "value": {"id": "copy", "_type": "Name"}, "attr": "copy"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, "attr": "current_player"}, "attr": "minions"}]}}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "change_attack"}, "_type": "Call", "args": [{"_type": "Template36"}]}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "<UNK>"}, "_type": "Call"}}], "_type": "If", "test": {"values": [{"_type": "Compare", "comparators": [{"_type": "Template29"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, {"_type": "Compare", "comparators": [{"_type": "Template78"}], "left": {"_type": "Template19"}, "ops": [{"_type": "In"}]}], "_type": "BoolOp", "op": {"_type": "And"}}, "orelse": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "_type": "Call", "args": [{"hole0": 2, "_type": "Template8"}, {"_type": "Template42"}]}}]}], "_type": "FunctionDef", "args": {"_type": "Template1"}, "name": "use"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.616286298633433, "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(player.game.current_player.minions)\n        if (self.target.card.minion_type is MINION_TYPE.DEMON and self.\n            target in targets):\n            self.target.change_attack(2)\n            self.target.<UNK>()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n"}]}
{"gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Spellbreaker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Spellbreaker", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Silence", "<EOS>", 79, 170, 49, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score_history": [-1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.82012939453125e-05, -0.00011444091796875, -0.00022063247160986066, -0.0003533363342285156, -5.91278076171875e-05, -2.86102294921875e-05, -3.814697265625e-06, 0.0, 0.0, -1.1920928244535389e-07, -8.463837730232626e-06, -1.9073486328125e-06, -0.0001678466796875, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-05, -7.62939453125e-06, -5.53131103515625e-05, -7.62939453125e-06, -3.814697265625e-06, -3.4570680327306036e-06, -1.3709068298339844e-05, -0.000164031982421875, -0.000339508056640625, -0.0001220703125, -3.4332275390625e-05, -2.6702880859375e-05, 0.0, -8.630752563476562e-05, 0.0, -2.47955322265625e-05, -1.52587890625e-05, -4.00543212890625e-05, -2.47955322265625e-05, -0.027399063110351562, -1.71661376953125e-05, -0.0016350485384464264, -0.006445011124014854, -0.0009365081787109375, -0.0002956390380859375, -0.000270843505859375, -0.24082565307617188, -1.9073486328125e-05, -3.814697265625e-06, -0.0015518665313720703, -4.601478576660156e-05, -3.4332275390625e-05, -7.05718994140625e-05, -0.003206610679626465, -0.00012803077697753906, -3.814697265625e-06, -0.0007343292236328125, -9.5367431640625e-06, -8.0108642578125e-05, -3.24249267578125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -8.07046890258789e-05, -0.00016832351684570312, -2.6702880859375e-05, -6.29425048828125e-05, -1.1444091796875e-05, -3.218596975784749e-05, -4.5298504119273275e-05, -2.3603433874086477e-05, 0.0, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Spellbreaker", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"hole0": "Silence", "_type": "Template16"}, {"func": {"_type": "Template50"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template16"}, "_type": "keyword", "arg": "picker"}], "_type": "Call"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Spellbreaker", "_type": "Str"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 4, "hole1": 3, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.28634181488495614, "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}]}
{"gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Sunfury", "Protector", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Sunfury", " ", "Protector", "<EOS>", 108, 95, 97, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Give", "<UNK>", "<EOS>", 302, 93, 213, "Taunt", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "3", "<EOS>", 156], "score_history": [0.0, 0.0, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, -0.0002961912250611931, -0.0003003622987307608, -0.0006414544186554849, -2.47955322265625e-05, -9.5367431640625e-06, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.741813204920618e-06, -7.390948667307384e-06, -1.9073486328125e-06, -5.53131103515625e-05, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.76837158203125e-05, -2.86102294921875e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -9.298280929215252e-06, -3.302094046375714e-05, -3.373572326381691e-05, -6.711483001708984e-05, -0.0002765655517578125, -8.58306884765625e-05, -0.002544403076171875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -8.463859558105469e-05, -7.152555099310121e-07, -0.00032806396484375, 0.0, -5.7220458984375e-06, -0.0115203857421875, -0.0013980865478515625, -4.00543212890625e-05, -0.10283851623535156, -3.0517578125e-05, -0.4652578830718994, -0.2573014199733734, -0.0029337662272155285, -0.000827789306640625, -0.3825416564941406, -1.33514404296875e-05, -0.2056531459093094, -0.004420638084411621, -0.1128997802734375, -1.9073486328125e-06, -0.526034951210022, -7.62939453125e-06, -4.172325134277344e-06, -4.9591064453125e-05, -1.9073486328125e-06, -8.344646857949556e-07, -1.1920928244535389e-07, -3.933906555175781e-06, -2.3841855067985307e-07, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "SunfuryProtector", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"id": "Give<UNK>", "_type": "Name"}, "_type": "Call", "args": [{"hole0": "Taunt", "_type": "Template16"}]}, {"hole0": "PlayerSelector", "_type": "Template16"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Sunfury Protector", "_type": "Str"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template20"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 2, "hole1": 3, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -2.07881423807779, "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give<UNK>(Taunt()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}]}
{"gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Tinkmaster", "Overspark", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Tinkmaster", " ", "Overspark", "<EOS>", 111, 95, 100, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "<UNK>", "Overspark", "Squirrel", "Squirrel", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "3", "<EOS>", "3", "<EOS>", 156], "score_history": [-1.52587890625e-05, 0.0, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -0.0003597089380491525, -7.939023635117337e-05, -0.00021826793090440333, -0.000278472900390625, -7.2479248046875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.6954863844584906e-06, -1.9073486328125e-06, -0.028417587280273438, -6.103515625e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, -6.866455078125e-05, -3.24249267578125e-05, -1.1444091796875e-05, -1.9073486328125e-05, -9.775130820344202e-06, -4.816028013010509e-05, -9.16677454370074e-05, -3.647804260253906e-05, -0.0010013580322265625, -3.62396240234375e-05, -0.41893577575683594, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.259845733642578e-05, -1.1920928244535389e-07, -0.0049953460693359375, -2.6702880859375e-05, -4.1961669921875e-05, -0.0136566162109375, -0.11885452270507812, -1.1444091796875e-05, -0.9467803239822388, -0.36660292744636536, -0.19698095321655273, -0.629350483417511, -0.32831084728240967, -0.6544227600097656, -1.9073486328125e-06, -0.0791017934679985, -3.0994415283203125e-05, -3.6597099096979946e-05, -0.0002593994140625, -6.29425048828125e-05, 1.1920928244535389e-07, 0.0, -2.5039953470695764e-06, 0.0, -5.7220458984375e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "TinkmasterOverspark", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"hole0": "<UNK>OversparkSquirrelSquirrel", "_type": "Template16"}, {"hole0": "PlayerSelector", "_type": "Template16"}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Tinkmaster Overspark", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template25"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 3, "hole1": 3, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -3.7895550785581236, "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(\n            <UNK>OversparkSquirrelSquirrel(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}]}
{"gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Vaporize", "<EOS>", 302, 127, 318, 150, 178, "__init__", "<EOS>", 4, 316, 148, 176, 20, 171, 29, 305, 87, 202, "Vaporize", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 144, 163, 302, 76, 164, 42, "player", "<EOS>", 26, 195, "Null", "<EOS>", 150, 178, "_reveal", "<EOS>", 5, 289, 297, 0, 1, 288, "card", "<EOS>", 1, 288, "index", "<EOS>", 315, 151, 181, 19, 167, 6, 305, 79, 169, 17, 164, 25, 194, "card", "<EOS>", "<UNK>", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 17, 164, 42, "player", "<EOS>", "minions", "<EOS>", 299, 14, 302, 118, 76, 164, 25, 194, "card", "<EOS>", "target", "<EOS>", 79, 169, 17, 164, 17, 164, 25, 194, "card", "<EOS>", "target", "<EOS>", "is_minion", "<EOS>", 317, 148, 176, 20, 171, 17, 164, 32, 213, "Vaporize", "<EOS>", "summon", "<EOS>", 304, 76, 164, 42, "player", "<EOS>", 76, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 17, 164, 42, "player", "<EOS>", "minions", "<EOS>", 144, 163, 302, 76, 164, 25, 194, "card", "<EOS>", "target", "<EOS>", 28, 204, 17, 164, 17, 164, 42, "player", "<EOS>", "minions", "<EOS>", 142, 185, 75, 286, 160, 39, 148, 176, 20, 169, 17, 164, 32, 213, "super", "<EOS>", "reveal", "<EOS>", 150, 178, "activate", "<EOS>", 3, 316, 148, 176, 20, 171, 17, 164, 17, 164, 17, 164, 43, "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 303, 87, 202, "card_played", "<EOS>", 76, 164, 42, "_reveal", "<EOS>", 144, 163, 302, 76, 164, 42, "player", "<EOS>", 43, 150, 178, "deactivate", "<EOS>", 3, 316, 148, 176, 20, 171, 17, 164, 17, 164, 17, 164, 43, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 303, 87, 202, "card_played", "<EOS>", 76, 164, 42, "_reveal", "<EOS>", 144, 163, 302, 76, 164, 42, "player", "<EOS>", 43, 156], "score_history": [-2.09808349609375e-05, -1.71661376953125e-05, -3.814697265625e-06, -4.00543212890625e-05, -3.4332275390625e-05, -0.0015097183641046286, -0.001344442367553711, -8.0108642578125e-05, -0.0013217926025390625, -0.15428924560546875, -0.0001506805419921875, -0.0002841949462890625, -0.0005645751953125, -5.7220458984375e-06, -2.47955322265625e-05, -0.047679901123046875, -0.00081634521484375, -1.1444091796875e-05, 0.0, -0.0001010894775390625, -0.000499725341796875, -3.24249267578125e-05, -5.340576171875e-05, -7.62939453125e-06, -0.00014411391748581082, -1.0490406566532329e-05, -0.000102996826171875, -0.00016021728515625, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0027849674224853516, -3.6954863844584906e-06, -0.0013192532351240516, -8.940695806813892e-06, -0.038333892822265625, -5.7220458984375e-06, -0.000347137451171875, -1.9073486328125e-06, -4.076957702636719e-05, -1.1920928244535389e-07, -0.0016279127448797226, -6.079673767089844e-06, -0.0008144378662109375, -9.5367431640625e-06, -9.5367431640625e-06, -0.000274658203125, 0.0, -0.007245063781738281, -0.00024318695068359375, 0.0, -0.10526752471923828, -0.0002536773681640625, -0.000392913818359375, 0.0, -0.00029754638671875, -7.62939453125e-06, -0.0042934417724609375, 0.0, -0.008575439453125, -7.43865966796875e-05, -0.34236621856689453, -0.000865936279296875, -7.2479248046875e-05, -1.71661376953125e-05, -0.007943987846374512, -8.463859558105469e-06, -9.1552734375e-05, -4.38690185546875e-05, -0.05549514293670654, -3.0159948437358253e-05, -0.00102996826171875, -0.0002498626708984375, -5.14984130859375e-05, -0.007578849792480469, -0.0048675537109375, -0.00173187255859375, -0.07344532012939453, -0.0033931732177734375, -0.0056915283203125, -1.33514404296875e-05, -3.62396240234375e-05, -0.018942832946777344, 0.0, -0.0035753250122070312, -6.175041198730469e-05, -0.009581861086189747, -4.017353057861328e-05, -0.0033054351806640625, -3.0517578125e-05, -0.000865936279296875, -0.001007080078125, -9.5367431640625e-06, 0.0, -0.04177963733673096, -1.4901146641932428e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.029314041137695312, 0.0, -0.0005092620849609375, -0.00044155120849609375, 0.0, -0.003719806671142578, 0.0, -0.0001468658447265625, -0.000858306884765625, -5.53131103515625e-05, -0.004086494445800781, -6.67572021484375e-05, 0.0, -0.0001316070556640625, 0.0, -0.032332420349121094, -3.6835510400123894e-05, -0.011139734648168087, -4.768371127283899e-06, -0.07564544677734375, -0.002437591552734375, -1.52587890625e-05, -3.814697265625e-06, -0.04976177215576172, -1.9073486328125e-06, -0.0008678436279296875, 0.0, -0.003543853759765625, -2.706047598621808e-05, -0.012975571677088737, -1.1563293810468167e-05, -0.09054743498563766, -2.0265579223632812e-06, -0.2728738784790039, -3.4332275390625e-05, 0.0, 0.0, -0.026845932006835938, -1.71661376953125e-05, -1.9073486328125e-06, -0.07366752624511719, -7.62939453125e-06, -0.012511925771832466, -0.059968817979097366, -0.20326626300811768, -0.0007801055908203125, -0.009159088134765625, -0.015529632568359375, -1.9073486328125e-06, -0.0063190460205078125, -0.00012874603271484375, -4.768370445162873e-07, -0.09216880798339844, 0.0, -0.8827667236328125, 0.0, -0.5799075365066528, -1.33514404296875e-05, -0.4291437864303589, -1.4305038348538801e-05, -0.032192230224609375, -4.9591064453125e-05, -3.814697265625e-06, 0.0, -0.000748753547668457, -0.0001316059206146747, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.01807117462158203, -1.9073486328125e-06, -0.0025882720947265625, -6.687641143798828e-05, -1.1920928244535389e-07, -0.0014636516571044922, 0.0, -0.0021800994873046875, 0.0, -3.814697265625e-06, -0.000640869140625, 0.0, -0.004214286804199219, 0.0, -0.004125356674194336, -0.00011705753422575071, -0.017246685922145844, -5.960462772236497e-07, -0.02659893035888672, -0.00083160400390625, -3.814697265625e-06, -8.96453857421875e-05, -0.02896404266357422, -1.33514404296875e-05, -0.02071857452392578, -0.00042831897735595703, -1.1444091796875e-05, -0.026452895253896713, -2.0265579223632812e-06, -0.0065155029296875, -0.000698089599609375, -0.0030117034912109375, -0.000202178955078125, -0.0016460418701171875, -0.0001430511474609375, -0.0008945465087890625, -7.62939453125e-06, 0.0, -0.0002899169921875, -0.0001163482666015625, 0.0, -0.000469207763671875, -2.288818359375e-05, -0.003943554125726223, -0.0005855560302734375, -0.0008921247208490968, -5.7220458984375e-05, -4.00543212890625e-05, -1.9073486328125e-05, -0.0021791458129882812, -5.245208740234375e-05, -5.91278076171875e-05, -0.13948631286621094, -0.0003662109375, -5.7220458984375e-06, 0.0, -0.000324249267578125, -2.47955322265625e-05, -0.0001506805419921875, -0.21330833435058594, -1.71661376953125e-05, -0.1324901580810547, -2.47955322265625e-05, -0.000156402587890625, -0.027670860290527344, -5.53131103515625e-05, -0.002437871415168047, -0.0005035419017076492, -0.009795458987355232, -2.205371856689453e-05, -0.0005168914794921875, -4.38690185546875e-05, -3.62396240234375e-05, -0.0679025650024414, -0.00038242340087890625, -8.0108642578125e-05, -0.00017547607421875, -0.0010890960693359375, -0.000370025634765625, -1.9073486328125e-06, -0.004123687744140625, -1.9073486328125e-06, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.0022602081298828125, -0.000701904296875, 0.0, -0.10296154022216797, -0.0028476715087890625, -3.0517578125e-05, -0.014941215515136719, -1.9073486328125e-06, -0.0007171630859375, -0.04858970642089844, -0.000873565673828125, -7.62939453125e-06, -1.9073486328125e-06, -0.000858306884765625, -0.0001678466796875, -0.000347137451171875, -0.05353546142578125, -6.29425048828125e-05, -0.05863761901855469, -7.2479248046875e-05, -0.0002574920654296875, -0.013109683990478516, -3.62396240234375e-05, -0.0024112213868647814, -0.0004607647133525461, -0.07207604497671127, -7.59349059080705e-05, -0.0001239776611328125, -1.1444091796875e-05, -4.1961669921875e-05, -0.07992386817932129, -9.34600830078125e-05, -0.000125885009765625, -0.000125885009765625, -0.0009260177612304688, -0.0004291534423828125, -1.9073486328125e-06, -0.005641937255859375, -5.7220458984375e-06, -3.62396240234375e-05, -2.86102294921875e-05, 0.0, -0.0014848709106445312, -0.0005216598510742188, 0.0, -0.1288299560546875, -0.0006656646728515625], "model_output": {"body": [{"bases": [{"_type": "Template65"}], "_type": "ClassDef", "name": "Vaporize", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Vaporize", "_type": "Str"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"id": "CARD_RARITY", "_type": "Name"}, "attr": "EPIC"}]}}, {"targets": [{"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}], "_type": "Assign", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"hole0": "Vaporize", "_type": "Template16"}, "attr": "summon"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}, {"_type": "Attribute", "value": {"id": "game", "_type": "Name"}, "attr": "current_player"}, {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}, "attr": "minions"}]}]}}, {"targets": [{"_type": "Attribute", "value": {"id": "card", "_type": "Name"}, "attr": "target"}], "_type": "Assign", "value": {"_type": "Subscript", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}, "attr": "minions"}, "slice": {"_type": "Index", "value": {"operand": {"_type": "Template38"}, "_type": "UnaryOp", "op": {"_type": "USub"}}}}}, {"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"hole0": "super", "_type": "Template16"}, "attr": "reveal"}, "_type": "Call"}}], "_type": "If", "test": {"values": [{"func": {"_type": "Attribute", "value": {"id": "card", "_type": "Name"}, "attr": "<UNK>"}, "_type": "Call"}, {"_type": "Compare", "comparators": [{"_type": "Template48"}], "left": {"func": {"id": "len", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}, {"_type": "Attribute", "value": {"id": "card", "_type": "Name"}, "attr": "target"}, {"func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"id": "card", "_type": "Name"}, "attr": "target"}, "attr": "is_minion"}, "_type": "Call"}], "_type": "BoolOp", "op": {"_type": "And"}}}], "_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template34"}, {"_type": "arg", "arg": "card"}, {"_type": "arg", "arg": "index"}]}, "name": "_reveal"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, "attr": "current_player"}, "attr": "bind"}, "_type": "Call", "args": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "_reveal"}]}}, {"targets": [{"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}], "_type": "Assign", "value": {"_type": "Template43"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "activate"}, {"body": [{"_type": "Expr", "value": {"func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}, "_type": "Call", "args": [{"s": "card_played", "_type": "Str"}, {"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "_reveal"}]}}, {"targets": [{"_type": "Attribute", "value": {"_type": "Template42"}, "attr": "player"}], "_type": "Assign", "value": {"_type": "Template43"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "deactivate"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.356161029535016, "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = Null\n\n    def _reveal(self, card, index):\n        if card.<UNK>() and len(self.player.minions\n            ) < 7 and card.target and card.target.is_minion():\n            Vaporize().summon(self.player, game.current_player, len(self.\n                player.minions))\n            card.target = self.player.minions[-1]\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n        self.player = player\n"}]}
{"gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Worgen", "Infiltrator", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Worgen", " ", "Infiltrator", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 68, 156], "score_history": [0.0, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -2.288818359375e-05, -2.109982233378105e-05, -4.51792984677013e-05, -9.560334001434967e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -2.9802317840221804e-06, -8.34461570775602e-06, -1.9073486328125e-06, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -4.9591064453125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9669374523800798e-05, -1.9192693798686378e-05, -3.576272320060525e-06, -6.675719760096399e-06, -0.0005016326904296875, -6.29425048828125e-05, -4.00543212890625e-05, -1.71661376953125e-05, -3.0517578125e-05, -8.249221718870103e-05, -0.00204616691917181, -0.0001888275146484375, -2.86102294921875e-05, -0.22350502014160156, -5.91278076171875e-05, -0.0005143880262039602, -2.324577872059308e-05, -0.002909647533670068, -2.861022494471399e-06, -0.0067733521573245525, -0.0001354217529296875, -0.005288124084472656, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "WorgenInfiltrator", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "_type": "Call", "args": [{"s": "Worgen Infiltrator", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "stealth", "hole1": 1, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.24268178245756644, "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}]}
{"gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Blackwing", "Corruptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blackwing", " ", "Corruptor", "<EOS>", 116, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 304, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 79, 171, 49, 304, 79, 171, 25, 194, "Not", "<EOS>", 302, 79, 171, 25, 194, "Attribute", "<EOS>", 303, 87, 202, "attack", "<EOS>", 92, 93, 213, "Enemy", "Player", "<EOS>", 93, 213, "User", "Picker", "<EOS>", 154, 205, "5", "<EOS>", "4", "<EOS>", 156], "score_history": [0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.0003829461056739092, -0.00010108436981681734, -9.989689715439454e-05, -8.20159912109375e-05, -4.9591064453125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -1.9073486328125e-06, -7.82012939453125e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -4.52994936495088e-06, -3.242491220589727e-05, -1.4424245819100179e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.0006618499755859375, -3.24249267578125e-05, -9.5367431640625e-06, -5.91278076171875e-05, 0.0, -0.016569137573242188, -1.1920928244535389e-07, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, -0.0010051727294921875, -0.03136634826660156, -1.9073486328125e-06, -0.30014705657958984, -1.33514404296875e-05, -0.6794356107711792, -4.768371127283899e-06, -3.814697265625e-06, -0.35660839080810547, -0.002300262451171875, -0.6496152877807617, -0.008076667785644531, -0.008060455322265625, -4.57763671875e-05, -7.62939453125e-06, -0.0010547637939453125, -1.9073486328125e-06, -0.0007524490356445312, -4.00543212890625e-05, -0.000125885009765625, -4.76837158203125e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.0023746490478515625, -5.7220458984375e-06, -0.00016021728515625, 0.0, -0.0003414154052734375, -3.445148468017578e-05, -2.6702880859375e-05, -0.0001392364501953125, -0.027027130126953125, -0.0851278305053711, -0.3690185546875, -0.010389328002929688, -8.58306884765625e-05, -0.0014495849609375, 0.0, -0.6920022964477539, -0.0010885000228881836, -3.814697265625e-06, -0.235015869140625, -0.2395610809326172, -0.46548938751220703, 0.0, -0.43799495697021484, -3.063678741455078e-05, -0.007709503173828125, -0.0002651214599609375, -0.0004138946533203125, -0.06590330600738525, -1.71661376953125e-05, -0.030817031860351562, -0.058814048767089844, -9.5367431640625e-06, -0.24312233924865723, -0.00022912025451660156, 0.0, -0.00406646728515625, 0.0, -0.11185562610626221, -0.0037479293532669544, -2.2649765014648438e-06, -1.9073486328125e-05, -7.62939453125e-06, -0.00023982075799722224, 0.0, -0.000777721346821636, 0.0, -9.5367431640625e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "BlackwingCorruptor", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"func": {"_type": "Template45"}, "_type": "Call", "args": [{"func": {"id": "Damage", "_type": "Name"}, "_type": "Call", "args": [{"_type": "Template38"}]}, {"func": {"_type": "Template70"}, "keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template16"}, "_type": "keyword", "arg": "players"}, {"value": {"hole0": "UserPicker", "_type": "Template16"}, "_type": "keyword", "arg": "picker"}], "_type": "Call"}, {"func": {"_type": "Template50"}, "_type": "Call", "args": [{"func": {"id": "Not", "_type": "Name"}, "_type": "Call", "args": [{"func": {"id": "Attribute", "_type": "Name"}, "_type": "Call", "args": [{"s": "attack", "_type": "Str"}, {"_type": "Template15"}]}]}, {"hole0": "EnemyPlayer", "_type": "Template16"}, {"hole0": "UserPicker", "_type": "Template16"}]}]}, "_type": "keyword", "arg": "battlecry"}], "_type": "Call", "args": [{"s": "Blackwing Corruptor", "_type": "Str"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 5, "hole1": 4, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -5.152916670920085, "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            MinionSelector(Not(Attribute('attack', SelfSelector())),\n            EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}]}
{"gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Drakonid", "Crusher", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drakonid", " ", "Crusher", "<EOS>", 120, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "6", "<EOS>", "windfury", "<EOS>", 68, 156], "score_history": [0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -4.827864177059382e-05, -0.0003003622987307608, -0.0001345866621704772, -5.91278076171875e-05, -4.9591064453125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -2.622600959512056e-06, -1.9073486328125e-06, -0.00046539306640625, -4.00543212890625e-05, -3.62396240234375e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -0.00017547607421875, -1.9073486328125e-06, -5.7220458984375e-06, -6.794924956921022e-06, -2.3841854272177443e-05, -6.5565000113565475e-06, -5.340576171875e-05, -0.000133514404296875, -0.23480987548828125, -0.008253097534179688, -0.04671478271484375, -0.009263992309570312, 0.0, -0.00016021728515625, 0.0, -0.0001010894775390625, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, 0.0, -0.011208534240722656, -9.5367431640625e-06, -0.0051097869873046875, -4.38690185546875e-05, -1.1563301086425781e-05, -2.0265558760002023e-06, -5.7220458984375e-05, -0.0015468597412109375, -0.000141143798828125, -0.00011444091796875, -2.741813204920618e-06, -1.9073468138230965e-06, -0.00114644062705338, 0.0, -0.7451380491256714, 0.0, -0.0001773834228515625, 0.0], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "DrakonidCrusher", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 6, "hole2": "windfury", "hole1": 6, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.0656382617621603, "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 6, windfury=True)\n"}]}
{"gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Imp", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Imp", "<EOS>", 109, 95, 97, 119, 310, 138, 291, "minion_type", "<EOS>", 36, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score_history": [-2.09808349609375e-05, -4.1961669921875e-05, -7.82012939453125e-05, -0.0007648468017578125, -1.1444091796875e-05, -3.576278118089249e-07, -0.00017164884775411338, -0.0001010894775390625, -0.000255584716796875, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, -6.198883056640625e-06, -2.1695992472814396e-05, -7.62939453125e-06, -2.86102294921875e-05, -0.00042724609375, -1.9073486328125e-06, -5.7220458984375e-06, -0.00829315185546875, -1.71661376953125e-05, -0.00020599365234375, -9.5367431640625e-06, -1.9073486328125e-06, -3.611976353568025e-05, -0.00013147920253686607, -0.0001544952392578125, -0.0021076202392578125, -0.003875732421875, -0.000255584716796875, -2.288818359375e-05, -0.000133514404296875, -0.0001239776611328125, -0.00020444393157958984, -0.000247955322265625, -0.015697479248046875, -0.0013866424560546875, -0.0002346038818359375, -0.0020488351583480835, -4.959010402671993e-05, -0.00010726779146352783, -1.2397689715726301e-05, -9.5367431640625e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "Imp", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Template29"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Imp", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template20"}, {"_type": "Template51"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"hole0": 1, "hole1": 1, "_type": "Template0"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -0.03734928487023126, "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}]}
{"gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "beams": [{"choice_history": [139, 193, 316, 147, 173, "Twilight", "Whelp", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Twilight", " ", "Whelp", "<EOS>", 109, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score_history": [0.0, 0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -6.615896563744172e-05, -6.603976362384856e-05, -3.933906555175781e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.291534423828125e-06, -7.152555099310121e-07, -1.9073486328125e-06, -9.1552734375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.0001392364501953125, -3.814697265625e-06, 0.0, -1.6212441551033407e-05, -1.8954275219584815e-05, -1.060962586052483e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.407562255859375, -0.0023040771484375, -0.4735584259033203, -0.000293731689453125, 0.0, -0.0002880096435546875, -1.9073486328125e-06, -6.866455078125e-05, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.06448173522949219, -1.9073486328125e-06, -0.061740875244140625, -1.9073486328125e-06, -1.33514404296875e-05, -2.3841855067985307e-07, -2.47955322265625e-05, -0.0004253387451171875, -0.0002498626708984375, -0.0001392364501953125, -2.1815278159920126e-05, -5.960462772236497e-07, -6.735097122145817e-05, 0.0, -0.060468077659606934, -3.814697265625e-06, -8.7738037109375e-05, -1.9073486328125e-06], "model_output": {"body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "name": "TwilightWhelp", "body": [{"body": [{"_type": "Expr", "value": {"func": {"_type": "Template10"}, "keywords": [{"value": {"_type": "Attribute", "value": {"id": "MINION_TYPE", "_type": "Name"}, "attr": "BEAST"}, "_type": "keyword", "arg": "minion_type"}], "_type": "Call", "args": [{"s": "Twilight Whelp", "_type": "Str"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template17"}]}}], "_type": "FunctionDef", "args": {"_type": "Template5"}, "name": "__init__"}, {"body": [{"hole0": 2, "hole2": "charge", "hole1": 1, "_type": "Template6", "hole3": {"_type": "Template72"}}], "_type": "FunctionDef", "args": {"_type": "Template3"}, "name": "create_minion"}]}, {"_type": "Template37_stmt_seq"}], "_type": "Module"}, "score": -1.0723397664810648, "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}]}
