{"beams": [{"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -0.0014002267271280289, 0.0, -0.003566741943359375, 0.0, -0.000255584716796875, -9.5367431640625e-06, -0.0005741119384765625, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002307891845703125, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.0003795623779296875, -0.001049041748046875, -3.4332275390625e-05, -8.20159912109375e-05, -0.019834518432617188, -0.000194549560546875, -3.814697265625e-06, -0.0017141103744506836, -1.71661376953125e-05, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -0.0008125932072289288, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -8.10618803370744e-06, -5.53131103515625e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -0.05983487919002073, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -4.611721038818359, -0.0037841796875, -0.00036799878580495715, -1.33514404296875e-05, -2.6225747205899097e-05, -5.7220458984375e-06, -0.0007667109603062272, 0.0, -0.009633064270019531, 0.0, -0.000484466552734375, -1.9073486328125e-06, -0.0006771087646484375, -1.9073486328125e-06, -7.62939453125e-06, -0.0003643035888671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0002803802490234375, -0.001316070556640625, -6.67572021484375e-05, -5.7220458984375e-05, -0.0058994293212890625, -0.0001087188720703125, -1.9073486328125e-06, -0.0010710954666137695, -2.288818359375e-05, -6.103515625e-05, -2.09808349609375e-05, 0.0, -0.0010373799595981836, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -9.894277354760561e-06, -6.29425048828125e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 103, 186, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -4.643410716681501, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template17", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -4.728484153747559, -3.814697265625e-06, -7.82012939453125e-05, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.33514404296875e-05, -3.24249267578125e-05, -0.03045654296875, -1.33514404296875e-05, 0.0, -0.0001068115234375, -1.9073486328125e-06, -2.2649765014648438e-06, -1.9073486328125e-06, -0.000270843505859375, 0.0, -0.009793281555175781, -3.814697265625e-06, -3.62396240234375e-05, -0.005243686959147453, -0.0002613067626953125, -0.0004357350408099592, -0.0002574920654296875, -1.71661376953125e-05, -1.9073486328125e-06, -0.0006225079414434731, -3.933906555175781e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -2.872943878173828e-05, -2.3841855067985307e-07, -0.010023117065429688, 0.0, 0.0, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.635883331298828e-05, -1.9073486328125e-06, -0.0039653778076171875, -1.9073486328125e-06, -4.38690185546875e-05, -0.0001621246337890625, -0.00015461444854736328, -3.814697265625e-06, -0.00087738037109375, -1.33514404296875e-05, -0.00074005126953125, -5.7220458984375e-06, -7.62939453125e-06, -0.0001468658447265625, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002803802490234375, 0.0, -0.00146484375, -0.0008335113525390625, -5.340576171875e-05, -3.814697265625e-05, -0.0001926422119140625, -4.1961669921875e-05, -1.9073486328125e-06, -0.001540541648864746, -1.71661376953125e-05, -3.4332275390625e-05, -0.0001468658447265625, 0.0, -0.002277218736708164, -1.1920928244535389e-07, -1.9073486328125e-05, -7.62939453125e-06, -7.390921382466331e-06, -0.00011444091796875], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "<UNK>", " ", "Blade", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -4.805051516796048, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(4), HeroSelector()))])\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -0.0014002267271280289, 0.0, -0.003566741943359375, 0.0, -0.000255584716796875, -9.5367431640625e-06, -0.0005741119384765625, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002307891845703125, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.0003795623779296875, -0.001049041748046875, -3.4332275390625e-05, -8.20159912109375e-05, -3.9487733840942383, -0.00037384033203125, 0.0, -0.0033674240112304688, 0.0, -0.0001392364501953125, -9.5367431640625e-06, -1.1444091796875e-05, -0.00019752964726649225, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.6716450267704204e-05, -5.7220458984375e-06, -0.0060710906982421875, -0.001270294189453125, -1.71661376953125e-05, -0.04125690460205078, 0.0, -0.0035114288330078125, -0.0001049041748046875, -0.037657737731933594, -0.03536510467529297, -3.62396240234375e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.002933502197265625, -0.0002593994140625, -2.47955322265625e-05, -0.0021686553955078125, -0.000202178955078125, -0.0031071901321411133, -0.007993936538696289, -1.52587890625e-05, -0.0018935203552246094, -0.0014525651931762695, -8.0108642578125e-05, -0.00115203857421875, -0.001766204833984375, -3.814697265625e-06, 0.0, -0.0057048797607421875, -0.00384521484375, -0.000354766845703125, -0.0001049041748046875, -0.0031566619873046875, -0.00037384033203125, -2.86102294921875e-05, 0.0, -0.8127279281616211, -0.00098419189453125, -5.7220458984375e-06, -0.0002002716064453125, 0.0, -0.42664384841918945, 0.0, -0.0709695816040039, -0.0007476806640625, -0.000576019287109375, -1.1682510375976562e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "4", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -5.464818813732563, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -0.0014002267271280289, 0.0, -5.857766151428223, -3.814697265625e-06, -0.11211681365966797, -3.814697265625e-06, -0.000492095947265625, -7.62939453125e-06, -9.5367431640625e-06, -0.0003986358642578125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, 0.0, -0.0004634857177734375, -0.000957489013671875, -3.24249267578125e-05, -7.2479248046875e-05, -0.030233383178710938, -0.0001888275146484375, -1.9073486328125e-06, -0.0016797780990600586, -1.9073486328125e-05, -7.2479248046875e-05, -2.09808349609375e-05, 0.0, -0.0007783831097185612, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.344603884324897e-06, -8.7738037109375e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -6.03630523337506, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "MAGE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.533481597900391, -2.288818359375e-05, -0.0003566741943359375, -5.7220458984375e-05, -0.01826000213623047, -0.00023651123046875, -0.0014995282981544733, -3.62396240234375e-05, -0.000246980634983629, -0.0001506805419921875, -0.0017573750810697675, 0.0, -0.004100799560546875, 0.0, -0.0002040863037109375, -9.5367431640625e-06, -0.000568389892578125, -1.9073486328125e-05, -1.33514404296875e-05, -0.00023651123046875, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -0.000377655029296875, -0.001041412353515625, -3.4332275390625e-05, -7.82012939453125e-05, -0.017181396484375, -0.0001850128173828125, -3.814697265625e-06, -0.0016978979110717773, -1.71661376953125e-05, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -0.0008068663300946355, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -8.10618803370744e-06, -4.9591064453125e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -6.58360715793242, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -6.654767036437988, 0.0, -0.0018177032470703125, 0.0, -0.0001735687255859375, -7.62939453125e-06, -0.000553131103515625, -2.09808349609375e-05, -1.1444091796875e-05, -0.000217437744140625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0004100799560546875, -0.0010509490966796875, -3.62396240234375e-05, -8.20159912109375e-05, -0.014461517333984375, -0.000202178955078125, -1.9073486328125e-06, -0.001581430435180664, -1.52587890625e-05, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -0.000849831965751946, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.94063305167947e-06, -5.7220458984375e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -6.705892535961539, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Minion(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -0.0014002267271280289, 0.0, -0.003566741943359375, 0.0, -0.000255584716796875, -9.5367431640625e-06, -0.0005741119384765625, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002307891845703125, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.0003795623779296875, -0.001049041748046875, -3.4332275390625e-05, -8.20159912109375e-05, -0.019834518432617188, -0.000194549560546875, -3.814697265625e-06, -6.963299751281738, -0.03706645965576172, -0.001132965087890625, -5.53131103515625e-05, 0.0, -0.006287725642323494, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -2.4914221285143867e-05, -3.0517578125e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -7.065047035455791, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(Card):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -6.773187637329102, -0.34647607803344727, -8.58306884765625e-05, -0.022795677185058594, -0.000244140625, -0.001439332845620811, -4.57763671875e-05, -0.0006092455005273223, -0.000179290771484375, -0.001642933115363121, 0.0, -0.0049266815185546875, -1.9073486328125e-06, -0.0002918243408203125, -7.62939453125e-06, -0.000576019287109375, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002307891845703125, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.00037384033203125, -0.0010623931884765625, -3.4332275390625e-05, -8.0108642578125e-05, -0.01633453369140625, -0.0001888275146484375, -3.814697265625e-06, -0.0016921758651733398, -1.71661376953125e-05, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -0.0008119959384202957, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -8.225392775784712e-06, -5.53131103515625e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -7.174301342633953, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "Card"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Assassin Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -7.178657531738281, -0.0008821487426757812, -0.0034909530077129602, -0.000148773193359375, -0.0011760694906115532, 0.0, -0.0040531158447265625, 0.0, -0.0003528594970703125, -7.62939453125e-06, -0.0004787445068359375, -1.71661376953125e-05, -1.52587890625e-05, -0.000274658203125, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -0.0003719329833984375, -0.001071929931640625, -3.24249267578125e-05, -8.20159912109375e-05, -0.02333831787109375, -0.00019073486328125, -3.814697265625e-06, -0.001670241355895996, -1.71661376953125e-05, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -0.0007960054790601134, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -9.179046173812822e-06, -5.14984130859375e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "Assassin", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -7.244585833435849, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Assassin Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(' <UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -7.189605236053467, -0.12443488836288452, -0.022058486938476562, -4.41074053014745e-06, -3.814697265625e-06, -0.000694496848154813, 0.0, -0.0040035247802734375, 0.0, -0.0005359649658203125, -9.5367431640625e-06, -0.0006771087646484375, -2.288818359375e-05, -1.52587890625e-05, -0.000278472900390625, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.000385284423828125, -0.0009746551513671875, -3.814697265625e-05, -7.05718994140625e-05, -0.01317596435546875, -0.0001583099365234375, -3.814697265625e-06, -0.0016444921493530273, -1.52587890625e-05, -6.67572021484375e-05, -2.09808349609375e-05, 0.0, -0.0008803787641227245, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -8.106189852696843e-06, -4.76837158203125e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, " ", "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -7.387145280029017, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": " <UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, True)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -0.0014002267271280289, 0.0, -0.003566741943359375, 0.0, -0.000255584716796875, -9.5367431640625e-06, -0.0005741119384765625, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002307891845703125, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.0003795623779296875, -6.906384468078613, -0.0003070831298828125, -9.1552734375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0006923675537109375, -3.814697265625e-06, -3.4570680327306036e-06, 0.0, -0.00440216064453125, 0.0, -0.44272327423095703, -1.9073486328125e-06, -7.62939453125e-06, -0.011473098769783974, -0.0002574920654296875, -0.0003987954987678677, -7.62939453125e-05, -1.9073486328125e-05, 0.0, -0.00035439932253211737, -4.0531158447265625e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, 0.0, -7.2479248046875e-05, -2.3841855067985307e-07, -0.010836601257324219, 0.0, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.008161544799804688, 0.0, -6.4849853515625e-05, -0.0001888275146484375, -0.00014698505401611328, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "<UNK>", " ", "Blade", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>"], "score": -7.422711301440785, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCardCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -7.4766082763671875, -2.09808349609375e-05, -6.103515625e-05, -0.022264480590820312, -0.0002155303955078125, -0.0017085012514144182, -3.24249267578125e-05, -0.00010835864668479189, -0.00014495849609375, -0.0013096280163154006, 0.0, -0.00414276123046875, 0.0, -0.0003261566162109375, -7.62939453125e-06, -0.0005512237548828125, -1.9073486328125e-05, -1.1444091796875e-05, -0.00022125244140625, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.000400543212890625, -0.001041412353515625, -3.4332275390625e-05, -8.20159912109375e-05, -0.021030426025390625, -0.0001964569091796875, -3.814697265625e-06, -0.0017369985580444336, -1.71661376953125e-05, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -0.0008214173140004277, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -7.867774002079386e-06, -5.340576171875e-05], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "4", "<EOS>"], "score": -7.537618387756993, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCardCard"}]}]}}, {"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(4, 4)\n", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000213623046875, -3.0517578125e-05, -5.72192293475382e-05, -0.00036209699464961886, -1.5974044799804688e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0035675764083862305, -5.841255187988281e-06, -0.001129150390625, -8.20159912109375e-05, -0.021508216857910156, -0.0002384185791015625, -0.001723355962894857, -3.814697265625e-05, -0.0002505577285774052, -0.0001697540283203125, -0.0014002267271280289, 0.0, -0.003566741943359375, 0.0, -0.000255584716796875, -9.5367431640625e-06, -0.0005741119384765625, -1.9073486328125e-05, -1.33514404296875e-05, -0.0002307891845703125, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.719329833984375e-05, 0.0, -0.0003795623779296875, -0.001049041748046875, -3.4332275390625e-05, -8.20159912109375e-05, -0.019834518432617188, -0.000194549560546875, -3.814697265625e-06, -0.0017141103744506836, -1.71661376953125e-05, -6.67572021484375e-05, -2.288818359375e-05, 0.0, -7.582263469696045, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -3.290175664005801e-05, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Blade", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 101, 184, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "4", "<EOS>", 47, 165, "4", "<EOS>"], "score": -7.641280033669318, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Blade", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template15", "hole2": "ROGUE"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 4}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "", "score_history": [-3.814697265625e-06, -1.1444091796875e-05, -22.783788681030273], "choice_history": [80, 159, 294], "score": -22.783803939819336, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}
{"beams": [{"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -0.8435049057006836, -3.814697265625e-06, -3.3140146115329117e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, -0.33123302459716797, -0.0037679672241210938, -1.0847986231965479e-05, -4.124641418457031e-05, -1.3589859008789062e-05, -5.7220458984375e-06, -0.03389029577374458, 0.0, -0.1410236358642578, 0.0, -0.000467657926492393, -1.9073486328125e-06, -3.62396240234375e-05, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -8.7738037109375e-05, -1.71661376953125e-05, -0.5133523941040039, -1.3470649719238281e-05, -0.0006465911865234375, -1.9073486328125e-06, -0.0012711684685200453, 0.0, -0.0008882284164428711, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 110, 202, "6", "<EOS>", "7", "<EOS>"], "score": -1.8712825160386615, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -0.8435049057006836, -3.814697265625e-06, -3.3140146115329117e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, -0.33123302459716797, -0.0037679672241210938, -1.0847986231965479e-05, -4.124641418457031e-05, -1.3589859008789062e-05, -5.7220458984375e-06, -0.03389029577374458, 0.0, -0.1410236358642578, 0.0, -0.000467657926492393, -1.9073486328125e-06, -3.62396240234375e-05, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -8.7738037109375e-05, -1.71661376953125e-05, -1.2953062057495117, -1.823891761887353e-05, -0.002197265625, -1.9073486328125e-06, -0.003049599938094616, 0.0, -0.0009291172027587891, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 110, 202, "6", "<EOS>", "7", "<EOS>"], "score": -2.656611090646436, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -0.8435049057006836, -3.814697265625e-06, -3.3140146115329117e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, -1.6027517318725586, -3.0517578125e-05, -1.9073486328125e-05, -0.17570114135742188, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, 0.0, -1.4901076610840391e-05, 0.0, -1.52587890625e-05, 0.0, -0.016956329345703125, -1.9073486328125e-06, -3.62396240234375e-05, -3.3378546504536644e-06, -6.020069122314453e-05, -4.410712426761165e-05, -2.47955322265625e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.021327681839466095, 0.0, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -3.576278118089249e-07, -0.0001544952392578125, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -2.1219253540039062e-05, 0.0, -0.28096580505371094, -3.814697265625e-06, -1.71661376953125e-05, -2.6702880859375e-05, -0.000164031982421875, 0.0, -0.01765155792236328, -5.7220458984375e-06, -0.0032075634226202965, -1.9073486328125e-06, -0.002126336097717285, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Boulderfist", " ", "Ogre", "<EOS>", 47, 165, "6", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 46, 161, "False", "<EOS>", 110, 202, "6", "<EOS>", "7", "<EOS>"], "score": -2.965956246477049, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"_type": "Num", "n": 6}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.5400323867797852, -0.00022125244140625, -1.1444026313256472e-05, -1.7404556274414062e-05, -0.00011456012725830078, -1.9073486328125e-06, -0.0034083302598446608, 0.0, -0.00021851062774658203, 0.0, -0.0005993843078613281, -1.1920928244535389e-07, -0.01224517822265625, -1.9073486328125e-06, -0.00015902513405308127, -5.960462772236497e-07, -0.00015771375910844654, -2.3841855067985307e-07, -0.23593592643737793, -0.000274658203125, -0.0004730224609375, -5.7220458984375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0055084228515625, 0.0, -0.0764169692993164, -0.0001087188720703125, -0.0001850128173828125, -0.0008412599563598633, -3.4570680327306036e-06, -0.25550806522369385, -0.00016020593466237187, -1.9073486328125e-06, -5.7220458984375e-06, -0.0014286041259765625, -3.445148468017578e-05, 0.0, -0.034832000732421875, -9.72747802734375e-05, -0.0020220279693603516, -0.005240678787231445, -0.0005131959915161133, -1.0304946899414062, -0.00015604322834406048], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 284, 61, 250, "Summon", "<EOS>", "Thaddius", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 61, 250, "In", "Graveyard", "<EOS>", "Feugen", "<EOS>"], "score": -3.208304855875859, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole1": "Thaddius", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"hole1": "Feugen", "hole0": "InGraveyard", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, spell_damage=1)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -2.0867795944213867, -0.000988006591796875, -0.007021903991699219, -0.0001277923583984375, -0.029356002807617188, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -3.230352869362285, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.5400323867797852, -0.00022125244140625, -1.1444026313256472e-05, -1.7404556274414062e-05, -0.00011456012725830078, -1.9073486328125e-06, -0.0034083302598446608, 0.0, -0.00021851062774658203, 0.0, -0.0005993843078613281, -1.1920928244535389e-07, -0.01224517822265625, -1.9073486328125e-06, -0.00015902513405308127, -5.960462772236497e-07, -0.00015771375910844654, -2.3841855067985307e-07, -0.23593592643737793, -0.000274658203125, -0.0004730224609375, -5.7220458984375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0055084228515625, 0.0, -0.0764169692993164, -0.0001087188720703125, -0.0001850128173828125, -0.0008412599563598633, -3.4570680327306036e-06, -0.25550806522369385, -0.00016020593466237187, -1.9073486328125e-06, -5.7220458984375e-06, -0.0014286041259765625, -3.445148468017578e-05, 0.0, -0.034832000732421875, -9.72747802734375e-05, -0.0020220279693603516, -0.005240678787231445, -0.0005131959915161133, -1.0641450881958008, -1.0728831512096804e-05], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 284, 61, 250, "Summon", "<EOS>", "Thaddius", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 61, 250, "In", "Graveyard", "<EOS>", "Stalagg", "<EOS>"], "score": -3.2418099397334217, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole1": "Thaddius", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"hole1": "Stalagg", "hole0": "InGraveyard", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, divine_shield=True)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -2.505375862121582, -0.0002346038818359375, -0.0007381439208984375, -3.24249267578125e-05, -4.00543212890625e-05, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.61250065836375, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "divine_shield", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -0.8435049057006836, -3.814697265625e-06, -3.3140146115329117e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -4.38690185546875e-05, -0.33123302459716797, -0.0037679672241210938, -1.0847986231965479e-05, -4.124641418457031e-05, -1.3589859008789062e-05, -5.7220458984375e-06, -0.03389029577374458, 0.0, -2.073735237121582, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -4.9591064453125e-05, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -7.2479248046875e-05, -1.33514404296875e-05, -0.46947193145751953, -9.655952453613281e-06, -0.0009174346923828125, -1.9073486328125e-06, -0.0012558999005705118, 0.0, -0.0009834766387939453, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 110, 202, "6", "<EOS>", "7", "<EOS>"], "score": -3.7600292448100276, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Heal(7), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -0.4966011047363281, -0.000396728515625, -0.0010700225830078125, -0.000232696533203125, -7.62939453125e-06, -3.814697265625e-06, -0.0030727386474609375, 0.0, -0.6690254211425781, -0.03086376190185547, -0.00037384033203125, -3.0517578125e-05, -0.0007171630859375, -0.6234957575798035, -0.0013790784869343042, -0.0004177093505859375, -0.00029754638671875, -1.52587890625e-05, -0.5411648750305176, -2.2649765014648438e-06, -0.2361164093017578, -3.62396240234375e-05, -0.20004653930664062, -0.0004444122314453125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "7", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.9118872847060615, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Num", "n": 7}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -0.4966011047363281, -0.000396728515625, -0.0010700225830078125, -0.000232696533203125, -7.62939453125e-06, -3.814697265625e-06, -0.0030727386474609375, 0.0, -0.7451553344726562, -0.0001087188720703125, -3.62396240234375e-05, -0.002694249153137207, -5.9604562920867465e-06, -0.7662230134010315, -0.0006854607490822673, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023227930068969727, -3.24249267578125e-05, 0.0, -0.058193206787109375, -0.000110626220703125, -0.0028470754623413086, -0.003400564193725586, -0.000396728515625, -1.0476834774017334, -0.0002230362151749432], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 284, 61, 250, "Summon", "<EOS>", "Thaddius", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 61, 250, "In", "Graveyard", "<EOS>", "Feugen", "<EOS>"], "score": -4.237583213757169, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole1": "Thaddius", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"hole1": "Feugen", "hole0": "InGraveyard", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Heal(6), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -0.4966011047363281, -0.000396728515625, -0.0010700225830078125, -0.000232696533203125, -7.62939453125e-06, -3.814697265625e-06, -0.0030727386474609375, 0.0, -0.6690254211425781, -0.03086376190185547, -0.00037384033203125, -3.0517578125e-05, -0.0007171630859375, -0.6234957575798035, -0.0013790784869343042, -0.0004177093505859375, -0.00029754638671875, -1.52587890625e-05, -0.9024319648742676, -3.933906555175781e-06, -0.0665121078491211, -2.288818359375e-05, -0.41089165210723877, -0.000179290771484375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.314118381927436, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -0.4966011047363281, -0.000396728515625, -0.0010700225830078125, -0.000232696533203125, -7.62939453125e-06, -3.814697265625e-06, -0.0030727386474609375, 0.0, -0.7451553344726562, -0.0001087188720703125, -3.62396240234375e-05, -0.002694249153137207, -5.9604562920867465e-06, -0.7662230134010315, -0.0006854607490822673, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023227930068969727, -3.24249267578125e-05, 0.0, -0.058193206787109375, -0.000110626220703125, -0.0028470754623413086, -0.003400564193725586, -0.000396728515625, -1.1344544887542725, -1.3470642443280667e-05], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 284, 61, 250, "Summon", "<EOS>", "Thaddius", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 61, 250, "In", "Graveyard", "<EOS>", "Stalagg", "<EOS>"], "score": -4.324144659536977, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole1": "Thaddius", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"hole1": "Stalagg", "hole0": "InGraveyard", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, charge=True)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -0.0040874481201171875, -0.0003108978271484375, -0.00018918505520559847, -2.3841855067985307e-07, -0.00012159330071881413, -1.1920928244535389e-07, -3.441357135772705, -8.58306884765625e-05, -0.0016651153564453125, -9.72747802734375e-05, -2.288818359375e-05, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 109, 200, "6", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.549307813972881, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0005461869877763093, -2.7060192223871127e-05, -4.768367489305092e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920923270736239e-07, -4.38690185546875e-05, -1.2159347534179688e-05, -8.20159912109375e-05, -1.092911720275879, -0.000865936279296875, -5.411955135059543e-05, -1.728534698486328e-05, -3.2901763916015625e-05, -2.09808349609375e-05, -0.0066286553628742695, 0.0, -5.173683166503906e-05, 0.0, -5.545022010803223, -1.1444091796875e-05, -0.0014925857540220022, 0.0, -0.00019979476928710938, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boulderfist", "Ogre", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 110, 202, "6", "<EOS>", "7", "<EOS>"], "score": -6.648092107981427, "model_output": {"_type": "Module", "body": [{"name": "BoulderfistOgre", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template17", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-3.814697265625e-06, -7.62939453125e-06, -22.37200927734375], "choice_history": [80, 159, 294], "score": -22.372020721435547, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}
{"beams": [{"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -0.0695953369140625, -1.9073486328125e-06, -9.72747802734375e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -3.814697265625e-06, 0.0, -5.006785613659304e-06, 0.0, -1.1444091796875e-05, -1.2993811651540454e-05, -5.483612312673358e-06, -0.15964794158935547, -3.4332275390625e-05, -0.00032806396484375, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -8.0108642578125e-05, -2.86102294921875e-05, -5.626678466796875e-05, -5.7220458984375e-06, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.1682510375976562e-05, 0.0, -0.000152587890625, -1.1444091796875e-05, -2.3126602172851562e-05, -3.075599670410156e-05, -0.0710906982421875, -0.00038909912109375, -1.1444091796875e-05, -1.9073486328125e-06, -0.07703399658203125, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.05506134033203125, 0.0, -0.0001964569091796875, 0.0, -0.015761852264404297, -9.5367431640625e-06, -0.000179290771484375, -0.014422416687011719, -3.0517578125e-05, -2.86102294921875e-05, -0.0007781982421875, -0.0005207061767578125, 0.0, -0.00109100341796875, -1.9073486328125e-06, -0.0025442838668823242, -7.62939453125e-06, -0.5939130783081055, 0.0, -0.00543975830078125, -0.004431724548339844, -4.9591064453125e-05, -0.048563845455646515, -3.62396240234375e-05], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -1.5169463228271525, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "change_temp_attack"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -2.732089042663574, -0.006003379821777344, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.058837890625, -3.814697265625e-06, -0.000110626220703125, -9.5367431640625e-06, -0.626570463180542, -3.457069396972656e-05, -3.814697265625e-06, -0.20206356048583984, 0.0, -0.0007803440093994141, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -4.021327018369448, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -1.1742057800292969, 0.0, -0.00010526179539738223, -2.0265579223632812e-06, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.933906555175781e-05, 0.0, -4.9591064453125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -0.0006866455078125, -0.000148773193359375, -2.288818359375e-05, -2.47955322265625e-05, -6.4849853515625e-05, -3.814697265625e-06, -9.417517503607087e-06, -1.9073486328125e-06, -2.586841583251953e-05, 0.0, -0.0003204345703125, -1.52587890625e-05, -5.7220458984375e-06, -5.7338023907504976e-05, -4.7087654820643365e-05, -6.914134246471804e-06, -9.5367431640625e-06, -5.340576171875e-05, -3.62396240234375e-05, -6.07373658567667e-06, -1.9073486328125e-06, -0.0007476806640625, 0.0, -0.0004291534423828125, 0.0, -3.063678741455078e-05, -5.960462772236497e-07, -0.00763702392578125, 0.0, -2.09808349609375e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.398822784423828e-05, -4.172325134277344e-06, -0.0007915496826171875, -5.7220458984375e-06, -2.86102294921875e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.134893536567688, 0.0, -0.0002803802490234375, -5.7220458984375e-06, -0.0751810073852539, 0.0, -4.38690185546875e-05, -2.86102294921875e-05, -0.0007327794446609914, -2.86102294921875e-05, -0.0006791353225708008, -3.027885759365745e-05, -0.9015529751777649, -0.002312015276402235, -0.002971649169921875, -0.00067901611328125, -5.7220458984375e-06, -0.000354766845703125, -5.14984130859375e-05, -3.814697265625e-06, -0.006708264350891113, 0.0, -0.00017547607421875, -3.814697265625e-06, -1.7376405000686646, -1.33514404296875e-05, -3.814697265625e-06, -0.010724067687988281, 0.0, -0.0011121034622192383, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Deadly", " ", "Poison", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -4.062814357375657, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Deadly Poison"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -2.732089042663574, -0.006003379821777344, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.058837890625, -3.814697265625e-06, -0.000110626220703125, -9.5367431640625e-06, -2.0711381435394287, 0.0, -7.62939453125e-06, -0.0001220703125, -5.7220458984375e-06, -0.1725328266620636, -4.76837158203125e-05], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -5.4357264336240405, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(0)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -2.732089042663574, -0.006003379821777344, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.058837890625, -3.814697265625e-06, -0.000110626220703125, -9.5367431640625e-06, -0.626570463180542, -3.457069396972656e-05, -3.814697265625e-06, -1.8166799545288086, -1.52587890625e-05, -0.11935892701148987, -0.014979243278503418], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 47, 165, "weapon", "<EOS>"], "score": -5.76951459013344, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 0}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(AuraUntil(ChangeAttack(2), WeaponSelector()))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -1.1742057800292969, 0.0, -0.00010526179539738223, -2.0265579223632812e-06, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.933906555175781e-05, 0.0, -4.9591064453125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -0.0006866455078125, -0.000148773193359375, -2.288818359375e-05, -2.47955322265625e-05, -6.4849853515625e-05, -3.814697265625e-06, -9.417517503607087e-06, -1.9073486328125e-06, -2.586841583251953e-05, 0.0, -0.0003204345703125, -1.52587890625e-05, -5.7220458984375e-06, -5.7338023907504976e-05, -4.7087654820643365e-05, -6.914134246471804e-06, -9.5367431640625e-06, -5.340576171875e-05, -3.62396240234375e-05, -6.07373658567667e-06, -1.9073486328125e-06, -0.0007476806640625, 0.0, -0.0004291534423828125, 0.0, -3.063678741455078e-05, -5.960462772236497e-07, -0.00763702392578125, 0.0, -2.09808349609375e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.398822784423828e-05, -4.172325134277344e-06, -0.0007915496826171875, -5.7220458984375e-06, -2.86102294921875e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.134893536567688, 0.0, -0.0002803802490234375, -5.7220458984375e-06, -0.0751810073852539, 0.0, -4.38690185546875e-05, -2.86102294921875e-05, -0.0007327794446609914, -2.86102294921875e-05, -0.0006791353225708008, -3.027885759365745e-05, -0.9015529751777649, -0.002312015276402235, -0.002971649169921875, -0.00067901611328125, -5.7220458984375e-06, -0.000354766845703125, -5.14984130859375e-05, -3.814697265625e-06, -0.006708264350891113, 0.0, -0.00017547607421875, -3.814697265625e-06, -1.1056715250015259, -1.9788581994362175e-05, -1.9073486328125e-05, -0.3033428192138672, -0.0004596710205078125, -2.47955322265625e-05, 0.0, -1.2205719947814941, -0.03539073467254639, -1.9073486328125e-06, -0.0023860931396484375, -0.13378238677978516, -0.0006151199340820312, -0.011060233227908611, -6.4849853515625e-05, -0.0006580352783203125, -0.000335693359375, -0.7231444716453552, -0.002471807412803173, -2.1457672119140625e-06], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Deadly", " ", "Poison", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -5.853332221964422, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Deadly Poison"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(AuraUntil(ChangeAttack(2), SelfSelector()))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -1.1742057800292969, 0.0, -0.00010526179539738223, -2.0265579223632812e-06, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.933906555175781e-05, 0.0, -4.9591064453125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -0.0006866455078125, -0.000148773193359375, -2.288818359375e-05, -2.47955322265625e-05, -6.4849853515625e-05, -3.814697265625e-06, -9.417517503607087e-06, -1.9073486328125e-06, -2.586841583251953e-05, 0.0, -0.0003204345703125, -1.52587890625e-05, -5.7220458984375e-06, -5.7338023907504976e-05, -4.7087654820643365e-05, -6.914134246471804e-06, -9.5367431640625e-06, -5.340576171875e-05, -3.62396240234375e-05, -6.07373658567667e-06, -1.9073486328125e-06, -0.0007476806640625, 0.0, -0.0004291534423828125, 0.0, -3.063678741455078e-05, -5.960462772236497e-07, -0.00763702392578125, 0.0, -2.09808349609375e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.398822784423828e-05, -4.172325134277344e-06, -0.0007915496826171875, -5.7220458984375e-06, -2.86102294921875e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.134893536567688, 0.0, -0.0002803802490234375, -5.7220458984375e-06, -0.0751810073852539, 0.0, -4.38690185546875e-05, -2.86102294921875e-05, -0.0007327794446609914, -2.86102294921875e-05, -0.0006791353225708008, -3.027885759365745e-05, -0.9015529751777649, -0.002312015276402235, -0.002971649169921875, -0.00067901611328125, -5.7220458984375e-06, -0.000354766845703125, -5.14984130859375e-05, -3.814697265625e-06, -0.006708264350891113, 0.0, -0.00017547607421875, -3.814697265625e-06, -1.1056715250015259, -1.9788581994362175e-05, -1.9073486328125e-05, -0.3033428192138672, -0.0004596710205078125, -2.47955322265625e-05, 0.0, -1.2205719947814941, -0.03539073467254639, -1.9073486328125e-06, -0.0023860931396484375, -0.13378238677978516, -0.0006151199340820312, -0.011060233227908611, -6.4849853515625e-05, -0.0006580352783203125, -0.000335693359375, -1.1922129392623901, -8.594989776611328e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Deadly", " ", "Poison", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -6.320012686299208, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Deadly Poison"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(weapon<UNK>(), SelfSelector()))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -1.1742057800292969, 0.0, -0.00010526179539738223, -2.0265579223632812e-06, -1.33514404296875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.933906555175781e-05, 0.0, -4.9591064453125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -0.0006866455078125, -0.000148773193359375, -2.288818359375e-05, -2.47955322265625e-05, -6.4849853515625e-05, -3.814697265625e-06, -9.417517503607087e-06, -1.9073486328125e-06, -2.586841583251953e-05, 0.0, -0.0003204345703125, -1.52587890625e-05, -5.7220458984375e-06, -5.7338023907504976e-05, -4.7087654820643365e-05, -6.914134246471804e-06, -9.5367431640625e-06, -5.340576171875e-05, -3.62396240234375e-05, -6.07373658567667e-06, -1.9073486328125e-06, -0.0007476806640625, 0.0, -0.0004291534423828125, 0.0, -3.063678741455078e-05, -5.960462772236497e-07, -0.00763702392578125, 0.0, -2.09808349609375e-05, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -4.398822784423828e-05, -4.172325134277344e-06, -0.0007915496826171875, -5.7220458984375e-06, -2.86102294921875e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.134893536567688, 0.0, -0.0002803802490234375, -5.7220458984375e-06, -0.0751810073852539, 0.0, -4.38690185546875e-05, -2.86102294921875e-05, -0.0007327794446609914, -2.86102294921875e-05, -0.0006791353225708008, -3.027885759365745e-05, -0.9015529751777649, -0.002312015276402235, -0.002971649169921875, -0.00067901611328125, -5.7220458984375e-06, -0.000354766845703125, -5.14984130859375e-05, -3.814697265625e-06, -0.006708264350891113, 0.0, -0.00017547607421875, -3.814697265625e-06, -1.1056715250015259, -1.9788581994362175e-05, -1.9073486328125e-05, -0.3033428192138672, -0.0004596710205078125, -2.47955322265625e-05, 0.0, -0.8990788459777832, -0.028342485427856445, -1.8715856640483253e-05, -0.0002346038818359375, -0.4701061248779297, -0.0010013580322265625, -0.0012975923018530011, -1.1274045705795288, -0.005452425684779882, -9.34600830078125e-05, 0.0, -0.26628434658050537, -0.00021254993043839931, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Deadly", " ", "Poison", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "weapon", "<UNK>", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -6.522373947187411, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Deadly Poison"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"args": [{"hole0": "weapon<UNK>", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -2.732089042663574, -0.006003379821777344, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.058837890625, -3.814697265625e-06, -0.000110626220703125, -9.5367431640625e-06, -3.7528860569000244, -7.93933286331594e-05, -1.9073486328125e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.2599310278892517, -3.0517578125e-05], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -7.204847037365653, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(ChangeAttack(Count(Attack<UNK>Than<UNK>(1)))))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -0.0695953369140625, -1.9073486328125e-06, -9.72747802734375e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -3.814697265625e-06, 0.0, -5.006785613659304e-06, 0.0, -1.1444091796875e-05, -1.2993811651540454e-05, -5.483612312673358e-06, -0.15964794158935547, -3.4332275390625e-05, -0.00032806396484375, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -8.0108642578125e-05, -2.86102294921875e-05, -5.626678466796875e-05, -5.7220458984375e-06, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.1682510375976562e-05, 0.0, -0.000152587890625, -1.1444091796875e-05, -2.3126602172851562e-05, -3.075599670410156e-05, -0.0710906982421875, -0.00038909912109375, -1.1444091796875e-05, -1.9073486328125e-06, -0.07703399658203125, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.05506134033203125, 0.0, -0.0001964569091796875, 0.0, -0.015761852264404297, -9.5367431640625e-06, -0.000179290771484375, -0.014422416687011719, -3.0517578125e-05, -2.86102294921875e-05, -0.0007781982421875, -0.0005207061767578125, 0.0, -0.00109100341796875, -1.9073486328125e-06, -0.0025442838668823242, -7.62939453125e-06, -1.4442453384399414, -1.001357759378152e-05, -2.6702880859375e-05, -0.7904090881347656, -0.000385284423828125, -0.39821934700012207, -0.07112157344818115, -1.9073486328125e-05, -9.5367431640625e-06, -0.009140968322753906, -0.0003147125244140625, -0.0001049041748046875, -1.9073486328125e-06, -1.583896517753601, -0.002443073783069849, -3.24249267578125e-05, -0.059345245361328125, -0.000118255615234375, -3.4332275390625e-05, 0.0, -0.5442967414855957, -0.13315999507904053, -0.5414618253707886, -0.10270237922668457, -0.6428446769714355, -0.000457763671875, -0.02095508575439453, -1.9073486328125e-06, -0.08191699534654617, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Change", "Attack", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Attack", "<UNK>", "Than", "<UNK>", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -7.292191570698833, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole1": [{"args": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "hole0": "ChangeAttack", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -5.270458221435547, -0.00534820556640625, -5.9603295085253194e-05, -1.823901038733311e-05, -5.841255187988281e-06, -0.0001049041748046875, -1.4345018863677979, -3.814697265625e-06, -0.00331878662109375, -3.814697265625e-06, -0.0010824203491210938, -0.8362665176391602, -0.025873184204101562, 0.0, -0.006697654724121094, 0.0, -0.37533068656921387, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Deadly", " ", "Poison", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -7.95973622638212, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Deadly Poison", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(BuffUntil(weapon(), weapon()))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -2.732089042663574, -0.006003379821777344, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, 0.0, -0.058837890625, -3.814697265625e-06, -0.000110626220703125, -9.5367431640625e-06, -1.8704802989959717, -0.001053376356139779, -2.47955322265625e-05, -0.08573246002197266, -0.00135040283203125, -2.47955322265625e-05, 0.0, -0.45022904872894287, -0.022234439849853516, -3.0755967600271106e-05, -0.0005054473876953125, -0.40235328674316406, -0.0029659271240234375, -0.0004549349832814187, -0.7741413712501526, -4.1961669921875e-05, -1.1444091796875e-05, -1.0342233180999756, -0.18088403344154358], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "weapon", "<EOS>", 68, 260, "weapon", "<EOS>"], "score": -8.018614456562318, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"args": [{"hole0": "weapon", "_type": "Template77"}, {"hole0": "weapon", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(ChangeAttack(Count(Attack<UNK>(1)))))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.8596476365928538e-05, -9.298297300119884e-06, -4.887569048150908e-06, -0.0003376007080078125, 0.0, -3.814697265625e-06, -7.450579869328067e-05, -9.202954970533028e-05, -1.8715853002504446e-05, -9.1552734375e-05, -0.38590526580810547, -0.000263214111328125, -9.894321920000948e-06, -2.8491018383647315e-05, -3.933906555175781e-06, -3.814697265625e-06, -3.456998456385918e-06, 0.0, -0.007893681526184082, 0.0, -0.0695953369140625, -1.9073486328125e-06, -9.72747802734375e-05, -3.814697265625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -3.814697265625e-06, 0.0, -5.006785613659304e-06, 0.0, -1.1444091796875e-05, -1.2993811651540454e-05, -5.483612312673358e-06, -0.15964794158935547, -3.4332275390625e-05, -0.00032806396484375, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -8.0108642578125e-05, -2.86102294921875e-05, -5.626678466796875e-05, -5.7220458984375e-06, -0.000110626220703125, -7.62939453125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.1682510375976562e-05, 0.0, -0.000152587890625, -1.1444091796875e-05, -2.3126602172851562e-05, -3.075599670410156e-05, -0.0710906982421875, -0.00038909912109375, -1.1444091796875e-05, -1.9073486328125e-06, -0.07703399658203125, -1.9073486328125e-06, -0.0001926422119140625, 0.0, -0.05506134033203125, 0.0, -0.0001964569091796875, 0.0, -0.015761852264404297, -9.5367431640625e-06, -0.000179290771484375, -0.014422416687011719, -3.0517578125e-05, -2.86102294921875e-05, -0.0007781982421875, -0.0005207061767578125, 0.0, -0.00109100341796875, -1.9073486328125e-06, -0.0025442838668823242, -7.62939453125e-06, -1.4442453384399414, -1.001357759378152e-05, -2.6702880859375e-05, -0.7904090881347656, -0.000385284423828125, -0.39821934700012207, -0.07112157344818115, -1.9073486328125e-05, -9.5367431640625e-06, -0.009140968322753906, -0.0003147125244140625, -0.0001049041748046875, -1.9073486328125e-06, -1.583896517753601, -0.002443073783069849, -3.24249267578125e-05, -0.059345245361328125, -0.000118255615234375, -3.4332275390625e-05, 0.0, -0.5442967414855957, -0.13315999507904053, -1.0072983503341675, -0.0026397705078125, -0.36017894744873047, -4.38690185546875e-05, -0.9799784421920776, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Deadly", "Poison", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Change", "Attack", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Attack", "<UNK>", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -8.25199794590435, "model_output": {"_type": "Module", "body": [{"name": "DeadlyPoison", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole1": [{"args": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "Attack<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "hole0": "ChangeAttack", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "break\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -19.26837921142578], "choice_history": [80, 159, 295, 87], "score": -19.268381118774414, "model_output": {"_type": "Module", "body": [{"_type": "Break"}]}}, {"inferred_code": "", "score_history": [0.0, 0.0, -23.39281463623047], "choice_history": [80, 159, 294], "score": -23.39281463623047, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n"}
{"beams": [{"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -1.459390640258789, 0.0, -0.017498016357421875, -0.0013370513916015625, -0.077001191675663, -1.9073486328125e-06, -0.0004291534423828125, -2.47955322265625e-05, 0.0, -0.0002536773681640625, -9.918212890625e-05, -5.7220458984375e-06, -0.008367657661437988, -9.5367431640625e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.0009965896606445312, -0.00021398067474365234, -3.62396240234375e-05, -0.000652313232421875, -0.000293731689453125, -0.0020984411239624023, 0.0, -0.020849227905273438, -0.0002899169921875, -0.0008068084716796875, -2.6702880859375e-05, 0.0, -0.0023975372314453125, -1.33514404296875e-05, -9.500581654720008e-05, -2.1457672119140625e-06, -0.0013130903244018555, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "5", "<EOS>"], "score": -1.6876657887139572, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}]}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=1)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.847637951374054, 0.0, -0.0027408599853515625, -0.0001239776611328125, -1.7762025890988298e-05, -1.633156898606103e-05, -0.00012683868408203125, -1.9073486328125e-06, -0.39066123962402344, 0.0, -0.0024595260620117188, -7.62939453125e-06, -0.001077413558959961, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -1.7566336936095013, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.5682199597358704, -3.814697265625e-06, -0.00067138671875, -0.000179290771484375, -1.5020257706055418e-05, -1.025196434056852e-05, -0.00011861324310302734, -3.933906555175781e-06, -0.831405758857727, -1.1920928244535389e-07, -0.0025577545166015625, -9.5367431640625e-06, -0.001044154167175293, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -1.9160018511108703, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(6, 5, buffs=[Buff(Frozen())])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.5682199597358704, -3.814697265625e-06, -0.00067138671875, -0.000179290771484375, -1.5020257706055418e-05, -1.025196434056852e-05, -0.00011861324310302734, -3.933906555175781e-06, -0.924383282661438, -3.767012094613165e-05, -0.004075050354003906, -0.000274658203125, -0.0025787353515625, -0.6530876159667969, -0.0003337860107421875, -0.0006531476392410696, -2.2649765014648438e-06, -0.4743633270263672, -3.445148468017578e-05], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "buffs", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "Frozen", "<EOS>"], "score": -3.1408085174123244, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole1": "Frozen", "hole0": "Buff", "_type": "Template69"}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, combo=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -3.2895984649658203, 0.0, -0.010623931884765625, -0.0014438629150390625, -0.026347965002059937, -1.9073486328125e-06, -0.0004730224609375, -2.6702880859375e-05, 0.0, -0.0002079010009765625, -0.000110626220703125, -9.5367431640625e-06, -0.0071936845779418945, -5.7220458984375e-06, -5.7220458984375e-05, -3.814697265625e-06, -0.0012004375457763672, -0.00017774105072021484, -4.38690185546875e-05, -0.000583648681640625, -0.0003376007080078125, -0.0021556615829467773, 0.0, -0.019303321838378906, -0.0002880096435546875, -0.000789642333984375, -2.6702880859375e-05, 0.0, -0.0025386810302734375, -1.52587890625e-05, -0.0001368436642223969, -2.0265579223632812e-06, -0.0012694597244262695, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "combo", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "5", "<EOS>"], "score": -3.458066777626982, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}]}, "hole3": "combo"}, {"hole1": 5, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -2.477222442626953, -0.000293731689453125, -0.00019703354337252676, -4.732604429591447e-05, -1.943108145496808e-05, -1.9073486328125e-06, -8.618564606877044e-05, -1.9073486328125e-06, -0.0007326602935791016, 0.0, -8.7738037109375e-05, 0.0, -0.0031909942626953125, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.0006275177001953125, -3.814697265625e-06, -0.9849081039428711, 0.0, -0.00182342529296875, 0.0, -0.007376670837402344, -0.03582572937011719, -0.16747872531414032, -5.7220458984375e-06, -0.0020122528076171875, -1.1682510375976562e-05, -1.9073486328125e-06, -0.0020465850830078125, -7.43865966796875e-05, -9.5367431640625e-06, -0.0027582645416259766, -3.814697265625e-06, -4.57763671875e-05, -5.7220458984375e-06, -0.0008112192153930664, -0.00016057491302490234, -7.62939453125e-06, -0.00058746337890625, -0.000274658203125, -0.0022802352905273438, 0.0, -0.004047393798828125, -0.00019073486328125, -0.0006561279296875, -2.491474151611328e-05, 0.0, -0.00200653076171875, -1.1444091796875e-05, -4.4941058149561286e-05, -2.622604142743512e-06, -0.0016827583312988281, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "5", "<EOS>"], "score": -3.69991888280628, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "SHAMAN", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}]}, "_type": "Template9", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 5, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(6, 5, buffs=[Buff(CantAttack())])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.5682199597358704, -3.814697265625e-06, -0.00067138671875, -0.000179290771484375, -1.5020257706055418e-05, -1.025196434056852e-05, -0.00011861324310302734, -3.933906555175781e-06, -0.924383282661438, -3.767012094613165e-05, -0.004075050354003906, -0.000274658203125, -0.0025787353515625, -0.6530876159667969, -0.0003337860107421875, -0.0006531476392410696, -2.2649765014648438e-06, -1.3753128051757812, -0.032145023345947266, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "buffs", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "Cant", "Attack", "<EOS>"], "score": -4.073868686632288, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole1": "CantAttack", "hole0": "Buff", "_type": "Template69"}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -3.5584793090820312, -0.005953788757324219, -0.029903355985879898, -1.9073486328125e-06, -0.00091552734375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0002155303955078125, -0.000148773193359375, -5.7220458984375e-06, -0.006609082221984863, -5.7220458984375e-06, -5.53131103515625e-05, -3.814697265625e-06, -0.0011372566223144531, -0.00013756752014160156, -3.24249267578125e-05, -0.0006256103515625, -0.0003509521484375, -0.0027164220809936523, 0.0, -0.027683258056640625, -0.00029754638671875, -0.0008411407470703125, -2.6702880859375e-05, 0.0, -0.0026378631591796875, -1.52587890625e-05, -9.977375157177448e-05, -2.1457672119140625e-06, -0.001360774040222168, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "5", "<EOS>"], "score": -4.120941692783845, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}]}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -2.477222442626953, -0.000293731689453125, -0.00019703354337252676, -4.732604429591447e-05, -1.943108145496808e-05, -1.9073486328125e-06, -8.618564606877044e-05, -1.9073486328125e-06, -0.0007326602935791016, 0.0, -8.7738037109375e-05, 0.0, -0.0031909942626953125, -1.9073486328125e-06, -7.05718994140625e-05, 0.0, -0.0006275177001953125, -3.814697265625e-06, -1.599863052368164, 0.0, -0.0017528533935546875, 0.0, -0.010643959045410156, -0.03151988983154297, -0.10807981342077255, -5.7220458984375e-06, -0.001636505126953125, -9.775161743164062e-06, -1.9073486328125e-06, -0.00228118896484375, -8.58306884765625e-05, -9.5367431640625e-06, -0.003069162368774414, -3.814697265625e-06, -4.76837158203125e-05, -3.814697265625e-06, -0.0007846355438232422, -0.00017201900482177734, -1.33514404296875e-05, -0.0005245208740234375, -0.000316619873046875, -0.0020831823348999023, 0.0, -0.005191802978515625, -0.0002727508544921875, -0.0008182525634765625, -2.288818359375e-05, 0.0, -0.0019016265869140625, -1.1444091796875e-05, -4.5298667828319594e-05, -2.622604142743512e-06, -0.0016503334045410156, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "5", "<EOS>"], "score": -4.2555671873101275, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "SHAMAN", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}]}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 5, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -1.459390640258789, 0.0, -0.017498016357421875, -0.0013370513916015625, -2.675713062286377, -7.62939453125e-06, -0.0063037872314453125, -4.00543212890625e-05, 0.0, -0.000278472900390625, -8.20159912109375e-05, -5.7220458984375e-06, -0.005696415901184082, -9.5367431640625e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.0010443925857543945, -0.00022554397583007812, -2.6702880859375e-05, -0.000576019287109375, -4.9591064453125e-05, -0.0018429756164550781, 0.0, -0.022821426391601562, -4.9591064453125e-05, -0.00058746337890625, -2.872943878173828e-05, 0.0, -0.00200653076171875, -1.33514404296875e-05, -8.296682790387422e-05, -2.2649765014648438e-06, -0.0014753341674804688, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "battlecry", "<EOS>", 27, 232, "2", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "5", "<EOS>"], "score": -4.290359369954558, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"hole1": "CharacterSelector", "hole0": 2, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}]}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(6, 5, buffs=[Aura(ChangeAttack(2), CharacterSelector(\n            players=BothPlayer()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.5682199597358704, -3.814697265625e-06, -0.00067138671875, -0.000179290771484375, -1.5020257706055418e-05, -1.025196434056852e-05, -0.00011861324310302734, -3.933906555175781e-06, -0.924383282661438, -3.767012094613165e-05, -0.004075050354003906, -0.000274658203125, -0.0025787353515625, -0.803126335144043, -0.000118255615234375, -3.814697265625e-06, 0.0, -0.0989830493927002, -3.254413604736328e-05, -0.000946044921875, -0.0746002197265625, -0.001117706298828125, -0.01573641039431095, -0.00030350685119628906, -0.032217979431152344, -0.0035390853881835938, -4.76837158203125e-05, 0.0, -0.4020061492919922, -7.82012939453125e-05, 0.0, -0.22669029235839844, -0.0003509521484375, -1.9073486328125e-06, -0.6690759658813477, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.0032711029052734375, -0.000148773193359375, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "buffs", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>"], "score": -4.344798568993383, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(6, 5, windfury=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.5682199597358704, -3.814697265625e-06, -0.00067138671875, -0.000179290771484375, -1.5020257706055418e-05, -1.025196434056852e-05, -0.00011861324310302734, -3.933906555175781e-06, -2.9694948196411133, -9.894368304230738e-06, -0.38309669494628906, -1.9073486328125e-05, -0.001398324966430664, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.435003335025385, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, overload=2)\n\n    def create_minion(self, player):\n        return Minion(6, 5, buffs=[Aura(ChangeAttack(2), CharacterSelector(\n            picker=UserPicker()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -0.3875551223754883, 0.0, -0.029959678649902344, -0.0011539459228515625, -0.5682199597358704, -3.814697265625e-06, -0.00067138671875, -0.000179290771484375, -1.5020257706055418e-05, -1.025196434056852e-05, -0.00011861324310302734, -3.933906555175781e-06, -0.924383282661438, -3.767012094613165e-05, -0.004075050354003906, -0.000274658203125, -0.0025787353515625, -0.803126335144043, -0.000118255615234375, -3.814697265625e-06, 0.0, -0.0989830493927002, -3.254413604736328e-05, -0.000946044921875, -0.0746002197265625, -0.001117706298828125, -0.01573641039431095, -0.00030350685119628906, -0.032217979431152344, -0.0035390853881835938, -4.76837158203125e-05, 0.0, -0.4020061492919922, -7.82012939453125e-05, 0.0, -0.22669029235839844, -0.0003509521484375, -1.9073486328125e-06, -0.741816520690918, 0.0, -0.00159454345703125, -9.5367431640625e-06, -0.021869659423828125, -4.589557647705078e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "buffs", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -4.43757021835404, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, choices=1)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.00010406468209112063, -8.225420970120467e-06, -2.50339189733495e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -5.7220458984375e-06, -1.1920922133867862e-06, -7.62939453125e-06, -0.09262561798095703, -0.000118255615234375, -3.3378546504536644e-06, -1.2516963579400908e-05, -1.7642974853515625e-05, 0.0, -8.189678192138672e-05, 0.0, -7.82012939453125e-05, 0.0, -3.7992496490478516, 0.0, -0.0968313217163086, -0.0005283355712890625, -0.10736559331417084, 0.0, -0.00325775146484375, -0.000263214111328125, -3.2782016205601394e-05, -7.390960945485858e-06, -9.703634714242071e-05, -1.9073486328125e-06, -0.394168496131897, 0.0, -0.0021562576293945312, -1.1444091796875e-05, -0.0009522438049316406, 0.0], "choice_history": [80, 159, 295, 88, 138, "Fire", "Elemental", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "SHAMAN", "<EOS>", "choices", "<EOS>", 21, 165, "1", "<EOS>", 109, 200, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.498016932930341, "model_output": {"_type": "Module", "body": [{"name": "FireElemental", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Fire Elemental", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"_type": "Num", "n": 1}, "hole3": "choices"}, {"hole1": 5, "hole0": 6, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.459165573120117], "choice_history": [80, 159, 294], "score": -22.459171295166016, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}
{"beams": [{"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(4), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -1.0014019012451172, -1.33514404296875e-05, -0.9800684452056885, -2.47955322265625e-05, -0.010583877563476562, -3.4332275390625e-05, -0.0016679165419191122, -1.9073486328125e-06, -0.00028374174144119024, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 47, 165, "4", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -2.1833699178122288, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 4}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -1.0014019012451172, -1.33514404296875e-05, -1.1126186847686768, -0.0009232759475708008, -0.0005817413330078125, -4.57763671875e-05, -0.005219580605626106, -1.9073486328125e-06, -0.00021513155661523342, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 47, 165, "Draw", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -2.310314814228036, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 0}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -1.0014019012451172, -1.33514404296875e-05, -1.2325294017791748, -7.62939453125e-06, -0.0006771087646484375, -2.6702880859375e-05, -0.00426224572584033, -1.9073486328125e-06, -0.0005916524678468704, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 47, 165, "2", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -2.42880345731362, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"_type": "Num", "n": 2}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 4, deathrattle=Deathrattle(Draw(), PlayerSelector()))\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -2.9658756256103516, -0.0002918243408203125, -2.0503786799963564e-05, -2.5868283046293072e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.01647530123591423, 0.0, -0.00020837783813476562, 0.0, -0.003864288330078125, -3.4332275390625e-05, -8.618458377895877e-05, 0.0, -0.00039521712460555136, 0.0, -0.2008075714111328, -3.814697265625e-06, -0.010034561157226562, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.0020695924758911133, 0.0, -0.0058002471923828125, -0.09853935241699219, -0.00012969970703125, -0.015341907739639282, -3.71928617823869e-05, -0.0036754608154296875, -5.7220458984375e-06, -0.006205826066434383, -4.458394687389955e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 68, 260, "Draw", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.3304885093199275, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(IsType(MINION_TYPE\n            .BEAST)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=1)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -1.7428476810455322, -0.0010999441146850586, 0.0, -0.0077228546142578125, -0.0001354217529296875, -0.0020895004272460938, -1.1444091796875e-05, 0.0, -0.002079010009765625, -2.384185791015625e-06, -0.7899026870727539, -1.9073486328125e-06, -0.034572601318359375, -0.0003986358642578125, -0.00010094392928294837, 0.0, -0.010507217608392239, 0.0, -0.27715301513671875, -1.9073486328125e-06, -0.001277923583984375, -0.0002079010009765625, -0.3419100344181061, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "2", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -3.864751651521942, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=1)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -3.440232276916504, -0.09003333002328873, -2.1338310034479946e-05, -0.0003910064697265625, -0.0014934539794921875, -3.5999782994622365e-05, 0.0, -0.00045621965546160936, 0.0, -0.33008861541748047, -5.7220458984375e-06, -0.0007648468017578125, -0.0009632110595703125, -0.04287717118859291, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 240, "Draw", "<EOS>", 109, 200, "2", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -4.002192982777046, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(IsType(MINION_TYPE\n            .MURLOC)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=1)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -1.7428476810455322, -0.0010999441146850586, 0.0, -0.0077228546142578125, -0.0001354217529296875, -0.0020895004272460938, -1.1444091796875e-05, 0.0, -0.002079010009765625, -2.384185791015625e-06, -1.25823974609375, -8.106212590064388e-06, -0.37522220611572266, -0.0016269683837890625, -0.0001662566646700725, 0.0, -0.018928423523902893, 0.0, -0.25290775299072266, -1.9073486328125e-06, -0.0012722015380859375, -0.0002727508544921875, -0.2703821361064911, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 109, 200, "2", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -4.587745332724694, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(AuraUntil(Draw(),\n            PlayerSelector(), CardQuery(source=CARD_SOURCE.LIST,\n            source_list=spare_part_list))), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -0.4014322757720947, -0.01677989959716797, -3.814697265625e-06, -0.2820930480957031, -0.737335205078125, -1.33514404296875e-05, -0.06676441431045532, -0.0002336378238396719, -0.6277627944946289, -2.47955322265625e-05, -0.10785433650016785, -0.0016760051948949695, -3.576278118089249e-07, -0.0016756057739257812, -0.6915578842163086, -1.9073486328125e-06, -1.1444091796875e-05, -0.17715775966644287, -0.7480262517929077, -0.0003300905227661133, -0.22620487213134766, -0.00045013427734375, -0.0003566741943359375, -0.009771466255187988, 0.0, -0.026929855346679688, -0.007330894470214844, -1.33514404296875e-05, 0.0, -0.005080223083496094, -4.1723224057932384e-06, -0.0070705413818359375, -4.482269287109375e-05, -0.0004138946533203125, -0.0002498626708984375, -0.0034040212631225586, 0.0, -0.0002155303955078125, 0.0, -0.08778953552246094, -1.9073486328125e-06, -0.0015354156494140625, -9.5367431640625e-06, -0.001408810494467616, -1.9073486328125e-06, -2.049683826044202e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 284, 68, 260, "Draw", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 79, 271, "source_list", "<EOS>", 19, 160, "spare_part_list", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -4.89176953540283, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}, {"arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(IsType(MINION_TYPE\n            .BEAST)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=5)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -1.7428476810455322, -0.0010999441146850586, 0.0, -0.0077228546142578125, -0.0001354217529296875, -0.0020895004272460938, -1.1444091796875e-05, 0.0, -0.002079010009765625, -2.384185791015625e-06, -0.7899026870727539, -1.9073486328125e-06, -0.034572601318359375, -0.0003986358642578125, -0.00010094392928294837, 0.0, -0.010507217608392239, 0.0, -0.27715301513671875, -1.9073486328125e-06, -0.001277923583984375, -0.0002079010009765625, -1.3780752420425415, -1.33514404296875e-05], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "2", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 165, "5", "<EOS>"], "score": -4.9009283032381745, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 5}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(AuraUntil(Draw(),\n            CardSelector(players=BothPlayer()), PlayerSelector())),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -0.4014322757720947, -0.01677989959716797, -3.814697265625e-06, -0.2820930480957031, -0.737335205078125, -1.33514404296875e-05, -0.06676441431045532, -0.0002336378238396719, -0.7668981552124023, -0.11322402954101562, -1.1444091796875e-05, -1.9073486328125e-06, -0.25346696376800537, -0.0030934768728911877, 0.0, -0.0027866363525390625, -8.58306884765625e-05, -5.7220458984375e-06, -0.7577698230743408, -1.9073468138230965e-06, -0.0002384185791015625, 0.0, -0.0005991443758830428, -6.556510470545618e-06, -5.14984130859375e-05, -0.1750469207763672, 0.0, -1.0069737434387207, -0.00030455703381448984, -1.1920928244535389e-07, -0.0003261566162109375, -3.814697265625e-06, -0.00020859550568275154, 0.0, -6.079251761548221e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 284, 68, 260, "Draw", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -5.238493876866748, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"hole0": "Draw", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(AuraUntil(Draw(),\n            CardSelector(players=BothPlayer()), Selector())), PlayerSelector())\n            )\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -0.4014322757720947, -0.01677989959716797, -3.814697265625e-06, -0.2820930480957031, -0.737335205078125, -1.33514404296875e-05, -0.06676441431045532, -0.0002336378238396719, -0.7668981552124023, -0.11322402954101562, -1.1444091796875e-05, -1.9073486328125e-06, -0.25346696376800537, -0.0030934768728911877, 0.0, -0.0027866363525390625, -8.58306884765625e-05, -5.7220458984375e-06, -0.7577698230743408, -1.9073468138230965e-06, -0.0002384185791015625, 0.0, -0.0005991443758830428, -6.556510470545618e-06, -5.14984130859375e-05, -0.1750469207763672, 0.0, -1.0961174964904785, -8.702273589733522e-06, -0.0002288818359375, -5.7220458984375e-06, -0.00047028722474351525, 0.0, -4.1718376451171935e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 284, 68, 260, "Draw", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 68, 260, "Selector", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -5.3275060728223025, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"hole0": "Draw", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}, {"hole0": "Selector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(AuraUntil(\n            ChangeAttack(2), SelfSelector(), GreaterThan(Count(CardSelector\n            (condition=IsType(MINION_TYPE.DRAGON))), value=0))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -0.4014322757720947, -0.01677989959716797, -3.814697265625e-06, -0.2820930480957031, -1.867386817932129, -0.02266407012939453, -0.008325980044901371, -0.000110626220703125, -0.001491546630859375, -5.7220458984375e-06, -0.8969045281410217, -0.00025653839111328125, 0.0, -0.000370025634765625, -0.03781318664550781, -3.814697265625e-06, -7.62939453125e-06, -0.01225888729095459, -0.0027767415158450603, -8.344646857949556e-07, -3.814697265625e-06, -0.0010929107666015625, -3.24249267578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.009847760200500488, -4.5180306187830865e-05, -1.1444091796875e-05, -0.0024814605712890625, -0.29715442657470703, -2.288818359375e-05, 0.0, -0.00669097900390625, -0.004384875297546387, 0.0, -0.0021572113037109375, -0.000202178955078125, -1.1444091796875e-05, -0.823035478591919, -0.00010322991875000298, -0.018346786499023438, -0.000568389892578125, -9.5367431640625e-06, -1.9073486328125e-06, -0.000335693359375, -9.393692016601562e-05, 0.0, -0.00045013427734375, -7.2479248046875e-05, -0.000164031982421875, -3.814697265625e-06, -7.62939453125e-06, -0.003549814224243164, -1.1205666851310525e-05, -0.022179603576660156, -1.2874602361989673e-05, -0.0022983551025390625, -0.000545501708984375, -1.71661376953125e-05, -0.046536803245544434, -2.503394853192731e-06, -3.814697265625e-05, -5.7220458984375e-06, -0.020738856866955757, 0.0, -0.000331878662109375, -4.00543212890625e-05, -0.012756915763020515, -5.7220458984375e-06, -0.00016498519107699394, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 284, 64, 255, "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -5.479990410758774, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(AuraUntil(\n            ChangeAttack(2), PlayerSelector(), GreaterThan(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON))), value=0))),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -0.4014322757720947, -0.01677989959716797, -3.814697265625e-06, -0.2820930480957031, -1.0406675338745117, -0.0013332366943359375, -9.918212890625e-05, -1.9073486328125e-06, -0.6210880875587463, -0.7219385504722595, -1.3113020031596534e-05, -0.0001068115234375, -0.0048980712890625, -1.71661376953125e-05, -0.2157689929008484, -9.5367431640625e-06, -0.022287368774414062, -8.0108642578125e-05, -0.6169677972793579, -0.0006392002105712891, 0.0, -0.0004978179931640625, -0.07500362396240234, -1.9073486328125e-06, 0.0, -0.007813215255737305, -0.0007508990820497274, -1.9073468138230965e-06, -1.52587890625e-05, -0.0008144378662109375, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.004989743232727051, -2.0027157006552443e-05, -1.52587890625e-05, -0.0019207000732421875, -0.0438079833984375, -9.72747802734375e-05, 0.0, -0.0058727264404296875, -0.0005085467710159719, 0.0, -0.0020914077758789062, -0.00016021728515625, -1.9073486328125e-05, -0.7865316867828369, -0.00011300401820335537, -0.013792037963867188, -0.0011930465698242188, -1.52587890625e-05, -3.814697265625e-06, -0.0003358125686645508, -8.749961853027344e-05, 0.0, -0.000499725341796875, -0.0001239776611328125, -0.0002155303955078125, -5.7220458984375e-06, -7.62939453125e-06, -0.003286600112915039, -1.1563293810468167e-05, -0.021791458129882812, -8.58306884765625e-06, -0.007892608642578125, -0.000278472900390625, -1.1444091796875e-05, -0.04571712017059326, -2.622604142743512e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.026023123413324356, 0.0, -0.0003376007080078125, -4.1961669921875e-05, -0.012435643002390862, -5.7220458984375e-06, -0.0001635802909731865, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 284, 40, 136, 19, 160, "Change", "Attack", "<EOS>", 282, 47, 165, "2", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -5.664420823292517, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(AuraUntil(\n            ChangeAttack(2), PlayerSelector(), GreaterThan(Count(\n            CardSelector(conditions=[IsType(MINION_TYPE.BEAST)])), value=0)\n            )), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00011884459672728553, -3.0040344427106902e-05, -1.9907822206732817e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -4.768370445162873e-07, -7.62939453125e-06, -2.622604142743512e-06, -1.33514404296875e-05, -0.0724954605102539, -0.0001926422119140625, -1.7881377516459906e-06, -1.072883515007561e-05, -7.62939453125e-06, -1.9073486328125e-06, -8.571245416533202e-05, 0.0, -3.62396240234375e-05, 0.0, -0.0106353759765625, 0.0, -0.010896682739257812, -0.04503822326660156, -0.04940434917807579, -1.1563301086425781e-05, -5.7220458984375e-06, -0.4592428207397461, -0.004146575927734375, -4.9591064453125e-05, 0.0, -0.4014322757720947, -0.01677989959716797, -3.814697265625e-06, -0.2820930480957031, -1.0406675338745117, -0.0013332366943359375, -9.918212890625e-05, -1.9073486328125e-06, -0.6210880875587463, -0.7219385504722595, -1.3113020031596534e-05, -0.0001068115234375, -0.0048980712890625, -1.71661376953125e-05, -0.2157689929008484, -9.5367431640625e-06, -0.022287368774414062, -8.0108642578125e-05, -0.6169677972793579, -0.0006392002105712891, 0.0, -0.0004978179931640625, -0.07500362396240234, -1.9073486328125e-06, 0.0, -0.007813215255737305, -0.0007508990820497274, -1.9073468138230965e-06, -1.52587890625e-05, -0.0008144378662109375, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.004989743232727051, -2.0027157006552443e-05, -1.52587890625e-05, -0.0019207000732421875, -0.0438079833984375, -9.72747802734375e-05, 0.0, -0.0058727264404296875, -0.0005085467710159719, 0.0, -0.0020914077758789062, -0.00016021728515625, -1.9073486328125e-05, -1.0791056156158447, -2.3841855067985307e-07, -0.5985860824584961, -0.0002994537353515625, -0.49054718017578125, -0.0003681182861328125, -0.0003032684326171875, -0.0003070831298828125, -1.1444091796875e-05, -0.006334066390991211, -0.0007517337216995656, -1.9073486328125e-06, -0.0015716552734375, -9.72747802734375e-05, -0.00018310546875, -7.62939453125e-06, 0.0, -0.000579833984375, -1.9073486328125e-06, -0.8922691345214844, 0.0, -0.0090179443359375, -0.00040435791015625, -7.62939453125e-06, -0.09042847156524658, -3.576278118089249e-07, -4.1961669921875e-05, -7.62939453125e-06, -0.05194520950317383, 0.0, -0.000377655029296875, -4.9591064453125e-05, -0.011238199658691883, -3.814697265625e-06, -0.0001460753846913576, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Gnomish", "Inventor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Draw", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 284, 40, 136, 19, 160, "Change", "Attack", "<EOS>", 282, 47, 165, "2", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "2", "<EOS>", "4", "<EOS>"], "score": -7.97844164144297, "model_output": {"_type": "Module", "body": [{"name": "GnomishInventor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Gnomish Inventor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ChangeAttack"}}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "Draw", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-0.0001544952392578125, -7.2479248046875e-05, -20.914493560791016], "choice_history": [80, 159, 294], "score": -20.91472053527832, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}
{"beams": [{"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.5746698379516602, -0.0068607330322265625, -0.0017413869500160217, -4.9591064453125e-05, -0.0006008148193359375, -7.62939453125e-06, -0.0001888275146484375, -4.1961669921875e-05, -2.288818359375e-05, -3.62396240234375e-05, -0.003208160400390625, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -0.0023442506790161133, -1.9073486328125e-06, -0.06686210632324219, -1.5020307728264015e-05, -0.012463212013244629, -0.016402244567871094, -0.000232696533203125, -0.005797386169433594, -3.24249267578125e-05, -0.5309152603149414, -2.09808349609375e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 119, 245, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -1.753601047336815, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}, {"value": {"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -1.6996526718139648, -2.86102294921875e-05, -0.00017547607421875, -2.288818359375e-05, -2.09808349609375e-05, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -4.57763671875e-05, -1.9669532775878906e-05, -3.814697265625e-06, -0.000179290771484375, -1.1444091796875e-05, -7.62939453125e-06, -8.96453857421875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.00058746337890625, -4.1961669921875e-05, -0.000213623046875, -8.606910705566406e-05, -0.017625808715820312, -7.82012939453125e-05, -0.000247955322265625, -1.9073486328125e-06, -0.0034772157669067383, -3.814697265625e-06, -0.0001773834228515625, 0.0, -0.0024871826171875, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.008677840232849121, -5.7220458984375e-06, -7.62939453125e-05, -9.5367431640625e-06, -4.00543212890625e-05, -0.000240325927734375, -0.0001964569091796875, -0.0008487701416015625, 0.0, -0.000579833984375, -3.4332275390625e-05, -0.004857063293457031, -4.1961669921875e-05, -0.04532432556152344, -1.52587890625e-05, -0.000812530517578125, -0.0040721893310546875, -0.000118255615234375, -0.038378044962882996, -3.0517578125e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -2.024872581663658, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "change_temp_attack"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.5746698379516602, -0.0068607330322265625, -0.0017413869500160217, -4.9591064453125e-05, -0.0006008148193359375, -7.62939453125e-06, -0.0001888275146484375, -4.1961669921875e-05, -2.288818359375e-05, -3.62396240234375e-05, -0.003208160400390625, 0.0, -5.7220458984375e-05, -3.814697265625e-06, -0.0023442506790161133, -1.9073486328125e-06, -0.06686210632324219, -1.5020307728264015e-05, -0.012463212013244629, -0.016402244567871094, -0.000232696533203125, -0.005797386169433594, -3.24249267578125e-05, -0.8985962867736816, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 119, 245, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -2.121266815006493, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}, {"value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(3)\n        player.hero.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.9791707992553711, -4.1961669921875e-05, -0.0053462982177734375, -3.814697265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.047255516052246094, 0.0, -5.53131103515625e-05, -9.5367431640625e-06, -0.04057145118713379, -1.9073486328125e-06, -0.04845094680786133, -8.821463779895566e-06, -0.021606922149658203, -0.1432018280029297, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.48122769594192505, -2.47955322265625e-05, -0.00506591796875, -0.0004825592041015625, -0.45584458112716675, -0.00103759765625], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "3", "<EOS>", 119, 245, "3", "<EOS>"], "score": -2.761241431513554, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 3, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -1.8815994262695312, -1.9073486328125e-06, -0.00011432162136770785, -3.933906555175781e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4066696166992188e-05, -5.7220458984375e-06, -6.29425048828125e-05, -1.1444091796875e-05, -8.0108642578125e-05, -0.014612197875976562, -5.91278076171875e-05, -0.0002193450927734375, -1.1444091796875e-05, -0.00035858154296875, -7.2479248046875e-05, -1.4185851796355564e-05, -3.814697265625e-06, -8.797645568847656e-05, 0.0, -0.0011434555053710938, -5.7220458984375e-05, -7.62939453125e-06, -0.00011622230522334576, -4.100797377759591e-05, -1.3947435945738107e-05, -1.1444091796875e-05, -0.000606536865234375, -8.7738037109375e-05, -0.00015484045434277505, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.0002765655517578125, 0.0, -0.000522613525390625, -1.1920928244535389e-07, -0.018108367919921875, -3.814697265625e-06, -0.0003757476806640625, 0.0, -5.91278076171875e-05, -2.288818359375e-05, -0.0013314485549926758, -9.739398956298828e-05, -0.0014801025390625, -1.1444091796875e-05, -2.47955322265625e-05, -0.0001850128173828125, -1.52587890625e-05, -0.00277554988861084, -1.9073486328125e-06, -0.0001125335693359375, -9.5367431640625e-06, -0.13546466827392578, -7.62939453125e-06, -1.9073486328125e-05, -0.000240325927734375, -0.00366055965423584, -0.004703521728515625, -0.00018322467803955078, -1.1801687833212782e-05, -0.46427178382873535, -0.0016866566147655249, -0.007758140563964844, -0.001323699951171875, -1.71661376953125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.4097766876220703, -0.0001125335693359375, -0.0015621185302734375, -2.288818359375e-05, -0.08264267444610596, -7.62939453125e-06, -7.62939453125e-06, -0.0002002716064453125, -4.76837158203125e-05, -0.3556874692440033, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Heroic", " ", "Strike", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -3.395208747146164, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Heroic Strike"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.9791707992553711, -4.1961669921875e-05, -0.0053462982177734375, -3.814697265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.047255516052246094, 0.0, -5.53131103515625e-05, -9.5367431640625e-06, -0.04057145118713379, -1.9073486328125e-06, -0.04845094680786133, -8.821463779895566e-06, -0.021606922149658203, -0.1432018280029297, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.9692118167877197, -7.62939453125e-06, -0.0122222900390625, -0.000362396240234375, -0.6605843305587769, -0.0004329681396484375], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "2", "<EOS>", 119, 245, "3", "<EOS>"], "score": -3.460379715243107, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 3, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(3)\n        player.hero.change_temp_attack(1)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.9791707992553711, -4.1961669921875e-05, -0.0053462982177734375, -3.814697265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.047255516052246094, 0.0, -5.53131103515625e-05, -9.5367431640625e-06, -0.04057145118713379, -1.9073486328125e-06, -0.04845094680786133, -8.821463779895566e-06, -0.021606922149658203, -0.1432018280029297, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.48122769594192505, -2.47955322265625e-05, -0.00506591796875, -0.0004825592041015625, -1.6183840036392212, -0.0002155303955078125], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "3", "<EOS>", 119, 245, "1", "<EOS>"], "score": -3.922958786764866, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 1, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.9791707992553711, -4.1961669921875e-05, -0.0053462982177734375, -3.814697265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.047255516052246094, 0.0, -5.53131103515625e-05, -9.5367431640625e-06, -0.04057145118713379, -1.9073486328125e-06, -0.04845094680786133, -8.821463779895566e-06, -0.021606922149658203, -0.1432018280029297, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.9692118167877197, -7.62939453125e-06, -0.0122222900390625, -0.000362396240234375, -1.3655674457550049, -3.0517578125e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "2", "<EOS>", 119, 245, "2", "<EOS>"], "score": -4.164960379877812, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(2)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -1.8815994262695312, -1.9073486328125e-06, -0.00011432162136770785, -3.933906555175781e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.4066696166992188e-05, -5.7220458984375e-06, -6.29425048828125e-05, -1.1444091796875e-05, -8.0108642578125e-05, -0.014612197875976562, -5.91278076171875e-05, -0.0002193450927734375, -1.1444091796875e-05, -0.00035858154296875, -7.2479248046875e-05, -1.4185851796355564e-05, -3.814697265625e-06, -8.797645568847656e-05, 0.0, -0.0011434555053710938, -5.7220458984375e-05, -7.62939453125e-06, -0.00011622230522334576, -4.100797377759591e-05, -1.3947435945738107e-05, -1.1444091796875e-05, -0.000606536865234375, -8.7738037109375e-05, -0.00015484045434277505, -1.9073486328125e-06, -0.0001354217529296875, 0.0, -0.0002765655517578125, 0.0, -0.000522613525390625, -1.1920928244535389e-07, -0.018108367919921875, -3.814697265625e-06, -0.0003757476806640625, 0.0, -5.91278076171875e-05, -2.288818359375e-05, -0.0013314485549926758, -9.739398956298828e-05, -0.0014801025390625, -1.1444091796875e-05, -2.47955322265625e-05, -0.0001850128173828125, -1.52587890625e-05, -0.00277554988861084, -1.9073486328125e-06, -0.0001125335693359375, -9.5367431640625e-06, -0.13546466827392578, -7.62939453125e-06, -1.9073486328125e-05, -0.000240325927734375, -0.00366055965423584, -0.004703521728515625, -0.00018322467803955078, -1.1801687833212782e-05, -0.46427178382873535, -0.0016866566147655249, -0.007758140563964844, -0.001323699951171875, -1.71661376953125e-05, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.4097766876220703, -0.0001125335693359375, -0.0015621185302734375, -2.288818359375e-05, -0.08264267444610596, -7.62939453125e-06, -7.62939453125e-06, -0.0002002716064453125, -4.76837158203125e-05, -1.2473645210266113, 0.0], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Heroic", " ", "Strike", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -4.286870540139709, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Heroic Strike"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_temp_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 2}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(3)\n        player.hero.change_temp_attack(2)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.9791707992553711, -4.1961669921875e-05, -0.0053462982177734375, -3.814697265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.047255516052246094, 0.0, -5.53131103515625e-05, -9.5367431640625e-06, -0.04057145118713379, -1.9073486328125e-06, -0.04845094680786133, -8.821463779895566e-06, -0.021606922149658203, -0.1432018280029297, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.48122769594192505, -2.47955322265625e-05, -0.00506591796875, -0.0004825592041015625, -2.1094348430633545, -3.4332275390625e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "3", "<EOS>", 119, 245, "2", "<EOS>"], "score": -4.413828428068882, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(1)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -0.3344430923461914, -3.4332275390625e-05, -8.96453857421875e-05, -3.4332275390625e-05, -3.24249267578125e-05, -5.340576171875e-05, -9.5367431640625e-06, -8.392333984375e-05, -4.57763671875e-05, -2.491474151611328e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007801055908203125, -5.14984130859375e-05, -0.0001430511474609375, -0.00012040138244628906, -0.9791707992553711, -4.1961669921875e-05, -0.0053462982177734375, -3.814697265625e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.047255516052246094, 0.0, -5.53131103515625e-05, -9.5367431640625e-06, -0.04057145118713379, -1.9073486328125e-06, -0.04845094680786133, -8.821463779895566e-06, -0.021606922149658203, -0.1432018280029297, -0.0001068115234375, -0.000614166259765625, -1.52587890625e-05, -0.9692118167877197, -7.62939453125e-06, -0.0122222900390625, -0.000362396240234375, -1.6729906797409058, -0.0001926422119140625], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "2", "<EOS>", 119, 245, "1", "<EOS>"], "score": -4.472545738497502, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 1, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -1.6996526718139648, -2.86102294921875e-05, -0.00017547607421875, -2.288818359375e-05, -2.09808349609375e-05, -1.71661376953125e-05, -3.814697265625e-06, -5.91278076171875e-05, -4.57763671875e-05, -1.9669532775878906e-05, -3.814697265625e-06, -0.000179290771484375, -1.1444091796875e-05, -7.62939453125e-06, -8.96453857421875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -3.814697265625e-06, -0.00058746337890625, -4.1961669921875e-05, -0.000213623046875, -8.606910705566406e-05, -0.017625808715820312, -7.82012939453125e-05, -0.000247955322265625, -1.9073486328125e-06, -0.0034772157669067383, -3.814697265625e-06, -0.0001773834228515625, 0.0, -0.0024871826171875, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.008677840232849121, -5.7220458984375e-06, -7.62939453125e-05, -9.5367431640625e-06, -4.00543212890625e-05, -0.000240325927734375, -0.0001964569091796875, -0.0008487701416015625, 0.0, -0.000579833984375, -3.4332275390625e-05, -0.004857063293457031, -4.1961669921875e-05, -0.04532432556152344, -1.52587890625e-05, -0.000812530517578125, -0.0040721893310546875, -0.000118255615234375, -3.3881850242614746, -1.33514404296875e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "change_temp_attack", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -5.374662394824554, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "change_temp_attack"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -0.00531768798828125, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, -1.1563301086425781e-05, 0.0, -1.33514404296875e-05, -0.00022125244140625, -1.633167266845703e-05, -7.436975002288818, -0.0018825531005859375, -3.814697265625e-05, -4.38690185546875e-05, -9.72747802734375e-05, -1.9073486328125e-05, 0.0, -4.38690185546875e-05, -1.52587890625e-05, -7.748603820800781e-06, -1.9073486328125e-06, -0.0001163482666015625, -1.33514404296875e-05, -5.7220458984375e-06, -0.0001125335693359375, -7.62939453125e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.000598907470703125, -5.7220458984375e-05, -0.00012981891632080078, -7.843971252441406e-05], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>"], "score": -7.63518535644107, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -9.5367431640625e-06, -2.47955322265625e-05, -1.9073486328125e-06, -7.438383181579411e-05, -1.3351374946068972e-05, -3.969590397900902e-05, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -2.9921531677246094e-05, -0.0002472400665283203, -4.4345855712890625e-05, -6.103515625e-05, -0.18541622161865234, -0.0003337860107421875, -3.755022044060752e-05, -2.8967857360839844e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.1590319849783555e-05, 0.0, -0.0027333498001098633, 0.0, -7.4128241539001465, -0.0037937164306640625, -0.021970748901367188, -3.24249267578125e-05, -0.0849609375, -0.00012969970703125, -0.001338958740234375, -9.5367431640625e-06, -0.0001087188720703125, -0.0004730224609375, 0.0, -0.1495562046766281, 0.0], "choice_history": [80, 159, 295, 88, 138, "Heroic", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -7.86439458579116, "model_output": {"_type": "Module", "body": [{"name": "HeroicStrike", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template17", "hole2": "WARRIOR"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 2}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -22.482341766357422], "choice_history": [80, 159, 294], "score": -22.482351303100586, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n"}
{"beams": [{"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -0.04099559783935547, -0.0001163482666015625, -0.0002346038818359375, -0.11478626728057861, -5.7220458984375e-06, -0.0005340576171875, -4.1961669921875e-05, -2.0265579223632812e-06, 0.0, -0.004494667053222656, -0.0001659393310546875, -0.12502062320709229, 0.0, -0.0014495849609375, -2.86102294921875e-05, -1.9431114196777344e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.406804737030086, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -2.7947635650634766, -9.5367431640625e-06, -1.6689286894688848e-06, -0.00010132655734196305, -0.00016032370331231505, -1.0371208190917969e-05, -0.014734983444213867, 0.0, -0.0004673004150390625, -1.9073486328125e-05, -1.0013580322265625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 109, 200, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -2.835150062741775, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"hole1": 8, "hole0": 8, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, windfury=True, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -0.04099559783935547, -0.0001163482666015625, -0.0002346038818359375, -2.611538887023926, 0.0, -0.0013217926025390625, -2.6702880859375e-05, -3.933906555175781e-06, 0.0, -0.0027980804443359375, -0.000362396240234375, -0.5121089220046997, 0.0, -0.002254486083984375, -1.9073486328125e-05, -1.9669532775878906e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "windfury", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.290709790168819, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "windfury", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True, charge=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -0.04099559783935547, -0.0001163482666015625, -0.0002346038818359375, -0.11478626728057861, -5.7220458984375e-06, -0.0005340576171875, -4.1961669921875e-05, -2.0265579223632812e-06, 0.0, -0.004494667053222656, -0.0001659393310546875, -3.71934175491333, -5.7220458984375e-06, -0.0012340545654296875, -5.14984130859375e-05, -1.7642974853515625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.000937160430965, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -0.04099559783935547, -0.0001163482666015625, -0.0002346038818359375, -3.8013553619384766, -1.9073486328125e-06, -0.0002422332763671875, -1.1444091796875e-05, -3.933906555175781e-06, 0.0, -0.003993988037109375, -0.0003185272216796875, -0.29908275604248047, 0.0, -0.0020818710327148438, -2.288818359375e-05, -1.9669532775878906e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.267390426574764, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Minion(8, 8, charge=True, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -4.049276351928711, -2.09808349609375e-05, -3.814697265625e-06, -0.0007343292236328125, -2.09808349609375e-05, -3.814697265625e-06, -3.814697265625e-06, -2.09808349609375e-05, -0.0011920928955078125, 0.0, -0.0004673004150390625, -0.000492095947265625, -0.00019073486328125, -0.0006198883056640625, -0.0001163482666015625, -4.76837158203125e-05, 0.0, -6.496906280517578e-05, -2.09808349609375e-05, -7.05718994140625e-05, 0.0, -1.9073486328125e-06, -0.00021860591368749738, -5.7816505432128906e-05, -7.62939453125e-06, -3.814697265625e-06, -2.8610720619326457e-06, -0.0004200935363769531, -0.035060882568359375, -0.0001201629638671875, -0.0002765655517578125, -0.11955845355987549, -5.7220458984375e-06, -0.000545501708984375, -4.38690185546875e-05, -2.0265579223632812e-06, 0.0, -0.0043239593505859375, -0.0001697540283203125, -0.12229585647583008, 0.0, -0.00145721435546875, -2.6702880859375e-05, -1.9431114196777344e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.426766087506564, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True, spell_targetable=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -0.04099559783935547, -0.0001163482666015625, -0.0002346038818359375, -0.11478626728057861, -5.7220458984375e-06, -0.0005340576171875, -4.1961669921875e-05, -2.0265579223632812e-06, 0.0, -0.004494667053222656, -0.0001659393310546875, -4.284066677093506, 0.0, -0.3055229187011719, -0.0001735687255859375, -0.0007040500640869141, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "spell_targetable", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.870753702102718, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "spell_targetable", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, windfury=True, taunt=True, taunt=True, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -4.015533447265625, -0.012318611145019531, -0.000774383544921875, -0.43852555751800537, 0.0, -0.0013027191162109375, -1.71661376953125e-05, -2.944469451904297e-05, 0.0, -0.0060214996337890625, -0.0001468658447265625, -0.09827232360839844, -1.9073486328125e-06, -0.020720481872558594, -2.288818359375e-05, -3.4809112548828125e-05, 0.0, -0.03344440460205078, -0.000141143798828125, -0.025733590126037598, -5.7220458984375e-06, -0.03250312805175781, -3.24249267578125e-05, -4.0411949157714844e-05, -1.9073486328125e-06, -0.04775047302246094, -0.000141143798828125, -0.018538713455200195, -7.62939453125e-06, -0.037139892578125, -3.24249267578125e-05, -4.4226646423339844e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 293, 79, 271, "windfury", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.908190545021114, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "windfury", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -4.223540306091309, -0.016817092895507812, -7.43865966796875e-05, -0.7945795059204102, 0.0, -0.0010194778442382812, -2.86102294921875e-05, -5.9604644775390625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.154974636016902, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(8, 8, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -5.3451080322265625, -3.814697265625e-06, -1.71661376953125e-05, -0.019071578979492188, -0.0030736923217773438, -0.00038426165701821446, -0.0006766464794054627, -0.00011991728388238698, -2.0265579223632812e-06, -0.03162121772766113, -3.933906555175781e-06, -0.005551338195800781, -0.00016021728515625, -2.5391578674316406e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.513361584857137, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": 8, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -4.223540306091309, -0.016817092895507812, -7.43865966796875e-05, -1.8333168029785156, 0.0, -0.009140968322753906, -0.00012969970703125, -6.079673767089844e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.201934632240352, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.COMMON,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -6.506021499633789, -1.9073486328125e-06, -0.006011009216308594, -4.00543212890625e-05, -1.3232143828645349e-05, -1.7404525351594202e-05, -0.0004974562907591462, -6.079673767089844e-06, -0.009192705154418945, 0.0, -0.0004863739013671875, -1.33514404296875e-05, -9.775161743164062e-06, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "COMMON", "<EOS>", 109, 200, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.544436166392131, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "COMMON"}, {"hole1": 8, "hole0": 8, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True, auras=[Aura(Taunt(),\n            MinionSelector(picker=BothPlayer()))])\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -0.012849807739257812, -8.392333984375e-05, -8.702239938429557e-06, -2.6822082872968167e-05, -2.121925172104966e-05, -9.5367431640625e-06, -0.002370354952290654, -1.537799835205078e-05, -0.00274658203125, 0.0, -0.06390762329101562, -1.9073486328125e-06, -0.018415451049804688, -2.1457672119140625e-06, -9.5367431640625e-06, -0.0002841949462890625, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.008167266845703125, 0.0, -0.00016021728515625, -0.0006866455078125, -0.00019073486328125, -0.0011358261108398438, -8.392333984375e-05, -4.9591064453125e-05, 0.0, -5.161762237548828e-05, -3.0517578125e-05, -9.34600830078125e-05, 0.0, -1.9073486328125e-06, -0.00018571079999674112, -6.747245788574219e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073877410846762e-06, -0.0004487037658691406, -0.04099559783935547, -0.0001163482666015625, -0.0002346038818359375, -0.11478626728057861, -5.7220458984375e-06, -0.0005340576171875, -4.1961669921875e-05, -2.0265579223632812e-06, 0.0, -0.004494667053222656, -0.0001659393310546875, -3.3743033409118652, -3.838539123535156e-05, -0.001861572265625, -7.05718994140625e-05, -0.0004825592041015625, -0.014375686645507812, -0.0001087188720703125, -1.52587890625e-05, -1.33514404296875e-05, -0.05012619495391846, -7.987022399902344e-06, -0.0022373199462890625, -0.0011577606201171875, -0.0004634857177734375, -0.5051087737083435, -0.00014996511163190007, -0.0492401123046875, -0.568634033203125, -1.9073486328125e-06, 0.0, -0.3543894290924072, -0.000732421875, 0.0, -0.004665374755859375, -0.000213623046875, -1.9073486328125e-06, -0.44884514808654785, 0.0, -0.0064640045166015625, -3.0517578125e-05, -0.9200043678283691, -4.923342203255743e-05, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "8", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Taunt", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Both", "Player", "<EOS>"], "score": -6.584083315122314, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template15", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole0": "Taunt", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, choices=1)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.003921439405530691, -8.082078420557082e-05, -0.0011824662797152996, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -3.576278118089249e-07, -0.001476287841796875, -4.480616569519043, -3.4332275390625e-05, -3.576278118089249e-07, -1.01327859738376e-05, -3.0159948437358253e-05, -5.7220458984375e-06, -0.0007626221631653607, -3.933906555175781e-06, -0.000720977783203125, 0.0, -0.08436393737792969, 0.0, -2.27569580078125, -0.0005855560302734375, -0.16804158687591553, 0.0, -0.0008153915405273438, -0.0040836334228515625, -0.00011598391574807465, -4.243850344209932e-05, -0.0008036240469664335, -1.1444091796875e-05, -0.00956118106842041, 0.0, -0.000225067138671875, -2.86102294921875e-05, -2.5272369384765625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Ironbark", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "DRUID", "<EOS>", "choices", "<EOS>", 21, 165, "1", "<EOS>", 109, 200, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.0333239086811545, "model_output": {"_type": "Module", "body": [{"name": "IronbarkProtector", "_type": "ClassDef", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "hole2": "DRUID", "_type": "Template11", "hole4": {"_type": "Num", "n": 1}, "hole3": "choices"}, {"hole1": 8, "hole0": 8, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -3.814697265625e-06, -22.976699829101562], "choice_history": [80, 159, 294], "score": -22.976703643798828, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}
{"beams": [{"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.8266592025756836, -0.0005245208740234375, -1.71661376953125e-05, -9.918212890625e-05, -0.00048828125, -7.62939453125e-06, -0.0011911392211914062, -1.33514404296875e-05, -6.103515625e-05, -9.5367431640625e-06, -0.6021050214767456, -4.52994936495088e-06, -1.33514404296875e-05, -0.08484935760498047, -1.33514404296875e-05, -0.000141143798828125, -1.0609614946588408e-05, -0.7551635503768921, -5.9604644775390625e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "Frozen", "<EOS>"], "score": -2.9960031790810504, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "Frozen", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.6005659103393555, -0.0001010894775390625, -2.872943878173828e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000102996826171875, -1.6689286894688848e-06, -1.0232391357421875, -1.9073486328125e-06, -3.814697265625e-06, -6.29425048828125e-05, -1.33514404296875e-05, -1.71661376953125e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -5.984305971651338e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -4.38690185546875e-05, -0.000156402587890625, -7.510183422709815e-06, -0.0011730194091796875, -0.000171661376953125, -0.007998466491699219, -0.016473770141601562, -0.2117457538843155, -0.0002269744873046875, -0.6104555130004883, -3.814697265625e-06, -0.0003223419189453125, -0.000118255615234375, -5.7220458984375e-06, -3.814697265625e-06, -0.010845184326171875, -1.9073486328125e-06, -0.00127410888671875, -3.814697265625e-06, -0.0005102157592773438, -1.33514404296875e-05, -0.0002803802490234375, -3.814697265625e-06, -0.04487812519073486, 0.0, -0.0005779266357421875, -2.6702880859375e-05, -1.9073486328125e-05, -0.048431653529405594, -7.62939453125e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score": -3.3047991415723814, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template63"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.8266592025756836, -0.0005245208740234375, -1.71661376953125e-05, -9.918212890625e-05, -0.00048828125, -7.62939453125e-06, -0.0011911392211914062, -1.33514404296875e-05, -6.103515625e-05, -9.5367431640625e-06, -1.378611445426941, 0.0, -9.5367431640625e-06, -0.02773571014404297, -1.9073486328125e-06, -0.5047511458396912, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -3.4648060484164276, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 2}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.8266592025756836, -0.0005245208740234375, -1.71661376953125e-05, -9.918212890625e-05, -0.00048828125, -7.62939453125e-06, -0.0011911392211914062, -1.33514404296875e-05, -6.103515625e-05, -9.5367431640625e-06, -1.378611445426941, 0.0, -9.5367431640625e-06, -0.02773571014404297, -1.9073486328125e-06, -0.9522146582603455, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -3.9122714681857147, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.8266592025756836, -0.0005245208740234375, -1.71661376953125e-05, -9.918212890625e-05, -0.00048828125, -7.62939453125e-06, -0.0011911392211914062, -1.33514404296875e-05, -6.103515625e-05, -9.5367431640625e-06, -0.6021050214767456, -4.52994936495088e-06, -1.33514404296875e-05, -0.08484935760498047, -1.33514404296875e-05, -0.000141143798828125, -1.0609614946588408e-05, -1.6120680570602417, -0.22396017611026764], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "<EOS>"], "score": -4.07686190141019, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "<UNK>", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -1.7420495748519897, -4.291534423828125e-06, -0.002838134765625, -7.62939453125e-05, -2.1219253540039062e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000118255615234375, -1.6689286894688848e-06, -1.158371925354004, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.52587890625e-05, -1.71661376953125e-05, -2.288818359375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -6.175041198730469e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -4.57763671875e-05, -0.0001544952392578125, -7.510183422709815e-06, -0.0011577606201171875, -0.000171661376953125, -0.008340835571289062, -0.016324996948242188, -0.2161649763584137, -0.000225067138671875, -0.6124916076660156, -3.814697265625e-06, -0.0003376007080078125, -0.0001201629638671875, -5.7220458984375e-06, -3.814697265625e-06, -0.010983467102050781, -1.9073486328125e-06, -0.0012683868408203125, -3.814697265625e-06, -0.0005130767822265625, -1.33514404296875e-05, -0.0002803802490234375, -3.814697265625e-06, -0.04501068592071533, 0.0, -0.0006103515625, -2.6702880859375e-05, -1.9073486328125e-05, -0.04866500943899155, -7.62939453125e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score": -4.352565547665087, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template63"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of Wild', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -1.9482841491699219, -0.009395599365234375, -0.00013314791431184858, -0.00032794091384857893, -0.009195923805236816, -3.0517578125e-05, -0.04422450065612793, -0.0001163482666015625, -0.1048130989074707, -7.62939453125e-06, -0.16257095336914062, -1.1920928244535389e-07, -0.23893356323242188, -1.9073486328125e-06, -0.00547027587890625, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.1444091796875e-05, -2.0265558760002023e-06, -0.22970867156982422, -1.1444091796875e-05, -7.62939453125e-06, -0.0001163482666015625, -1.9073486328125e-05, -1.71661376953125e-05, -3.24249267578125e-05, -0.0001621246337890625, -1.1444091796875e-05, -1.8835065930034034e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-05, -5.14984130859375e-05, -0.0001621246337890625, -7.510183422709815e-06, -1.201009750366211, -0.0006656646728515625, -0.0003604888916015625, -0.024076461791992188, -6.29425048828125e-05, -0.21632862091064453, -5.7220458984375e-06, -0.00321197509765625, 0.0, -0.0018148422241210938, -1.33514404296875e-05, -0.0050907135009765625, -1.52587890625e-05, -0.14346420764923096, -3.814697265625e-06, -0.015358924865722656, -0.000858306884765625, -4.6849247155478224e-05, -8.344646857949556e-07], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Mark", " ", "of", " ", "Wild", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.554883395005042, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Mark of Wild", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(__init__()))\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.6005659103393555, -0.0001010894775390625, -2.872943878173828e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000102996826171875, -1.6689286894688848e-06, -1.0232391357421875, -1.9073486328125e-06, -3.814697265625e-06, -6.29425048828125e-05, -1.33514404296875e-05, -1.71661376953125e-05, -2.09808349609375e-05, -3.62396240234375e-05, -5.7220458984375e-06, -5.984305971651338e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -4.38690185546875e-05, -0.000156402587890625, -7.510183422709815e-06, -0.0011730194091796875, -0.000171661376953125, -0.007998466491699219, -0.016473770141601562, -0.2117457538843155, -0.0002269744873046875, -0.7900600433349609, -0.02924823760986328, -1.1644549369812012, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "2", "<EOS>", 117, 226, "__init__", "<EOS>"], "score": -4.570794267789985, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template63"}, "_type": "Expr"}, {"hole0": "__init__", "_type": "Template50"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of Wild', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -1.9482841491699219, -0.009395599365234375, -0.00013314791431184858, -0.00032794091384857893, -0.009195923805236816, -3.0517578125e-05, -0.04422450065612793, -0.0001163482666015625, -0.1048130989074707, -7.62939453125e-06, -0.16257095336914062, -1.1920928244535389e-07, -1.559330940246582, -0.0010242462158203125, -1.71661376953125e-05, 0.0, -0.000110626220703125, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -0.00018310546875, 0.0, -0.3773614168167114, -3.814697265625e-06, -5.7220458984375e-06, -0.05868816375732422, -3.814697265625e-06, -0.6043168902397156, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Mark", " ", "of", " ", "Wild", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -5.068714950858059, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Mark of Wild", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of Wild', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -1.9482841491699219, -0.009395599365234375, -0.00013314791431184858, -0.00032794091384857893, -0.009195923805236816, -3.0517578125e-05, -0.04422450065612793, -0.0001163482666015625, -0.1048130989074707, -7.62939453125e-06, -0.16257095336914062, -1.1920928244535389e-07, -1.559330940246582, -0.0010242462158203125, -1.71661376953125e-05, 0.0, -0.000110626220703125, 0.0, -4.57763671875e-05, -1.33514404296875e-05, -0.00018310546875, 0.0, -0.3773614168167114, -3.814697265625e-06, -5.7220458984375e-06, -0.05868816375732422, -3.814697265625e-06, -0.8833227753639221, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Mark", " ", "of", " ", "Wild", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -5.347718928633633, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Mark of Wild", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 2}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        player.hand[-1].player = player\n        target.change_attack(4)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.6005659103393555, -0.0001010894775390625, -2.872943878173828e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000102996826171875, -1.6689286894688848e-06, -0.8436870574951172, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -0.0001621246337890625, -3.814697265625e-06, -4.553794860839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.103515625e-05, -0.000148773193359375, -7.390974587906385e-06, -0.03279876708984375, -2.6702880859375e-05, -0.18409156799316406, -0.0075092315673828125, -0.5895854830741882, -0.000995635986328125, -0.20827007293701172, -5.7220458984375e-06, -0.0004978179931640625, -6.866455078125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0036258697509765625, 0.0, -0.0001544952392578125, -7.62939453125e-06, -0.000125885009765625, -1.52587890625e-05, -0.00019073486328125, -5.7220458984375e-06, -0.05398964881896973, -1.9073486328125e-06, -0.0011577606201171875, -2.6702880859375e-05, -1.1444091796875e-05, -0.07035781443119049, -9.5367431640625e-06, -0.37552642822265625, -9.5367431640625e-06, -4.76837158203125e-05, -0.0066852569580078125, -0.00023651123046875, -1.0144824981689453, -0.007007598876953125, -0.0008411407470703125, 0.0, -0.0001373291015625, 0.0, -0.015355229377746582, 0.0, -0.21965748071670532, -1.71661376953125e-05, -0.0039215087890625, -0.0001201629638671875, -0.07053852081298828, -0.0012063980102539062, -0.00022350871586240828, -5.91278076171875e-05, -0.02641773223876953, 0.0, -0.028749465942382812, 0.0, -3.814697265625e-06, 0.0, -0.0009326934814453125, 0.0, -0.000576019287109375, -9.1552734375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.044338226318359375, -2.6702880859375e-05, -0.05472755432128906, 0.0, -0.4756135940551758, -1.1444091796875e-05, -1.52587890625e-05, -0.0004100799560546875, -2.47955322265625e-05, -0.16039223968982697, -3.0517578125e-05], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>", 85, 128, 282, 37, 129, 22, 171, 11, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", 83, 150, 34, 262, "1", "<EOS>", "player", "<EOS>", 19, 160, "player", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score": -5.831754197260558, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 4, "_type": "Template63"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Name", "id": "player"}, "targets": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "slice": {"value": {"hole0": 1, "_type": "Template79"}, "_type": "Index"}, "_type": "Subscript"}, "_type": "Attribute", "attr": "player"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        target.increase_health(4)\n        target.card = True\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.6005659103393555, -0.0001010894775390625, -2.872943878173828e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000102996826171875, -1.6689286894688848e-06, -0.8436870574951172, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -0.0001621246337890625, -3.814697265625e-06, -4.553794860839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.103515625e-05, -0.000148773193359375, -7.390974587906385e-06, -0.03279876708984375, -2.6702880859375e-05, -0.18409156799316406, -0.0075092315673828125, -0.5895854830741882, -0.000995635986328125, -0.20827007293701172, -5.7220458984375e-06, -0.0004978179931640625, -6.866455078125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0036258697509765625, 0.0, -0.0001544952392578125, -7.62939453125e-06, -0.000125885009765625, -1.52587890625e-05, -0.00019073486328125, -5.7220458984375e-06, -0.05398964881896973, -1.9073486328125e-06, -0.0011577606201171875, -2.6702880859375e-05, -1.1444091796875e-05, -0.07035781443119049, -9.5367431640625e-06, -1.221634864807129, -1.9073486328125e-06, -2.288818359375e-05, -0.026500701904296875, -1.71661376953125e-05, -0.0004901885986328125, -0.17211437225341797, -9.5367431640625e-06, -0.036946773529052734, 0.0, -0.09977483749389648, 0.0, -2.09808349609375e-05, -7.43865966796875e-05, -2.6702880859375e-05, -0.07279115915298462, -7.62939453125e-06, -0.10488224029541016, -9.5367431640625e-06, -4.57763671875e-05, -0.0058879852294921875, -0.0009613037109375, -0.3638734817504883, 0.0, -0.05955040454864502, 0.0, -0.7555828094482422, -2.288818359375e-05, -0.02105236053466797, -0.0002593994140625, -0.00011157982225995511, -2.1457672119140625e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "target", "<EOS>", "card", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.265970630712651, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 4, "_type": "Template63"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "card"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        player.hand[-1].player = player\n        target.die(Null)\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.6005659103393555, -0.0001010894775390625, -2.872943878173828e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000102996826171875, -1.6689286894688848e-06, -0.8436870574951172, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -0.0001621246337890625, -3.814697265625e-06, -4.553794860839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.103515625e-05, -0.000148773193359375, -7.390974587906385e-06, -0.03279876708984375, -2.6702880859375e-05, -0.18409156799316406, -0.0075092315673828125, -0.5895854830741882, -0.000995635986328125, -0.20827007293701172, -5.7220458984375e-06, -0.0004978179931640625, -6.866455078125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0036258697509765625, 0.0, -0.0001544952392578125, -7.62939453125e-06, -0.000125885009765625, -1.52587890625e-05, -0.00019073486328125, -5.7220458984375e-06, -0.05398964881896973, -1.9073486328125e-06, -0.0011577606201171875, -2.6702880859375e-05, -1.1444091796875e-05, -0.07035781443119049, -9.5367431640625e-06, -0.37552642822265625, -9.5367431640625e-06, -4.76837158203125e-05, -0.0066852569580078125, -0.00023651123046875, -1.0144824981689453, -0.007007598876953125, -0.0008411407470703125, 0.0, -0.0001373291015625, 0.0, -0.015355229377746582, 0.0, -0.21965748071670532, -1.71661376953125e-05, -0.0039215087890625, -0.0001201629638671875, -0.07053852081298828, -0.0012063980102539062, -0.00022350871586240828, -5.91278076171875e-05, -0.02641773223876953, 0.0, -0.028749465942382812, 0.0, -3.814697265625e-06, 0.0, -0.0009326934814453125, 0.0, -0.000576019287109375, -9.1552734375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.044338226318359375, -2.6702880859375e-05, -0.05472755432128906, 0.0, -1.1892194747924805, -1.52587890625e-05, -4.38690185546875e-05, -0.062241554260253906, -0.0003604888916015625, -0.0015697479248046875, -3.4332275390625e-05], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>", 85, 128, 282, 37, 129, 22, 171, 11, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", 83, 150, 34, 262, "1", "<EOS>", "player", "<EOS>", 19, 160, "player", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "die", "<EOS>", 282, 46, 162, "Null", "<EOS>"], "score": -6.448740993520438, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 4, "_type": "Template63"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Name", "id": "player"}, "targets": [{"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "slice": {"value": {"hole0": 1, "_type": "Template79"}, "_type": "Index"}, "_type": "Subscript"}, "_type": "Attribute", "attr": "player"}], "_type": "Assign"}, {"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        target.increase_health(4)\n        target.divine_shield = True\n", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -0.0001354217529296875, -0.0002307891845703125, -0.000244140625, -8.439661905867979e-05, -0.0006307363510131836, -0.14105910062789917, -0.00028990782448090613, -1.4662741705251392e-05, -0.0001392364501953125, -1.9073486328125e-06, -9.5367431640625e-06, -0.000499725341796875, -3.814697265625e-06, -2.861022494471399e-06, -0.000354766845703125, -0.04332542419433594, -3.4332275390625e-05, -4.4465043174568564e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -6.67572021484375e-05, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.0011129379272460938, -0.1680135726928711, -0.0011653900146484375, -0.000152587890625, 0.0, -0.0001239776611328125, -0.0006580352783203125, -1.1205658665858209e-05, 0.0, -4.38690185546875e-05, 0.0, -0.0002346038818359375, -2.6702880859375e-05, -1.52587890625e-05, -0.0025429551023989916, -4.017353057861328e-05, -0.0007841202314011753, -1.1444091796875e-05, -0.035290710628032684, -0.0003871917724609375, -0.01240679994225502, -0.001239776611328125, -5.53131103515625e-05, -1.71661376953125e-05, -0.03856940194964409, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.62396240234375e-05, -9.5367431640625e-06, -0.0003681182861328125, -1.1920928244535389e-07, -0.00171661376953125, 0.0, -2.288818359375e-05, 0.0, -1.1444091796875e-05, -0.0006008148193359375, -0.0001678466796875, -1.1920928244535389e-07, -0.021872520446777344, 0.0, -3.814697265625e-05, -0.0061397552490234375, -1.33514404296875e-05, -0.0029565095901489258, 0.0, -9.1552734375e-05, -3.814697265625e-06, -3.814697265625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-05, -0.001314401626586914, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.23882710933685303, -3.0994415283203125e-05, -0.6005659103393555, -0.0001010894775390625, -2.872943878173828e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.62939453125e-06, -0.000102996826171875, -1.6689286894688848e-06, -0.8436870574951172, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -0.0001621246337890625, -3.814697265625e-06, -4.553794860839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -6.103515625e-05, -0.000148773193359375, -7.390974587906385e-06, -0.03279876708984375, -2.6702880859375e-05, -0.18409156799316406, -0.0075092315673828125, -0.5895854830741882, -0.000995635986328125, -0.20827007293701172, -5.7220458984375e-06, -0.0004978179931640625, -6.866455078125e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.0036258697509765625, 0.0, -0.0001544952392578125, -7.62939453125e-06, -0.000125885009765625, -1.52587890625e-05, -0.00019073486328125, -5.7220458984375e-06, -0.05398964881896973, -1.9073486328125e-06, -0.0011577606201171875, -2.6702880859375e-05, -1.1444091796875e-05, -0.07035781443119049, -9.5367431640625e-06, -1.221634864807129, -1.9073486328125e-06, -2.288818359375e-05, -0.026500701904296875, -1.71661376953125e-05, -0.0004901885986328125, -0.17211437225341797, -9.5367431640625e-06, -0.036946773529052734, 0.0, -0.09977483749389648, 0.0, -2.09808349609375e-05, -7.43865966796875e-05, -2.6702880859375e-05, -0.07279115915298462, -7.62939453125e-06, -0.10488224029541016, -9.5367431640625e-06, -4.57763671875e-05, -0.0058879852294921875, -0.0009613037109375, -0.3638734817504883, 0.0, -0.05955040454864502, 0.0, -1.730456829071045, -2.09808349609375e-05, -0.004107475280761719, -0.0002613067626953125, -7.295603427337483e-05, -2.384185791015625e-06], "choice_history": [80, 159, 295, 88, 138, "Mark", "Of", "The", "Wild", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 29, 246, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "4", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "target", "<EOS>", "divine_shield", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.22386137971214, "model_output": {"_type": "Module", "body": [{"name": "MarkOfTheWild", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 4, "_type": "Template63"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "divine_shield"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-3.24249267578125e-05, -1.71661376953125e-05, -18.151443481445312], "choice_history": [80, 159, 294], "score": -18.151493072509766, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n"}
{"beams": [{"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.8487157821655273, -1.5651216506958008, -0.0018329620361328125, -0.00029869499849155545, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.110004425048828e-05, 0.0, -0.0001087188720703125, -2.09808349609375e-05, -1.1444091796875e-05, -0.00124359130859375, -0.00012969970703125, -0.0001850128173828125, -1.9073486328125e-06, -0.00017547607421875, -7.62939453125e-06, -3.099436753473128e-06, -2.384185791015625e-06, -1.561641511216294e-05, 0.0, -0.0001010894775390625, -0.0009860992431640625, -5.53131103515625e-05, -5.960462772236497e-07, -9.799003601074219e-05, -2.86102294921875e-05, -9.5367431640625e-06, -2.145764938177308e-06, -6.508827209472656e-05, -7.43865966796875e-05, 0.0, -1.71661376953125e-05, 0.0, -5.0187110900878906e-05, -3.6954811548639555e-06, -0.0006167888641357422, 0.0, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -9.822843276197091e-05, -8.344646857949556e-07, -0.03504180908203125, 0.0, -0.00038909912109375, -0.15468311309814453, -2.288818359375e-05, -0.0019530057907104492, -1.1920928244535389e-07, -0.00012969970703125, -2.86102294921875e-05, -5.7220458984375e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0006793737411499023, -7.62939453125e-06, -0.000186920166015625, 0.0, -0.004200458526611328, -3.814697265625e-06, -0.8685874938964844, -0.00217437744140625, -0.015207290649414062, 0.0, -0.0011427399003878236, -1.9073486328125e-06, -0.007675290107727051, -1.9073486328125e-06, -0.0004730224609375, -0.0005512237548828125, -3.0517578125e-05, -0.17332851886749268, -5.125993993715383e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Multi-Shot", "<EOS>", 47, 165, "4", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score": -3.6872065818881055, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Multi-Shot"}, {"_type": "Num", "n": 4}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 4}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.8487157821655273, -1.8435401916503906, -0.0024318695068359375, -5.602820692729438e-06, -1.3828277587890625e-05, -8.583032467868179e-06, 0.0, -0.001001596450805664, 0.0, -0.008729934692382812, 0.0, -0.000354766845703125, -2.47955322265625e-05, -0.0027599334716796875, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.0006188154220581055, -3.814697265625e-06, -0.000263214111328125, 0.0, -0.005437254905700684, -1.9073486328125e-06, -0.8055057525634766, -0.0031528472900390625, -0.014681816101074219, 0.0, -0.0029625880997627974, -3.814697265625e-06, -0.009393811225891113, -1.9073486328125e-06, -0.0004863739013671875, -0.000606536865234375, -3.0517578125e-05, -0.1770036220550537, -4.053113570989808e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score": -3.728365419900001, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "hole2": "HUNTER", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 4}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.8487157821655273, -2.6552491188049316, -0.006976127624511719, -2.3841830625315197e-06, -2.384185791015625e-06, -0.2868654727935791, 0.0, -0.014923572540283203, 0.0, -0.0031185150146484375, -1.1444091796875e-05, -0.0051727294921875, 0.0, -0.00019693374633789062, -1.9073486328125e-06, -0.0001430511474609375, 0.0, -0.37800872325897217, -6.103515625e-05, -0.014285087585449219, -0.00252532958984375, -0.001506805419921875, 0.0, -0.0034003257751464844, -7.62939453125e-06, -0.008563995361328125, -1.9073486328125e-06, -0.000762939453125, -0.0009174346923828125, -4.9591064453125e-05, -0.34754109382629395, -3.6954863844584906e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Multi-Shot", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "4", "<EOS>"], "score": -4.5795700548271725, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Multi-Shot", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 4}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -0.9171209335327148, -2.6702880859375e-05, -1.71661376953125e-05, -3.4332275390625e-05, -7.62939453125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00040435791015625, -8.392333984375e-05, -1.0013561222876888e-05, -5.7220458984375e-06, -0.001605987548828125, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.7220458984375e-06, -0.015506744384765625, -7.05718994140625e-05, -0.0011653900146484375, -7.62939453125e-06, -0.016158699989318848, -0.0001010894775390625, -0.0004215240478515625, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002957582473754883, -0.000102996826171875, -0.000278472900390625, -0.0001277923583984375, -7.62939453125e-06, -0.06330930441617966, -2.288818359375e-05, -2.161844253540039, -0.006775856018066406, -0.000771621591411531, -2.622604142743512e-06, -0.013170242309570312, -0.0001354217529296875, -1.1444091796875e-05, -0.000102996826171875, -5.7220458984375e-06, 0.0, -0.24633073806762695, 0.0, -0.03881359100341797, -0.0004863739013671875, -1.52587890625e-05, 0.0, -0.0022373199462890625, 0.0, -0.0002645254135131836, -1.9073486328125e-06, -0.00021004676818847656, -3.814697265625e-06, -5.53131103515625e-05, -0.0008335113525390625, 0.0, -0.000431060791015625, 0.0, -0.002193450927734375, 0.0, -0.001139521598815918, -2.3841855067985307e-07, -0.00015735626220703125, 0.0, -0.0018763691186904907, -2.09808349609375e-05, -1.52587890625e-05, -4.00543212890625e-05, -9.34600830078125e-05, -5.14984130859375e-05, -0.0015392303466796875, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.003928661346435547, 0.0, -0.3865232467651367, -5.91278076171875e-05, -1.71661376953125e-05, -0.0003757476806640625, 0.0, -0.028795242309570312, 0.0, -0.003894805908203125, 0.0, -0.004511594772338867, -3.576278118089249e-07, -0.005677700042724609, 0.0, -0.015060323290526867, -3.576278118089249e-07, -0.004261016845703125, -0.0001068115234375, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.030362486839294434, -2.2649765014648438e-06, -0.005887031555175781, -0.0005359649658203125, -9.1552734375e-05, 0.0, -0.001430511474609375, 0.0, -0.0005145072937011719, -7.152555099310121e-07, -0.0038909912109375, -3.814697265625e-06, -0.000202178955078125, -0.0001811981201171875, -1.9073486328125e-06, -0.007315635681152344, 0.0, -0.0001468658447265625, -6.103515625e-05, -0.004042625427246094, -7.62939453125e-06, -2.288818359375e-05, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.010412950068712234, -1.847726889536716e-05, -0.0011485815048217773, -3.814697265625e-06, -5.7220458984375e-06, -0.3214578628540039, -0.00092315673828125, -0.0004145645652897656, -3.6954863844584906e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.0008286237716674805, -3.814697265625e-05, -0.017060279846191406, -0.00174713134765625, -0.0043697357177734375, -8.96453857421875e-05, -0.000156402587890625, 0.0, -4.589557647705078e-05, 0.0, -0.0008702278137207031, 0.0, -0.0002079010009765625, -0.011683464050292969, -0.0021572113037109375, -1.9073486328125e-06, -5.7220458984375e-06, -0.15860505402088165, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 63, 253, "3", "<EOS>", 298, 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 113, 217, 30, 249, 19, 160, "game", "<EOS>", "other_player", "<EOS>", 279, 4, 282, 47, 165, "1", "<EOS>"], "score": -5.190499236650652, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"hole0": 3, "_type": "Template71"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"hole1": [{"_type": "GtE"}], "hole0": {"hole1": "other_player", "hole0": {"_type": "Name", "id": "game"}, "_type": "Template67"}, "_type": "Template4", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.3754196166992188, -0.0023975372314453125, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -6.4849853515625e-05, -2.86102294921875e-05, -6.4373016357421875e-06, -3.814697265625e-06, -0.00042724609375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.000606536865234375, -4.57763671875e-05, -0.00946807861328125, -1.33514404296875e-05, -4.76837158203125e-05, -0.03563189506530762, 0.0, -0.9192848205566406, -5.53131103515625e-05, -2.6702880859375e-05, 0.0, -0.0024318695068359375, 0.0, -0.00025284290313720703, -1.9073486328125e-06, -0.0002728700637817383, -3.814697265625e-06, -6.29425048828125e-05, -0.0006847381591796875, 0.0, -0.000507354736328125, 0.0, -0.0020961761474609375, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.001149594783782959, -3.4332275390625e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0005588531494140625, -0.00037384033203125, -0.001323699951171875, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.002240419387817383, 0.0, -0.08497810363769531, -8.58306884765625e-05, -1.52587890625e-05, -0.000179290771484375, 0.0, -0.021703720092773438, 0.0, -0.000865936279296875, 0.0, -0.0025544166564941406, -2.2649765014648438e-06, -0.040785789489746094, 0.0, -0.06719670444726944, -3.576278118089249e-07, -0.004901885986328125, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.09224796295166016, -2.1457672119140625e-06, -0.004093170166015625, -0.00049591064453125, -5.53131103515625e-05, 0.0, -0.0013637542724609375, 0.0, -0.0007681846618652344, -5.960462772236497e-07, -0.00352632999420166, -3.814697265625e-06, -0.0001773834228515625, -0.00017547607421875, -1.9073486328125e-06, -0.006916046142578125, 0.0, -1.6277799606323242, -0.031183242797851562, -0.010964393615722656, -0.0067234039306640625, -0.0006198883056640625, 0.0, -2.1219253540039062e-05, 0.0, -0.00040137767791748047, 0.0, -0.0003910064697265625, -0.028731346130371094, -0.00182342529296875, -2.6702880859375e-05, -3.814697265625e-06, -0.14134448766708374, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 113, 217, 30, 249, 19, 160, "game", "<EOS>", "other_player", "<EOS>", 279, 4, 282, 47, 165, "1", "<EOS>"], "score": -5.1937192430259245, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"hole1": [{"_type": "GtE"}], "hole0": {"hole1": "other_player", "hole0": {"_type": "Name", "id": "game"}, "_type": "Template67"}, "_type": "Template4", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            self.target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -0.9171209335327148, -2.6702880859375e-05, -1.71661376953125e-05, -3.4332275390625e-05, -7.62939453125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00040435791015625, -8.392333984375e-05, -1.0013561222876888e-05, -5.7220458984375e-06, -0.001605987548828125, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.7220458984375e-06, -0.015506744384765625, -7.05718994140625e-05, -0.0011653900146484375, -7.62939453125e-06, -0.016158699989318848, -0.0001010894775390625, -0.0004215240478515625, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002957582473754883, -0.000102996826171875, -0.000278472900390625, -0.0001277923583984375, -7.62939453125e-06, -0.06330930441617966, -2.288818359375e-05, -0.1420755386352539, -5.7220458984375e-06, -0.015982147306203842, -5.7220458984375e-06, -0.19571495056152344, -0.0008821487426757812, -3.814697265625e-06, -9.1552734375e-05, -1.71661376953125e-05, 0.0, -0.7027404308319092, -3.576278118089249e-07, -0.001392364501953125, -0.000732421875, -2.288818359375e-05, 0.0, -0.00098419189453125, 0.0, -0.0015109777450561523, -2.741813204920618e-06, -0.002274036407470703, -1.9073486328125e-06, -0.000148773193359375, -0.0002689361572265625, -1.9073486328125e-06, -0.009177207946777344, 0.0, -0.002925872802734375, -0.0001659393310546875, -0.0419769287109375, -0.0004100799560546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0001163482666015625, -1.1444091796875e-05, -0.038523994386196136, -8.702239938429557e-06, -0.0013843774795532227, -3.814697265625e-06, -5.7220458984375e-06, -0.24881553649902344, -0.0008029937744140625, -0.00044215237721800804, -5.364416665543104e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0005320310592651367, -3.24249267578125e-05, -0.9173412322998047, -1.9073486328125e-06, -0.2816295623779297, -0.0019426345825195312, -0.19069521129131317, -0.00023936321667861193, -0.09790515899658203, -0.032311439514160156, -0.14422321319580078, -0.0003261566162109375, -1.52587890625e-05, 0.0, -0.007123112678527832, 0.0, -0.0018608570098876953, 0.0, -0.0006122589111328125, -0.031584739685058594, -0.000881195068359375, -1.9073486328125e-06, -3.814697265625e-06, -0.41509953141212463, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 113, 217, 30, 249, 19, 160, "game", "<EOS>", "other_player", "<EOS>", 279, 4, 282, 47, 165, "1", "<EOS>"], "score": -5.204551358785636, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"hole1": [{"_type": "GtE"}], "hole0": {"hole1": "other_player", "hole0": {"_type": "Name", "id": "game"}, "_type": "Template67"}, "_type": "Template4", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.8487157821655273, -2.6552491188049316, -0.006976127624511719, -2.3841830625315197e-06, -2.384185791015625e-06, -0.2868654727935791, 0.0, -0.014923572540283203, 0.0, -0.0031185150146484375, -1.1444091796875e-05, -0.0051727294921875, 0.0, -0.00019693374633789062, -1.9073486328125e-06, -0.0001430511474609375, 0.0, -0.37800872325897217, -6.103515625e-05, -0.014285087585449219, -0.00252532958984375, -0.001506805419921875, 0.0, -0.0034003257751464844, -7.62939453125e-06, -0.008563995361328125, -1.9073486328125e-06, -0.000762939453125, -0.0009174346923828125, -4.9591064453125e-05, -1.2261838912963867, -3.814689989667386e-06], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Multi-Shot", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -5.4582129715008705, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Multi-Shot", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            self.target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 3\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -0.9171209335327148, -2.6702880859375e-05, -1.71661376953125e-05, -3.4332275390625e-05, -7.62939453125e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00040435791015625, -8.392333984375e-05, -1.0013561222876888e-05, -5.7220458984375e-06, -0.001605987548828125, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.7220458984375e-06, -0.015506744384765625, -7.05718994140625e-05, -0.0011653900146484375, -7.62939453125e-06, -0.016158699989318848, -0.0001010894775390625, -0.0004215240478515625, -3.4332275390625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002957582473754883, -0.000102996826171875, -0.000278472900390625, -0.0001277923583984375, -7.62939453125e-06, -0.06330930441617966, -2.288818359375e-05, -0.1420755386352539, -5.7220458984375e-06, -0.015982147306203842, -5.7220458984375e-06, -0.19571495056152344, -0.0008821487426757812, -3.814697265625e-06, -9.1552734375e-05, -1.71661376953125e-05, 0.0, -0.7027404308319092, -3.576278118089249e-07, -0.001392364501953125, -0.000732421875, -2.288818359375e-05, 0.0, -0.00098419189453125, 0.0, -0.0015109777450561523, -2.741813204920618e-06, -0.002274036407470703, -1.9073486328125e-06, -0.000148773193359375, -0.0002689361572265625, -1.9073486328125e-06, -0.009177207946777344, 0.0, -0.002925872802734375, -0.0001659393310546875, -0.0419769287109375, -0.0004100799560546875, -5.7220458984375e-05, -3.814697265625e-06, -0.0001163482666015625, -1.1444091796875e-05, -0.038523994386196136, -8.702239938429557e-06, -0.0013843774795532227, -3.814697265625e-06, -5.7220458984375e-06, -0.24881553649902344, -0.0008029937744140625, -0.00044215237721800804, -5.364416665543104e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.0005320310592651367, -3.24249267578125e-05, -0.9173412322998047, -1.9073486328125e-06, -0.2816295623779297, -0.0019426345825195312, -0.19069521129131317, -0.00023936321667861193, -0.09790515899658203, -0.032311439514160156, -0.14422321319580078, -0.0003261566162109375, -1.52587890625e-05, 0.0, -0.007123112678527832, 0.0, -0.0018608570098876953, 0.0, -0.0006122589111328125, -0.031584739685058594, -0.000881195068359375, -1.9073486328125e-06, -3.814697265625e-06, -1.0841094255447388, -1.71661376953125e-05], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 113, 217, 30, 249, 19, 160, "game", "<EOS>", "other_player", "<EOS>", 279, 4, 282, 47, 165, "3", "<EOS>"], "score": -5.87357460435868, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"hole1": [{"_type": "GtE"}], "hole0": {"hole1": "other_player", "hole0": {"_type": "Name", "id": "game"}, "_type": "Template67"}, "_type": "Template4", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.3754196166992188, -0.0023975372314453125, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -6.4849853515625e-05, -2.86102294921875e-05, -6.4373016357421875e-06, -3.814697265625e-06, -0.00042724609375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.000606536865234375, -4.57763671875e-05, -0.00946807861328125, -1.33514404296875e-05, -4.76837158203125e-05, -0.03563189506530762, 0.0, -0.9192848205566406, -5.53131103515625e-05, -2.6702880859375e-05, 0.0, -0.0024318695068359375, 0.0, -0.00025284290313720703, -1.9073486328125e-06, -0.0002728700637817383, -3.814697265625e-06, -6.29425048828125e-05, -0.0006847381591796875, 0.0, -0.000507354736328125, 0.0, -0.0020961761474609375, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.001149594783782959, -3.4332275390625e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0005588531494140625, -0.00037384033203125, -0.001323699951171875, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.002240419387817383, 0.0, -0.08497810363769531, -8.58306884765625e-05, -1.52587890625e-05, -0.000179290771484375, 0.0, -0.021703720092773438, 0.0, -0.000865936279296875, 0.0, -0.0025544166564941406, -2.2649765014648438e-06, -0.040785789489746094, 0.0, -0.06719670444726944, -3.576278118089249e-07, -0.004901885986328125, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.09224796295166016, -2.1457672119140625e-06, -0.004093170166015625, -0.00049591064453125, -5.53131103515625e-05, 0.0, -0.0013637542724609375, 0.0, -0.0007681846618652344, -5.960462772236497e-07, -0.00352632999420166, -3.814697265625e-06, -0.0001773834228515625, -0.00017547607421875, -1.9073486328125e-06, -0.006916046142578125, 0.0, -0.23415565490722656, -2.09808349609375e-05, -0.059328556060791016, 0.0, -5.340576171875e-05, -9.918212890625e-05, 0.0, -7.748603820800781e-06, 0.0, 0.0, -0.0035849809646606445, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.1723224057932384e-06, -1.2493047714233398, -0.0063934326171875, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.0001354217529296875, -3.62396240234375e-05, -8.940695806813892e-06, -5.7220458984375e-06, -0.000942230224609375, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0004177093505859375, -2.86102294921875e-05, -0.0087432861328125, -1.33514404296875e-05, -5.14984130859375e-05, -0.03737962245941162, 0.0, -1.005253791809082, -5.7220458984375e-05, -2.6702880859375e-05, 0.0, -0.0023746490478515625, 0.0, -0.00025856494903564453, -1.9073486328125e-06, -0.0002766847610473633, -3.814697265625e-06, -6.29425048828125e-05, -0.000682830810546875, 0.0, -0.0005054473876953125, 0.0, -0.0020923614501953125, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.0011540278792381287, -3.4332275390625e-05, -8.7738037109375e-05, -7.62939453125e-06, -0.0004730224609375, -0.000362396240234375, -0.001171112060546875, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.002237558364868164, 0.0, -0.08916473388671875, -8.392333984375e-05, -1.52587890625e-05, -0.0001811981201171875, 0.0, -0.0228424072265625, 0.0, -0.000896453857421875, 0.0, -0.002533435821533203, -2.2649765014648438e-06, -0.038763999938964844, 0.0, -0.06607816368341446, -3.576278118089249e-07, -0.0043792724609375, -6.29425048828125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.09076881408691406, -2.1457672119140625e-06, -0.004265785217285156, -0.0004901885986328125, -5.53131103515625e-05, 0.0, -0.0013561248779296875, 0.0, -0.0007625818252563477, -5.960462772236497e-07, -0.003571152687072754, -3.814697265625e-06, -0.000171661376953125, -0.0001735687255859375, -1.9073486328125e-06, -0.006778717041015625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>"], "score": -6.296500181170529, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.3754196166992188, -0.0023975372314453125, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -6.4849853515625e-05, -2.86102294921875e-05, -6.4373016357421875e-06, -3.814697265625e-06, -0.00042724609375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.000606536865234375, -4.57763671875e-05, -0.00946807861328125, -1.33514404296875e-05, -4.76837158203125e-05, -0.03563189506530762, 0.0, -0.9192848205566406, -5.53131103515625e-05, -2.6702880859375e-05, 0.0, -0.0024318695068359375, 0.0, -0.00025284290313720703, -1.9073486328125e-06, -0.0002728700637817383, -3.814697265625e-06, -6.29425048828125e-05, -0.0006847381591796875, 0.0, -0.000507354736328125, 0.0, -0.0020961761474609375, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.001149594783782959, -3.4332275390625e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0005588531494140625, -0.00037384033203125, -0.001323699951171875, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.002240419387817383, 0.0, -0.08497810363769531, -8.58306884765625e-05, -1.52587890625e-05, -0.000179290771484375, 0.0, -0.021703720092773438, 0.0, -0.000865936279296875, 0.0, -0.0025544166564941406, -2.2649765014648438e-06, -0.040785789489746094, 0.0, -0.06719670444726944, -3.576278118089249e-07, -0.004901885986328125, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.09224796295166016, -2.1457672119140625e-06, -0.004093170166015625, -0.00049591064453125, -5.53131103515625e-05, 0.0, -0.0013637542724609375, 0.0, -0.0007681846618652344, -5.960462772236497e-07, -0.00352632999420166, -3.814697265625e-06, -0.0001773834228515625, -0.00017547607421875, -1.9073486328125e-06, -0.006916046142578125, 0.0, -0.23415565490722656, -2.09808349609375e-05, -0.059328556060791016, 0.0, -5.340576171875e-05, -9.918212890625e-05, 0.0, -7.748603820800781e-06, 0.0, 0.0, -0.0035849809646606445, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.1723224057932384e-06, -1.4748382568359375, -3.24249267578125e-05, -1.33514404296875e-05, -3.4332275390625e-05, -7.62939453125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.0014820098876953125, -0.000244140625, -1.3709019185625948e-05, -7.748603820800781e-06, -0.004617929458618164, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0149078369140625, -8.20159912109375e-05, -0.0012006759643554688, -5.7220458984375e-06, -0.0119704008102417, -0.000110626220703125, -0.00045108795166015625, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002995729446411133, -0.000102996826171875, -0.000274658203125, -0.000125885009765625, -7.62939453125e-06, -0.0481099858880043, -2.6702880859375e-05, -0.15722370147705078, -5.7220458984375e-06, -0.01982797682285309, -5.7220458984375e-06, -0.1591787338256836, -0.0009288787841796875, -3.814697265625e-06, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -0.7095286846160889, -2.384185791015625e-06, -0.001277923583984375, -0.0006885528564453125, -2.09808349609375e-05, 0.0, -0.0010089874267578125, 0.0, -0.0014404058456420898, -2.741813204920618e-06, -0.0022416114807128906, -1.9073486328125e-06, -0.000148773193359375, -0.0002651214599609375, -1.9073486328125e-06, -0.009199142456054688, 0.0, -0.0027647018432617188, -0.0001544952392578125, -0.03973960876464844, -0.0004062652587890625, -5.7220458984375e-05, -3.814697265625e-06, -0.0001163482666015625, -1.1444091796875e-05, -0.03962221369147301, -8.940656698541716e-06, -0.0014177560806274414, -3.814697265625e-06, -5.7220458984375e-06, -0.24692058563232422, -0.00080108642578125, -0.0004396535223349929, -5.364416665543104e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000529170036315918, -3.24249267578125e-05, -0.9818830490112305, -1.9073486328125e-06, -0.2901191711425781, -0.001949310302734375, -0.17712537944316864, -0.00024162813497241586], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 89, 141, 25, 223, "3", "<EOS>"], "score": -8.04766760194613, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            if target.<UNK>:\n                break\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.3754196166992188, -0.0023975372314453125, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -6.4849853515625e-05, -2.86102294921875e-05, -6.4373016357421875e-06, -3.814697265625e-06, -0.00042724609375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.000606536865234375, -4.57763671875e-05, -0.00946807861328125, -1.33514404296875e-05, -4.76837158203125e-05, -0.03563189506530762, 0.0, -0.9192848205566406, -5.53131103515625e-05, -2.6702880859375e-05, 0.0, -0.0024318695068359375, 0.0, -0.00025284290313720703, -1.9073486328125e-06, -0.0002728700637817383, -3.814697265625e-06, -6.29425048828125e-05, -0.0006847381591796875, 0.0, -0.000507354736328125, 0.0, -0.0020961761474609375, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.001149594783782959, -3.4332275390625e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0005588531494140625, -0.00037384033203125, -0.001323699951171875, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.002240419387817383, 0.0, -0.08497810363769531, -8.58306884765625e-05, -1.52587890625e-05, -0.000179290771484375, 0.0, -0.021703720092773438, 0.0, -0.000865936279296875, 0.0, -0.0025544166564941406, -2.2649765014648438e-06, -0.040785789489746094, 0.0, -0.06719670444726944, -3.576278118089249e-07, -0.004901885986328125, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.09224796295166016, -2.1457672119140625e-06, -0.004093170166015625, -0.00049591064453125, -5.53131103515625e-05, 0.0, -0.0013637542724609375, 0.0, -0.0007681846618652344, -5.960462772236497e-07, -0.00352632999420166, -3.814697265625e-06, -0.0001773834228515625, -0.00017547607421875, -1.9073486328125e-06, -0.006916046142578125, 0.0, -0.23415565490722656, -2.09808349609375e-05, -0.059328556060791016, 0.0, -5.340576171875e-05, -9.918212890625e-05, 0.0, -7.748603820800781e-06, 0.0, 0.0, -0.0035849809646606445, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.1723224057932384e-06, -1.4748382568359375, -3.24249267578125e-05, -1.33514404296875e-05, -3.4332275390625e-05, -7.62939453125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.0014820098876953125, -0.000244140625, -1.3709019185625948e-05, -7.748603820800781e-06, -0.004617929458618164, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0149078369140625, -8.20159912109375e-05, -0.0012006759643554688, -5.7220458984375e-06, -0.0119704008102417, -0.000110626220703125, -0.00045108795166015625, -3.0517578125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002995729446411133, -0.000102996826171875, -0.000274658203125, -0.000125885009765625, -7.62939453125e-06, -0.0481099858880043, -2.6702880859375e-05, -0.15722370147705078, -5.7220458984375e-06, -0.01982797682285309, -5.7220458984375e-06, -0.1591787338256836, -0.0009288787841796875, -3.814697265625e-06, -9.5367431640625e-05, -2.09808349609375e-05, 0.0, -0.7095286846160889, -2.384185791015625e-06, -0.001277923583984375, -0.0006885528564453125, -2.09808349609375e-05, 0.0, -0.0010089874267578125, 0.0, -0.0014404058456420898, -2.741813204920618e-06, -0.0022416114807128906, -1.9073486328125e-06, -0.000148773193359375, -0.0002651214599609375, -1.9073486328125e-06, -0.009199142456054688, 0.0, -0.0027647018432617188, -0.0001544952392578125, -0.03973960876464844, -0.0004062652587890625, -5.7220458984375e-05, -3.814697265625e-06, -0.0001163482666015625, -1.1444091796875e-05, -0.03962221369147301, -8.940656698541716e-06, -0.0014177560806274414, -3.814697265625e-06, -5.7220458984375e-06, -0.24692058563232422, -0.00080108642578125, -0.0004396535223349929, -5.364416665543104e-06, -4.00543212890625e-05, -1.9073486328125e-06, -0.000529170036315918, -3.24249267578125e-05, -0.528162956237793, -0.006988525390625, -0.1882772445678711, -7.62939453125e-06, -0.36329078674316406, 0.0, -0.23779773712158203, 0.0, -0.025466322898864746, 0.0, -0.00077056884765625, -0.8380756378173828], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 11, 129, 19, 160, "target", "<EOS>", "<UNK>", "<EOS>", 295, 87], "score": -8.785184565582284, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"_type": "Break"}], "_type": "If", "test": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "<UNK>"}}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions) - len(player.minions)\n        for i in range(0, 4):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            if target.<UNK>:\n                break\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.3754196166992188, -0.0023975372314453125, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -6.4849853515625e-05, -2.86102294921875e-05, -6.4373016357421875e-06, -3.814697265625e-06, -0.00042724609375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.000606536865234375, -4.57763671875e-05, -0.00946807861328125, -1.33514404296875e-05, -4.76837158203125e-05, -0.03563189506530762, 0.0, -0.9192848205566406, -5.53131103515625e-05, -2.6702880859375e-05, 0.0, -0.0024318695068359375, 0.0, -0.00025284290313720703, -1.9073486328125e-06, -0.0002728700637817383, -3.814697265625e-06, -6.29425048828125e-05, -0.0006847381591796875, 0.0, -0.000507354736328125, 0.0, -0.0020961761474609375, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.001149594783782959, -3.4332275390625e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0005588531494140625, -0.00037384033203125, -0.001323699951171875, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.002240419387817383, 0.0, -0.08497810363769531, -8.58306884765625e-05, -1.52587890625e-05, -0.000179290771484375, 0.0, -0.021703720092773438, 0.0, -0.000865936279296875, 0.0, -0.0025544166564941406, -2.2649765014648438e-06, -0.040785789489746094, 0.0, -0.06719670444726944, -3.576278118089249e-07, -0.004901885986328125, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.09224796295166016, -2.1457672119140625e-06, -0.004093170166015625, -0.00049591064453125, -5.53131103515625e-05, 0.0, -0.0013637542724609375, 0.0, -0.0007681846618652344, -5.960462772236497e-07, -0.00352632999420166, -3.814697265625e-06, -0.0001773834228515625, -0.00017547607421875, -1.9073486328125e-06, -0.006916046142578125, 0.0, -0.23415565490722656, -2.09808349609375e-05, -0.059328556060791016, 0.0, -5.340576171875e-05, -9.918212890625e-05, 0.0, -7.748603820800781e-06, 0.0, 0.0, -0.0035849809646606445, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.1723224057932384e-06, -0.7684259414672852, -2.47955322265625e-05, -4.57763671875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.000171661376953125, -5.91278076171875e-05, -1.8358230590820312e-05, -3.814697265625e-06, -0.00029754638671875, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -0.0010309219360351562, -5.7220458984375e-06, -0.0054473876953125, -7.62939453125e-06, -2.47955322265625e-05, -0.14925265312194824, 0.0, -0.2568855285644531, -0.018729209899902344, -0.9582405090332031, -0.00022125244140625, -0.6692800521850586, 0.0, -0.0020771026611328125, 0.0, -0.004094123840332031, -3.814697265625e-06, -0.0005781650543212891, 0.0, -5.53131103515625e-05, -0.001575469970703125, 0.0, -0.0002880096435546875, 0.0, -0.00092315673828125, 0.0, -0.0006749629974365234, -1.1920928244535389e-07, -0.00017130374908447266, 0.0, -0.0014436431229114532, -1.71661376953125e-05, -0.09922313690185547, -0.6761808395385742, -0.015651702880859375, -0.0001506805419921875, 0.0, -0.07018506526947021, 0.0, -0.0001087188720703125, -0.0033721923828125, 0.0, -0.002613067626953125, -5.7220458984375e-06, -0.00030994415283203125, 0.0, -0.00732922600582242, 0.0, -0.027927398681640625, -0.0001068115234375, -0.0001163482666015625, -2.47955322265625e-05, -0.031061530113220215, -0.0001239776611328125, -0.000598907470703125, -0.00034332275390625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0004069805145263672, -0.0003662109375, -0.000347137451171875, -0.000164031982421875, -3.814697265625e-06, -0.01130795106291771, -3.4332275390625e-05, -0.4814777374267578, -9.5367431640625e-06, -0.15463972091674805, -1.71661376953125e-05, -0.08684825897216797, -0.0001678466796875, -5.7220458984375e-06, -0.0001926422119140625, -1.33514404296875e-05, 0.0, -1.1226303577423096, -4.768370445162873e-07, -0.000637054443359375, -0.000820159912109375, -2.6702880859375e-05, 0.0, -0.0006961822509765625, 0.0, -0.0009636878967285156, -2.861022494471399e-06, -0.0020699501037597656, -1.9073486328125e-06, -0.0001373291015625, -0.000240325927734375, -1.9073486328125e-06, -0.008787155151367188, 0.0, -0.0017375946044921875, -0.0001354217529296875, -0.021417617797851562, -0.00032806396484375, -5.340576171875e-05, -3.814697265625e-06, -0.0001201629638671875, -1.1444091796875e-05, -0.0449507012963295, -1.0132738680113107e-05, -0.0015944242477416992, -3.814697265625e-06, -5.7220458984375e-06, -0.23490333557128906, -0.000789642333984375, -0.00044525484554469585, -5.364416665543104e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0005415678024291992, -3.24249267578125e-05, -0.42498779296875, -0.008943557739257812, -0.1832742691040039, -5.7220458984375e-06, -0.2872638702392578, 0.0, -0.2136749029159546, 0.0, -0.02539849281311035, 0.0, -0.0007476806640625, -0.839024543762207], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 12, 131, 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 82, 14, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 11, 129, 19, 160, "target", "<EOS>", "<UNK>", "<EOS>", 295, 87], "score": -11.580196893346361, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "right": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"_type": "Break"}], "_type": "If", "test": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "<UNK>"}}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        target = game.random_choice(targets)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions) - len(player.minions)\n        for i in range(0, 4):\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            if target.<UNK>:\n                break\n        for i in range(0, 4):\n            <UNK> = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n            if target.<UNK>:\n                break\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.597391747054644e-05, -2.3245762349688448e-05, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.0003973245620727539, -7.748603820800781e-06, -9.655952453613281e-06, -0.562713623046875, -0.08732032775878906, -0.00017547607421875, -3.6954811548639555e-06, -0.00011288894165772945, -7.3909477578126825e-06, 0.0, -0.0001933574676513672, -1.9073486328125e-06, -0.002105712890625, -1.33514404296875e-05, -8.785724639892578e-05, -1.9073486328125e-06, -2.09808349609375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.3754196166992188, -0.0023975372314453125, -9.5367431640625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.000133514404296875, -1.9073486328125e-06, -6.4849853515625e-05, -2.86102294921875e-05, -6.4373016357421875e-06, -3.814697265625e-06, -0.00042724609375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.000606536865234375, -4.57763671875e-05, -0.00946807861328125, -1.33514404296875e-05, -4.76837158203125e-05, -0.03563189506530762, 0.0, -0.9192848205566406, -5.53131103515625e-05, -2.6702880859375e-05, 0.0, -0.0024318695068359375, 0.0, -0.00025284290313720703, -1.9073486328125e-06, -0.0002728700637817383, -3.814697265625e-06, -6.29425048828125e-05, -0.0006847381591796875, 0.0, -0.000507354736328125, 0.0, -0.0020961761474609375, 0.0, -0.0009679794311523438, -2.3841855067985307e-07, -0.0001583099365234375, 0.0, -0.001149594783782959, -3.4332275390625e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0005588531494140625, -0.00037384033203125, -0.001323699951171875, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.002240419387817383, 0.0, -0.08497810363769531, -8.58306884765625e-05, -1.52587890625e-05, -0.000179290771484375, 0.0, -0.021703720092773438, 0.0, -0.000865936279296875, 0.0, -0.0025544166564941406, -2.2649765014648438e-06, -0.040785789489746094, 0.0, -0.06719670444726944, -3.576278118089249e-07, -0.004901885986328125, -6.4849853515625e-05, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.09224796295166016, -2.1457672119140625e-06, -0.004093170166015625, -0.00049591064453125, -5.53131103515625e-05, 0.0, -0.0013637542724609375, 0.0, -0.0007681846618652344, -5.960462772236497e-07, -0.00352632999420166, -3.814697265625e-06, -0.0001773834228515625, -0.00017547607421875, -1.9073486328125e-06, -0.006916046142578125, 0.0, -0.23415565490722656, -2.09808349609375e-05, -0.059328556060791016, 0.0, -5.340576171875e-05, -9.918212890625e-05, 0.0, -7.748603820800781e-06, 0.0, 0.0, -0.0035849809646606445, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.1723224057932384e-06, -1.2493047714233398, -0.0063934326171875, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.0001354217529296875, -3.62396240234375e-05, -8.940695806813892e-06, -5.7220458984375e-06, -0.000942230224609375, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -2.288818359375e-05, -3.814697265625e-06, -3.0517578125e-05, -5.7220458984375e-06, -0.0004177093505859375, -2.86102294921875e-05, -0.0087432861328125, -1.33514404296875e-05, -5.14984130859375e-05, -0.03737962245941162, 0.0, -0.5326709747314453, -0.01670551300048828, -0.32780933380126953, -0.000179290771484375, -0.3093538284301758, 0.0, -0.001911163330078125, 0.0, -0.003123760223388672, -3.814697265625e-06, -0.0005285739898681641, 0.0, -5.91278076171875e-05, -0.0015544891357421875, 0.0, -0.00023651123046875, 0.0, -0.001087188720703125, 0.0, -0.0007129907608032227, -1.1920928244535389e-07, -0.00016951560974121094, 0.0, -0.0010983273386955261, -1.9073486328125e-05, -0.10410499572753906, -0.7056598663330078, -0.019453048706054688, -0.0001678466796875, 0.0, -0.06816995143890381, 0.0, -0.0001087188720703125, -0.0033702850341796875, 0.0, -0.0028057098388671875, -5.7220458984375e-06, -0.00030803680419921875, 0.0, -0.007251143921166658, 0.0, -0.6229162216186523, -8.58306884765625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.02602231502532959, -2.86102294921875e-05, -0.0001068115234375, -0.0005130767822265625, -1.9073486328125e-06, -3.814697265625e-06, -0.0004630088806152344, -0.0003185272216796875, -0.0003604888916015625, -0.0001468658447265625, -5.7220458984375e-06, -0.011497254483401775, -3.0517578125e-05, -0.18889904022216797, -1.52587890625e-05, -0.18914353847503662, -1.52587890625e-05, -0.07241153717041016, -0.0001697540283203125, -5.7220458984375e-06, -0.000179290771484375, -1.33514404296875e-05, 0.0, -1.0371038913726807, -4.768370445162873e-07, -0.0006160736083984375, -0.0008144378662109375, -2.86102294921875e-05, 0.0, -0.000720977783203125, 0.0, -0.0009503364562988281, -2.861022494471399e-06, -0.002140522003173828, -1.9073486328125e-06, -0.0001354217529296875, -0.000240325927734375, -1.9073486328125e-06, -0.0087738037109375, 0.0, -0.0015430450439453125, -0.0001316070556640625, -0.02017498016357422, -0.0002765655517578125, -5.53131103515625e-05, -3.814697265625e-06, -0.000118255615234375, -1.1444091796875e-05, -0.04608088359236717, -1.0371154530730564e-05, -0.0016573667526245117, -3.814697265625e-06, -5.7220458984375e-06, -0.23373126983642578, -0.000789642333984375, -0.00044215715024620295, -5.364416665543104e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000536799430847168, -3.24249267578125e-05, -0.4237861633300781, -0.008358001708984375, -0.17663002014160156, -7.62939453125e-06, -0.2909660339355469, 0.0, -0.21023261547088623, 0.0, -0.025570154190063477, 0.0, -0.0007419586181640625, -0.8416414260864258, -0.5350656509399414, -0.0001239776611328125, -9.5367431640625e-06, 0.0, -0.17530831694602966, -4.57763671875e-05, -0.0029802322387695312, -0.0005340576171875, -1.9073486328125e-06, -3.814697265625e-06, -0.00040090084075927734, -0.00017547607421875, -0.0002269744873046875, -0.0001392364501953125, -7.62939453125e-06, -0.009667148813605309, -2.47955322265625e-05, -0.33615684509277344, -7.62939453125e-06, -0.09881626069545746, -9.5367431640625e-06, -0.08798789978027344, -0.000156402587890625, -5.7220458984375e-06, -0.0002536773681640625, -1.9073486328125e-05, 0.0, -0.7721489071846008, -1.2159336620243266e-05, -0.07495689392089844, -0.3312339782714844, -4.57763671875e-05, 0.0, -0.018663406372070312, -1.9073486328125e-06, -0.11611795425415039, -4.0531158447265625e-06, -0.003141164779663086, -1.9073486328125e-06, -0.0001125335693359375, -0.00113677978515625, -7.62939453125e-06, -0.03921222686767578, 0.0, -0.0004940032958984375, -4.57763671875e-05, -0.007779121398925781, -0.0003147125244140625, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001125335693359375, -7.62939453125e-06, -0.047697216272354126, -7.510157047363464e-06, -0.001379251480102539, -3.814697265625e-06, -5.7220458984375e-06, -0.26868438720703125, -0.0007381439208984375, -0.0004518436035141349, -5.364416665543104e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.0010603666305541992, -1.33514404296875e-05, -0.11809158325195312, -0.006781578063964844, -0.2061939239501953, -7.62939453125e-06, -0.1973705291748047, 0.0, -0.3490983247756958, 0.0, -0.029802680015563965, 0.0, -0.0008144378662109375, -0.8768777847290039], "choice_history": [80, 159, 295, 88, 138, "Multi-Shot", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 297, 101, 184, "Multi-Shot", "<EOS>", "4", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 12, 131, 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 82, 14, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 11, 129, 19, 160, "target", "<EOS>", "<UNK>", "<EOS>", 295, 87, 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "4", "<EOS>", 297, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 14, 136, 11, 129, 19, 160, "game", "<EOS>", "random_choice", "<EOS>", 282, 45, 160, "targets", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 11, 129, 19, 160, "target", "<EOS>", "<UNK>", "<EOS>", 295, 87], "score": -16.220702395535533, "model_output": {"_type": "Module", "body": [{"name": "Multi-Shot", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template15", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "right": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"_type": "Break"}], "_type": "If", "test": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "<UNK>"}}]}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"args": [{"_type": "Name", "id": "targets"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"_type": "Break"}], "_type": "If", "test": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "<UNK>"}}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -21.691335678100586], "choice_history": [80, 159, 294], "score": -21.69135284423828, "model_output": {"_type": "Module", "body": []}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -1.1444091796875e-05, -14.928558349609375, -6.73535680770874, -0.20024628937244415], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -21.86419005692005, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}], "gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}
{"beams": [{"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -0.07706642150878906, -7.62939453125e-06, -1.5139577953959815e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.002536773681640625, -2.6702880859375e-05, -5.7220458984375e-06, -0.000308990478515625, -0.0001392364501953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.3470619705913123e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-05, -1.9073486328125e-05, -0.0007967642741277814, -0.00021946430206298828, -0.2640105187892914, -0.521784782409668, -0.0016963790403679013, -0.000171661376953125, -3.62396240234375e-05, -3.814697265625e-06, -0.0010600900277495384, -9.5367431640625e-06, -0.0001316070556640625, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0009593963623046875, -1.1444091796875e-05, -0.000667572021484375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000156402587890625, -0.0013866424560546875, -0.00011265277862548828, -0.001262664794921875, -1.9073486328125e-06, -9.34600830078125e-05, -0.0035114288330078125, -1.52587890625e-05, -0.0010606050491333008, -1.9073486328125e-06, -0.000217437744140625, -3.0517578125e-05, -0.0001659393310546875, -2.86102294921875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.00015866756439208984, -3.814697265625e-06, -0.000225067138671875, -1.1920928244535389e-07, -0.006734609603881836, -7.092952728271484e-05, -0.002048492431640625, -1.1444091796875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -4.9591064453125e-05, -1.1920922133867862e-06, -0.021039962768554688, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -6.449222564697266e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002919435501098633, -0.0003261566162109375, -1.9073486328125e-06, -0.18112468719482422, -0.0001277923583984375, -0.8549672961235046, -5.7220458984375e-06, -0.0034837722778320312, -3.814697265625e-06, -0.0001678466796875, -0.014467239379882812, -3.0517578125e-05, 0.0, -0.0041961669921875, 0.0, -7.82012939453125e-05, 0.0, -0.00833737850189209, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", " ", "Shield", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -2.3986834922941256, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -0.07706642150878906, -7.62939453125e-06, -1.5139577953959815e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.002536773681640625, -2.6702880859375e-05, -5.7220458984375e-06, -0.000308990478515625, -0.0001392364501953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.3470619705913123e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-05, -1.9073486328125e-05, -0.0007967642741277814, -0.00021946430206298828, -0.2640105187892914, -0.521784782409668, -0.0016963790403679013, -0.000171661376953125, -3.62396240234375e-05, -3.814697265625e-06, -0.0010600900277495384, -9.5367431640625e-06, -0.0001316070556640625, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0009593963623046875, -1.1444091796875e-05, -0.000667572021484375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000156402587890625, -0.0013866424560546875, -0.00011265277862548828, -0.001262664794921875, -1.9073486328125e-06, -9.34600830078125e-05, -0.0035114288330078125, -1.52587890625e-05, -0.0010606050491333008, -1.9073486328125e-06, -0.000217437744140625, -3.0517578125e-05, -0.0001659393310546875, -2.86102294921875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.00015866756439208984, -3.814697265625e-06, -0.000225067138671875, -1.1920928244535389e-07, -0.006734609603881836, -7.092952728271484e-05, -0.002048492431640625, -1.1444091796875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -4.9591064453125e-05, -1.1920922133867862e-06, -0.021039962768554688, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -6.449222564697266e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002919435501098633, -0.0003261566162109375, -1.9073486328125e-06, -0.18112468719482422, -0.0001277923583984375, -1.0576961040496826, -0.03554847463965416, -0.000209808349609375, -3.814697265625e-06, -4.9591064453125e-05, -0.006999969482421875, -2.6702880859375e-05, 0.0, -0.00678253173828125, 0.0, -6.103515625e-05, 0.0, -0.0055893659591674805, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", " ", "Shield", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "Draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -2.6259129347415495, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -0.07706642150878906, -7.62939453125e-06, -1.5139577953959815e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.002536773681640625, -2.6702880859375e-05, -5.7220458984375e-06, -0.000308990478515625, -0.0001392364501953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.3470619705913123e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-05, -1.9073486328125e-05, -0.0007967642741277814, -0.00021946430206298828, -0.2640105187892914, -0.9125757217407227, -1.71661376953125e-05, -1.9073486328125e-05, -5.6981094530783594e-05, -1.52587890625e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -2.3841855067985307e-07, -0.00069427490234375, -1.33514404296875e-05, -0.0006694793701171875, -3.814697265625e-06, -7.62939453125e-06, -0.0001659393310546875, -0.0004863739013671875, -8.594989776611328e-05, -0.0010528564453125, -1.9073486328125e-06, -6.866455078125e-05, -0.004233360290527344, -1.1444091796875e-05, -0.0007668733596801758, -1.9073486328125e-06, -0.000152587890625, -2.6702880859375e-05, -0.000217437744140625, -3.24249267578125e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.00015103816986083984, -3.814697265625e-06, -0.000240325927734375, -1.1920928244535389e-07, -0.006143450736999512, -6.902217864990234e-05, -0.0019512176513671875, -1.33514404296875e-05, -4.38690185546875e-05, -1.1444091796875e-05, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000133514404296875, -4.9591064453125e-05, -1.1920922133867862e-06, -0.02119731903076172, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.24249267578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -2.288818359375e-05, -6.628036499023438e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002919435501098633, -0.0003223419189453125, -1.9073486328125e-06, -0.18006324768066406, -0.0001277923583984375, -0.8554663062095642, -5.7220458984375e-06, -0.0035429000854492188, -3.814697265625e-06, -0.0001678466796875, -0.014523506164550781, -3.0517578125e-05, 0.0, -0.004192352294921875, 0.0, -7.82012939453125e-05, 0.0, -0.008349776268005371, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -2.7845932944435035, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -0.07706642150878906, -7.62939453125e-06, -1.5139577953959815e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.002536773681640625, -2.6702880859375e-05, -5.7220458984375e-06, -0.000308990478515625, -0.0001392364501953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.3470619705913123e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-05, -1.9073486328125e-05, -0.0007967642741277814, -0.00021946430206298828, -0.2640105187892914, -0.9125757217407227, -1.71661376953125e-05, -1.9073486328125e-05, -5.6981094530783594e-05, -1.52587890625e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -2.3841855067985307e-07, -0.00069427490234375, -1.33514404296875e-05, -0.0006694793701171875, -3.814697265625e-06, -7.62939453125e-06, -0.0001659393310546875, -0.0004863739013671875, -8.594989776611328e-05, -0.0010528564453125, -1.9073486328125e-06, -6.866455078125e-05, -0.004233360290527344, -1.1444091796875e-05, -0.0007668733596801758, -1.9073486328125e-06, -0.000152587890625, -2.6702880859375e-05, -0.000217437744140625, -3.24249267578125e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.00015103816986083984, -3.814697265625e-06, -0.000240325927734375, -1.1920928244535389e-07, -0.006143450736999512, -6.902217864990234e-05, -0.0019512176513671875, -1.33514404296875e-05, -4.38690185546875e-05, -1.1444091796875e-05, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000133514404296875, -4.9591064453125e-05, -1.1920922133867862e-06, -0.02119731903076172, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.24249267578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -2.288818359375e-05, -6.628036499023438e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002919435501098633, -0.0003223419189453125, -1.9073486328125e-06, -0.18006324768066406, -0.0001277923583984375, -1.0572891235351562, -0.035475991666316986, -0.0002117156982421875, -3.814697265625e-06, -4.9591064453125e-05, -0.0070743560791015625, -2.6702880859375e-05, 0.0, -0.0067729949951171875, 0.0, -6.103515625e-05, 0.0, -0.005597949028015137, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "Draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.0107956259268676, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class PowerShieldShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -1.1027764081954956, -0.000839095504488796, -0.00044026714749634266, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.001661539077758789, -9.775161743164062e-06, -5.125998541188892e-06, -2.86102294921875e-05, -0.022642135620117188, -9.5367431640625e-06, -1.8477434423402883e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.002033233642578125, -2.47955322265625e-05, -5.7220458984375e-06, -0.00034332275390625, -0.0001506805419921875, -1.52587890625e-05, 0.0, -0.0001010894775390625, -3.814697265625e-06, -1.5854802768444642e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000247955322265625, -1.9073486328125e-05, -1.9073486328125e-05, -0.0008027246803976595, -0.00022137165069580078, -0.2627834975719452, -0.5148715972900391, -0.001690893666818738, -0.000171661376953125, -3.62396240234375e-05, -3.814697265625e-06, -0.001068022334948182, -9.5367431640625e-06, -0.00012969970703125, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0009593963623046875, -1.1444091796875e-05, -0.00067138671875, -1.9073486328125e-06, -5.7220458984375e-06, -0.000156402587890625, -0.0013904571533203125, -0.00011265277862548828, -0.0012607574462890625, -1.9073486328125e-06, -9.1552734375e-05, -0.0034942626953125, -1.33514404296875e-05, -0.001057744026184082, -1.9073486328125e-06, -0.000217437744140625, -3.0517578125e-05, -0.0001659393310546875, -2.86102294921875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.00015866756439208984, -3.814697265625e-06, -0.000225067138671875, -1.1920928244535389e-07, -0.0067212581634521484, -7.092952728271484e-05, -0.001922607421875, -1.33514404296875e-05, -4.1961669921875e-05, -1.1444091796875e-05, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00012969970703125, -4.9591064453125e-05, -1.1920922133867862e-06, -0.0210113525390625, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -6.449222564697266e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002919435501098633, -0.0003261566162109375, -1.9073486328125e-06, -0.1806507110595703, -0.0001277923583984375, -0.8547188639640808, -5.7220458984375e-06, -0.0034723281860351562, -3.814697265625e-06, -0.0001678466796875, -0.014481544494628906, -3.0517578125e-05, 0.0, -0.0041980743408203125, 0.0, -7.82012939453125e-05, 0.0, -0.008334517478942871, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", "Shield", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", " ", "Shield", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.021676814318411, "model_output": {"_type": "Module", "body": [{"name": "PowerShieldShield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -0.07706642150878906, -7.62939453125e-06, -1.5139577953959815e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.002536773681640625, -2.6702880859375e-05, -5.7220458984375e-06, -0.000308990478515625, -0.0001392364501953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.3470619705913123e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-05, -1.9073486328125e-05, -0.0007967642741277814, -0.00021946430206298828, -0.2640105187892914, -0.521784782409668, -0.0016963790403679013, -0.000171661376953125, -3.62396240234375e-05, -3.814697265625e-06, -0.0010600900277495384, -9.5367431640625e-06, -0.0001316070556640625, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0009593963623046875, -1.1444091796875e-05, -0.000667572021484375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000156402587890625, -0.0013866424560546875, -0.00011265277862548828, -0.001262664794921875, -1.9073486328125e-06, -9.34600830078125e-05, -0.0035114288330078125, -1.52587890625e-05, -0.0010606050491333008, -1.9073486328125e-06, -0.000217437744140625, -3.0517578125e-05, -0.0001659393310546875, -2.86102294921875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.00015866756439208984, -3.814697265625e-06, -0.000225067138671875, -1.1920928244535389e-07, -0.006734609603881836, -7.092952728271484e-05, -0.002048492431640625, -1.1444091796875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -4.9591064453125e-05, -1.1920922133867862e-06, -0.021039962768554688, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -6.449222564697266e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002919435501098633, -0.0003261566162109375, -1.9073486328125e-06, -0.18112468719482422, -0.0001277923583984375, -1.6496683359146118, -0.027544043958187103, -0.000316619873046875, -3.814697265625e-06, -4.9591064453125e-05, -0.008119583129882812, -3.4332275390625e-05, 0.0, -0.0029659271240234375, 0.0, -7.05718994140625e-05, 0.0, -0.009259343147277832, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", " ", "Shield", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "Power", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.210977699807458, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class PowerShieldShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -1.1027764081954956, -0.000839095504488796, -0.00044026714749634266, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.001661539077758789, -9.775161743164062e-06, -5.125998541188892e-06, -2.86102294921875e-05, -0.022642135620117188, -9.5367431640625e-06, -1.8477434423402883e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.002033233642578125, -2.47955322265625e-05, -5.7220458984375e-06, -0.00034332275390625, -0.0001506805419921875, -1.52587890625e-05, 0.0, -0.0001010894775390625, -3.814697265625e-06, -1.5854802768444642e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000247955322265625, -1.9073486328125e-05, -1.9073486328125e-05, -0.0008027246803976595, -0.00022137165069580078, -0.2627834975719452, -0.5148715972900391, -0.001690893666818738, -0.000171661376953125, -3.62396240234375e-05, -3.814697265625e-06, -0.001068022334948182, -9.5367431640625e-06, -0.00012969970703125, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0009593963623046875, -1.1444091796875e-05, -0.00067138671875, -1.9073486328125e-06, -5.7220458984375e-06, -0.000156402587890625, -0.0013904571533203125, -0.00011265277862548828, -0.0012607574462890625, -1.9073486328125e-06, -9.1552734375e-05, -0.0034942626953125, -1.33514404296875e-05, -0.001057744026184082, -1.9073486328125e-06, -0.000217437744140625, -3.0517578125e-05, -0.0001659393310546875, -2.86102294921875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.00015866756439208984, -3.814697265625e-06, -0.000225067138671875, -1.1920928244535389e-07, -0.0067212581634521484, -7.092952728271484e-05, -0.001922607421875, -1.33514404296875e-05, -4.1961669921875e-05, -1.1444091796875e-05, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00012969970703125, -4.9591064453125e-05, -1.1920922133867862e-06, -0.0210113525390625, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -6.449222564697266e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002919435501098633, -0.0003261566162109375, -1.9073486328125e-06, -0.1806507110595703, -0.0001277923583984375, -1.057903528213501, -0.03560033068060875, -0.000209808349609375, -3.814697265625e-06, -4.9591064453125e-05, -0.007002830505371094, -2.6702880859375e-05, 0.0, -0.0067844390869140625, 0.0, -6.103515625e-05, 0.0, -0.005590319633483887, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", "Shield", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", " ", "Shield", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "Draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.2494177838272975, "model_output": {"_type": "Module", "body": [{"name": "PowerShieldShield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class PowerShieldShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -1.1027764081954956, -0.000839095504488796, -0.00044026714749634266, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.001661539077758789, -9.775161743164062e-06, -5.125998541188892e-06, -2.86102294921875e-05, -0.022642135620117188, -9.5367431640625e-06, -1.8477434423402883e-05, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -0.002033233642578125, -2.47955322265625e-05, -5.7220458984375e-06, -0.00034332275390625, -0.0001506805419921875, -1.52587890625e-05, 0.0, -0.0001010894775390625, -3.814697265625e-06, -1.5854802768444642e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.000247955322265625, -1.9073486328125e-05, -1.9073486328125e-05, -0.0008027246803976595, -0.00022137165069580078, -0.2627834975719452, -0.9229087829589844, -1.71661376953125e-05, -1.9073486328125e-05, -5.698108725482598e-05, -1.52587890625e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -4.9591064453125e-05, -2.3841855067985307e-07, -0.00069427490234375, -1.33514404296875e-05, -0.0006694793701171875, -3.814697265625e-06, -7.62939453125e-06, -0.0001659393310546875, -0.0004863739013671875, -8.594989776611328e-05, -0.0010509490966796875, -1.9073486328125e-06, -6.67572021484375e-05, -0.004207611083984375, -1.1444091796875e-05, -0.0007668733596801758, -1.9073486328125e-06, -0.000152587890625, -2.6702880859375e-05, -0.000217437744140625, -3.24249267578125e-05, -2.09808349609375e-05, -3.0517578125e-05, -0.00015103816986083984, -3.814697265625e-06, -0.000240325927734375, -1.1920928244535389e-07, -0.0061386823654174805, -6.902217864990234e-05, -0.001842498779296875, -1.52587890625e-05, -4.38690185546875e-05, -1.1444091796875e-05, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.000133514404296875, -5.14984130859375e-05, -1.1920922133867862e-06, -0.021170616149902344, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.24249267578125e-05, -4.1961669921875e-05, -3.814697265625e-06, -1.71661376953125e-05, -2.288818359375e-05, -6.61611557006836e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004119873046875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002938508987426758, -0.0003223419189453125, -1.9073486328125e-06, -0.1796112060546875, -0.0001277923583984375, -0.8552737236022949, -5.7220458984375e-06, -0.0035314559936523438, -3.814697265625e-06, -0.0001678466796875, -0.014536857604980469, -3.0517578125e-05, 0.0, -0.004192352294921875, 0.0, -7.82012939453125e-05, 0.0, -0.008345961570739746, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", "Shield", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.424930015226174, "model_output": {"_type": "Module", "body": [{"name": "PowerShieldShield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Shield Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -3.9522228240966797, -5.340576171875e-05, -0.0043852319940924644, -0.00018906593322753906, -0.0798788070678711, -0.02646923065185547, -0.00018310545419808477, -0.00011444091796875, -1.657003303989768e-05, 0.0, -0.001598358154296875, -2.09808349609375e-05, -0.0036306381225585938, -3.62396240234375e-05, -0.0004235506057739258, -1.33514404296875e-05, -1.9073486328125e-06, -0.000110626220703125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -0.0001010894775390625, -0.00013363361358642578, -4.768370445162873e-07, -0.005591392517089844, -0.0001659393310546875, -2.47955322265625e-05, -3.814697265625e-06, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -4.1961669921875e-05, -5.221366882324219e-05, -9.5367431640625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0004215240478515625, -3.814697265625e-06, -1.1444091796875e-05, -0.0002976655960083008, -0.0006961822509765625, -1.9073486328125e-06, -0.15099430084228516, -0.0001201629638671875, -0.7400369048118591, -3.814697265625e-06, -0.0035305023193359375, -3.814697265625e-06, -0.0002079010009765625, -0.014173507690429688, -4.1961669921875e-05, 0.0, -0.0036487579345703125, 0.0, -8.20159912109375e-05, 0.0, -0.008566021919250488, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Power", " ", "Shield", " ", "Shield", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.417917739526615, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Power Shield Shield", "_type": "Template16", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Shield Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -3.946519374847412, -0.001323699951171875, -0.0023589131888002157, -0.0001430511474609375, -0.01705169677734375, -0.026483535766601562, -0.00016832351684570312, -5.340576171875e-05, -5.602820237982087e-06, 0.0, -0.0006144046783447266, 0.0, -0.010242462158203125, -3.814697265625e-06, -4.38690185546875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -7.2479248046875e-05, -0.0001068115234375, -5.960462772236497e-07, -0.017717361450195312, -1.33514404296875e-05, -1.52587890625e-05, -5.7220458984375e-06, -3.24249267578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -5.793571472167969e-05, -9.5367431640625e-06, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0003814697265625, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002995729446411133, -0.000431060791015625, -1.9073486328125e-06, -0.19202327728271484, -0.0001201629638671875, -0.7960760593414307, -5.7220458984375e-06, -0.003429412841796875, -3.814697265625e-06, -0.0001678466796875, -0.014569282531738281, -3.814697265625e-05, 0.0, -0.003955841064453125, 0.0, -8.0108642578125e-05, 0.0, -0.00856328010559082, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Power", " ", "Shield", " ", "Shield", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.462855887349463, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Power Shield Shield", "_type": "Template17", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_armor(1)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -0.07706642150878906, -7.62939453125e-06, -1.5139577953959815e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.002536773681640625, -2.6702880859375e-05, -5.7220458984375e-06, -0.000308990478515625, -0.0001392364501953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.3470619705913123e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-05, -1.9073486328125e-05, -0.0007967642741277814, -0.00021946430206298828, -0.2640105187892914, -0.521784782409668, -0.0016963790403679013, -0.000171661376953125, -3.62396240234375e-05, -3.814697265625e-06, -0.0010600900277495384, -9.5367431640625e-06, -0.0001316070556640625, 0.0, -1.52587890625e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0009593963623046875, -1.1444091796875e-05, -0.000667572021484375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000156402587890625, -0.0013866424560546875, -0.00011265277862548828, -0.001262664794921875, -1.9073486328125e-06, -9.34600830078125e-05, -0.0035114288330078125, -1.52587890625e-05, -0.0010606050491333008, -1.9073486328125e-06, -0.000217437744140625, -3.0517578125e-05, -0.0001659393310546875, -2.86102294921875e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.00015866756439208984, -3.814697265625e-06, -0.000225067138671875, -1.1920928244535389e-07, -0.006734609603881836, -7.092952728271484e-05, -0.002048492431640625, -1.1444091796875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -4.57763671875e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -4.9591064453125e-05, -1.1920922133867862e-06, -0.021039962768554688, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -4.00543212890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -1.71661376953125e-05, -6.449222564697266e-05, -1.71661376953125e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002919435501098633, -0.0003261566162109375, -1.9073486328125e-06, -2.0287532806396484, -0.03919792175292969, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.00025177001953125, 0.0, -0.5341024398803711, -0.0001659393310546875, -0.07626724243164062, -1.9073486328125e-06, -0.8451719284057617, -1.9073486328125e-06, -4.38690185546875e-05, -0.0018358230590820312, -7.62939453125e-06, -0.8045790791511536, -1.33514404296875e-05, -0.07161712646484375, -9.5367431640625e-06, -2.47955322265625e-05, -0.000659942626953125, -6.866455078125e-05, -1.9073486328125e-06, -0.000102996826171875, 0.0, -0.00010776519775390625, 0.0, -0.0018860101699829102, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Power", " ", "Word", " ", "Shield", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.736613575568967, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Power Word Shield"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Shield Shield', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -4.394748687744141, -0.009835243225097656, -7.236000965349376e-05, -0.00011706352233886719, -0.46096527576446533, -0.01995086669921875, -0.000164627970661968, -0.014765739440917969, -0.512376070022583, -3.814697265625e-06, -0.000141143798828125, -5.7220458984375e-06, -0.0040225982666015625, -0.0063076019287109375, -0.3681907653808594, -5.7220458984375e-06, -0.000186920166015625, 0.0, -0.31270575523376465, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Power", " ", "Shield", " ", "Shield", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -6.5240138293297605, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Power Shield Shield", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Shield Shield', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -4.394748687744141, -0.009835243225097656, -7.236000965349376e-05, -0.00011706352233886719, -0.46096527576446533, -0.01995086669921875, -0.000164627970661968, -0.014765739440917969, -0.9887382984161377, -4.76837158203125e-05, -0.02956104278564453, -1.9073486328125e-06, -0.010234832763671875, -0.010530471801757812, -0.04384040832519531, 0.0, -5.7220458984375e-06, 0.0, -0.06982421875, 0.0, -0.043070197105407715, -1.7881377516459906e-06, -0.4127000570297241, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Power", " ", "Shield", " ", "Shield", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "draw", "<EOS>"], "score": -6.928624343968977, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"hole1": "PALADIN", "hole0": "Power Shield Shield", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Power:Shield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power : Shield', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -1.33514404296875e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.00047299492871388793, -0.4094456732273102, -0.007495492231100798, -0.00021849112818017602, -0.000110626220703125, -1.9073486328125e-06, -3.814697265625e-06, -0.0016118288040161133, -1.3589859008789062e-05, -4.768371127283899e-06, -2.47955322265625e-05, -4.394748687744141, -0.009835243225097656, -7.236000965349376e-05, -0.00011706352233886719, -1.0220195055007935, -0.0006256103515625, -0.0001506805419921875, -0.01882457733154297, -0.5094336271286011, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.005115509033203125, -0.0068836212158203125, -0.27530384063720703, -5.7220458984375e-06, -0.0001773834228515625, 0.0, -0.31416332721710205, 0.0], "choice_history": [80, 159, 295, 88, 138, "Power", ":", "Shield", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Power", " ", ":", " ", "Shield", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -6.977023792423552, "model_output": {"_type": "Module", "body": [{"name": "Power:Shield", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Power : Shield", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -22.167163848876953], "choice_history": [80, 159, 294], "score": -22.16717529296875, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n"}
{"beams": [{"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -0.152837872505188, 0.0, -0.000202178955078125, -2.6702880859375e-05, -5.7220458984375e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.5174245430218889, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -1.3590497970581055, -9.5367431640625e-06, -1.8358230590820312e-05, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -0.3619232177734375, -0.0006389617919921875, -3.0517112463712692e-05, -2.968310218420811e-05, -5.9604562920867465e-06, -1.9073486328125e-06, -2.1576648578047752e-05, 0.0, -0.005164146423339844, 0.0, -0.0010137557983398438, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.13583850860595703, -2.2649765014648438e-06, -0.9018259048461914, -7.82012939453125e-05, -3.4450917155481875e-05, -2.384185791015625e-06, -7.200110121630132e-05, 0.0, -0.026285171508789062, 0.0, -0.0001850128173828125, -1.52587890625e-05, -5.7220458984375e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -2.8115095872444726, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -1.3590497970581055, -9.5367431640625e-06, -1.8358230590820312e-05, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -0.3619232177734375, -0.0006389617919921875, -3.0517112463712692e-05, -2.968310218420811e-05, -5.9604562920867465e-06, -1.9073486328125e-06, -2.1576648578047752e-05, 0.0, -0.005164146423339844, 0.0, -0.0010137557983398438, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.13583850860595703, -2.2649765014648438e-06, -0.5222959518432617, -0.0002613067626953125, -0.00013720989227294922, -2.2649765014648438e-06, -5.7220458984375e-06, -0.0001506805419921875, -1.1444091796875e-05, -2.288818359375e-05, 0.0, -4.38690185546875e-05, -0.5427627563476562, -3.814697265625e-06, -1.71661376953125e-05, -0.013232231140136719, -0.0051746368408203125, -9.095220593735576e-05, -2.3841855067985307e-07, -6.365677108988166e-05, 0.0, -0.021623611450195312, -1.1920928244535389e-07, -0.0026254653930664062, -0.00016021728515625, -3.24249267578125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -2.991724107919218, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 5, "hole0": 3, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, stealth=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -3.41782283782959, -9.5367431640625e-06, -0.0011663436889648438, -5.340576171875e-05, -7.62939453125e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "stealth", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.7834118200528337, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "stealth", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, charge=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -3.635119915008545, -3.814697265625e-06, -0.0004901885986328125, -4.9591064453125e-05, -5.7220458984375e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.00002129804966, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, windfury=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -3.7341489791870117, -1.9073468138230965e-06, -0.001438140869140625, -1.71661376953125e-05, -9.5367431640625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.0999677969186905, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 5, charge=True, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -1.3590497970581055, -9.5367431640625e-06, -1.8358230590820312e-05, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -0.3619232177734375, -0.0006389617919921875, -3.0517112463712692e-05, -2.968310218420811e-05, -5.9604562920867465e-06, -1.9073486328125e-06, -2.1576648578047752e-05, 0.0, -0.005164146423339844, 0.0, -0.0010137557983398438, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.13583850860595703, -2.2649765014648438e-06, -0.5222959518432617, -0.0002613067626953125, -0.00013720989227294922, -2.2649765014648438e-06, -5.7220458984375e-06, -0.0001506805419921875, -1.1444091796875e-05, -2.288818359375e-05, 0.0, -4.38690185546875e-05, -0.9706363677978516, 0.0, -0.001495361328125, -0.0009555816650390625, -0.0009403228759765625, -0.0007381439208984375, -0.001659393310546875, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -6.67572021484375e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.182812361046672e-05, -2.0265579223632812e-06, 0.0, -3.24249267578125e-05, -9.417526598554105e-06, -6.079673767089844e-06, -0.21931076049804688, -0.0001354217529296875, -8.7738037109375e-05, -0.2928438186645508, -9.5367431640625e-06, -0.00030517578125, -0.0004749298095703125, -1.52587890625e-05, 0.0, -0.008137702941894531, -3.62396240234375e-05, -0.40316081047058105, 0.0, -7.2479248046875e-05, -1.1444091796875e-05, -1.52587890625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "5", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.307327368852384, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, spell_damage=1)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -3.9739880561828613, -6.496906280517578e-05, -0.038514137268066406, -2.86102294921875e-05, -0.002041218103840947, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -4.378992872179197, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>Shieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -3.9976658821105957, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -0.152837872505188, 0.0, -0.000202178955078125, -2.6702880859375e-05, -5.7220458984375e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.496560892655225, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Shieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, Change=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -4.652946949005127, -6.103515625e-05, -0.0010042190551757812, -1.52587890625e-05, -1.33514404296875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "Change", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.01839288008091, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "Change", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, True)\n\n    def create_minion(self, p):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -1.3590497970581055, -9.5367431640625e-06, -1.8358230590820312e-05, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -2.8343114852905273, -9.5367431640625e-05, -3.24249267578125e-05, -0.13596534729003906, -4.9591064453125e-05, 0.0, -2.288818359375e-05, 0.0, -8.34461570775602e-06, 0.0, -7.62939453125e-06, 0.0, -0.06015777587890625, -2.09808349609375e-05, -2.288818359375e-05, -2.90866428258596e-05, -0.00012195110321044922, -0.00011681850446620956, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.136498682782985e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -1.311301275563892e-06, -0.0001811981201171875, 0.0, -6.866455078125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.0001087188720703125, -1.1920928244535389e-07, -0.48558902740478516, -3.814697265625e-06, -3.62396240234375e-05, -7.62939453125e-06, -0.00019073486328125, 0.0, -0.06217765808105469, -0.0019779205322265625, -6.4849853515625e-05, -5.841255187988281e-06, -9.72747802734375e-05, -5.7220458984375e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.0001010894775390625, -0.05044841766357422, -5.7220458984375e-06, -2.6702880859375e-05, -0.011841773986816406, -0.0040302276611328125, -0.00016055064043030143, -1.1920928244535389e-07, -0.0001281446311622858, 0.0, -0.001156926155090332, -1.9073486328125e-06, -0.0006198883056640625, -0.0001468658447265625, -5.53131103515625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Sen'jin", " ", "Shieldmasta", "<EOS>", 47, 165, "4", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 46, 161, "False", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.028655591525407, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"_type": "Num", "n": 4}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 5, "hole0": 3, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 5, charge=True, charge=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -1.3590497970581055, -9.5367431640625e-06, -1.8358230590820312e-05, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -0.3619232177734375, -0.0006389617919921875, -3.0517112463712692e-05, -2.968310218420811e-05, -5.9604562920867465e-06, -1.9073486328125e-06, -2.1576648578047752e-05, 0.0, -0.005164146423339844, 0.0, -0.0010137557983398438, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.13583850860595703, -2.2649765014648438e-06, -0.5222959518432617, -0.0002613067626953125, -0.00013720989227294922, -2.2649765014648438e-06, -5.7220458984375e-06, -0.0001506805419921875, -1.1444091796875e-05, -2.288818359375e-05, 0.0, -4.38690185546875e-05, -0.9706363677978516, 0.0, -0.001495361328125, -0.0009555816650390625, -0.0009403228759765625, -0.0007381439208984375, -0.001659393310546875, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -6.67572021484375e-05, -7.82012939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.182812361046672e-05, -2.0265579223632812e-06, 0.0, -3.24249267578125e-05, -9.417526598554105e-06, -6.079673767089844e-06, -0.21931076049804688, -0.0001354217529296875, -8.7738037109375e-05, -0.2928438186645508, -9.5367431640625e-06, -0.00030517578125, -0.0004749298095703125, -1.52587890625e-05, 0.0, -0.008137702941894531, -3.62396240234375e-05, -1.4976623058319092, -4.0531158447265625e-06, -0.0006103515625, -1.71661376953125e-05, -3.635883331298828e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "5", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.402397611734159, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 5}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, health=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -0.34045982360839844, -0.000732421875, -0.0002037079248111695, -1.442432312614983e-05, -2.503394853192731e-06, -1.9073486328125e-06, -1.1920922133867862e-06, 0.0, -0.0017510652542114258, 0.0, -0.0021991729736328125, -1.52587890625e-05, -1.8596470908960328e-05, -3.099440846199286e-06, -2.5391480448888615e-05, 0.0, -5.057757377624512, -2.562999725341797e-05, -0.0977792739868164, -1.1444091796875e-05, -1.52587890625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 103, 186, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "3", "<EOS>", "5", "<EOS>", "health", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.519941051124306, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template17", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template23", "hole2": "health", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(minion_type(), Draw()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.20159912109375e-05, -1.1444091796875e-05, -0.018529532477259636, -0.00018404220463708043, -3.79079720005393e-05, -1.1444091796875e-05, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -6.079673767089844e-06, -1.52587890625e-05, -1.3590497970581055, -9.5367431640625e-06, -1.8358230590820312e-05, 0.0, -9.5367431640625e-06, -6.67572021484375e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -3.24249267578125e-05, -1.4529876708984375, -1.42527437210083, -0.0003660247311927378, -2.5391578674316406e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.1576648578047752e-05, 0.0, -0.0011444091796875, -2.861018856492592e-06, -0.29148730635643005, 0.0, -1.5063711404800415, -7.62939453125e-06, -0.0035915374755859375, -1.52587890625e-05, -5.86491878493689e-05, 0.0, -1.8358230590820312e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sen'jin", "Shieldmasta", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 191, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", "Draw", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -6.059499383979983, "model_output": {"_type": "Module", "body": [{"name": "Sen'jinShieldmasta", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "hole5": "Draw", "hole2": "FREE", "_type": "Template20", "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -23.434829711914062], "choice_history": [80, 159, 294], "score": -23.434844970703125, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}
{"beams": [{"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.0289106369018555, -1.9073486328125e-06, -0.0001087188720703125, -8.7738037109375e-05, -1.1444091796875e-05, -0.0003452301025390625, -1.33514404296875e-05, -5.340576171875e-05, -9.5367431640625e-06, -6.687641143798828e-05, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.633167266845703e-05, -0.12784671783447266, -5.7220458984375e-06, -0.00208282470703125, -0.0066471099853515625, -0.0007282254518941045, -9.536697689327411e-06, -0.36043739318847656, -0.0042629241943359375, -0.004932119976729155, -8.213520050048828e-05], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 117, 226, "Frozen", "<EOS>"], "score": -1.6600829782119604, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}, {"hole0": "Frozen", "_type": "Template50"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        targets = copy.copy(game.other_player.minions)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -0.8863496780395508, -0.000614166259765625, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.000274658203125, -7.62939453125e-06, -6.29425048828125e-05, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -8.392333984375e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.621246337890625e-05, -0.006890296936035156, -0.00016021728515625, -0.0014324188232421875, -5.91278076171875e-05, -1.9073486328125e-06, -0.009890437126159668, 0.0, -0.043529510498046875, -0.00014495849609375, -3.62396240234375e-05, 0.0, -0.0018405914306640625, 0.0, -0.0002633333206176758, -9.5367431640625e-06, -0.0008544921875, -1.9073486328125e-06, -5.14984130859375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -0.00064849853515625, 0.0, -0.0001004934310913086, -4.410743713378906e-06, -0.0001373291015625, -1.9073486328125e-06, -0.041856713593006134, -8.96453857421875e-05, -0.0001087188720703125, -1.1444091796875e-05, -4.9591064453125e-05, -0.0005207061767578125, -9.918212890625e-05, 0.0, -0.0007495880126953125, -1.1444091796875e-05, -0.00041103363037109375, 0.0, -0.0118865966796875, -8.58306884765625e-05, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -0.001850128173828125, -3.814697265625e-06, -0.0001659393310546875, 0.0, -0.003887176513671875, -1.0371208190917969e-05, -0.4190102815628052, -1.9073486328125e-06, -0.04071805253624916, -2.9802276912960224e-06, -0.5086202621459961, -5.14984130859375e-05, -7.62939453125e-06, -0.0001049041748046875, 0.0, -0.04034221172332764, 0.0, -0.13753795623779297, -0.0017986297607421875, -0.00018310546875, 0.0, -0.0007038116455078125, 0.0, -0.00016224384307861328, -3.814697265625e-06, -0.0005855560302734375, -1.9073486328125e-06, -7.62939453125e-05, -9.72747802734375e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -0.0009975433349609375, 0.0, -0.00010955333709716797, -6.318092346191406e-06, -0.00013840198516845703, 0.0, -0.027074702084064484, -7.43865966796875e-05], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>"], "score": -2.3173714088607653, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -2.493105888366699, -9.5367431640625e-06, -9.262555977329612e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.239776611328125e-05, 0.0, -0.000446319580078125, -1.33514404296875e-05, -1.33514404296875e-05, -0.0033025741577148438, -0.0003681182861328125, -0.000270843505859375, 0.0, -4.57763671875e-05, 0.0, -6.079655122448457e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.1920928244535389e-07, -0.0002574920654296875, -0.0015201568603515625, -1.1444091796875e-05, -3.2186455882765586e-06, -2.2172927856445312e-05, -2.062306521111168e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.7642971215536818e-05, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -6.67572021484375e-05, 0.0, -0.00011074542999267578, -3.576278118089249e-07, -0.0077915191650390625, 0.0, -5.7220458984375e-06, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.00013554096221923828, -3.933906555175781e-06, -0.0006656646728515625, -1.9073486328125e-06, -1.9073486328125e-05, -0.0011539459228515625, -0.00014495849609375, -0.0003056526184082031, 0.0, -4.9591064453125e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.002532958984375, -0.00037384033203125, -4.1961669921875e-05, 0.0, -0.003984808921813965, -4.291534423828125e-06, -0.0080413818359375, -0.0028066635131835938, -0.005360603332519531, 0.0, -0.01347208023071289, -6.866455078125e-05, -0.0021305084228515625, -3.814697265625e-06, -0.0007686614990234375, -7.62939453125e-06, -3.814697265625e-06, -7.033347174001392e-06, -1.1920922133867862e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Sinister", " ", "Strike", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -2.5516514696880037, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Sinister Strike"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.0289106369018555, -1.9073486328125e-06, -0.0001087188720703125, -8.7738037109375e-05, -1.1444091796875e-05, -0.0003452301025390625, -1.33514404296875e-05, -5.340576171875e-05, -9.5367431640625e-06, -6.687641143798828e-05, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.633167266845703e-05, -0.12784671783447266, -5.7220458984375e-06, -0.00208282470703125, -0.0066471099853515625, -0.0007282254518941045, -9.536697689327411e-06, -1.244004249572754, 0.0, -0.0019397735595703125, -0.0204010009765625, -7.62939453125e-06, -1.9073486328125e-06, -0.0072574615478515625, -1.9073486328125e-06, -0.019113540649414062, -1.9073486328125e-06, -0.0001735687255859375, 0.0, -0.002046823501586914, -6.079673767089844e-06, -0.00024759769439697266, -7.867813110351562e-06, -0.006122848019003868, -2.706014311115723e-05, -0.29538631439208984, -2.288818359375e-05, -7.62939453125e-06, -0.021402359008789062, -0.000148773193359375, -0.00036187481600791216, -2.384185791015625e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.001427411218173802, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>"], "score": -2.91053134424061, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        targets.extend(game.other_player.hero)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -0.8863496780395508, -0.000614166259765625, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.000274658203125, -7.62939453125e-06, -6.29425048828125e-05, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -8.392333984375e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.621246337890625e-05, -0.006890296936035156, -0.00016021728515625, -0.0014324188232421875, -5.91278076171875e-05, -1.9073486328125e-06, -0.009890437126159668, 0.0, -0.043529510498046875, -0.00014495849609375, -3.62396240234375e-05, 0.0, -0.0018405914306640625, 0.0, -0.0002633333206176758, -9.5367431640625e-06, -0.0008544921875, -1.9073486328125e-06, -5.14984130859375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -0.00064849853515625, 0.0, -0.0001004934310913086, -4.410743713378906e-06, -0.0001373291015625, -1.9073486328125e-06, -0.041856713593006134, -8.96453857421875e-05, -0.0001087188720703125, -1.1444091796875e-05, -4.9591064453125e-05, -0.0005207061767578125, -9.918212890625e-05, 0.0, -0.0007495880126953125, -1.1444091796875e-05, -0.00041103363037109375, 0.0, -0.0118865966796875, -8.58306884765625e-05, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -0.001850128173828125, -3.814697265625e-06, -0.0001659393310546875, 0.0, -0.003887176513671875, -1.0371208190917969e-05, -0.4190102815628052, -1.9073486328125e-06, -0.04071805253624916, -2.9802276912960224e-06, -0.9769287109375, -5.7220458984375e-06, -4.76837158203125e-05, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, -0.000732421875, -2.47955322265625e-05, -0.0005208253860473633, 0.0, -0.09683036804199219, -2.86102294921875e-05, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -0.0050754547119140625, -3.814697265625e-06, -0.0001621246337890625, 0.0, -0.0026149749755859375, -1.2278556823730469e-05, -0.4745875597000122, -1.9073486328125e-06, -0.02606244385242462, -2.861018856492592e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "score": -3.1824313285119956, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.6077814102172852, -1.9073486328125e-06, -1.52587890625e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.0517578125e-05, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, -2.8967857360839844e-05, -3.814697265625e-06, -6.67572021484375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.633167266845703e-05, -0.0003604888916015625, -8.0108642578125e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.014259576797485352, 0.0, -0.06519699096679688, -0.000453948974609375, -0.0024471282958984375, 0.0, -0.000789642333984375, -1.9073486328125e-06, -0.0003606081008911133, -7.62939453125e-06, -0.001255035400390625, -1.9073486328125e-06, -5.340576171875e-05, -3.62396240234375e-05, -9.5367431640625e-06, -0.0004444122314453125, 0.0, -0.000278472900390625, 0.0, -0.0001703500747680664, -6.318092346191406e-06, -0.00018155574798583984, -1.9073486328125e-06, -0.015159839764237404, -3.24249267578125e-05, -0.000499725341796875, -0.006671905517578125, -1.9073486328125e-06, -4.00543212890625e-05, -1.33514404296875e-05, -0.001773834228515625, 0.0, -0.000301361083984375, 0.0, -0.006586194038391113, 0.0, -0.002147078514099121, -1.9073486328125e-05, -3.814697265625e-06, -1.3684015274047852, -0.00018310546875, -0.00028759610722772777, -5.006785613659304e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.0066564083099365234, -3.933906555175781e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "3", "<EOS>", 45, 160, "self", "<EOS>"], "score": -3.2270206710364278, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 3, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.other_player.hero)\n        targets.extend(game.current_player.minions)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -0.8863496780395508, -0.000614166259765625, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.000274658203125, -7.62939453125e-06, -6.29425048828125e-05, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -8.392333984375e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.621246337890625e-05, -0.006890296936035156, -0.00016021728515625, -0.0014324188232421875, -5.91278076171875e-05, -1.9073486328125e-06, -0.009890437126159668, 0.0, -0.043529510498046875, -0.00014495849609375, -3.62396240234375e-05, 0.0, -0.0018405914306640625, 0.0, -0.0002633333206176758, -9.5367431640625e-06, -0.0008544921875, -1.9073486328125e-06, -5.14984130859375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -0.00064849853515625, 0.0, -0.0001004934310913086, -4.410743713378906e-06, -0.0001373291015625, -1.9073486328125e-06, -0.041856713593006134, -8.96453857421875e-05, -0.0001087188720703125, -1.1444091796875e-05, -4.9591064453125e-05, -0.0005207061767578125, -9.918212890625e-05, 0.0, -0.0007495880126953125, -1.1444091796875e-05, -0.00041103363037109375, 0.0, -0.0118865966796875, -8.58306884765625e-05, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -0.001850128173828125, -3.814697265625e-06, -0.0001659393310546875, 0.0, -0.003887176513671875, -1.0371208190917969e-05, -0.4190102815628052, -1.9073486328125e-06, -0.04071805253624916, -2.9802276912960224e-06, -0.9769287109375, -5.7220458984375e-06, -4.76837158203125e-05, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, -0.000732421875, -2.47955322265625e-05, -0.0005208253860473633, 0.0, -0.09683036804199219, -2.86102294921875e-05, -1.9073486328125e-05, -2.288818359375e-05, 0.0, -0.0050754547119140625, -3.814697265625e-06, -0.0001621246337890625, 0.0, -0.0026149749755859375, -1.2278556823730469e-05, -0.9766484498977661, 0.0, -0.1849229335784912, -7.62939453125e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>"], "score": -3.843355569462858, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.other_player.\n                hero), game)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.6077814102172852, -1.9073486328125e-06, -1.52587890625e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.0517578125e-05, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, -2.8967857360839844e-05, -3.814697265625e-06, -6.67572021484375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.633167266845703e-05, -0.0003604888916015625, -8.0108642578125e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.014259576797485352, 0.0, -0.06519699096679688, -0.000453948974609375, -0.0024471282958984375, 0.0, -0.000789642333984375, -1.9073486328125e-06, -0.0003606081008911133, -7.62939453125e-06, -0.001255035400390625, -1.9073486328125e-06, -5.340576171875e-05, -3.62396240234375e-05, -9.5367431640625e-06, -0.0004444122314453125, 0.0, -0.000278472900390625, 0.0, -0.0001703500747680664, -6.318092346191406e-06, -0.00018155574798583984, -1.9073486328125e-06, -0.015159839764237404, -3.24249267578125e-05, -0.000499725341796875, -0.006671905517578125, -1.9073486328125e-06, -4.00543212890625e-05, -1.33514404296875e-05, -0.001773834228515625, 0.0, -0.000301361083984375, 0.0, -0.006586194038391113, 0.0, -0.002147078514099121, -1.9073486328125e-05, -3.814697265625e-06, -0.3121967315673828, -0.007953643798828125, -0.0002002716064453125, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.031697869300842285, 0.0, -0.35085391998291016, -1.1920928244535389e-07, -7.62939453125e-06, -1.4290552139282227, -2.09808349609375e-05, -9.918212890625e-05, 0.0, -6.29425048828125e-05, 0.0, -0.0022088289260864258, -2.3841855067985307e-07, -0.018706798553466797, -1.1920928244535389e-07, -0.0012443147134035826, -1.2636104656849056e-05, -0.0109100341796875, -4.57763671875e-05, -0.0089111328125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 45, 160, "game", "<EOS>"], "score": -4.025701994173701, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.heal(player.effective_heal_power(3), self)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.0289106369018555, -1.9073486328125e-06, -0.0001087188720703125, -8.7738037109375e-05, -1.1444091796875e-05, -0.0003452301025390625, -1.33514404296875e-05, -5.340576171875e-05, -9.5367431640625e-06, -6.687641143798828e-05, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -8.392333984375e-05, -9.5367431640625e-06, -1.52587890625e-05, -1.633167266845703e-05, -0.12784671783447266, -5.7220458984375e-06, -0.00208282470703125, -0.0066471099853515625, -0.0007282254518941045, -9.536697689327411e-06, -1.244004249572754, 0.0, -0.0019397735595703125, -0.0204010009765625, -7.62939453125e-06, -1.9073486328125e-06, -0.0072574615478515625, -1.9073486328125e-06, -0.019113540649414062, -1.9073486328125e-06, -0.0001735687255859375, 0.0, -0.002046823501586914, -6.079673767089844e-06, -0.00024759769439697266, -7.867813110351562e-06, -0.006122848019003868, -2.706014311115723e-05, -1.5749425888061523, 0.0, -1.52587890625e-05, -0.0024738311767578125, -0.0054073333740234375, -0.0012912750244140625, -5.7220458984375e-06, -0.0001277923583984375, 0.0, -0.011157989501953125, 0.0, -0.1425539255142212, 0.0, -2.47955322265625e-05, -0.0001544952392578125, -7.62939453125e-06, -0.00017522420966997743, -1.1920928244535389e-07, -0.0089111328125, -1.9073486328125e-06, -0.09823668003082275, -7.748603820800781e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "3", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "3", "<EOS>", 45, 160, "self", "<EOS>"], "score": -4.437225077940688, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template47"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.other_player.\n                hero()), self)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.6077814102172852, -1.9073486328125e-06, -1.52587890625e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.0517578125e-05, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, -2.8967857360839844e-05, -3.814697265625e-06, -6.67572021484375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.633167266845703e-05, -0.0003604888916015625, -8.0108642578125e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.014259576797485352, 0.0, -0.06519699096679688, -0.000453948974609375, -0.0024471282958984375, 0.0, -0.000789642333984375, -1.9073486328125e-06, -0.0003606081008911133, -7.62939453125e-06, -0.001255035400390625, -1.9073486328125e-06, -5.340576171875e-05, -3.62396240234375e-05, -9.5367431640625e-06, -0.0004444122314453125, 0.0, -0.000278472900390625, 0.0, -0.0001703500747680664, -6.318092346191406e-06, -0.00018155574798583984, -1.9073486328125e-06, -0.015159839764237404, -3.24249267578125e-05, -0.000499725341796875, -0.006671905517578125, -1.9073486328125e-06, -4.00543212890625e-05, -1.33514404296875e-05, -0.001773834228515625, 0.0, -0.000301361083984375, 0.0, -0.006586194038391113, 0.0, -0.002147078514099121, -1.9073486328125e-05, -3.814697265625e-06, -0.3121967315673828, -0.007953643798828125, -0.0002002716064453125, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.031697869300842285, 0.0, -0.35085391998291016, -1.1920928244535389e-07, -7.62939453125e-06, -0.8908596038818359, -0.0009136199951171875, -0.006739616394042969, -1.9073486328125e-06, -0.08517074584960938, 0.0, -0.7405252456665039, 0.0, -0.05394268035888672, 0.0, -0.0047626495361328125, 0.0, -0.19006435573101044, -1.311301275563892e-06, -0.0001773834228515625, -1.52587890625e-05, -0.3810272216796875, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 45, 160, "self", "<EOS>"], "score": -4.908627302795189, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.other_player.\n                hero.Worthless()), game)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -1.6077814102172852, -1.9073486328125e-06, -1.52587890625e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.0517578125e-05, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, -2.8967857360839844e-05, -3.814697265625e-06, -6.67572021484375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -7.62939453125e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.633167266845703e-05, -0.0003604888916015625, -8.0108642578125e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.014259576797485352, 0.0, -0.06519699096679688, -0.000453948974609375, -0.0024471282958984375, 0.0, -0.000789642333984375, -1.9073486328125e-06, -0.0003606081008911133, -7.62939453125e-06, -0.001255035400390625, -1.9073486328125e-06, -5.340576171875e-05, -3.62396240234375e-05, -9.5367431640625e-06, -0.0004444122314453125, 0.0, -0.000278472900390625, 0.0, -0.0001703500747680664, -6.318092346191406e-06, -0.00018155574798583984, -1.9073486328125e-06, -0.015159839764237404, -3.24249267578125e-05, -0.000499725341796875, -0.006671905517578125, -1.9073486328125e-06, -4.00543212890625e-05, -1.33514404296875e-05, -0.001773834228515625, 0.0, -0.000301361083984375, 0.0, -0.006586194038391113, 0.0, -0.002147078514099121, -1.9073486328125e-05, -3.814697265625e-06, -0.3121967315673828, -0.007953643798828125, -0.0002002716064453125, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.031697869300842285, 0.0, -0.35085391998291016, -1.1920928244535389e-07, -7.62939453125e-06, -0.8908596038818359, -0.0009136199951171875, -0.006739616394042969, -1.9073486328125e-06, -0.08517074584960938, 0.0, -0.6503868103027344, -9.5367431640625e-06, -4.76837158203125e-05, 0.0, -0.0022449493408203125, 0.0, -0.0015659332275390625, -1.9073486328125e-06, -0.0036730612628161907, -2.861018856492592e-06, -0.5098013877868652, -0.03221869468688965, -0.01068878173828125, -1.33514404296875e-05, -0.36375904083251953, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "Worthless", "<EOS>", 45, 160, "game", "<EOS>"], "score": -5.112523288406514, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "Worthless"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(game.current_player.minions)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(game.other_player.\n                hero.Worthless()), game)\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -0.1076211929321289, -0.002712249755859375, -1.07287787614041e-05, -2.1576881408691406e-05, -5.9604562920867465e-06, 0.0, -3.5762695915764198e-06, 0.0, -0.01033937931060791, 0.0, -0.000820159912109375, 0.0, -0.00061798095703125, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.0013580322265625e-05, 0.0, -5.7220458984375e-06, -2.861022494471399e-06, -5.960462772236497e-07, -0.8863496780395508, -0.000614166259765625, -9.5367431640625e-06, -2.86102294921875e-05, -7.62939453125e-06, -0.000274658203125, -7.62939453125e-06, -6.29425048828125e-05, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -8.392333984375e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.621246337890625e-05, -0.006890296936035156, -0.00016021728515625, -0.0014324188232421875, -5.91278076171875e-05, -1.9073486328125e-06, -0.009890437126159668, 0.0, -0.043529510498046875, -0.00014495849609375, -3.62396240234375e-05, 0.0, -0.0018405914306640625, 0.0, -0.0002633333206176758, -9.5367431640625e-06, -0.0008544921875, -1.9073486328125e-06, -5.14984130859375e-05, -7.82012939453125e-05, -5.7220458984375e-06, -5.53131103515625e-05, 0.0, -0.00064849853515625, 0.0, -0.0001004934310913086, -4.410743713378906e-06, -0.0001373291015625, -1.9073486328125e-06, -0.041856713593006134, -8.96453857421875e-05, -0.0001087188720703125, -1.1444091796875e-05, -4.9591064453125e-05, -0.0005207061767578125, -9.918212890625e-05, 0.0, -0.0007495880126953125, -1.1444091796875e-05, -0.00041103363037109375, 0.0, -0.0118865966796875, -8.58306884765625e-05, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -0.001850128173828125, -3.814697265625e-06, -0.0001659393310546875, 0.0, -0.003887176513671875, -1.0371208190917969e-05, -1.0758506059646606, 0.0, -0.1502387523651123, -7.62939453125e-06, -0.37721824645996094, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.005330562591552734, 0.0, -0.0021104812622070312, -1.9073486328125e-06, -0.0030336380004882812, -1.9073486328125e-06, -1.52587890625e-05, -0.011758804321289062, -1.9073486328125e-06, -0.00030517578125, -9.5367431640625e-06, -5.340576171875e-05, 0.0, -8.392333984375e-05, 0.0, -0.003838062286376953, 0.0, -0.2655982971191406, -1.1444091796875e-05, -3.814697265625e-06, -0.20708656311035156, -0.016658782958984375, -9.34600830078125e-05, 0.0, -0.000728607177734375, 0.0, -0.007813215255737305, 0.0, -0.3996223211288452, 0.0, -7.62939453125e-06, -0.32797908782958984, -0.0001430511474609375, -0.005367279052734375, 0.0, -0.06621170043945312, 0.0, -0.21787261962890625, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -0.002716064453125, 0.0, -0.00124359130859375, 0.0, -0.00349250715225935, -2.264974000354414e-06, -0.45456790924072266, -0.03631174564361572, -0.015500068664550781, -7.62939453125e-06, -0.4518299102783203, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "targets", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "current_player", "<EOS>", "minions", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 19, 160, "targets", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "Worthless", "<EOS>", 45, 160, "game", "<EOS>"], "score": -5.2497391425425235, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template17", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "targets"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"iter": {"_type": "Name", "id": "targets"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "Worthless"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.draw()\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -6.042530059814453, -0.033657073974609375, -9.059865078597795e-06, -1.621246337890625e-05, -7.748603820800781e-06, -3.814697265625e-06, -0.9847885966300964, -7.62939453125e-06, -0.5540218353271484, 0.0, -0.16139984130859375, -0.13884925842285156, -0.057929039001464844, 0.0, -5.340576171875e-05, 0.0, -0.17553043365478516, 0.0, -0.011623382568359375, -4.768370445162873e-07, -0.2311863899230957, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Sinister", " ", "Strike", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "draw", "<EOS>"], "score": -8.392623118569304, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": "PALADIN", "hole0": "Sinister Strike", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.draw()\n", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -1.71661376953125e-05, -3.099436753473128e-06, -0.00012754605268128216, -2.9802276912960224e-06, -0.00054168701171875, 0.0, -1.9073486328125e-06, -4.5418739318847656e-05, -1.1444091796875e-05, -0.00013935565948486328, -3.24249267578125e-05, -6.042530059814453, -0.033657073974609375, -9.059865078597795e-06, -1.621246337890625e-05, -7.748603820800781e-06, -3.814697265625e-06, -1.083749532699585, 0.0, -0.001316070556640625, -1.9073486328125e-06, -0.4012928009033203, -0.025832176208496094, -0.5216684341430664, 0.0, -2.86102294921875e-05, 0.0, -0.11682415008544922, 0.0, -0.012022018432617188, -5.960462772236497e-07, -0.23014450073242188, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sinister", "Strike", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Sinister", " ", "Strike", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "draw", "<EOS>"], "score": -8.470113627125613, "model_output": {"_type": "Module", "body": [{"name": "SinisterStrike", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Sinister Strike", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-3.814697265625e-06, -5.91278076171875e-05, -22.6274356842041], "choice_history": [80, 159, 294], "score": -22.627498626708984, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}
{"beams": [{"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -1.741964340209961, 0.0, -0.007065773010253906, -0.0001735687255859375, -4.410743713378906e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.7082662735917893, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()), Battlecry(Heal(3), CharacterSelector(players=\n            BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.6475467681884766, -0.030223846435546875, -0.037059783935546875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010308027267456055, 0.0, -7.62939453125e-06, -0.1345653533935547, -0.0013332366943359375, -8.96453857421875e-05, 0.0, -0.021129488945007324, -3.8146954466355965e-06, -0.027099609375, -0.3446178436279297, -0.014612197875976562, -0.0007234811782836914, -0.007503509521484375, -1.9073486328125e-06, -1.52587890625e-05, -0.26172542572021484, -6.103515625e-05, -0.019744873046875, -0.00016891956329345703, -9.393692016601562e-05, -0.00013089166895952076, 0.0, -0.183807373046875, 0.0, -0.004458189010620117, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -0.0002918243408203125, 0.0, -1.1444091796875e-05, -0.04637575149536133, -9.5367431640625e-06, -4.00543212890625e-05, -0.05665111541748047, -0.0949869155883789, -3.814697265625e-06, -1.52587890625e-05, -0.502476155757904, -0.0004589557647705078, -5.7220458984375e-06, -0.04223823547363281, -2.47955322265625e-05, -0.3893415629863739, 0.0, -3.4332275390625e-05, -0.04473686218261719, -2.288818359375e-05, -5.7220458984375e-06, -0.3917560577392578, -0.0001068115234375, 0.0, -0.013283729553222656, -9.5367431640625e-06, -1.9073486328125e-06, -0.1054220199584961, -1.1920928244535389e-07, -0.0001277923583984375, 0.0, -0.004788041114807129, -2.09808349609375e-05, 0.0, -0.000701904296875, -5.7220458984375e-06, -5.745780072174966e-05, 0.0, -2.1099975128890947e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 283, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Health", "<EOS>", 282, 61, 250, "Count", "<EOS>", "Card", "Selector", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -3.9978309683954123, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"hole1": "CardSelector", "hole0": "Count", "_type": "Template69"}], "hole0": "ChangeHealth", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()), Battlecry(Heal(2), CharacterSelector(players=\n            BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.6475467681884766, -0.030223846435546875, -0.037059783935546875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010308027267456055, 0.0, -7.62939453125e-06, -0.1345653533935547, -0.0013332366943359375, -8.96453857421875e-05, 0.0, -0.021129488945007324, -3.8146954466355965e-06, -0.027099609375, -0.3446178436279297, -0.014612197875976562, -0.0007234811782836914, -0.007503509521484375, -1.9073486328125e-06, -1.52587890625e-05, -0.26172542572021484, -6.103515625e-05, -0.019744873046875, -0.00016891956329345703, -9.393692016601562e-05, -0.00013089166895952076, 0.0, -0.183807373046875, 0.0, -0.004458189010620117, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -0.0002918243408203125, 0.0, -1.1444091796875e-05, -0.04637575149536133, -9.5367431640625e-06, -4.00543212890625e-05, -0.05665111541748047, -0.0949869155883789, -3.814697265625e-06, -1.52587890625e-05, -0.502476155757904, -0.0004589557647705078, -5.7220458984375e-06, -0.04223823547363281, -2.47955322265625e-05, -1.3202202320098877, 0.0, -0.000255584716796875, -0.03009796142578125, -9.5367431640625e-06, -1.1444091796875e-05, -0.19456398487091064, -5.91278076171875e-05, 0.0, -0.034903526306152344, -9.5367431640625e-06, -1.9073486328125e-06, -0.06854915618896484, -1.1920928244535389e-07, -0.000118255615234375, 0.0, -0.004168152809143066, -1.71661376953125e-05, 0.0, -0.0007171630859375, -5.7220458984375e-06, -5.531213173526339e-05, 0.0, -2.1219182599452324e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 283, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Health", "<EOS>", 282, 61, 250, "Count", "<EOS>", "Card", "Selector", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -4.701171528689649, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"hole1": "CardSelector", "hole0": "Count", "_type": "Template69"}], "hole0": "ChangeHealth", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -1.5989274978637695, 0.0, -1.3470649719238281e-05, 0.0, -5.14984130859375e-05, 0.0, -4.9591064453125e-05, 0.0, -0.0006427764892578125, -1.1444091796875e-05, -0.004085540771484375, 0.0, -0.7962751388549805, -0.5823373794555664, -0.009492934681475163, -0.010166220366954803, -0.008737564086914062, -9.918212890625e-05, -0.00034600860089994967, 0.0, -0.0007940021459944546, 0.0, -1.7385835647583008, 0.0, -0.0069828033447265625, -0.0001735687255859375, -4.410743713378906e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.7645607773590655, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()), Battlecry(OneIn(2), CharacterSelector(players=\n            BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.6475467681884766, -0.030223846435546875, -0.037059783935546875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010308027267456055, 0.0, -7.62939453125e-06, -0.1345653533935547, -0.0013332366943359375, -8.96453857421875e-05, 0.0, -0.021129488945007324, -3.8146954466355965e-06, -0.027099609375, -0.3446178436279297, -0.014612197875976562, -0.0007234811782836914, -0.007503509521484375, -1.9073486328125e-06, -1.52587890625e-05, -0.26172542572021484, -6.103515625e-05, -0.019744873046875, -0.00016891956329345703, -9.393692016601562e-05, -0.00013089166895952076, 0.0, -0.183807373046875, 0.0, -0.004458189010620117, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -0.0002918243408203125, 0.0, -1.1444091796875e-05, -0.04637575149536133, -9.5367431640625e-06, -4.00543212890625e-05, -0.05665111541748047, -0.0949869155883789, -3.814697265625e-06, -1.52587890625e-05, -1.3199704885482788, -0.041547417640686035, -1.1920928244535389e-07, -5.7220458984375e-06, -0.03213787078857422, -1.33514404296875e-05, -0.027916457504034042, 0.0, -8.20159912109375e-05, -0.20323562622070312, -1.33514404296875e-05, -5.7220458984375e-06, -0.603205680847168, -3.4332275390625e-05, 0.0, -0.016646385192871094, -9.5367431640625e-06, -1.9073486328125e-06, -0.04334366321563721, -1.1920928244535389e-07, -0.000202178955078125, 0.0, -0.004713773727416992, -1.9073486328125e-05, 0.0, -0.000728607177734375, -3.814697265625e-06, -5.3881762141827494e-05, 0.0, -2.1338390070013702e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 283, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Health", "<EOS>", 282, 61, 250, "Count", "<EOS>", "Card", "Selector", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "One", "In", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -4.796094991548429, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"hole1": "CardSelector", "hole0": "Count", "_type": "Template69"}], "hole0": "ChangeHealth", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "OneIn"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()), Battlecry(Heal(3), CharacterSelector(players=\n            BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -1.6214399337768555, 0.0, -0.0004749298095703125, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -4.57763671875e-05, 0.0, -0.0006256103515625, -7.62939453125e-06, -0.0047054290771484375, 0.0, -0.6101779937744141, -0.04116249084472656, -0.048786163330078125, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0011131763458251953, 0.0, -7.62939453125e-06, -0.13217639923095703, -0.0013332366943359375, -9.5367431640625e-05, 0.0, -0.022147318348288536, -3.8146954466355965e-06, -0.0298309326171875, -0.3519926071166992, -0.012071609497070312, -0.0007312297821044922, -0.00766754150390625, -1.9073486328125e-06, -1.71661376953125e-05, -0.24664306640625, -6.103515625e-05, -0.019967079162597656, -0.00017082691192626953, -9.393692016601562e-05, -0.00013279901759233326, 0.0, -0.18785667419433594, 0.0, -0.004467606544494629, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -0.000293731689453125, 0.0, -1.1444091796875e-05, -0.04687166213989258, -9.5367431640625e-06, -4.00543212890625e-05, -0.055253028869628906, -0.10048484802246094, -3.814697265625e-06, -1.33514404296875e-05, -0.5296967625617981, -0.00044739246368408203, -5.7220458984375e-06, -0.04343986511230469, -2.47955322265625e-05, -0.3868565261363983, 0.0, -3.4332275390625e-05, -0.047705650329589844, -2.288818359375e-05, -5.7220458984375e-06, -0.38393115997314453, -0.0001068115234375, 0.0, -0.013240814208984375, -9.5367431640625e-06, -1.9073486328125e-06, -0.103057861328125, -1.1920928244535389e-07, -0.000125885009765625, 0.0, -0.004789948463439941, -2.09808349609375e-05, 0.0, -0.0007038116455078125, -5.7220458984375e-06, -5.7696208386914805e-05, 0.0, -2.1219182599452324e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 283, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Health", "<EOS>", 282, 61, 250, "Count", "<EOS>", "Card", "Selector", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -5.070232870089733, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"hole1": "CardSelector", "hole0": "Count", "_type": "Template69"}], "hole0": "ChangeHealth", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()), Battlecry(Heal(3), CharacterSelector(players=\n            BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -1.5989274978637695, 0.0, -1.3470649719238281e-05, 0.0, -5.14984130859375e-05, 0.0, -4.9591064453125e-05, 0.0, -0.0006427764892578125, -1.1444091796875e-05, -0.004085540771484375, 0.0, -0.6769628524780273, -0.02729034423828125, -0.032070159912109375, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010404586791992188, 0.0, -7.62939453125e-06, -0.13294601440429688, -0.001312255859375, -8.96453857421875e-05, 0.0, -0.02532852813601494, -3.8146954466355965e-06, -0.026510238647460938, -0.3774223327636719, -0.014079093933105469, -0.0007617473602294922, -0.0074825286865234375, 0.0, -1.52587890625e-05, -0.2620410919189453, -6.103515625e-05, -0.019744873046875, -0.00016891956329345703, -9.393692016601562e-05, -0.00013101087824907154, 0.0, -0.1808013916015625, 0.0, -0.00445246696472168, -9.655952453613281e-06, 0.0, -4.76837158203125e-05, -0.0002918243408203125, 0.0, -1.1444091796875e-05, -0.04692220687866211, -9.5367431640625e-06, -4.00543212890625e-05, -0.056000709533691406, -0.09508800506591797, -3.814697265625e-06, -1.52587890625e-05, -0.5024844408035278, -0.0004589557647705078, -5.7220458984375e-06, -0.041962623596191406, -2.47955322265625e-05, -0.388929158449173, 0.0, -3.4332275390625e-05, -0.044780731201171875, -2.288818359375e-05, -5.7220458984375e-06, -0.3919963836669922, -0.0001068115234375, 0.0, -0.013245582580566406, -9.5367431640625e-06, -1.9073486328125e-06, -0.10521697998046875, -1.1920928244535389e-07, -0.0001277923583984375, 0.0, -0.004786133766174316, -2.09808349609375e-05, 0.0, -0.000701904296875, -5.7220458984375e-06, -5.745780072174966e-05, 0.0, -2.1099975128890947e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 283, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Health", "<EOS>", 282, 61, 250, "Count", "<EOS>", "Card", "Selector", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -5.094852678523004, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"hole1": "CardSelector", "hole0": "Count", "_type": "Template69"}], "hole0": "ChangeHealth", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(condition=IsType(\n            MINION_TYPE.DEMON))), value=0)),\n            OpponentMinionCountIsGreaterThan(0)))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.6303339004516602, -0.0001049041748046875, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.05171918869018555, -1.9073486328125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.0010528564453125, -3.24249267578125e-05, -1.33514404296875e-05, -0.2547215223312378, -0.11821568012237549, 0.0, -1.52587890625e-05, -0.0002460479736328125, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.00078582763671875, -1.9073486328125e-06, -0.0208740234375, -3.814697265625e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, 0.0, -0.0004253387451171875, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.016534805297851562, -0.02387523651123047, -9.5367431640625e-06, -2.47955322265625e-05, -0.06260298192501068, -4.9948692321777344e-05, -0.000225067138671875, -0.0001163482666015625, -0.5154056549072266, -0.0006122589111328125, 0.0, -0.022910594940185547, -0.002784252166748047, -5.53131103515625e-05, -0.0029125213623046875, -0.001628875732421875, -3.62396240234375e-05, -1.9073486328125e-06, -0.04300045967102051, -3.981590270996094e-05, -2.09808349609375e-05, -0.023508071899414062, -0.004642486572265625, -0.000148773193359375, 0.0, -0.050459861755371094, -0.0019259452819824219, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -0.7074223756790161, -3.576278118089249e-07, -0.0010786056518554688, -0.0004825592041015625, -1.9073486328125e-05, -7.62939453125e-06, -0.00023651123046875, -0.00036656856536865234, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.7048730850219727, -5.7220458984375e-06, -4.9591064453125e-05, -0.00052642822265625, -1.52587890625e-05, -0.010773301124572754, -1.9073486328125e-06, -0.000278472900390625, -5.7220458984375e-06, -0.0006952249677851796, 0.0, -0.04407024383544922, -0.38700389862060547, 0.0, 0.0, -0.3306466341018677, -0.01645660400390625, -0.14027023315429688, -0.003049492835998535, -0.3994712829589844, -0.0006771087646484375, -1.9073486328125e-06, -5.7220458984375e-06, -0.000301361083984375, 0.0, -0.0057632457464933395, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -6.950064847813053, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(condition=IsType(\n            MINION_TYPE.DEMON))), value=0)),\n            OpponentMinionCountIsGreaterThan(0))),\n            OpponentMinionCountIsGreaterThan(0)])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.7609672546386719, -0.0002765655517578125, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.009914517402648926, 0.0, -1.9073486328125e-05, -0.0019435882568359375, -0.00324249267578125, -1.33514404296875e-05, -1.9073486328125e-06, -0.16312777996063232, -0.010934829711914062, 0.0, -7.82012939453125e-05, -0.0002269744873046875, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.000957489013671875, -3.814697265625e-06, -0.010532379150390625, -3.814697265625e-06, -3.814697265625e-06, -0.0001239776611328125, -1.52587890625e-05, 0.0, 0.0, -0.00049591064453125, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.010981559753417969, -0.019720077514648438, -1.1444091796875e-05, -2.47955322265625e-05, -0.06618894636631012, -5.3763389587402344e-05, -0.0002593994140625, -0.0001468658447265625, -0.45506858825683594, -0.0006771087646484375, 0.0, -0.020957469940185547, -0.00237429141998291, -5.53131103515625e-05, -0.0031223297119140625, -0.0016155242919921875, -3.814697265625e-05, -1.9073486328125e-06, -0.042952775955200195, -3.981590270996094e-05, -2.09808349609375e-05, -0.023820877075195312, -0.0046710968017578125, -0.000148773193359375, 0.0, -0.050342559814453125, -0.001914381980895996, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -0.731817364692688, -3.576278118089249e-07, -0.0010957717895507812, -0.0004901885986328125, -1.9073486328125e-05, -7.62939453125e-06, -0.0002384185791015625, -0.00036656856536865234, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.00012969970703125, -1.52587890625e-05, -0.6834316253662109, -7.62939453125e-06, -4.9591064453125e-05, -0.0005321502685546875, -1.52587890625e-05, -0.010918259620666504, -1.9073486328125e-06, -0.000274658203125, -5.7220458984375e-06, -0.0006908142822794616, 0.0, -0.04312705993652344, -0.37464237213134766, 0.0, 0.0, -0.33128464221954346, -0.016336441040039062, -0.14191532135009766, -0.0030388832092285156, -0.40465545654296875, -0.0006809234619140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.00029754638671875, 0.0, -0.005688957870006561, 0.0, -0.000240325927734375, -0.0694894790649414, 0.0, 0.0, -0.27234554290771484, -0.0050296783447265625, -0.3121528625488281, -0.001088261604309082, -0.36606693267822266, -0.00042724609375, 0.0, -1.71661376953125e-05, -0.0014705657958984375, 0.0, -0.027705427259206772, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -7.819019869595365, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(players=BothPlayer())),\n            value=0)), GreaterThan(Count(CardSelector(condition=IsType(\n            MINION_TYPE.DEMON))), value=0)))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.6303339004516602, -0.0001049041748046875, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.05171918869018555, -1.9073486328125e-06, -4.76837158203125e-05, -6.103515625e-05, -0.0010528564453125, -3.24249267578125e-05, -1.33514404296875e-05, -0.2547215223312378, -0.11821568012237549, 0.0, -1.52587890625e-05, -0.0002460479736328125, -7.62939453125e-06, -9.34600830078125e-05, 0.0, -0.00078582763671875, -1.9073486328125e-06, -0.0208740234375, -3.814697265625e-06, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, 0.0, -0.0004253387451171875, -4.00543212890625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.016534805297851562, -0.02387523651123047, -9.5367431640625e-06, -2.47955322265625e-05, -0.06260298192501068, -4.9948692321777344e-05, -0.000225067138671875, -0.0001163482666015625, -0.5154056549072266, -0.0006122589111328125, 0.0, -0.022910594940185547, -0.002784252166748047, -5.53131103515625e-05, -0.0029125213623046875, -0.001628875732421875, -3.62396240234375e-05, -1.9073486328125e-06, -0.04300045967102051, -3.981590270996094e-05, -2.09808349609375e-05, -0.023508071899414062, -0.004642486572265625, -0.000148773193359375, 0.0, -0.050459861755371094, -0.0019259452819824219, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -1.0512267351150513, 0.0, -0.000946044921875, -7.62939453125e-06, -0.05295205116271973, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -0.05232846736907959, -2.6702880859375e-05, -0.0002918243408203125, -7.62939453125e-06, -0.0079538244754076, 0.0, -0.098297119140625, -0.4230537414550781, -0.000102996826171875, 0.0, -0.1392230987548828, -0.000789642333984375, -5.7220458984375e-06, -2.86102294921875e-05, -0.0021114349365234375, -3.0517578125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.13126862049102783, -0.00012731552124023438, -2.09808349609375e-05, -0.07255744934082031, -0.5050983428955078, -0.0001163482666015625, 0.0, -0.049712181091308594, -0.0029603242874145508, 0.0, -0.0002079010009765625, -5.340576171875e-05, -1.9073486328125e-05, -0.634008526802063, -4.768370445162873e-07, -0.001323699951171875, -0.0003948211669921875, -2.09808349609375e-05, -5.7220458984375e-06, -0.00022900104522705078, -0.00037229061126708984, 0.0, -3.24249267578125e-05, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001049041748046875, -1.9073486328125e-05, -0.5727720260620117, -1.52587890625e-05, -0.000102996826171875, -0.0007991790771484375, -9.5367431640625e-06, -0.013399600982666016, -1.9073486328125e-06, -0.0002536773681640625, -7.62939453125e-06, -0.00037395459366962314, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>"], "score": -8.011217293489267, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(players=BothPlayer())),\n            value=0)), GreaterThan(Count(CardSelector(condition=IsType(\n            MINION_TYPE.DEMON))), value=0))),\n            OpponentMinionCountIsGreaterThan(0)])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.7609672546386719, -0.0002765655517578125, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.009914517402648926, 0.0, -1.9073486328125e-05, -0.0019435882568359375, -0.00324249267578125, -1.33514404296875e-05, -1.9073486328125e-06, -0.16312777996063232, -0.010934829711914062, 0.0, -7.82012939453125e-05, -0.0002269744873046875, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.000957489013671875, -3.814697265625e-06, -0.010532379150390625, -3.814697265625e-06, -3.814697265625e-06, -0.0001239776611328125, -1.52587890625e-05, 0.0, 0.0, -0.00049591064453125, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.010981559753417969, -0.019720077514648438, -1.1444091796875e-05, -2.47955322265625e-05, -0.06618894636631012, -5.3763389587402344e-05, -0.0002593994140625, -0.0001468658447265625, -0.45506858825683594, -0.0006771087646484375, 0.0, -0.020957469940185547, -0.00237429141998291, -5.53131103515625e-05, -0.0031223297119140625, -0.0016155242919921875, -3.814697265625e-05, -1.9073486328125e-06, -0.042952775955200195, -3.981590270996094e-05, -2.09808349609375e-05, -0.023820877075195312, -0.0046710968017578125, -0.000148773193359375, 0.0, -0.050342559814453125, -0.001914381980895996, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -1.0337544679641724, 0.0, -0.000926971435546875, -7.62939453125e-06, -0.05302071571350098, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.04787015914916992, -2.6702880859375e-05, -0.0002880096435546875, -7.62939453125e-06, -0.008103195577859879, 0.0, -0.09750747680664062, -0.4030447006225586, -0.000102996826171875, 0.0, -0.13813114166259766, -0.0008029937744140625, -7.62939453125e-06, -2.86102294921875e-05, -0.0023784637451171875, -3.0517578125e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.1337071657180786, -0.00012540817260742188, -2.09808349609375e-05, -0.07365608215332031, -0.4843425750732422, -0.000118255615234375, 0.0, -0.050884246826171875, -0.0029791593551635742, 0.0, -0.0002117156982421875, -5.53131103515625e-05, -1.9073486328125e-05, -0.6766911745071411, -4.768370445162873e-07, -0.0013523101806640625, -0.0004024505615234375, -2.09808349609375e-05, -5.7220458984375e-06, -0.00023090839385986328, -0.00037229061126708984, 0.0, -3.0517578125e-05, -1.71661376953125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001087188720703125, -1.71661376953125e-05, -0.5595054626464844, -1.52587890625e-05, -0.000102996826171875, -0.0007829666137695312, -9.5367431640625e-06, -0.013649463653564453, -1.9073486328125e-06, -0.000247955322265625, -7.62939453125e-06, -0.0003732394252438098, 0.0, -0.0007410049438476562, -0.0006580352783203125, 0.0, 0.0, -0.5028133392333984, -0.02028179168701172, -0.029572486877441406, -0.0005584955215454102, -0.44236183166503906, -0.000392913818359375, -5.7220458984375e-06, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.009005359373986721, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -8.803826352828423, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(players=BothPlayer())),\n            value=0)), GreaterThan(Count(MinionSelector(IsType(MINION_TYPE.\n            DEMON))), value=0))), OpponentMinionCountIsGreaterThan(0)])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.7609672546386719, -0.0002765655517578125, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.009914517402648926, 0.0, -1.9073486328125e-05, -0.0019435882568359375, -0.00324249267578125, -1.33514404296875e-05, -1.9073486328125e-06, -0.16312777996063232, -0.010934829711914062, 0.0, -7.82012939453125e-05, -0.0002269744873046875, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.000957489013671875, -3.814697265625e-06, -0.010532379150390625, -3.814697265625e-06, -3.814697265625e-06, -0.0001239776611328125, -1.52587890625e-05, 0.0, 0.0, -0.00049591064453125, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.010981559753417969, -0.019720077514648438, -1.1444091796875e-05, -2.47955322265625e-05, -0.06618894636631012, -5.3763389587402344e-05, -0.0002593994140625, -0.0001468658447265625, -0.45506858825683594, -0.0006771087646484375, 0.0, -0.020957469940185547, -0.00237429141998291, -5.53131103515625e-05, -0.0031223297119140625, -0.0016155242919921875, -3.814697265625e-05, -1.9073486328125e-06, -0.042952775955200195, -3.981590270996094e-05, -2.09808349609375e-05, -0.023820877075195312, -0.0046710968017578125, -0.000148773193359375, 0.0, -0.050342559814453125, -0.001914381980895996, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -1.0337544679641724, 0.0, -0.000926971435546875, -7.62939453125e-06, -0.05302071571350098, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -3.62396240234375e-05, -5.7220458984375e-06, -0.04787015914916992, -2.6702880859375e-05, -0.0002880096435546875, -7.62939453125e-06, -0.008103195577859879, 0.0, -0.09750747680664062, -0.4030447006225586, -0.000102996826171875, 0.0, -0.13813114166259766, -0.0008029937744140625, -7.62939453125e-06, -2.86102294921875e-05, -0.0023784637451171875, -3.0517578125e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.1337071657180786, -0.00012540817260742188, -2.09808349609375e-05, -0.07365608215332031, -0.9635610580444336, -1.33514404296875e-05, 0.0, -0.07653307914733887, -0.00016021728515625, -2.3841855067985307e-07, -0.04589271545410156, -0.009813308715820312, -0.000217437744140625, -3.814697265625e-05, -1.9073486328125e-06, -0.0003210306167602539, -0.00012612335558515042, 0.0, -0.000324249267578125, -7.62939453125e-06, 0.0, -3.814697265625e-05, 0.0, -4.38690185546875e-05, -1.52587890625e-05, -0.9704113006591797, -5.7220458984375e-06, -0.0001277923583984375, -0.000614166259765625, -9.5367431640625e-06, -0.018119096755981445, -3.814697265625e-06, -0.0002841949462890625, -7.62939453125e-06, -0.0002648808294907212, 0.0, -0.000843048095703125, -0.000823974609375, 0.0, 0.0, -0.41389942169189453, -0.018770217895507812, -0.023466110229492188, -0.0005611181259155273, -0.4107379913330078, -0.000308990478515625, -3.814697265625e-06, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -0.009616161696612835, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -8.970854041195452, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(condition=IsType(\n            MINION_TYPE.DEMON))), value=0)), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.DEMON))), value=0))),\n            OpponentMinionCountIsGreaterThan(0)])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.7609672546386719, -0.0002765655517578125, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.009914517402648926, 0.0, -1.9073486328125e-05, -0.0019435882568359375, -0.00324249267578125, -1.33514404296875e-05, -1.9073486328125e-06, -0.16312777996063232, -0.010934829711914062, 0.0, -7.82012939453125e-05, -0.0002269744873046875, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.000957489013671875, -3.814697265625e-06, -0.010532379150390625, -3.814697265625e-06, -3.814697265625e-06, -0.0001239776611328125, -1.52587890625e-05, 0.0, 0.0, -0.00049591064453125, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.010981559753417969, -0.019720077514648438, -1.1444091796875e-05, -2.47955322265625e-05, -0.06618894636631012, -5.3763389587402344e-05, -0.0002593994140625, -0.0001468658447265625, -0.45506858825683594, -0.0006771087646484375, 0.0, -0.020957469940185547, -0.00237429141998291, -5.53131103515625e-05, -0.0031223297119140625, -0.0016155242919921875, -3.814697265625e-05, -1.9073486328125e-06, -0.042952775955200195, -3.981590270996094e-05, -2.09808349609375e-05, -0.023820877075195312, -0.0046710968017578125, -0.000148773193359375, 0.0, -0.050342559814453125, -0.001914381980895996, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -0.731817364692688, -3.576278118089249e-07, -0.0010957717895507812, -0.0004901885986328125, -1.9073486328125e-05, -7.62939453125e-06, -0.0002384185791015625, -0.00036656856536865234, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.00012969970703125, -1.52587890625e-05, -0.6834316253662109, -7.62939453125e-06, -4.9591064453125e-05, -0.0005321502685546875, -1.52587890625e-05, -0.010918259620666504, -1.9073486328125e-06, -0.000274658203125, -5.7220458984375e-06, -0.0006908142822794616, 0.0, -0.04312705993652344, -1.4018888473510742, -4.00543212890625e-05, 0.0, -0.025420188903808594, -0.000919342041015625, -1.33514404296875e-05, -9.5367431640625e-06, -0.023416519165039062, -2.47955322265625e-05, -1.33514404296875e-05, -7.62939453125e-06, -0.38179969787597656, -0.0002218484878540039, -3.0517578125e-05, -0.04564476013183594, -0.6016674041748047, -1.1444091796875e-05, 0.0, -0.39513349533081055, -0.0003833770751953125, -3.576278118089249e-07, -0.059818267822265625, -0.0021305084228515625, -0.0003490447998046875, -3.814697265625e-05, -1.9073486328125e-06, -0.0002962350845336914, -0.00012409679766278714, 0.0, -0.000652313232421875, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, 0.0, -5.340576171875e-05, -1.52587890625e-05, -0.9319114685058594, -1.71661376953125e-05, -0.0001392364501953125, -0.000522613525390625, -9.5367431640625e-06, -0.016541719436645508, -3.814697265625e-06, -0.0002899169921875, -5.7220458984375e-06, -0.0002685762010514736, 0.0, -0.0010166168212890625, -0.00089263916015625, 0.0, 0.0, -0.42337703704833984, -0.0143280029296875, -0.023406028747558594, -0.0005534887313842773, -0.35115718841552734, -0.000335693359375, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-05, 0.0, -0.00812474638223648, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -10.197610082191773, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Draw(<UNK>(Count(CardSelector(condition=IsType(\n            MINION_TYPE.MECH))), value=0)), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.DEMON))), value=0))),\n            OpponentMinionCountIsGreaterThan(0)])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.00011967896716669202, -6.151197158033028e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.503394853192731e-06, -7.62939453125e-06, -0.0037078857421875, -0.0001430511474609375, -6.687417771900073e-05, -3.814697265625e-06, -0.0002622227475512773, 0.0, -0.0023671388626098633, -1.9073486328125e-06, -0.5539226531982422, 0.0, -3.445148468017578e-05, 0.0, -9.72747802734375e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00054168701171875, -1.1444091796875e-05, -0.0045261383056640625, 0.0, -0.8267860412597656, -0.5366411209106445, -0.009325196035206318, -0.010314456187188625, -0.008803367614746094, -0.0001010894775390625, -0.0003370708436705172, 0.0, -0.0007861405611038208, 0.0, -0.38328075408935547, 0.0, -0.0001010894775390625, -4.9591064453125e-05, -0.7609672546386719, -0.0002765655517578125, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.009914517402648926, 0.0, -1.9073486328125e-05, -0.0019435882568359375, -0.00324249267578125, -1.33514404296875e-05, -1.9073486328125e-06, -0.16312777996063232, -0.010934829711914062, 0.0, -7.82012939453125e-05, -0.0002269744873046875, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.000957489013671875, -3.814697265625e-06, -0.010532379150390625, -3.814697265625e-06, -3.814697265625e-06, -0.0001239776611328125, -1.52587890625e-05, 0.0, 0.0, -0.00049591064453125, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.010981559753417969, -0.019720077514648438, -1.1444091796875e-05, -2.47955322265625e-05, -0.06618894636631012, -5.3763389587402344e-05, -0.0002593994140625, -0.0001468658447265625, -0.45506858825683594, -0.0006771087646484375, 0.0, -0.020957469940185547, -0.00237429141998291, -5.53131103515625e-05, -0.0031223297119140625, -0.0016155242919921875, -3.814697265625e-05, -1.9073486328125e-06, -0.042952775955200195, -3.981590270996094e-05, -2.09808349609375e-05, -0.023820877075195312, -0.0046710968017578125, -0.000148773193359375, 0.0, -0.050342559814453125, -0.001914381980895996, 0.0, -0.0002613067626953125, -5.14984130859375e-05, -2.86102294921875e-05, -0.731817364692688, -3.576278118089249e-07, -0.0010957717895507812, -0.0004901885986328125, -1.9073486328125e-05, -7.62939453125e-06, -0.0002384185791015625, -0.00036656856536865234, 0.0, -3.4332275390625e-05, -1.9073486328125e-05, 0.0, -4.00543212890625e-05, 0.0, -0.00012969970703125, -1.52587890625e-05, -1.687209129333496, -1.9073486328125e-06, -4.9591064453125e-05, -0.000213623046875, -1.33514404296875e-05, -0.032559871673583984, -1.9073486328125e-06, -0.0004177093505859375, -5.7220458984375e-06, -0.000522132555488497, 0.0, -0.03957939147949219, -0.39867401123046875, -6.866455078125e-05, 0.0, -0.025423049926757812, -0.0009593963623046875, -1.33514404296875e-05, -1.33514404296875e-05, -0.05298423767089844, -2.09808349609375e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.4383115768432617, -0.0002162456512451172, -3.24249267578125e-05, -0.03865623474121094, -0.6456527709960938, -1.33514404296875e-05, 0.0, -0.3466212749481201, -0.00037384033203125, -3.576278118089249e-07, -0.06066703796386719, -0.001972198486328125, -0.0003223419189453125, -4.00543212890625e-05, -1.9073486328125e-06, -0.0002962350845336914, -0.00012457363482099026, 0.0, -0.0006809234619140625, -5.7220458984375e-06, 0.0, -5.14984130859375e-05, 0.0, -5.7220458984375e-05, -1.33514404296875e-05, -0.9453945159912109, -1.52587890625e-05, -0.0001373291015625, -0.00051116943359375, -1.1444091796875e-05, -0.017755746841430664, -3.814697265625e-06, -0.0002727508544921875, -7.62939453125e-06, -0.000274655845714733, 0.0, -0.0010042190551757812, -0.000896453857421875, 0.0, 0.0, -0.4214038848876953, -0.014491081237792969, -0.0233306884765625, -0.0005570650100708008, -0.35681629180908203, -0.000335693359375, -3.814697265625e-06, -7.62939453125e-06, -7.82012939453125e-05, 0.0, -0.008081590756773949, 0.0], "choice_history": [80, 159, 295, 88, 138, "Succubus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Succubus", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 240, "Discard", "<EOS>", 109, 200, "4", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -10.309643685293508, "model_output": {"_type": "Module", "body": [{"name": "Succubus", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Succubus", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole0": "Discard", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 3, "hole0": 4, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -23.03304100036621], "choice_history": [80, 159, 294], "score": -23.033048629760742, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6927165985107422, -9.72747802734375e-05, -1.33514404296875e-05, -0.35843658447265625, -0.0001125335693359375, 0.0, -7.82012939453125e-05, 0.0, -9.333703201264143e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.009494781494140625, -0.00031280517578125, -1.9073486328125e-05, -0.00019429226813372225, -0.0006237030029296875, -0.00014816856128163636, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.06462934613227844, 0.0, -0.0014171600341796875, 0.0, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, -1.1920928244535389e-07, -0.000171661376953125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-05, -0.0001087188720703125, -9.5367431640625e-06, -0.00238800048828125, -0.0001544952392578125, -0.00086212158203125, -0.0001049041748046875, -0.000377655029296875, 0.0, -0.000286102294921875, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0007114410400390625, -1.71661376953125e-05, -0.3968839645385742, -0.0016231536865234375, -0.0002689361572265625, -1.9073486328125e-06, -0.005418851040303707, 0.0, -3.373984509380534e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 287, 48, 169, "War", " ", "Golem", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -1.7305544653280478, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "War Golem"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6977424621582031, -0.0007915496826171875, -7.748573807475623e-06, -6.651878356933594e-05, -3.075599670410156e-05, 0.0, -8.65790352690965e-05, 0.0, -0.05115509033203125, -3.814697265625e-06, -1.2755393072438892e-05, -3.814697265625e-05, -6.103515625e-05, -0.0018825531005859375, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, -8.20159912109375e-05, -1.00323486328125, -0.03190803527832031, -0.0008220672607421875, -1.9073486328125e-06, -0.002240411238744855, 0.0, -1.669605990173295e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -1.982769568325125, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 7, "hole0": "War Golem", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6977424621582031, -0.0007915496826171875, -7.748573807475623e-06, -6.651878356933594e-05, -3.075599670410156e-05, 0.0, -8.65790352690965e-05, 0.0, -0.05115509033203125, -3.814697265625e-06, -1.2755393072438892e-05, -3.814697265625e-05, -6.103515625e-05, -0.0018825531005859375, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, -8.20159912109375e-05, -1.404618263244629, -0.000492095947265625, -0.0003833770751953125, 0.0, -0.007801894098520279, 0.0, -3.0165807402227074e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -2.3578713840305454, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 7, "hole0": "War Golem", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6977424621582031, -0.0007915496826171875, -7.748573807475623e-06, -6.651878356933594e-05, -3.075599670410156e-05, 0.0, -8.65790352690965e-05, 0.0, -0.05115509033203125, -3.814697265625e-06, -1.2755393072438892e-05, -3.814697265625e-05, -6.103515625e-05, -0.0018825531005859375, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, -8.20159912109375e-05, -1.6383132934570312, -0.00020599365234375, -0.0006771087646484375, 0.0, -0.0011186301708221436, 0.0, -1.824585342546925e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -2.584878859755804, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 7, "hole0": "War Golem", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6927165985107422, -9.72747802734375e-05, -1.33514404296875e-05, -1.2017440795898438, -0.0003814697265625, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -4.374979471322149e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.07002830505371094, -1.33514404296875e-05, -1.71661376953125e-05, -5.125868119648658e-05, -0.00022935867309570312, -9.762901754584163e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -0.00015831837663426995, -2.0265579223632812e-06, -0.00043487548828125, 0.0, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, -2.3841855067985307e-07, -6.103515625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0015354156494140625, -0.0001220703125, -9.5367431640625e-06, -6.67572021484375e-05, -0.000110626220703125, 0.0, -0.0005855560302734375, -3.0517578125e-05, -1.9073486328125e-06, -4.208087921142578e-05, -3.814697265625e-06, -8.0108642578125e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -9.1552734375e-05, -5.53131103515625e-05, -0.41347312927246094, -0.10975265502929688, -0.0009250640869140625, -1.9073486328125e-06, -0.0009053422254510224, 0.0, -1.5502220776397735e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "War", " ", "Golem", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -2.6866934337193413, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "War Golem"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6977424621582031, -0.0007915496826171875, -7.748573807475623e-06, -6.651878356933594e-05, -3.075599670410156e-05, 0.0, -8.65790352690965e-05, 0.0, -0.05115509033203125, -3.814697265625e-06, -1.2755393072438892e-05, -3.814697265625e-05, -6.103515625e-05, -0.0018825531005859375, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, -8.20159912109375e-05, -1.7986650466918945, -0.00017213821411132812, -0.00019073486328125, -1.9073486328125e-06, -0.0017245433991774917, 0.0, -1.7651880625635386e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -2.745317610255256, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 7, "hole0": "War Golem", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6927165985107422, -9.72747802734375e-05, -1.33514404296875e-05, -0.35843658447265625, -0.0001125335693359375, 0.0, -7.82012939453125e-05, 0.0, -9.333703201264143e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.009494781494140625, -0.00031280517578125, -1.9073486328125e-05, -0.00019429226813372225, -0.0006237030029296875, -0.00014816856128163636, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -0.06462934613227844, 0.0, -0.0014171600341796875, 0.0, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, -1.1920928244535389e-07, -0.000171661376953125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-05, -0.0001087188720703125, -9.5367431640625e-06, -0.00238800048828125, -0.0001544952392578125, -0.00086212158203125, -0.0001049041748046875, -0.000377655029296875, 0.0, -0.000286102294921875, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0007114410400390625, -1.71661376953125e-05, -1.5602235794067383, -0.003813624382019043, -0.0002079010009765625, -1.9073486328125e-06, -0.001166140311397612, 0.0, -1.8602957425173372e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 287, 48, 169, "War", " ", "Golem", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -2.8917556681188827, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "War Golem"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.08488750457763672, -7.62939453125e-06, -4.160403477726504e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0001201629638671875, -3.814697265625e-06, -0.0001583099365234375, -1.9073486328125e-06, -6.67572021484375e-05, -0.6927165985107422, -9.72747802734375e-05, -1.33514404296875e-05, -1.2017440795898438, -0.0003814697265625, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -4.374979471322149e-05, -1.9073486328125e-06, -1.3470649719238281e-05, 0.0, -0.07002830505371094, -1.33514404296875e-05, -1.71661376953125e-05, -5.125868119648658e-05, -0.00022935867309570312, -9.762901754584163e-05, 0.0, -1.33514404296875e-05, -2.288818359375e-05, -0.00015831837663426995, -2.0265579223632812e-06, -0.00043487548828125, 0.0, -3.62396240234375e-05, 0.0, -2.47955322265625e-05, -2.3841855067985307e-07, -6.103515625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -4.9591064453125e-05, -7.62939453125e-06, -0.0015354156494140625, -0.0001220703125, -9.5367431640625e-06, -6.67572021484375e-05, -0.000110626220703125, 0.0, -0.0005855560302734375, -3.0517578125e-05, -1.9073486328125e-06, -4.208087921142578e-05, -3.814697265625e-06, -8.0108642578125e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -9.1552734375e-05, -5.53131103515625e-05, -1.4234952926635742, -0.0007371902465820312, -0.0001983642578125, 0.0, -0.0008858094224706292, 0.0, -1.5026598703116179e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "War", " ", "Golem", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -3.5869515167249517, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "War Golem"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.7199487686157227, -0.0009860992431640625, -2.9802276912960224e-06, -2.4914723326219246e-05, -2.47955322265625e-05, 0.0, -1.3133700122125447e-05, 0.0, -0.00024628639221191406, 0.0, -0.00078582763671875, -1.9073486328125e-06, -0.0006268443539738655, 0.0, -1.7053091141860932e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -3.8298839299594647, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.4152870178222656, -0.000102996826171875, -2.3841855067985307e-07, -1.0013580322265625e-05, -0.0002690553665161133, 0.0, -1.7773170839063823e-05, 0.0, -4.57763671875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0004253387451171875, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -4.38690185546875e-05, -1.1444091796875e-05, -0.5767850875854492, -0.0036051273345947266, -0.0003452301025390625, -1.9073486328125e-06, -0.003016566624864936, 0.0, -1.5149082173593342e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -4.107254667782257, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "War Golem", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type"}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.4152870178222656, -0.000102996826171875, -2.3841855067985307e-07, -1.0013580322265625e-05, -0.0002690553665161133, 0.0, -1.7773170839063823e-05, 0.0, -4.57763671875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0004253387451171875, -3.24249267578125e-05, -1.52587890625e-05, 0.0, -4.38690185546875e-05, -1.1444091796875e-05, -1.0518274307250977, -0.013517379760742188, -0.0011444091796875, 0.0, -0.0008858094224706292, 0.0, -1.4790915884077549e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -4.590875419707885, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "War Golem", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}, "hole3": "minion_type"}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 0, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.272388935089111, -0.0031461715698242188, -0.0001677137188380584, -2.312659489689395e-05, -4.017353057861328e-05, -5.7220458984375e-06, -0.008318536914885044, -0.0018672943115234375, -0.004461765289306641, -6.4849853515625e-05, -0.0046825408935546875, -1.1444091796875e-05, -0.008029562421143055, 0.0, -0.00010264708544127643, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "War", " ", "Golem", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -5.410515802504847, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"hole1": "ALL", "hole0": "War Golem", "_type": "Template13", "hole2": "COMMON"}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -0.10686104744672775, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -4.8018646240234375, -0.0001678466796875, -1.5497195136049413e-06, -2.9683109460165724e-05, -9.548664093017578e-05, 0.0, -0.00024375857901759446, -1.9073486328125e-06, -3.4332275390625e-05, -1.33514404296875e-05, -0.5394353866577148, -3.814697265625e-06, -0.0002786724944598973, 0.0, -9.064591722562909e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "War", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -5.449384797352195, "model_output": {"_type": "Module", "body": [{"name": "WarGolem", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>Golem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -4.1961669921875e-05, -1.1444091796875e-05, -2.3542356491088867, -0.0001053762316587381, -4.768370445162873e-07, -3.0517578125e-05, -4.38690185546875e-05, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.7199487686157227, -0.0009860992431640625, -2.9802276912960224e-06, -2.4914723326219246e-05, -2.47955322265625e-05, 0.0, -1.3133700122125447e-05, 0.0, -0.00024628639221191406, 0.0, -0.00078582763671875, -1.9073486328125e-06, -0.0006268443539738655, 0.0, -1.7053091141860932e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Golem", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 110, 202, "7", "<EOS>", "7", "<EOS>"], "score": -6.077258531621624, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Golem", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.71661376953125e-05, -4.00543212890625e-05, -23.069414138793945], "choice_history": [80, 159, 294], "score": -23.06947135925293, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}
{"beams": [{"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Attack())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -0.1855640411376953, -6.103515625e-05, -8.392333984375e-05, -4.57763671875e-05, -0.04736202210187912, -0.14980261027812958, 0.0, -0.026162385940551758, -8.0108642578125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "score": -0.7725464959039385, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole1": "<UNK>Attack", "hole0": "Buff", "_type": "Template69"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Attack())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -2.042037010192871, 0.0, -0.000118255615234375, -0.007946968078613281, -1.71661376953125e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -0.0001621246337890625, -0.000125885009765625, -0.012774467468261719, -0.07337474822998047, -0.0005088367033749819, -1.1920928244535389e-07, -0.009376986883580685, 0.0, -0.02591097354888916, -7.987022399902344e-06, -0.06637871265411377, -4.971027374267578e-05, -1.9073486328125e-06, -0.19577980041503906, -6.103515625e-05, -8.392333984375e-05, -4.38690185546875e-05, -0.04830186814069748, -0.15352408587932587, 0.0, -0.02630925178527832, -7.82012939453125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "score": -2.684732364472424, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole1": "<UNK>Attack", "hole0": "Buff", "_type": "Template69"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            BuffUntil(ChangeAttack(2), HeroSelector())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -1.8656930923461914, -0.0021429061889648438, -3.814697265625e-06, -1.9073486328125e-06, -0.08388316631317139, -0.0038067102432250977, -7.2479248046875e-05, -0.10259056091308594, -0.07970142364501953, -0.003975868225097656, -0.0023425817489624023, -1.1444091796875e-05, -0.0014495849609375, -2.6702880859375e-05, -0.4316059350967407, -6.28232883173041e-05, -1.9073486328125e-06, -0.06642508506774902, -3.0517578125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "score": -3.0072131041706456, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Health())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -0.1855640411376953, -6.103515625e-05, -8.392333984375e-05, -4.57763671875e-05, -0.04736202210187912, -2.5810132026672363, 0.0, -0.0033826828002929688, -2.86102294921875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Health", "<EOS>", "Self", "Selector", "<EOS>"], "score": -3.1809258867397006, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole1": "<UNK>Health", "hole0": "Buff", "_type": "Template69"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Windfury())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -0.1855640411376953, -6.103515625e-05, -8.392333984375e-05, -4.57763671875e-05, -0.04736202210187912, -3.060242176055908, 0.0, -0.010379314422607422, -2.288818359375e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Windfury", "<EOS>", "Self", "Selector", "<EOS>"], "score": -3.6671457697047884, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole1": "<UNK>Windfury", "hole0": "Buff", "_type": "Template69"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            BuffUntil(ChangeAttack(2), WeaponSelector())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -1.8656930923461914, -0.0021429061889648438, -3.814697265625e-06, -1.9073486328125e-06, -0.08388316631317139, -0.0038067102432250977, -7.2479248046875e-05, -0.10259056091308594, -0.07970142364501953, -0.003975868225097656, -0.0023425817489624023, -1.1444091796875e-05, -0.0014495849609375, -2.6702880859375e-05, -1.849572777748108, -0.001114487648010254, -3.933906555175781e-06, -0.006948947906494141, -4.017353057861328e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "score": -4.366767156530827, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            BuffUntil(ChangeAttack(2), SelfSelector())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -1.8656930923461914, -0.0021429061889648438, -3.814697265625e-06, -1.9073486328125e-06, -0.08388316631317139, -0.0038067102432250977, -7.2479248046875e-05, -0.10259056091308594, -0.07970142364501953, -0.003975868225097656, -0.0023425817489624023, -1.1444091796875e-05, -0.0014495849609375, -2.6702880859375e-05, -1.826719880104065, -0.000179290771484375, 0.0, -0.03465306758880615, -2.47955322265625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "score": -4.370663869787663, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            BuffUntil(ChangeAttack(2), HeroSelector())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -2.042037010192871, 0.0, -0.000118255615234375, -0.007946968078613281, -1.71661376953125e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -0.0001621246337890625, -0.000125885009765625, -0.012774467468261719, -0.07337474822998047, -0.0005088367033749819, -1.1920928244535389e-07, -0.009376986883580685, 0.0, -0.02591097354888916, -7.987022399902344e-06, -0.06637871265411377, -4.971027374267578e-05, -1.9073486328125e-06, -1.8174829483032227, -0.0021715164184570312, -3.814697265625e-06, -1.9073486328125e-06, -0.0830458402633667, -0.0038628578186035156, -7.05718994140625e-05, -0.10227012634277344, -0.07919692993164062, -0.0039348602294921875, -0.00231778621673584, -1.1444091796875e-05, -0.001476287841796875, -2.6702880859375e-05, -0.43151628971099854, -6.294249760685489e-05, -1.9073486328125e-06, -0.06470930576324463, -3.0517578125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "score": -4.852744886626155, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Attack())), TargetSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -0.1855640411376953, -6.103515625e-05, -8.392333984375e-05, -4.57763671875e-05, -0.04736202210187912, -0.14980261027812958, 0.0, -4.244797706604004, -0.0002899169921875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Attack", "<EOS>", "Target", "Selector", "<EOS>"], "score": -4.991391624917, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "TargetSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole1": "<UNK>Attack", "hole0": "Buff", "_type": "Template69"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Health())), SelfSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -2.042037010192871, 0.0, -0.000118255615234375, -0.007946968078613281, -1.71661376953125e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -0.0001621246337890625, -0.000125885009765625, -0.012774467468261719, -0.07337474822998047, -0.0005088367033749819, -1.1920928244535389e-07, -0.009376986883580685, 0.0, -0.02591097354888916, -7.987022399902344e-06, -0.06637871265411377, -4.971027374267578e-05, -1.9073486328125e-06, -0.19577980041503906, -6.103515625e-05, -8.392333984375e-05, -4.38690185546875e-05, -0.04830186814069748, -2.5575196743011475, 0.0, -0.003380894660949707, -2.86102294921875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Health", "<EOS>", "Self", "Selector", "<EOS>"], "score": -5.065750004705464, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "SelfSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole1": "<UNK>Health", "hole0": "Buff", "_type": "Template69"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.009688377380371094, -7.62939453125e-06, -3.743161141755991e-05, -3.814697265625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -4.00543212890625e-05, -0.0003795623779296875, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -2.0265579223632812e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.006198883056640625, -1.9073486328125e-06, -1.9073486328125e-05, -4.494089080253616e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.00010847456724150106, -4.172325134277344e-06, -3.814697265625e-06, 0.0, -8.58306884765625e-05, 0.0, -6.890296936035156e-05, -1.1920928244535389e-07, -0.0010071992874145508, -3.814697265625e-06, -0.00023651123046875, 0.0, -2.47955322265625e-05, -0.00023651123046875, -1.9073486328125e-06, 0.0, -0.14515113830566406, 0.0, -1.9073486328125e-05, -0.01099395751953125, -1.71661376953125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -0.0001544952392578125, -0.0001201629638671875, -0.011784553527832031, -0.07024860382080078, -0.00048083244473673403, -1.1920928244535389e-07, -0.009536756202578545, 0.0, -0.027024507522583008, -7.987022399902344e-06, -0.0659874677658081, -4.398822784423828e-05, -1.9073486328125e-06, -4.594552040100098, -0.000293731689453125, -0.07881581783294678, -0.002055525779724121, -0.05324435234069824, -0.002712249755859375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Acidmaw", "<EOS>", 47, 165, "7", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 96, 176, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "score": -5.095058310438603, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "hole5": "TargetSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole0": "Frozen", "_type": "Template77"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, minion_type=MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -4.979317665100098, -0.0015048980712890625, -0.0005104430601932108, -7.62939453125e-06, -0.0002942844294011593, 0.0, -0.0004291534423828125, -9.1552734375e-05, -0.536503791809082, -7.62939453125e-06, -9.1552734375e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00019073486328125, -9.5367431640625e-06, -0.01763916015625, -1.9073486328125e-06, -1.3609580993652344, -1.9073486328125e-06, -0.0006504058837890625, -2.86102294921875e-05, -0.0013570785522460938, -5.91278076171875e-05, -0.15193748474121094, -3.0517578125e-05, -0.15081922709941864, 0.0, -0.003088918747380376, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Acidmaw", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", 110, 202, "4", "<EOS>", "2", "<EOS>"], "score": -7.2087120991782285, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Acidmaw", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "minion_type", "hole2": "HUNTER", "hole8": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 2, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST, minion_type=MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -4.979317665100098, -0.0015048980712890625, -0.0005104430601932108, -7.62939453125e-06, -0.0002942844294011593, 0.0, -0.0004291534423828125, -9.1552734375e-05, -0.9743289947509766, 0.0, -0.0002765655517578125, -7.62939453125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0002231597900390625, -1.33514404296875e-05, -0.028371810913085938, -1.9073486328125e-06, -1.1904630661010742, -1.9073486328125e-06, -0.00067138671875, -3.0517578125e-05, -0.0014085769653320312, -5.340576171875e-05, -0.14821147918701172, -3.0517578125e-05, -0.14973215758800507, 0.0, -0.00305197318084538, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Acidmaw", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", 110, 202, "4", "<EOS>", "2", "<EOS>"], "score": -7.482226260064635, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Acidmaw", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "minion_type", "hole2": "HUNTER", "hole8": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 2, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.52587890625e-05, -0.002914468990638852, -0.0001518726348876953, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -7.186113357543945, -0.004403114318847656, -4.410734163684538e-06, -4.38690185546875e-05, -0.08106362819671631, -3.814697265625e-06, -0.0002040863037109375, -2.47955322265625e-05, -0.0002117156982421875, 0.0, -0.0001506805419921875, -7.62939453125e-06, -0.008487701416015625, -9.5367431640625e-06, -0.4867229461669922, -1.33514404296875e-05, -0.024784225970506668, 0.0, -0.0011850583832710981, 0.0], "choice_history": [80, 159, 295, 88, 138, "Acidmaw", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Acidmaw", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "4", "<EOS>", "2", "<EOS>"], "score": -7.79659372380911, "model_output": {"_type": "Module", "body": [{"name": "Acidmaw", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Acidmaw", "hole2": "minion_type", "_type": "Template7", "hole4": "BEAST", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 2, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, 0.0, -22.95691680908203], "choice_history": [80, 159, 294], "score": -22.95691680908203, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n"}
{"beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -0.21642684936523438, -2.6702880859375e-05, -1.71661376953125e-05, -9.775113539944869e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9907602109014988e-05, 0.0, -0.0034637451171875, 0.0, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -2.2649765014648438e-06, -0.0008220672607421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -2.288818359375e-05, -6.318082796497038e-06, -0.07138633728027344, -7.62939453125e-06, -0.001895904541015625, -0.00319671630859375, -2.86102294921875e-05, -0.00012791156768798828, -1.1444091796875e-05, -0.0005779266357421875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002899169921875, -3.933906555175781e-06, -0.0001163482666015625, -0.0008293390274047852, -0.0013523101806640625, -5.91278076171875e-05, -0.00020730416872538626, -1.1563301086425781e-05, -0.00011551361967576668, 0.0, -0.0031539201736450195, -1.52587890625e-05, -0.0006237030029296875, -8.20159912109375e-05, -4.00543212890625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.3169955975135963, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -1.6611366271972656, -9.5367431640625e-06, -2.288818359375e-05, -3.099436753473128e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -9.417321052751504e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, -2.2649765014648438e-06, -0.0001201629638671875, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.1444062693044543e-05, -0.09133434295654297, -5.7220458984375e-06, -0.0001373291015625, -4.00543212890625e-05, -6.866455078125e-05, -1.9073486328125e-06, -0.0035734176635742188, -6.4849853515625e-05, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-05, -4.57763671875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.000324249267578125, -3.814697265625e-06, -8.392333984375e-05, -0.0009000301361083984, -0.0018825531005859375, -4.00543212890625e-05, -0.00023436473566107452, -1.1563301086425781e-05, -0.00010585741983959451, 0.0, -0.003491520881652832, -4.1961669921875e-05, -0.0007839202880859375, -0.0001068115234375, -6.103515625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -1.7768491274148346, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -0.21642684936523438, -2.6702880859375e-05, -1.71661376953125e-05, -9.775113539944869e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9907602109014988e-05, 0.0, -0.0034637451171875, 0.0, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -2.2649765014648438e-06, -0.0008220672607421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -2.288818359375e-05, -6.318082796497038e-06, -2.9637985229492188, -0.0011310577392578125, -6.67572021484375e-05, -0.0019445419311523438, -2.6702880859375e-05, -0.0002957582473754883, -7.62939453125e-06, -0.00180816650390625, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003604888916015625, -5.9604644775390625e-06, -0.00012969970703125, -0.0009559392929077148, -0.0013332366943359375, -4.76837158203125e-05, -0.0002008669835049659, -1.1563301086425781e-05, -0.00011908992019016296, 0.0, -0.003117680549621582, -1.52587890625e-05, -0.000583648681640625, -8.7738037109375e-05, -4.00543212890625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.208958483508468, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -1.6611366271972656, -9.5367431640625e-06, -2.288818359375e-05, -3.099436753473128e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -9.417321052751504e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, -2.2649765014648438e-06, -0.0001201629638671875, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.1444062693044543e-05, -2.755067825317383, -0.0022983551025390625, -0.000431060791015625, -7.62939453125e-06, -6.866455078125e-05, -3.814697265625e-06, -0.0002193450927734375, -8.96453857421875e-05, -3.814697265625e-06, -7.2479248046875e-05, -1.52587890625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.00026702880859375, -1.9073486328125e-06, -8.96453857421875e-05, -0.0009645223617553711, -0.001911163330078125, -3.814697265625e-05, -0.00022602018725592643, -1.1444091796875e-05, -0.00010383088374510407, 0.0, -0.0034972429275512695, -4.1961669921875e-05, -0.000751495361328125, -0.0001010894775390625, -6.103515625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.439805961377942, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -0.21642684936523438, -2.6702880859375e-05, -1.71661376953125e-05, -9.775113539944869e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9907602109014988e-05, 0.0, -0.0034637451171875, 0.0, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -2.2649765014648438e-06, -0.0008220672607421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -2.288818359375e-05, -6.318082796497038e-06, -4.633366584777832, 0.0, -0.0004291534423828125, -0.008708000183105469, -2.288818359375e-05, -0.0002690553665161133, -1.52587890625e-05, -0.0010776519775390625, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.000194549560546875, -3.933906555175781e-06, -8.392333984375e-05, -0.0007436275482177734, -0.0014133453369140625, -5.14984130859375e-05, -0.000214218016481027, -1.1563301086425781e-05, -0.00011551362695172429, 0.0, -0.0030738115310668945, -1.52587890625e-05, -0.0006313323974609375, -8.20159912109375e-05, -4.1961669921875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.883431768761511, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "LEGENDARY"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -5.526364326477051, -0.000232696533203125, -1.4305104514278355e-06, -0.0007944107055664062, -4.351059760665521e-05, 0.0, -0.17124366760253906, -1.9073486328125e-06, -8.833097672322765e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.00012969970703125, -7.62939453125e-06, 0.0, -0.00011646747589111328, -1.728534698486328e-05, -6.4849853515625e-05, -0.0002391338348388672, -0.002529144287109375, -5.53131103515625e-05, -0.0003176918253302574, -9.5367431640625e-06, -0.0001009701591101475, 0.0, -0.002340555191040039, -1.52587890625e-05, -0.0004444122314453125, -0.0001010894775390625, -3.814697265625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.707256529009442, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Boar", "hole2": "FREE", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.BEAST,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -0.21642684936523438, -2.6702880859375e-05, -1.71661376953125e-05, -9.775113539944869e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9907602109014988e-05, 0.0, -0.0034637451171875, 0.0, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -2.2649765014648438e-06, -0.0008220672607421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -2.288818359375e-05, -6.318082796497038e-06, -5.595531463623047, -0.000125885009765625, -0.000415802001953125, -0.008722305297851562, -2.86102294921875e-05, -0.00017940998077392578, -1.1444091796875e-05, -0.0009288787841796875, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0002079010009765625, -3.933906555175781e-06, -8.7738037109375e-05, -0.0008333921432495117, -0.0013599395751953125, -4.9591064453125e-05, -0.0002129068598151207, -1.1563301086425781e-05, -0.00012099726882297546, 0.0, -0.0031262636184692383, -1.71661376953125e-05, -0.0006256103515625, -8.0108642578125e-05, -4.38690185546875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.845591402558057, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.BEAST,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -1.6611366271972656, -9.5367431640625e-06, -2.288818359375e-05, -3.099436753473128e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -9.417321052751504e-06, 0.0, -3.0517578125e-05, 0.0, -1.33514404296875e-05, 0.0, -4.38690185546875e-05, -2.2649765014648438e-06, -0.0001201629638671875, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.1444062693044543e-05, -4.645427703857422, -0.000202178955078125, -0.002223968505859375, -1.33514404296875e-05, -0.0001373291015625, -5.7220458984375e-06, -0.0023288726806640625, -9.72747802734375e-05, -1.9073486328125e-06, -5.91278076171875e-05, -2.288818359375e-05, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0003376007080078125, -3.814697265625e-06, -8.58306884765625e-05, -0.0008568763732910156, -0.001865386962890625, -3.814697265625e-05, -0.00022911951236892492, -1.1563301086425781e-05, -0.00010931454744422808, 0.0, -0.0034695863723754883, -4.00543212890625e-05, -0.00075531005859375, -0.0001125335693359375, -5.91278076171875e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "BEAST", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.331971383737482, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "BEAST"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        __init__().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -6.159177303314209, -0.002596735954284668, -0.00029087066650390625, -1.9073486328125e-06, -0.2567453384399414, -1.71661376953125e-05, -1.1444091796875e-05, -6.198863957251888e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.4424188520933967e-05, 0.0, -0.004596710205078125, 0.0, -1.33514404296875e-05, 0.0, -4.00543212890625e-05, -2.2649765014648438e-06, -0.000885009765625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -2.47955322265625e-05, -6.437291176553117e-06, -0.07630157470703125, -9.5367431640625e-06, -0.00189208984375, -0.003246307373046875, -3.0517578125e-05, -0.00013363361358642578, -1.1444091796875e-05, -0.0005741119384765625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002841949462890625, -3.933906555175781e-06, -0.0001163482666015625, -0.0008341073989868164, -0.0013561248779296875, -5.7220458984375e-05, -0.00020730416872538626, -1.1563301086425781e-05, -0.0001153944103862159, 0.0, -0.0031548738479614258, -1.52587890625e-05, -0.000621795654296875, -8.20159912109375e-05, -4.00543212890625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "__init__", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.5226487886011455, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "__init__", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, taunt=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -0.0022335052490234375, -9.918212890625e-05, 0.0, -0.0001621246337890625, 0.0, -0.002853035693988204, -3.814697265625e-06, -1.7404556274414062e-05, -1.9073486328125e-06, -0.21642684936523438, -2.6702880859375e-05, -1.71661376953125e-05, -9.775113539944869e-06, -2.0265579223632812e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9907602109014988e-05, 0.0, -0.0034637451171875, 0.0, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -2.2649765014648438e-06, -0.0008220672607421875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -2.288818359375e-05, -6.318082796497038e-06, -0.07138633728027344, -7.62939453125e-06, -0.001895904541015625, -0.00319671630859375, -2.86102294921875e-05, -0.00012791156768798828, -1.1444091796875e-05, -0.0005779266357421875, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002899169921875, -3.933906555175781e-06, -0.0001163482666015625, -0.0008293390274047852, -0.0013523101806640625, -5.91278076171875e-05, -0.00020730416872538626, -1.1563301086425781e-05, -0.00011551361967576668, 0.0, -6.697943687438965, -1.9073486328125e-06, -0.000125885009765625, -6.67572021484375e-05, -6.4849853515625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.011283732088486, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -0.0046024322509765625, -7.62939453125e-06, -1.9073486328125e-05, -6.113359451293945, -4.76837158203125e-05, 0.0, -0.0001468658447265625, -1.9073486328125e-06, -0.00032420153729617596, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, -0.21468639373779297, -9.1552734375e-05, -1.71661376953125e-05, -0.00015090756642166525, -3.933906555175781e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005655353888869286, -1.9073486328125e-06, -0.000972747802734375, -3.814697265625e-06, -3.0517578125e-05, 0.0, -0.000232696533203125, -1.1920928244535389e-07, -0.000164031982421875, -9.5367431640625e-06, -0.0001163482666015625, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.91278076171875e-05, -3.4570680327306036e-06, -0.07058906555175781, -7.62939453125e-06, -0.000324249267578125, -1.52587890625e-05, -5.14984130859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0049076080322265625, -1.1920928244535389e-07, -0.00029754638671875, -0.00011277198791503906, -0.025564193725585938, -9.5367431640625e-06, -2.09808349609375e-05, -6.318092346191406e-05, -2.288818359375e-05, -0.0003986358642578125, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0564570426940918, -2.181529998779297e-05, -0.0003566741943359375, -0.4236326217651367, -0.0018768310546875, -0.00012588035315275192, -2.503394853192731e-06, -0.0011264621280133724, 0.0, -0.7009028196334839, -0.000446319580078125, -0.0013399124145507812, -0.000133514404296875, -0.000179290771484375, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 287, 48, 169, "Boar", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.6266889318956, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": 4, "_type": "Template65", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.0007038116455078125, -5.7220458984375e-06, -0.0002014636993408203, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000133514404296875, -1.9073486328125e-06, -0.00018310546875, -5.526364326477051, -0.000232696533203125, -1.4305104514278355e-06, -0.0007944107055664062, -4.351059760665521e-05, 0.0, -2.257488250732422, 0.0, -1.0251987987430766e-05, 0.0, -1.9073486328125e-05, -0.0001087188720703125, -1.33514404296875e-05, 0.0, -0.00015079975128173828, -2.491474151611328e-05, -8.392333984375e-05, -0.00018799304962158203, -0.00232696533203125, -4.57763671875e-05, -0.00031483115162700415, -7.62939453125e-06, -9.524811321171e-05, 0.0, -0.002278566360473633, -1.52587890625e-05, -0.0004329681396484375, -0.0001049041748046875, -3.814697265625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Boar", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.7931067712546565, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Boar", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -8.030189514160156, -0.000789642333984375, -1.0609570381348021e-05, -0.018670082092285156, -0.09649467468261719, -7.62939453125e-06, -4.5299530029296875e-06, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0005588531494140625, -0.000102996826171875, -0.00055694580078125, -0.0001926422119140625, -0.4835996627807617, -5.14984130859375e-05, -0.01745518110692501, -5.7220458984375e-06, -0.0008389941649511456, 0.0], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Boar", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "4", "<EOS>", "2", "<EOS>"], "score": -8.650232015051643, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Boar", "hole2": "minion_type", "_type": "Template7", "hole4": "BEAST", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 2, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [0.0, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -2.47955322265625e-05, -4.768360213347478e-06, -0.0003012202796526253, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.1563301086425781e-05, -4.57763671875e-05, -8.7738037109375e-05, -4.76837158203125e-05, -8.030189514160156, -0.000789642333984375, -1.0609570381348021e-05, -0.018670082092285156, -0.09649467468261719, -7.62939453125e-06, -4.5299530029296875e-06, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0005588531494140625, -0.000102996826171875, -0.00055694580078125, -0.0001926422119140625, -0.9712963104248047, -0.0003147125244140625, -0.0006682850071229041, -9.5367431640625e-06, -0.00025581245427019894, 0.0, -0.005107283592224121, -2.47955322265625e-05, -0.0011749267578125, -2.47955322265625e-05, -0.0001316070556640625, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Boar", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Boar", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -9.127290929512583, "model_output": {"_type": "Module", "body": [{"name": "Boar", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Boar", "hole2": "minion_type", "_type": "Template7", "hole4": "BEAST", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 2, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -1.1444091796875e-05, -21.787900924682617], "choice_history": [80, 159, 294], "score": -21.787912368774414, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.7885551452636719, -0.000453948974609375, -1.12053382396698, -7.62939453125e-06, -0.05200481414794922, -1.71661376953125e-05, -0.0005517005920410156, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.0042425945064224, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -2.127985954284668, -0.06929874420166016, -0.17536740005016327, -2.09808349609375e-05], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "2", "<EOS>"], "score": -3.414789538051764, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 2, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -3.0467653274536133, -0.008442878723144531, -0.0002727508544921875, -0.11956954002380371, -1.9073486328125e-06, -0.007006645202636719, -2.09808349609375e-05, -0.00030732154846191406, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.62612777497975, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -1.260475516319275, -3.254413604736328e-05, -0.00061798095703125, -2.288818359375e-05, -6.318092346191406e-05, 0.0, -1.0101404190063477, -0.0003147125244140625, -1.1244739294052124, -5.7220458984375e-06, -0.02991008758544922, -1.33514404296875e-05, -0.0004944801330566406, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.927452261712233, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -1.3280678987503052, 0.0, -0.001102447509765625, 0.0, -0.006035804748535156, -2.86102294921875e-05, -0.00399017333984375, -3.838539123535156e-05, -5.14984130859375e-05, -0.000377655029296875, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.000392913818359375, -0.0001621246337890625, -0.00030517578125, -0.0017614364624023438, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -0.012693405151367188, -0.00022125244140625, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0029574830550700426, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -8.797629561740905e-05, -2.682209014892578e-05, -0.061013221740722656, -0.0002193450927734375, -0.0076847076416015625, -0.5808873176574707, -3.814697265625e-06, -0.001155853271484375, -1.1444091796875e-05, -5.5670738220214844e-05, -1.9073486328125e-06, -0.7996187210083008, -0.0004673004150390625, -1.1097660064697266, -7.62939453125e-06, -0.05101299285888672, -1.52587890625e-05, -0.0005345344543457031, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.072960391313018, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, effects=[Effect(DidDamage(),\n            ActionTag(Kill(), Kill(Attack())))])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.9585103988647461, -0.6499872207641602, -0.10496706515550613, -0.28383609652519226, -0.0001569986343383789, -0.019867664203047752, -1.4662741705251392e-05, -1.2009913921356201, -0.00013279644190333784, -6.103515625e-05, -0.0111083984375, -9.5367431640625e-05, -0.02435184456408024, -0.0012636145111173391], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 71, 207, "Did", "Damage", "<EOS>", "Kill", "<EOS>", "Kill", "<EOS>", 282, 68, 260, "Attack", "<EOS>"], "score": -4.297461014247119, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole1": "Kill", "hole0": "DidDamage", "_type": "Template31", "hole4": [{"hole0": "Attack", "_type": "Template77"}], "hole3": "Kill"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -1.3280678987503052, 0.0, -0.001102447509765625, 0.0, -0.006035804748535156, -2.86102294921875e-05, -0.00399017333984375, -3.838539123535156e-05, -5.14984130859375e-05, -0.000377655029296875, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -0.0001316070556640625, 0.0, -0.000392913818359375, -0.0001621246337890625, -0.00030517578125, -0.0017614364624023438, -3.24249267578125e-05, -6.29425048828125e-05, 0.0, -0.012693405151367188, -0.00022125244140625, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0029574830550700426, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -8.797629561740905e-05, -2.682209014892578e-05, -2.860854148864746, -0.007746696472167969, -0.0002765655517578125, -0.12102019786834717, -1.9073486328125e-06, -0.0073451995849609375, -1.9073486328125e-05, -0.00027489662170410156, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.458043351441802, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, auras=[Effect(CharacterAttack(\n            IsHero()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.7885551452636719, -0.000453948974609375, -0.558547854423523, -3.063678741455078e-05, -0.0008029937744140625, -7.43865966796875e-05, -0.00353240966796875, -0.010242462158203125, -9.918212890625e-05, -0.0001239776611328125, -6.103515625e-05, -0.33905160427093506, -0.0001577138900756836, -0.0005207061767578125, -0.35566139221191406, -0.0003833770751953125, -0.3723865747451782, -0.002031993120908737, -2.3841855067985307e-07, -0.2050580382347107, -0.7694335579872131, -0.00010990512964781374, -0.0005321502685546875, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.37565040588378906, -7.82012939453125e-05, -9.5367431640625e-06, -0.0003643035888671875, -0.4941062927246094, -0.0004100799560546875, -0.005646109580993652, -1.1444091796875e-05, -1.3828277587890625e-05, -0.44365692138671875, -9.918212890625e-05, -0.003307698993012309, -4.1961669921875e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.00025749203632585704, -4.8160552978515625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.773757099748508, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, auras=[Effect(CharacterAttack(\n            IsMinion()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.7885551452636719, -0.000453948974609375, -0.558547854423523, -3.063678741455078e-05, -0.0008029937744140625, -7.43865966796875e-05, -0.00353240966796875, -0.010242462158203125, -9.918212890625e-05, -0.0001239776611328125, -6.103515625e-05, -0.33905160427093506, -0.0001577138900756836, -0.0005207061767578125, -0.35566139221191406, -0.0003833770751953125, -0.3723865747451782, -0.002031993120908737, -2.3841855067985307e-07, -0.2050580382347107, -1.2555546760559082, -1.1920928244535389e-07, -0.0022220611572265625, -3.24249267578125e-05, 0.0, 0.0, -0.11251449584960938, -9.34600830078125e-05, -7.62939453125e-06, -0.0002918243408203125, -0.42655467987060547, -0.000347137451171875, -0.004806876182556152, -1.52587890625e-05, -1.2159347534179688e-05, -0.39812469482421875, -9.72747802734375e-05, -0.0036885724402964115, -4.38690185546875e-05, -3.0517578125e-05, -1.52587890625e-05, -0.00025427338550798595, -6.35385513305664e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Minion", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.8846629314427545, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsMinion", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, auras=[Choice(Attack(), Give([Buff(\n            ChangeAttack(2))]), SelfSelector())])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.7885551452636719, -0.000453948974609375, -0.558547854423523, -3.063678741455078e-05, -0.0008029937744140625, -7.43865966796875e-05, -0.00353240966796875, -0.010242462158203125, -9.918212890625e-05, -0.0001239776611328125, -6.103515625e-05, -1.6618674993515015, -5.14984130859375e-05, -0.005290985107421875, -6.67572021484375e-05, -3.4332275390625e-05, -0.021901370957493782, -0.005145107861608267, -0.8317594528198242, -0.007083892822265625, -1.9073486328125e-06, 0.0, -0.19785141944885254, -4.541787347989157e-05, -5.7220458984375e-06, -0.31166934967041016, -0.00018310546875, -0.49609851837158203, -0.05461692810058594, -0.006321907043457031, -0.0037196583580225706, -1.2040138244628906e-05, -0.0002002716064453125, -0.0002079010009765625, -0.07209540158510208, -0.0003472089010756463, 0.0], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Choice", "<EOS>", 284, 68, 260, "Attack", "<EOS>", 40, 136, 19, 160, "Give", "<EOS>", 282, 43, 155, 282, 58, 244, "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -6.081218145045341, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole0": "Attack", "_type": "Template77"}, {"args": [{"_type": "List", "elts": [{"hole0": 2, "_type": "Template61"}]}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Choice"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -5.372323989868164, -7.62939453125e-06, -3.2186430871661287e-06, 0.0, -4.815914871869609e-05, 0.0, -0.4085693359375, 0.0, -0.0047512054443359375, -5.7220458984375e-06, -0.00015687942504882812, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.199357383934739, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, auras=[Effect(CharacterAttack(\n            IsHero()), MinionSelector(1))])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.7885551452636719, -0.000453948974609375, -0.558547854423523, -3.063678741455078e-05, -0.0008029937744140625, -7.43865966796875e-05, -0.00353240966796875, -0.010242462158203125, -9.918212890625e-05, -0.0001239776611328125, -6.103515625e-05, -0.33905160427093506, -0.0001577138900756836, -0.0005207061767578125, -0.35566139221191406, -0.0003833770751953125, -0.3723865747451782, -0.002031993120908737, -2.3841855067985307e-07, -0.2050580382347107, -0.7694335579872131, -0.00010990512964781374, -0.0005321502685546875, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -1.1900568008422852, -0.0011444091796875, 0.0, -0.08133125305175781, -0.014540672302246094, 0.0, -0.8861995339393616, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -6.623293817879784, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, auras=[Effect(CharacterAttack(\n            IsHero()), ActionTag(Attack(), SelfSelector()))])\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -0.3079228401184082, -2.0265579223632812e-06, -0.0036774873733520508, 0.0, -0.005854606628417969, -3.24249267578125e-05, -0.004058837890625, -6.079673767089844e-06, -3.0517578125e-05, -0.00141143798828125, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.0004024505615234375, -0.0001544952392578125, -0.0003414154052734375, -0.0014858245849609375, -2.86102294921875e-05, -6.29425048828125e-05, 0.0, -0.014246940612792969, -0.000316619873046875, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0014987594913691282, -2.682209014892578e-05, -1.33514404296875e-05, -1.9073486328125e-06, -8.809551945887506e-05, -2.872943878173828e-05, -0.050644874572753906, -0.0002193450927734375, -0.006282806396484375, -0.5399316549301147, -3.814697265625e-06, -0.0012264251708984375, -9.5367431640625e-06, -5.7578086853027344e-05, -1.9073486328125e-06, -0.7885551452636719, -0.000453948974609375, -0.558547854423523, -3.063678741455078e-05, -0.0008029937744140625, -7.43865966796875e-05, -0.00353240966796875, -0.010242462158203125, -9.918212890625e-05, -0.0001239776611328125, -6.103515625e-05, -0.33905160427093506, -0.0001577138900756836, -0.0005207061767578125, -0.35566139221191406, -0.0003833770751953125, -0.3723865747451782, -0.002031993120908737, -2.3841855067985307e-07, -0.2050580382347107, -0.7694335579872131, -0.00010990512964781374, -0.0005321502685546875, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.37565040588378906, -7.82012939453125e-05, -9.5367431640625e-06, -0.0003643035888671875, -1.2147283554077148, -0.000598907470703125, -0.19453944265842438, -0.003250641981139779, -0.007991790771484375, -2.86102294921875e-05, -0.6317847967147827, -0.0001478124177083373, 0.0], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "Mech", "<EOS>", "DRUID", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "2", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -6.879184416982497, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"hole0": "Attack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score_history": [0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.00018310546875, -1.1444091796875e-05, -0.0010572010651230812, -0.04776468127965927, -0.0004637667734641582, -8.332397555932403e-05, -3.0517578125e-05, -1.33514404296875e-05, 0.0, -3.576278118089249e-07, -5.7220458984375e-06, -5.960462772236497e-07, -3.814697265625e-05, -0.045355796813964844, -0.0007076263427734375, -3.588141771615483e-05, -2.6106808945769444e-05, -0.005662322044372559, -0.00030517578125, -9.989738464355469e-05, -1.33514404296875e-05, -1.3280678987503052, 0.0, -0.001102447509765625, 0.0, -5.263617515563965, -7.62939453125e-06, -4.7683533921372145e-06, 0.0, -7.414493302349001e-05, 0.0, -0.4816904067993164, 0.0, -0.00513458251953125, -5.7220458984375e-06, -0.00017201900482177734, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Anodized", "Robo", "Cub", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.18176411750369, "model_output": {"_type": "Module", "body": [{"name": "AnodizedRoboCub", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Anodized Robo Cub", "_type": "Template6", "hole2": "DRUID"}, {"hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -1.71661376953125e-05, -22.20220947265625], "choice_history": [80, 159, 294], "score": -22.202226638793945, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}
{"beams": [{"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = it()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -0.25849056243896484, -0.0007228851318359375, -2.4318398573086597e-05, -1.5974044799804688e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.0490406566532329e-05, -1.9073486328125e-06, -0.007527470588684082, 0.0, -0.001705169677734375, 0.0, -0.000232696533203125, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-05, -0.0001811981201171875, -5.960462772236497e-07, -0.019519805908203125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -3.325938814668916e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0001544952392578125, -1.52587890625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -0.7851285934448242, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.11007606983184814, -0.0016946792602539062, -0.000125885009765625, -0.001194000244140625, -3.814697265625e-06, -1.33514404296875e-05, -0.0006313323974609375, -3.0517578125e-05, -0.0007839202880859375, -5.7220458984375e-06, -1.1444091796875e-05, -0.0011892046313732862, -5.7220458984375e-06, -0.0009756088256835938, -1.9073486328125e-06, -0.042276378720998764, -9.5367431640625e-06, -0.040191650390625, -0.000255584716796875, -2.6702880859375e-05, -0.0001964569091796875, -0.0001354217529296875, -5.7220458984375e-06, -0.0021213293075561523, -0.0005327461985871196, -0.009553909301757812, -0.000782012939453125, -0.17821761965751648, -0.16953088343143463, -0.0118560791015625, -1.33514404296875e-05, -9.5367431640625e-06, -0.09824180603027344, -1.52587890625e-05, -1.33514404296875e-05, -0.05268383026123047, 0.0, -0.012314081192016602, -7.295608520507812e-05, -0.012901663780212402, 0.0, -0.00031280517578125, -3.814697265625e-05, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.033069610595703125, -0.00016021728515625, -0.053992271423339844, -5.7220458984375e-06, -0.0006656646728515625, -9.5367431640625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.0001850128173828125, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0002040863037109375, -1.9073486328125e-06, 0.0, -0.008588194847106934, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "it", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -1.9212602858568175, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "it", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.3484086990356445, -0.0011577606201171875, -6.985420623095706e-05, -1.3589850823336747e-05, -9.655952453613281e-06, -0.00152587890625, -1.5359266996383667, -1.9073486328125e-06, -5.340576171875e-05, -3.814697265625e-06, -0.0022430419921875, -0.01914215087890625, -0.0054378509521484375, 0.0, -0.0030536651611328125, 0.0, -0.09654521942138672, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Burrowing", " ", "Mine", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.0143762554953355, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Burrowing Mine", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -0.25849056243896484, -0.0007228851318359375, -2.4318398573086597e-05, -1.5974044799804688e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.0490406566532329e-05, -1.9073486328125e-06, -0.007527470588684082, 0.0, -0.001705169677734375, 0.0, -0.000232696533203125, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-05, -0.0001811981201171875, -5.960462772236497e-07, -0.019519805908203125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -3.325938814668916e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0001544952392578125, -1.52587890625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -0.7851285934448242, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.11007606983184814, -0.0016946792602539062, -0.000125885009765625, -0.001194000244140625, -3.814697265625e-06, -1.33514404296875e-05, -0.0006313323974609375, -3.0517578125e-05, -0.0007839202880859375, -5.7220458984375e-06, -1.1444091796875e-05, -0.0011892046313732862, -5.7220458984375e-06, -0.0009756088256835938, -1.9073486328125e-06, -0.042276378720998764, -9.5367431640625e-06, -0.040191650390625, -0.000255584716796875, -2.6702880859375e-05, -0.0001964569091796875, -0.0001354217529296875, -5.7220458984375e-06, -0.0021213293075561523, -0.0005327461985871196, -0.009553909301757812, -0.000782012939453125, -2.3588836193084717, -0.16953088343143463, -0.0118560791015625, -1.33514404296875e-05, -9.5367431640625e-06, -0.09824180603027344, -1.52587890625e-05, -1.33514404296875e-05, -0.05268383026123047, 0.0, -0.012314081192016602, -7.295608520507812e-05, -0.012901663780212402, 0.0, -0.00031280517578125, -3.814697265625e-05, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.033069610595703125, -0.00016021728515625, -0.053992271423339844, -5.7220458984375e-06, -0.0006656646728515625, -9.5367431640625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.0001850128173828125, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.0002040863037109375, -1.9073486328125e-06, 0.0, -0.008588194847106934, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -4.101926285507773, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.3484086990356445, -0.0011577606201171875, -6.985420623095706e-05, -1.3589850823336747e-05, -9.655952453613281e-06, -0.00152587890625, -1.4466122388839722, -0.0004825592041015625, -5.14984130859375e-05, -1.9073486328125e-06, -0.3153047561645508, -0.07115745544433594, -0.15147781372070312, 0.0, -0.004077911376953125, 0.0, -0.17322814464569092, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Burrowing", " ", "Mine", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.514362784845616, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": "ALL", "hole0": "Burrowing Mine", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = it()\n            player.<UNK>()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -0.25849056243896484, -0.0007228851318359375, -2.4318398573086597e-05, -1.5974044799804688e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.0490406566532329e-05, -1.9073486328125e-06, -0.007527470588684082, 0.0, -0.001705169677734375, 0.0, -0.000232696533203125, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-05, -0.0001811981201171875, -5.960462772236497e-07, -0.019519805908203125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -3.325938814668916e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0001544952392578125, -1.52587890625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -0.7851285934448242, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.11007606983184814, -0.0016946792602539062, -0.000125885009765625, -0.001194000244140625, -3.814697265625e-06, -1.33514404296875e-05, -0.0006313323974609375, -3.0517578125e-05, -0.0007839202880859375, -5.7220458984375e-06, -1.1444091796875e-05, -0.0011892046313732862, -5.7220458984375e-06, -0.0009756088256835938, -1.9073486328125e-06, -0.042276378720998764, -9.5367431640625e-06, -0.040191650390625, -0.000255584716796875, -2.6702880859375e-05, -0.0001964569091796875, -0.0001354217529296875, -5.7220458984375e-06, -0.0021213293075561523, -0.0005327461985871196, -0.009553909301757812, -0.000782012939453125, -0.17821761965751648, -0.16953088343143463, -0.0118560791015625, -1.33514404296875e-05, -9.5367431640625e-06, -2.374314308166504, -8.7738037109375e-05, 0.0, -0.009847640991210938, 0.0, -0.3581733703613281, 0.0, -0.2547934055328369, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "it", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -4.644695449354742, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "it", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.COMMON,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.3484086990356445, -0.0011577606201171875, -6.985420623095706e-05, -1.3589850823336747e-05, -9.655952453613281e-06, -0.00152587890625, -1.7731245756149292, -5.7220458984375e-06, -0.14856576919555664, -1.9073486328125e-06, -0.25023746490478516, -0.06663131713867188, -0.09193992614746094, 0.0, -0.00428009033203125, 0.0, -0.15293824672698975, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Burrowing", " ", "Mine", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.839693519098546, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Burrowing Mine", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.3484086990356445, -0.0011577606201171875, -6.985420623095706e-05, -1.3589850823336747e-05, -9.655952453613281e-06, -0.00152587890625, -2.098383903503418, -1.52587890625e-05, -0.012752532958984375, 0.0, -0.009510040283203125, -0.19376659393310547, -0.1636981964111328, 0.0, -0.0023260116577148438, 0.0, -0.1342601776123047, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Burrowing", " ", "Mine", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.966681214792516, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": "PALADIN", "hole0": "Burrowing Mine", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = it()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.2026329040527344, -1.9073486328125e-06, -7.808208465576172e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001678466796875, -2.288818359375e-05, -2.86102294921875e-05, -4.38690185546875e-05, -0.31462574005126953, -1.33514404296875e-05, -3.814697265625e-06, -0.0001354217529296875, 0.0, -9.059892363438848e-06, -1.9073486328125e-05, -1.9073486328125e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -7.62939453125e-06, -0.0001902399235405028, -7.152557373046875e-05, -4.0053913835436106e-05, -0.0009708404541015625, -3.814697265625e-06, -3.814697265625e-06, -6.234454485820606e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, 0.0, -0.04540061950683594, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -8.392333984375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.02671051025390625, -1.9073486328125e-06, -3.62396240234375e-05, -0.03505134582519531, -2.6702880859375e-05, -0.0005246400833129883, 0.0, -5.340576171875e-05, 0.0, -0.00026702880859375, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003762245178222656, -1.52587890625e-05, -4.57763671875e-05, -2.3841855067985307e-07, -0.546218752861023, -9.930133819580078e-05, -0.03911113739013672, -9.5367431640625e-06, -6.29425048828125e-05, -0.0002765655517578125, -1.52587890625e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -6.103515625e-05, -4.52994936495088e-06, -0.3166027069091797, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -6.29425048828125e-05, 0.0, -2.777568624878768e-05, -1.9073486328125e-05, -6.866455078125e-05, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -2.09808349609375e-05, -3.4332275390625e-05, -2.288818359375e-05, -0.5845451354980469, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.13985466957092285, -0.000980377197265625, -0.0001316070556640625, -0.0014553070068359375, -3.814697265625e-06, -9.5367431640625e-06, -0.000667572021484375, -2.86102294921875e-05, -0.000789642333984375, -5.7220458984375e-06, -1.1444091796875e-05, -0.0011522467248141766, -5.7220458984375e-06, -0.0010957717895507812, -1.9073486328125e-06, -0.05245376378297806, -7.62939453125e-06, -0.04160308837890625, -0.0002498626708984375, -2.86102294921875e-05, -0.00022125244140625, -0.0001220703125, -5.7220458984375e-06, -0.00240170955657959, -0.0005034207133576274, -0.00972747802734375, -0.0007762908935546875, -0.17935976386070251, -0.17466700077056885, -0.012510299682617188, -1.33514404296875e-05, -9.5367431640625e-06, -0.10663986206054688, -1.52587890625e-05, -1.1444091796875e-05, -0.049590110778808594, 0.0, -0.012474298477172852, -6.902217864990234e-05, -0.012355208396911621, 0.0, -0.00031280517578125, -4.00543212890625e-05, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.03282356262207031, -0.000164031982421875, -0.054116249084472656, -5.7220458984375e-06, -0.000675201416015625, -9.5367431640625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.000186920166015625, -3.4332275390625e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.00020599365234375, -1.9073486328125e-06, 0.0, -0.008626341819763184, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Burrowing", " ", "Mine", "<EOS>", 47, 165, "0", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "it", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -5.016237280114154, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Burrowing Mine"}, {"_type": "Num", "n": 0}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "it", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.<UNK> += 1\n        else:\n            player.hand.append(player)\n            player.<UNK> = True\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -0.25849056243896484, -0.0007228851318359375, -2.4318398573086597e-05, -1.5974044799804688e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.0490406566532329e-05, -1.9073486328125e-06, -0.007527470588684082, 0.0, -0.001705169677734375, 0.0, -0.000232696533203125, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-05, -0.0001811981201171875, -5.960462772236497e-07, -0.019519805908203125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -3.325938814668916e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0001544952392578125, -1.52587890625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -0.6138391494750977, -0.12456130981445312, -0.13417434692382812, -7.62939453125e-05, -0.01032257080078125, 0.0, -0.020737648010253906, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.0206780433654785, 0.0, -1.9073486328125e-06, -0.05184364318847656, -3.814697265625e-06, -0.0037670135498046875, -1.9073486328125e-06, -0.005313267931342125, 0.0, -0.01679229736328125, -0.016907691955566406, -0.0025358200073242188, -3.814697265625e-05, -5.91278076171875e-05, -0.00395965576171875, -1.9073486328125e-06, -0.0010478496551513672, 0.0, -0.030936356633901596, -1.9073486328125e-06, -0.02454090118408203, -0.0048980712890625, -1.9073486328125e-05, -0.0023251771926879883, 0.0, -0.0070648193359375, -0.0002346038818359375, 0.0, -4.57763671875e-05, -0.0006542205810546875, -1.52587890625e-05, 0.0, -0.0753335952758789, 0.0, -0.0001354217529296875, -5.7220458984375e-06, -0.0005180835723876953, 0.0, -0.04062378406524658, -1.71661376953125e-05, -0.048732757568359375, 0.0, -0.0003414154052734375, -0.2692708969116211, -4.57763671875e-05, -1.8953348398208618, 0.0, -0.1154937744140625, -6.4849853515625e-05, -0.0005702972412109375, -7.05718994140625e-05, -3.814697265625e-05, -0.026060104370117188, -0.0001544952392578125, -0.19714784622192383, 0.0, -0.027028560638427734, -7.62939453125e-06, -0.5961885452270508, -2.86102294921875e-05, -7.283687591552734e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 92, 147, 15, 139, 11, 129, 19, 160, "player", "<EOS>", "mana", "<EOS>", 279, 8, 282, 47, 165, "10", "<EOS>", 295, 86, 130, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 282, 45, 160, "player", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.6805222845540015, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "If", "orelse": [{"value": {"args": [{"_type": "Name", "id": "player"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "mana"}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 10}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.<UNK> < 10:\n            player.<UNK> += 1\n        else:\n            player.hand.append(player)\n            player.<UNK> = True\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -0.25849056243896484, -0.0007228851318359375, -2.4318398573086597e-05, -1.5974044799804688e-05, -3.933906555175781e-06, -3.814697265625e-06, -1.0490406566532329e-05, -1.9073486328125e-06, -0.007527470588684082, 0.0, -0.001705169677734375, 0.0, -0.000232696533203125, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -9.5367431640625e-05, -0.0001811981201171875, -5.960462772236497e-07, -0.019519805908203125, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -3.325938814668916e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.33514404296875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.0001544952392578125, -1.52587890625e-05, -3.4332275390625e-05, -2.09808349609375e-05, -0.6138391494750977, -0.12456130981445312, -0.13417434692382812, -7.62939453125e-05, -0.01032257080078125, 0.0, -0.020737648010253906, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.5550656318664551, -1.9073486328125e-06, -1.9073486328125e-06, -0.540003776550293, -7.62939453125e-06, -0.0031147003173828125, -1.9073486328125e-06, -0.005695932544767857, -1.9073486328125e-06, -0.0214691162109375, -0.01874256134033203, -0.0028791427612304688, -3.4332275390625e-05, -5.53131103515625e-05, -0.0037527084350585938, -1.9073486328125e-06, -0.0011366605758666992, 0.0, -0.03228997811675072, -1.9073486328125e-06, -0.026633262634277344, -0.004515647888183594, -1.52587890625e-05, -0.002308368682861328, 0.0, -0.0065670013427734375, -0.0002346038818359375, 0.0, -4.38690185546875e-05, -0.000682830810546875, -1.71661376953125e-05, 0.0, -0.08656120300292969, 0.0, -0.0001430511474609375, -5.7220458984375e-06, -0.0004875659942626953, 0.0, -0.04046344757080078, -1.52587890625e-05, -0.04902362823486328, 0.0, -0.000339508056640625, -0.25994300842285156, -4.76837158203125e-05, -1.9125736951828003, 0.0, -0.1089162826538086, -6.4849853515625e-05, -0.0005702972412109375, -7.05718994140625e-05, -3.814697265625e-05, -0.028580665588378906, -0.0001506805419921875, -0.20107614994049072, 0.0, -0.028641223907470703, -5.7220458984375e-06, -0.6010932922363281, -2.86102294921875e-05, -7.283687591552734e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 103, 186, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 92, 147, 15, 139, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 279, 8, 282, 47, 165, "10", "<EOS>", 295, 86, 130, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 282, 45, 160, "player", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.737738335588631, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template17", "hole2": "WARRIOR"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "If", "orelse": [{"value": {"args": [{"_type": "Name", "id": "player"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 10}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.Change,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.3484086990356445, -0.0011577606201171875, -6.985420623095706e-05, -1.3589850823336747e-05, -9.655952453613281e-06, -0.00152587890625, -3.0879764556884766, -0.000667572021484375, -0.0004601478576660156, -1.9073486328125e-06, -0.034117698669433594, -0.012450218200683594, -0.1763134002685547, 0.0, -0.0038652420043945312, 0.0, -0.16627240180969238, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Burrowing", " ", "Mine", "<EOS>", "Change", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.8340935435126084, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": "Change", "hole0": "Burrowing Mine", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS. Mine,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.3484086990356445, -0.0011577606201171875, -6.985420623095706e-05, -1.3589850823336747e-05, -9.655952453613281e-06, -0.00152587890625, -2.155153274536133, -0.0674394965171814, -0.0008106231689453125, -0.6284085512161255, -1.9073486328125e-06, -0.10548686981201172, -0.31420421600341797, -0.18834877014160156, 0.0, -0.003902435302734375, 0.0, -0.13745617866516113, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Burrowing", " ", "Mine", "<EOS>", " ", "Mine", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.9531808223555345, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"hole1": " Mine", "hole0": "Burrowing Mine", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.<UNK> += 1\n        else:\n            player.hand.append(player)\n            player.<UNK> = True\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.2026329040527344, -1.9073486328125e-06, -7.808208465576172e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001678466796875, -2.288818359375e-05, -2.86102294921875e-05, -4.38690185546875e-05, -0.31462574005126953, -1.33514404296875e-05, -3.814697265625e-06, -0.0001354217529296875, 0.0, -9.059892363438848e-06, -1.9073486328125e-05, -1.9073486328125e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -7.62939453125e-06, -0.0001902399235405028, -7.152557373046875e-05, -4.0053913835436106e-05, -0.0009708404541015625, -3.814697265625e-06, -3.814697265625e-06, -6.234454485820606e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, 0.0, -0.04540061950683594, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -8.392333984375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.02671051025390625, -1.9073486328125e-06, -3.62396240234375e-05, -0.03505134582519531, -2.6702880859375e-05, -0.0005246400833129883, 0.0, -5.340576171875e-05, 0.0, -0.00026702880859375, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003762245178222656, -1.52587890625e-05, -4.57763671875e-05, -2.3841855067985307e-07, -0.546218752861023, -9.930133819580078e-05, -0.03911113739013672, -9.5367431640625e-06, -6.29425048828125e-05, -0.0002765655517578125, -1.52587890625e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -6.103515625e-05, -4.52994936495088e-06, -0.3166027069091797, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -6.29425048828125e-05, 0.0, -2.777568624878768e-05, -1.9073486328125e-05, -6.866455078125e-05, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -2.09808349609375e-05, -3.4332275390625e-05, -2.288818359375e-05, -0.820836067199707, -0.12994766235351562, -0.21910953521728516, -7.82012939453125e-05, -0.012058258056640625, 0.0, -0.022461891174316406, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.9495382308959961, 0.0, -1.9073486328125e-06, -0.050696372985839844, -3.814697265625e-06, -0.0033597946166992188, -1.9073486328125e-06, -0.005283229984343052, 0.0, -0.016139984130859375, -0.01708221435546875, -0.0024366378784179688, -3.62396240234375e-05, -5.91278076171875e-05, -0.003902435302734375, -1.9073486328125e-06, -0.001065969467163086, 0.0, -0.030678268522024155, -1.9073486328125e-06, -0.02478790283203125, -0.00495147705078125, -1.9073486328125e-05, -0.0023555755615234375, 0.0, -0.007407188415527344, -0.000232696533203125, 0.0, -4.38690185546875e-05, -0.0006389617919921875, -1.52587890625e-05, 0.0, -0.08877086639404297, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.0005552768707275391, 0.0, -0.040290117263793945, -1.71661376953125e-05, -0.048786163330078125, 0.0, -0.0003452301025390625, -0.2650604248046875, -4.57763671875e-05, -1.9019168615341187, 0.0, -0.11484336853027344, -6.67572021484375e-05, -0.000568389892578125, -7.05718994140625e-05, -3.814697265625e-05, -0.02514934539794922, -0.0001544952392578125, -0.19719696044921875, 0.0, -0.026600360870361328, -7.62939453125e-06, -0.595484733581543, -2.6702880859375e-05, -7.283687591552734e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Burrowing", " ", "Mine", "<EOS>", 47, 165, "0", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 92, 147, 15, 139, 11, 129, 19, 160, "player", "<EOS>", "mana", "<EOS>", 279, 8, 282, 47, 165, "10", "<EOS>", 295, 86, 130, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 282, 45, 160, "player", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -9.163577143467563, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Burrowing Mine"}, {"_type": "Num", "n": 0}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "If", "orelse": [{"value": {"args": [{"_type": "Name", "id": "player"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "mana"}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 10}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.<UNK> < 10:\n            player.<UNK> += 1\n        else:\n            player.hand.append(player)\n            player.<UNK> = True\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.000125885009765625, -1.9073486328125e-06, -1.6569954823353328e-05, -0.00011133548832731321, -0.00019679591059684753, -0.0001392364501953125, 0.0, -7.62939453125e-06, -5.364418029785156e-05, -3.933906555175781e-06, -2.1457672119140625e-06, -6.866455078125e-05, -2.2026329040527344, -1.9073486328125e-06, -7.808208465576172e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001678466796875, -2.288818359375e-05, -2.86102294921875e-05, -4.38690185546875e-05, -0.31462574005126953, -1.33514404296875e-05, -3.814697265625e-06, -0.0001354217529296875, 0.0, -9.059892363438848e-06, -1.9073486328125e-05, -1.9073486328125e-05, 0.0, -0.0001049041748046875, -1.33514404296875e-05, -7.62939453125e-06, -0.0001902399235405028, -7.152557373046875e-05, -4.0053913835436106e-05, -0.0009708404541015625, -3.814697265625e-06, -3.814697265625e-06, -6.234454485820606e-05, -3.814697265625e-06, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, 0.0, -6.103515625e-05, 0.0, -0.04540061950683594, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -8.392333984375e-05, -9.1552734375e-05, -2.0265579223632812e-06, -0.02671051025390625, -1.9073486328125e-06, -3.62396240234375e-05, -0.03505134582519531, -2.6702880859375e-05, -0.0005246400833129883, 0.0, -5.340576171875e-05, 0.0, -0.00026702880859375, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003762245178222656, -1.52587890625e-05, -4.57763671875e-05, -2.3841855067985307e-07, -0.546218752861023, -9.930133819580078e-05, -0.03911113739013672, -9.5367431640625e-06, -6.29425048828125e-05, -0.0002765655517578125, -1.52587890625e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -6.103515625e-05, -4.52994936495088e-06, -0.3166027069091797, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -6.29425048828125e-05, 0.0, -2.777568624878768e-05, -1.9073486328125e-05, -6.866455078125e-05, -9.5367431640625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0001888275146484375, -2.09808349609375e-05, -3.4332275390625e-05, -2.288818359375e-05, -0.820836067199707, -0.12994766235351562, -0.21910953521728516, -7.82012939453125e-05, -0.012058258056640625, 0.0, -0.022461891174316406, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.604853630065918, -1.9073486328125e-06, -1.9073486328125e-06, -0.4950885772705078, -5.7220458984375e-06, -0.0027866363525390625, -1.9073486328125e-06, -0.0057042790576815605, -1.9073486328125e-06, -0.02050018310546875, -0.018329620361328125, -0.0028400421142578125, -3.24249267578125e-05, -5.7220458984375e-05, -0.0036344528198242188, -1.9073486328125e-06, -0.0011806488037109375, 0.0, -0.03145420178771019, -1.9073486328125e-06, -0.02686595916748047, -0.004652976989746094, -1.52587890625e-05, -0.0023423433303833008, 0.0, -0.0068607330322265625, -0.0002346038818359375, 0.0, -4.1961669921875e-05, -0.00066375732421875, -1.52587890625e-05, 0.0, -0.10363292694091797, 0.0, -0.00012969970703125, -5.7220458984375e-06, -0.0005486011505126953, 0.0, -0.04028666019439697, -1.71661376953125e-05, -0.048895835876464844, 0.0, -0.000347137451171875, -0.2593040466308594, -4.76837158203125e-05, -1.9248415231704712, 0.0, -0.11003780364990234, -6.4849853515625e-05, -0.0005702972412109375, -7.05718994140625e-05, -3.814697265625e-05, -0.02754974365234375, -0.0001506805419921875, -0.20003235340118408, 0.0, -0.028058528900146484, -5.7220458984375e-06, -0.6002864837646484, -2.86102294921875e-05, -7.283687591552734e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Burrowing", "Mine", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Burrowing", " ", "Mine", "<EOS>", 47, 165, "0", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 92, 147, 15, 139, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 279, 8, 282, 47, 165, "10", "<EOS>", 295, 86, 130, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 282, 45, 160, "player", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -9.30983287691285, "model_output": {"_type": "Module", "body": [{"name": "BurrowingMine", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Burrowing Mine"}, {"_type": "Num", "n": 0}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "If", "orelse": [{"value": {"args": [{"_type": "Name", "id": "player"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 10}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -21.741106033325195], "choice_history": [80, 159, 294], "score": -21.741132736206055, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n"}
{"beams": [{"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -0.35521793365478516, -1.9073486328125e-06, -0.0003452301025390625, -5.53131103515625e-05, -0.0021381378173828125, 0.0, -0.0013904571533203125, -0.0025959014892578125, -0.0001430511474609375, 0.0, -3.254413604736328e-05, -9.5367431640625e-06, -7.43865966796875e-05, -1.1920928244535389e-07, -9.1552734375e-05, -1.52587890625e-05, -5.7220458984375e-06, -0.0004874066507909447, -1.7642974853515625e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -0.395360773075474, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "overload", "hole2": "SHAMAN", "hole8": {"_type": "Num", "n": 1}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health <= 1 and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -0.0980367660522461, -0.0018978118896484375, -2.6702880859375e-05, -0.00014495849609375, -4.1961669921875e-05, -0.007059812545776367, -2.741813204920618e-06, -0.018606185913085938, -4.57763671875e-05, -0.0030374526977539062, -0.0003833770751953125, -0.001956939697265625, -0.0003833770751953125, -0.007288932800292969, -6.4849853515625e-05, -0.0013294219970703125, -0.0001430511474609375, -0.004801025148481131, -1.9073486328125e-06, -0.008834123611450195, -2.503394853192731e-06, -2.288818359375e-05, -0.2988920211791992, -0.0001621246337890625, -0.0012273788452148438, -0.0001659393310546875, -0.11033208668231964, -0.0007213354110717773, -0.004958152770996094, -0.018033981323242188, -0.00020599365234375, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -0.024875640869140625, 0.0, -0.17081832885742188, -5.7220458984375e-06, -0.4143257141113281, -0.001338958740234375, -1.52587890625e-05, 0.0, -0.00017558758554514498, -4.971027374267578e-05, -0.000102996826171875, -1.1920928244535389e-07, -0.0006561279296875, -1.33514404296875e-05, -1.9073486328125e-05, -0.00019347498891875148, -0.00018143642228096724], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 9, 282, 47, 165, "1", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -3.0789615325722863, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "ops": [{"_type": "LtE"}], "comparators": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            target_func=hearthbreaker.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -4.272958755493164, 0.0, -0.03386878967285156, 0.0, -2.09808349609375e-05, 0.0, -0.0004979372024536133, -1.52587890625e-05, -0.000732421875, 0.0, -0.05025482177734375, -0.0002040863037109375, -0.0003948211669921875, 0.0, -0.00013840198516845703, -7.62939453125e-06, -0.001590728759765625, 0.0, -0.000209808349609375, -3.62396240234375e-05, -2.09808349609375e-05, -0.0001260041753994301, -2.1338444639695808e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -4.393837676055227, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "target_func", "hole2": "SHAMAN", "hole8": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            COMMON=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -3.3953857421875, 0.0, -1.0476341247558594, -0.0003299713134765625, -0.004232287406921387, 0.0, -0.0035152435302734375, -0.0018749237060546875, -0.000164031982421875, 0.0, -4.792213439941406e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -8.392333984375e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0004816856817342341, -1.7642974853515625e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "COMMON", "<EOS>", 21, 165, "1", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -4.4866415921378575, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "COMMON", "hole2": "SHAMAN", "hole8": {"_type": "Num", "n": 1}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -2.7366676330566406, -0.0017299652099609375, -0.00646364688873291, 0.0, -0.0032148361206054688, -0.002780914306640625, -0.0003643035888671875, 0.0, -2.1696090698242188e-05, -9.5367431640625e-06, -0.0001087188720703125, 0.0, -0.00011444091796875, -1.33514404296875e-05, -5.7220458984375e-06, -0.0004099319048691541, -1.5616416931152344e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 21, 165, "1", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -4.629184322194305, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"_type": "Num", "n": 1}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            buffs=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -2.6326847076416016, -2.0265558760002023e-06, -1.972829818725586, -0.00244140625, -0.00390779972076416, 0.0, -0.010884284973144531, -0.0030498504638671875, -0.000965118408203125, 0.0, -3.731250762939453e-05, -9.5367431640625e-06, -0.0001239776611328125, 0.0, -0.000194549560546875, -1.33514404296875e-05, -5.7220458984375e-06, -0.00042363806278444827, -1.3709068298339844e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "buffs", "<EOS>", 21, 165, "1", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -4.660325481200516, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "buffs", "hole2": "SHAMAN", "hole8": {"_type": "Num", "n": 1}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health != target.\n            calculate_max_health() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -0.0980367660522461, -0.0018978118896484375, -2.6702880859375e-05, -0.00014495849609375, -4.1961669921875e-05, -0.007059812545776367, -2.741813204920618e-06, -0.018606185913085938, -4.57763671875e-05, -0.0030374526977539062, -0.0003833770751953125, -0.001956939697265625, -0.0003833770751953125, -0.007288932800292969, -6.4849853515625e-05, -0.0013294219970703125, -0.0001430511474609375, -0.004801025148481131, -1.9073486328125e-06, -0.008834123611450195, -2.503394853192731e-06, -2.288818359375e-05, -1.827519416809082, -1.9073486328125e-05, -0.5077447891235352, -0.000518798828125, -0.00011444091796875, -3.814697265625e-06, -9.918212890625e-05, 0.0, -0.07621896266937256, -1.9073486328125e-06, -0.0030565261840820312, -0.0003339052200317383, -0.04252338409423828, -0.00112152099609375, -0.00034332275390625, -4.1961669921875e-05, -0.00022125244140625, 0.0, -0.0013948678970336914, -1.9073486328125e-06, -0.1486186981201172, -3.814697265625e-06, -0.1857900619506836, -0.00052642822265625, -2.86102294921875e-05, 0.0, -0.00014411736628971994, -2.288818359375e-05, -0.0002002716064453125, 0.0, -0.0011425018310546875, -1.33514404296875e-05, -1.1444091796875e-05, -0.00017678627045825124, -2.121925172104966e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 10, 282, 40, 134, 11, 129, 19, 160, "target", "<EOS>", "calculate_max_health", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -4.82935580412618, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "ops": [{"_type": "NotEq"}], "comparators": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}}]}, {"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            COMMON=Battlecry(Damage(1), CharacterSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 2)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -3.3953857421875, 0.0, -0.6916484832763672, -0.10690879821777344, -0.004979312419891357, -1.9073486328125e-06, -0.07424354553222656, -1.5974033885868266e-05, 0.0, -0.08128833770751953, -0.00054931640625, 0.0, -0.0006427764892578125, -1.1920928244535389e-07, -0.0001163482666015625, -1.9073486328125e-06, -0.003572702407836914, -3.123283386230469e-05, -1.9073486328125e-06, -0.23518848419189453, -0.000278472900390625, -0.10423338413238525, -7.510183422709815e-06, -0.20314717292785645, 0.0], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "COMMON", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "6", "<EOS>", "2", "<EOS>"], "score": -4.934982106741693, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "COMMON", "hole2": "SHAMAN", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}]}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": 2, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health <= 1 and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -0.0980367660522461, -0.0018978118896484375, -2.6702880859375e-05, -0.00014495849609375, -4.1961669921875e-05, -0.007059812545776367, -2.741813204920618e-06, -0.018606185913085938, -4.57763671875e-05, -0.0030374526977539062, -0.0003833770751953125, -0.001956939697265625, -0.0003833770751953125, -0.007288932800292969, -6.4849853515625e-05, -0.0013294219970703125, -0.0001430511474609375, -0.004801025148481131, -1.9073486328125e-06, -0.008834123611450195, -2.503394853192731e-06, -2.288818359375e-05, -0.2988920211791992, -0.0001621246337890625, -0.0012273788452148438, -0.0001659393310546875, -0.11033208668231964, -0.0007213354110717773, -0.004958152770996094, -0.018033981323242188, -0.00020599365234375, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -0.024875640869140625, 0.0, -0.17081832885742188, -5.7220458984375e-06, -1.1920223236083984, -0.002361297607421875, -0.01524662971496582, 0.0, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -3.266334533691406e-05, 0.0, 0.0, -0.00032329559326171875, 0.0, -5.7220458984375e-06, -2.193449836340733e-05, -2.145764938177308e-06, -0.5886964797973633, -0.005718231201171875, -7.62939453125e-06, -0.0001735687255859375, -2.288818359375e-05, -3.62396240234375e-05, 0.0, -3.814697265625e-05, -9.5367431640625e-06, -6.556507287314162e-06, -1.3589859008789062e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00011444091796875, -2.861022494471399e-06, -0.2651348114013672, -0.003265380859375, -0.001148223876953125, -3.814697265625e-06, -0.015490531921386719, 0.0, -0.036856651306152344, -0.0010471343994140625, -0.003238677978515625, -1.9073486328125e-06, -0.002033233642578125, 0.0, -0.0009441375732421875, -9.5367431640625e-06, -0.001041412353515625, -1.9073486328125e-06, -1.9073486328125e-05, -0.000118255615234375, 0.0, -0.02632904052734375, -3.814697265625e-06, -0.00045013427734375, 0.0, -0.0002143383026123047, -5.483620952873025e-06, -0.001225590705871582, -1.1920928244535389e-07, -0.002246373100206256, -1.9073486328125e-05, -6.29425048828125e-05, -0.0068264007568359375, 0.0, -0.0005636215209960938, -3.0517578125e-05, -0.005146026611328125, 0.0, -7.2479248046875e-05, 0.0, -0.0002626180648803711, -3.814697265625e-06, -0.010517239570617676, -2.09808349609375e-05, -1.33514404296875e-05, -0.022272109985351562, -0.0006923675537109375, -0.4554031789302826, -1.9073486328125e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00603032112121582, -0.00034332275390625], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 9, 282, 47, 165, "1", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -5.336109532916673, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "ops": [{"_type": "LtE"}], "comparators": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health <= 6 and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -0.0980367660522461, -0.0018978118896484375, -2.6702880859375e-05, -0.00014495849609375, -4.1961669921875e-05, -0.007059812545776367, -2.741813204920618e-06, -0.018606185913085938, -4.57763671875e-05, -0.0030374526977539062, -0.0003833770751953125, -0.001956939697265625, -0.0003833770751953125, -0.007288932800292969, -6.4849853515625e-05, -0.0013294219970703125, -0.0001430511474609375, -0.004801025148481131, -1.9073486328125e-06, -0.008834123611450195, -2.503394853192731e-06, -2.288818359375e-05, -0.2988920211791992, -0.0001621246337890625, -0.0012273788452148438, -0.0001659393310546875, -2.303978443145752, -0.045293211936950684, -0.007573127746582031, -0.008396148681640625, -0.0001850128173828125, -5.7220458984375e-05, -2.47955322265625e-05, -2.47955322265625e-05, -0.01685178279876709, 0.0, -0.2376079559326172, -7.748603820800781e-06, -0.4376049041748047, -0.0012521743774414062, -1.33514404296875e-05, 0.0, -0.00017904516425915062, -6.496906280517578e-05, -0.0001049041748046875, -2.3841855067985307e-07, -0.000766754150390625, -1.52587890625e-05, -2.09808349609375e-05, -0.00018858746625483036, -0.00018382059352006763], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 9, 282, 47, 165, "6", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -5.392219272073106, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "ops": [{"_type": "LtE"}], "comparators": [{"_type": "Num", "n": 6}]}, {"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.TOTEM, target_func=\n            hearthbreaker.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -5.200285911560059, 0.0, -0.000461578369140625, -1.9073486328125e-06, -0.005645751953125, -5.7220458984375e-06, -0.07987594604492188, 0.0, -0.05732738971710205, 0.0, -0.002777099609375, 0.0, -4.38690185546875e-05, 0.0, -0.001033782958984375, -1.52587890625e-05, -0.00229644775390625, 0.0, -0.03848743438720703, -0.000232696533203125, -0.0003662109375, 0.0, -0.0001608133316040039, -7.62939453125e-06, -0.0015583038330078125, 0.0, -0.000179290771484375, -4.76837158203125e-05, -2.09808349609375e-05, -0.00013017650053370744, -2.2053694920032285e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -5.40832340614088, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "target_func", "hole2": "SHAMAN", "hole8": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Template9", "hole6": "TOTEM", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -4.565659523010254, -6.866455078125e-05, -3.576278118089249e-07, -6.079673767089844e-06, -1.1920926823449918e-07, 0.0, -0.00016963481903076172, 0.0, -0.6779816150665283, 0.0, -1.1444091796875e-05, 0.0, -0.0019245147705078125, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002752542495727539, -2.6702880859375e-05, -8.20159912109375e-05, 0.0, -0.0006272792816162109, -3.123283386230469e-05, -0.6181697845458984, -0.0002422332763671875, -0.00038909912109375, 0.0, -0.0001462697982788086, -7.62939453125e-06, -0.001644134521484375, -1.1920928244535389e-07, -6.67572021484375e-05, -9.1552734375e-05, -1.52587890625e-05, -0.00011301037739031017, -2.2053694920032285e-05], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "6", "<EOS>"], "score": -5.868542193469608, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 6}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health <= 1 and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -0.0980367660522461, -0.0018978118896484375, -2.6702880859375e-05, -0.00014495849609375, -4.1961669921875e-05, -0.007059812545776367, -2.741813204920618e-06, -0.018606185913085938, -4.57763671875e-05, -0.0030374526977539062, -0.0003833770751953125, -0.001956939697265625, -0.0003833770751953125, -0.007288932800292969, -6.4849853515625e-05, -0.0013294219970703125, -0.0001430511474609375, -0.004801025148481131, -1.9073486328125e-06, -0.008834123611450195, -2.503394853192731e-06, -2.288818359375e-05, -0.2988920211791992, -0.0001621246337890625, -0.0012273788452148438, -0.0001659393310546875, -0.11033208668231964, -0.0007213354110717773, -0.004958152770996094, -0.018033981323242188, -0.00020599365234375, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -0.024875640869140625, 0.0, -1.9650468826293945, -0.0010613203048706055, -0.008352279663085938, -8.96453857421875e-05, -0.007471203804016113, 0.0, 0.0, -0.0003948211669921875, -3.814697265625e-06, -7.867813110351562e-06, -1.9073486328125e-06, 0.0, -0.00018870830535888672, 0.0, -3.814697265625e-06, -1.883505319710821e-05, -2.264974000354414e-06, -0.5098686218261719, -0.0037355422973632812, -9.5367431640625e-06, -0.0002193450927734375, -2.288818359375e-05, -3.0517578125e-05, 0.0, -4.00543212890625e-05, -9.5367431640625e-06, -7.033342626527883e-06, -1.3589859008789062e-05, -5.340576171875e-05, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00011444091796875, -2.861022494471399e-06, -0.2787151336669922, -0.0029239654541015625, -0.00115203857421875, -3.814697265625e-06, -0.01583564281463623, 0.0, -0.03632926940917969, -0.0010223388671875, -0.003200531005859375, -1.9073486328125e-06, -0.0020503997802734375, 0.0, -0.000942230224609375, -9.5367431640625e-06, -0.0010471343994140625, -1.9073486328125e-06, -1.9073486328125e-05, -0.000118255615234375, 0.0, -0.026432037353515625, -3.814697265625e-06, -0.00045013427734375, 0.0, -0.0002162456512451172, -5.483620952873025e-06, -0.001229405403137207, -1.1920928244535389e-07, -0.00223851902410388, -1.9073486328125e-05, -6.29425048828125e-05, -0.0069446563720703125, 0.0, -0.0005674362182617188, -3.0517578125e-05, -0.0051403045654296875, 0.0, -7.2479248046875e-05, 0.0, -0.00026357173919677734, -3.814697265625e-06, -0.01051342487335205, -2.09808349609375e-05, -1.33514404296875e-05, -0.02237415313720703, -0.00069427490234375, -0.4550839960575104, -1.9073486328125e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.0060350894927978516, -0.00034332275390625], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 9, 282, 47, 165, "1", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "calculate_max_health", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -5.870062200056047, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "ops": [{"_type": "LtE"}], "comparators": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda target: target.health <= 1 and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5020257706055418e-05, -4.3987496610498056e-05, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00013327598571777344, -3.9458274841308594e-05, -2.1457672119140625e-06, -0.0004119873046875, -0.015254974365234375, -0.000179290771484375, -1.0251946150674485e-05, -1.990794771700166e-05, -1.3112957276462112e-05, -3.814697265625e-06, -0.0010024309158325195, 0.0, -9.918212890625e-05, 0.0, -0.010662198066711426, 0.0, -0.00019073486328125, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0011272430419921875, -2.47955322265625e-05, -0.000335693359375, 0.0, -0.0030432806815952063, 0.0, -1.8445253372192383, 0.0, -0.0980367660522461, -0.0018978118896484375, -2.6702880859375e-05, -0.00014495849609375, -4.1961669921875e-05, -0.007059812545776367, -2.741813204920618e-06, -0.018606185913085938, -4.57763671875e-05, -0.0030374526977539062, -0.0003833770751953125, -0.001956939697265625, -0.0003833770751953125, -0.007288932800292969, -6.4849853515625e-05, -0.0013294219970703125, -0.0001430511474609375, -0.004801025148481131, -1.9073486328125e-06, -0.008834123611450195, -2.503394853192731e-06, -2.288818359375e-05, -0.2988920211791992, -0.0001621246337890625, -0.0012273788452148438, -0.0001659393310546875, -0.11033208668231964, -0.0007213354110717773, -0.004958152770996094, -0.018033981323242188, -0.00020599365234375, -7.2479248046875e-05, -1.33514404296875e-05, -2.86102294921875e-05, -0.024875640869140625, 0.0, -0.17081832885742188, -5.7220458984375e-06, -1.1920223236083984, -0.002361297607421875, -0.01524662971496582, 0.0, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -3.266334533691406e-05, 0.0, 0.0, -0.00032329559326171875, 0.0, -5.7220458984375e-06, -2.193449836340733e-05, -2.145764938177308e-06, -0.8630809783935547, -6.4849853515625e-05, -1.52587890625e-05, -0.000141143798828125, -3.24249267578125e-05, -2.288818359375e-05, 0.0, -3.24249267578125e-05, -1.1444091796875e-05, -1.800060272216797e-05, -5.841255187988281e-06, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -2.288818359375e-05, 0.0, -7.82012939453125e-05, -2.2649765014648438e-06, -0.5877923965454102, -3.24249267578125e-05, -0.6268310546875, -0.0004024505615234375, -0.021883336827158928, -1.561641511216294e-05, -0.4891033172607422, -0.000518798828125, -0.027983427047729492, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Crackle", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "target", "<EOS>", 13, 132, 0, 283, 41, 139, 11, 129, 19, 160, "target", "<EOS>", "health", "<EOS>", 279, 9, 282, 47, 165, "1", "<EOS>", 40, 134, 11, 129, 19, 160, "target", "<EOS>", "spell_targetable", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "1", "<EOS>", 117, 226, "Frozen", "<EOS>"], "score": -6.490144033168463, "model_output": {"_type": "Module", "body": [{"name": "Crackle", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Crackle", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "SHAMAN", "hole8": {"args": {"args": [{"arg": "target", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "health"}, "ops": [{"_type": "LtE"}], "comparators": [{"_type": "Num", "n": 1}]}, {"_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "spell_targetable"}}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template47"}, "_type": "Expr"}, {"hole0": "Frozen", "_type": "Template50"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -20.781400680541992], "choice_history": [80, 159, 294], "score": -20.781410217285156, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n"}
{"beams": [{"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -0.4007542133331299, -1.9073486328125e-06, -5.7220458984375e-06, -0.008144378662109375, -4.76837158203125e-05, -0.007881257683038712, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -0.48531481572694446, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -2.4179441928863525, -7.62939453125e-06, -1.33514404296875e-05, -0.001392364501953125, 0.0, -0.000514984130859375, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -2.4883559899897065, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -2.8107197284698486, -5.9604644775390625e-06, -3.814697265625e-06, -0.0028553009033203125, -7.62939453125e-06, -0.0037421220913529396, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -2.8858142089591112, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -2.329636812210083, -5.245203283266164e-06, -5.7220458984375e-06, -0.040782928466796875, -7.62939453125e-06, -0.000308990478515625, -0.0025087594985961914, -0.3163861930370331, -0.17363813519477844], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "<EOS>"], "score": -2.931760068467831, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "<UNK>", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -3.21982741355896, 0.0, -5.7220458984375e-06, -0.014337539672851562, -5.7220458984375e-06, -0.0032240424770861864, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -3.3058800927390095, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "increase_health", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -3.1834235191345215, 0.0, -0.00106048583984375, -0.0014591217041015625, -5.7220458984375e-06, -4.57763671875e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.000213623046875, 0.0, -0.3399965763092041, -3.814697265625e-06, -3.814697265625e-06, -0.010225296020507812, -4.57763671875e-05, -0.007259698584675789, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -3.549977985632488, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_friendly_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -2.329636812210083, -5.245203283266164e-06, -5.7220458984375e-06, -0.040782928466796875, -7.62939453125e-06, -0.000308990478515625, -0.0025087594985961914, -1.3858718872070312, -2.1219253540039062e-05], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "Frozen", "<EOS>"], "score": -3.827628846696591, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "Frozen", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>Attack()))\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -2.329636812210083, -5.245203283266164e-06, -5.7220458984375e-06, -0.040782928466796875, -7.62939453125e-06, -0.000308990478515625, -0.0025087594985961914, -0.3163861930370331, -2.146749258041382, -6.103515625e-05], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Attack", "<EOS>"], "score": -4.9049322264706845, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "<UNK>Attack", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(1)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -4.202045917510986, -1.9073486328125e-06, -1.33514404296875e-05, -1.22332763671875, -1.33514404296875e-05, -0.021834030747413635, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -5.515715848144957, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -3.1834235191345215, 0.0, -0.00106048583984375, -0.0014591217041015625, -5.7220458984375e-06, -4.57763671875e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.000213623046875, 0.0, -2.648658037185669, -5.7220458984375e-06, -9.5367431640625e-06, -0.001926422119140625, 0.0, -0.0005779266357421875, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -5.843624468383261, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_friendly_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "die", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(0)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -0.4007542133331299, -1.9073486328125e-06, -5.7220458984375e-06, -0.008144378662109375, -4.76837158203125e-05, -5.544305324554443, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "Emergency", "<EOS>"], "score": -6.021750326690146, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 0}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -3.1834235191345215, 0.0, -0.00106048583984375, -0.0014591217041015625, -5.7220458984375e-06, -4.57763671875e-05, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -0.000213623046875, 0.0, -2.8526318073272705, -6.079673767089844e-06, -1.9073486328125e-06, -0.0027179718017578125, -5.7220458984375e-06, -0.0036096221301704645, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -6.0514161192838785, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_friendly_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self.target.calculate_attack())\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -4.202045917510986, -1.9073486328125e-06, -1.33514404296875e-05, -0.7362565994262695, -0.07153892517089844, -0.0004673004150390625, 0.0, -0.036128997802734375, -1.71661376953125e-05, -0.00669097900390625, 0.0, -0.00014197826385498047, -3.814697265625e-05, -3.4332275390625e-05, -1.33514404296875e-05, -0.932404637336731, 0.0], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "score": -6.054273243483969, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self.target.die())\n", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -9.775113539944869e-06, -8.11783829703927e-05, -2.0265558760002023e-06, -0.0002155303955078125, 0.0, -3.814697265625e-06, -0.0002461671829223633, -2.6702880859375e-05, -3.24249267578125e-05, -6.866455078125e-05, -0.0026731491088867188, -0.0003204345703125, -4.541770613286644e-05, -2.2649757738690823e-05, -3.218649908376392e-06, 0.0, -0.00012028217315673828, -3.814697265625e-06, -0.000827789306640625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.000888824462890625, -5.7220458984375e-06, -2.6702880859375e-05, -1.1920928244535389e-07, -0.057520389556884766, -2.09808349609375e-05, -0.0033893585205078125, -0.001079559326171875, -5.7220458984375e-06, -3.4332275390625e-05, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002002716064453125, 0.0, -4.202045917510986, -1.9073486328125e-06, -1.33514404296875e-05, -0.7362565994262695, -0.07153892517089844, -0.0004673004150390625, 0.0, -0.036128997802734375, -1.71661376953125e-05, -0.00669097900390625, 0.0, -0.00014197826385498047, -3.814697265625e-05, -3.4332275390625e-05, -1.33514404296875e-05, -0.946931004524231, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Emergency", "Coolant", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Emergency", " ", "Coolant", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>"], "score": -6.068801518020102, "model_output": {"_type": "Module", "body": [{"name": "EmergencyCoolant", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Emergency Coolant", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-7.62939453125e-06, -1.1444091796875e-05, -22.835132598876953], "choice_history": [80, 159, 294], "score": -22.83515167236328, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n"}
{"beams": [{"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -0.5149803161621094, -9.179109838441946e-06, -0.001556396484375, -5.7220458984375e-06, -6.675719760096399e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.623303150424114, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -0.9949254989624023, -6.890296936035156e-05, -0.0005702972412109375, -3.814697265625e-06, -8.58306884765625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 161, "True", "<EOS>"], "score": -1.1023219578412196, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "stealth", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -2.4479894638061523, -1.9073486328125e-06, -2.4080225557554513e-05, 0.0, -6.198882601893274e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 110, 202, "1", "<EOS>", "4", "<EOS>"], "score": -2.4621884577117967, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -4.578087329864502, -1.3709068298339844e-05, -0.04197120666503906, -7.62939453125e-06, -0.054467134177684784, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -4.781293777420821, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -5.1541571617126465, -0.002994537353515625, -0.00044467096449807286, -1.3351438610698096e-05, -8.106222594506107e-06, -3.814697265625e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -2.622604188218247e-05, -1.9073486328125e-06, -0.0016269683837890625, -9.5367431640625e-06, -0.009125709533691406, -0.00043487548828125, -3.576224116841331e-07, 0.0, -1.3470601516019087e-05, 0.0, -0.3752708435058594, -2.753734588623047e-05, -0.001178741455078125, -1.1444091796875e-05, -6.079673767089844e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "MECH", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.5457159256547826, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template8", "hole2": "ALL", "hole3": "MECH"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -6.01578950881958, -0.001506805419921875, -4.172316494077677e-06, -2.300732558069285e-05, -1.3351374946068972e-05, 0.0, -0.00018501278827898204, 0.0, -5.1021575927734375e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -7.05718994140625e-05, 0.0, -0.0004940032958984375, -1.71661376953125e-05, -0.32958507537841797, -1.52587890625e-05, -2.21728696487844e-05, 0.0, -5.24520601175027e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Flying", " ", "Machine", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 110, 202, "1", "<EOS>", "4", "<EOS>"], "score": -6.348284579263677, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Flying Machine", "hole2": "minion_type", "_type": "Template7", "hole4": "MECH", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 4, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -6.36194372177124, -3.933906555175781e-06, -0.0001583099365234375, -1.1444091796875e-05, -3.099440846199286e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.468865370049095, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -5.1541571617126465, -0.002994537353515625, -0.00044467096449807286, -1.3351438610698096e-05, -8.106222594506107e-06, -3.814697265625e-06, -1.311301275563892e-06, -1.1920928244535389e-07, -2.622604188218247e-05, -1.9073486328125e-06, -0.0016269683837890625, -9.5367431640625e-06, -0.009125709533691406, -0.00043487548828125, -3.576224116841331e-07, 0.0, -1.3470601516019087e-05, 0.0, -1.4003448486328125, -0.00010311603546142578, -0.0004482269287109375, -7.62939453125e-06, -8.225440979003906e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "MECH", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.57013332601489, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template8", "hole2": "ALL", "hole3": "MECH"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "stealth", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -6.61963415145874, -0.00013935565948486328, -8.96453857421875e-05, -1.71661376953125e-05, -7.271765298355604e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.726632451309094, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "divine_shield", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, Target=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -6.725358486175537, -0.0003833770751953125, -0.006328582763671875, -1.9073486328125e-06, -8.58306884765625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "Target", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.838825797334017, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "Target", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -6.7317352294921875, -0.000102996826171875, -6.9141146923357155e-06, -9.179114385915454e-06, -8.463859558105469e-06, -1.9073486328125e-06, -9.21487808227539e-05, -1.1920928244535389e-07, -3.814697265625e-05, 0.0, -0.00019276142120361328, -5.7220458984375e-06, -0.0002651214599609375, -1.33514404296875e-05, -1.9073486328125e-05, 0.0, -3.254413604736328e-05, 0.0, -0.024857521057128906, -3.814689989667386e-06, -0.0029449462890625, -0.0002079010009765625, -4.768339749716688e-07, 0.0, -1.1205581358808558e-05, 0.0, -0.5331172943115234, -5.53131103515625e-05, -0.0005435943603515625, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.294650055022409, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "stealth", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, taunt=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -6.661303520202637, -2.09808349609375e-05, -3.4332275390625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.057376861572265625, 0.0, -0.0014820098876953125, -0.000492095947265625, -0.0007152557373046875, -0.0007925033569335938, -0.000331878662109375, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -0.00014495849609375, 0.0, -2.288818359375e-05, -0.00010406253568362445, 0.0, -1.9073486328125e-06, -0.000102996826171875, -7.629361789440736e-06, -1.9073486328125e-06, -0.0167694091796875, -0.00052642822265625, -7.43865966796875e-05, -0.6913299560546875, -1.9073486328125e-06, -0.00038909912109375, -0.00011444091796875, -7.748596544843167e-06, 0.0, -0.17255592346191406, -6.67572021484375e-05, -0.790845513343811, 0.0, -8.7738037109375e-05, -1.1444091796875e-05, -8.58306884765625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -8.410302130434928, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, spell_targetable=True)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -6.661303520202637, -2.09808349609375e-05, -3.4332275390625e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -0.000347137451171875, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.057376861572265625, 0.0, -0.0014820098876953125, -0.000492095947265625, -0.0007152557373046875, -0.0007925033569335938, -0.000331878662109375, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -0.00014495849609375, 0.0, -2.288818359375e-05, -0.00010406253568362445, 0.0, -1.9073486328125e-06, -0.000102996826171875, -7.629361789440736e-06, -1.9073486328125e-06, -0.0167694091796875, -0.00052642822265625, -7.43865966796875e-05, -0.6913299560546875, -1.9073486328125e-06, -0.00038909912109375, -0.00011444091796875, -7.748596544843167e-06, 0.0, -0.17255592346191406, -6.67572021484375e-05, -1.4128891229629517, 0.0, -0.0017681121826171875, -2.47955322265625e-05, -0.009116291999816895, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "spell_targetable", "<EOS>", 20, 161, "True", "<EOS>"], "score": -9.043147174570976, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "spell_targetable", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, deathrattle=Deathrattle(Damage(RandomAmount(1, \n            4)), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, -3.814697265625e-06, -0.00021228920377325267, -1.5020257706055418e-05, -5.722029527532868e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.1920928244535389e-07, -2.288818359375e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -0.012788772583007812, -0.0008087158203125, -4.851700214203447e-05, -4.231862840242684e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.41074053014745e-06, -1.1920928244535389e-07, -0.00011098384857177734, 0.0, -0.0925445556640625, -2.6702880859375e-05, -7.152536909416085e-07, 0.0, -6.0796546677011065e-06, 0.0, -5.383944034576416, -8.785724639892578e-05, -0.8417320251464844, -0.0012302398681640625, -9.5367431640625e-06, -1.9073486328125e-06, -0.010951995849609375, 0.0, -0.003246307373046875, -0.006001472473144531, -0.0002803802490234375, -4.57763671875e-05, -0.0001678466796875, -0.5651947259902954, -1.7046782886609435e-05, -1.33514404296875e-05, -0.0037298202514648438, -0.00756072998046875, -1.71661376953125e-05, 0.0, -0.5271258354187012, -0.10842719674110413, 0.0, -0.1285572052001953, -0.000415802001953125, -1.33514404296875e-05, -0.252571702003479, 0.0, -0.012396812438964844, -0.0006923675537109375, -0.028384186327457428, -2.288818359375e-05, -0.0003337860107421875, -0.006592750549316406, -4.57763671875e-05, -3.814697265625e-06, -0.3443460464477539, -0.00018310546875, 0.0, -0.7473354339599609, -2.09808349609375e-05, -5.7220458984375e-06, -0.0007175207138061523, -1.1563301086425781e-05, -7.43865966796875e-05, -1.9073486328125e-06, -0.2941819429397583, -2.0265579223632812e-06, 0.0, -3.814697265625e-05, -0.00038909912109375, -0.0007456541061401367, 0.0, -0.00139617919921875, -9.5367431640625e-06, -0.15017902851104736, -0.015376448631286621, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flying", "Machine", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Damage", "<EOS>", 282, 40, 136, 19, 160, "Random", "Amount", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -9.55157528584025, "model_output": {"_type": "Module", "body": [{"name": "FlyingMachine", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Flying Machine", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "func": {"_type": "Name", "id": "RandomAmount"}}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -3.814697265625e-06, -22.916013717651367], "choice_history": [80, 159, 294], "score": -22.916017532348633, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}
{"beams": [{"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -0.4321727752685547, -1.33514404296875e-05, -0.0007457733154296875, -0.0001239776611328125, -0.7461004257202148, -0.001293182373046875, -0.0004901885986328125, -9.5367431640625e-06, 0.0, -0.032575011253356934, -2.682209014892578e-05, -1.52587890625e-05, -0.0029687881469726562, -0.000408172607421875, -0.021353701129555702, -9.5367431640625e-06, -0.014736175537109375, -6.866455078125e-05, -0.006771845743060112, -0.0015775985084474087, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -2.459510700064918, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry([IncreaseWeaponAttack(1), IncreaseDurability()],\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -1.1903800964355469, -0.000263214111328125, -0.0005401106318458915, -3.767012822208926e-05, -3.266287239966914e-05, -7.62939453125e-06, -0.00036466121673583984, 0.0, -0.032639503479003906, -1.9073486328125e-06, -0.002105712890625, 0.0, -0.00017559528350830078, 0.0, -3.4332275390625e-05, 0.0, -0.000171661376953125, 0.0, -0.00264739990234375, 0.0, -0.003972291946411133, 0.0, -0.0004405975341796875, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.0004634857177734375, -3.814697265625e-06, -1.71661376953125e-05, -0.7973566055297852, -0.0003681182861328125, -0.00457763671875, -0.0018262863159179688, -1.71661376953125e-05, -2.86102294921875e-05, -7.62939453125e-06, -0.08005470782518387, -0.08343873918056488, -0.002083888743072748, -0.0008697509765625, -3.4332275390625e-05, -0.00012969970703125, -9.1552734375e-05, -0.004907277412712574, 0.0, -0.03632068634033203, -0.000286102294921875, -0.026404350996017456, -0.20100325345993042, -1.33514404296875e-05, -0.0074443817138671875, 0.0, -0.035178303718566895, -2.872937147913035e-05, 0.0, -0.00078582763671875, -7.62939453125e-06, -0.0003642528026830405, 0.0, -9.894347385852598e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 43, 155, 283, 40, 136, 19, 160, "Increase", "Weapon", "Attack", "<EOS>", 282, 47, 165, "1", "<EOS>", 67, 259, "Increase", "Durability", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 110, 202, "3", "<EOS>", "2", "<EOS>"], "score": -2.5186584053561774, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ROGUE", "hole8": {"args": [{"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "IncreaseWeaponAttack"}}, {"hole0": "IncreaseDurability", "_type": "Template76_expr_seq"}]}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 2, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.6410379409790039, -2.288818359375e-05, -0.0003204345703125, -3.814697265625e-06, -0.000247955322265625, -0.000225067138671875, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0007003545761108398, 0.0, -0.0037136077880859375, -0.02891826629638672, -0.00063323974609375, -0.0002460479736328125, -0.0025119781494140625, -2.6702880859375e-05, 0.0, -0.0001373291015625, -6.103515625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -0.0012273748870939016, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.5139447896217462e-05, -2.2649765014648438e-06, -0.005184173583984375, -0.7137660980224609, -7.62939453125e-06, -0.28961730003356934, -1.9073486328125e-06, -0.000263214111328125, -0.00029754638671875, -0.1371011734008789, -0.0005283355712890625, -0.0004425048828125, -9.1552734375e-05, -5.53131103515625e-05, -0.6193646192550659, -0.01649308204650879, -4.38690185546875e-05, -0.24129486083984375, -0.001621246337890625, -0.043510276824235916, -9.5367431640625e-06, -0.16989612579345703, -7.82012939453125e-05, -0.005125760100781918, -0.002173298504203558, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -3.3735760928828995, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, deathrattle=Deathrattle(Give(ChangeAttack(1)),\n            SelfSelector()))\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -1.3572797775268555, -1.9073486328125e-06, -0.000705718994140625, -7.2479248046875e-05, -0.0002079010009765625, -5.7220458984375e-06, -0.00103759765625, 0.0, -1.71661376953125e-05, -0.5249643325805664, -0.001056671142578125, -0.0015891790390014648, 0.0, -3.4689903259277344e-05, -0.3197174072265625, 0.0, -0.0507354699075222, -1.9073486328125e-06, -0.12645721435546875, 0.0, -0.0002459287061356008, -0.0003039836883544922, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -3.582482941143887, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=[Aura(ChangeAttack(2), WeaponSelector()),\n            Aura(weapon(), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -0.4321727752685547, -1.33514404296875e-05, -0.0007457733154296875, -0.0001239776611328125, -0.6457347869873047, -0.0012111663818359375, -3.814697265625e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.0486222505569458, -3.814697265625e-06, -3.0517578125e-05, -0.0022687911987304688, -0.0001468658447265625, -0.1032327339053154, -5.7220458984375e-06, -0.0066776275634765625, -2.47955322265625e-05, -0.00782492570579052, -0.0017999588744714856, -2.0265579223632812e-06, -0.0128631591796875, -0.007134437561035156, -1.9073486328125e-06, -1.9073486328125e-06, -0.034281373023986816, -2.491474151611328e-05, -4.00543212890625e-05, -0.01683807373046875, -0.0006275177001953125, -0.4920225441455841, -0.11253321915864944, -0.0003223419189453125, -9.5367431640625e-06, -0.5078616142272949, -0.0007939335773698986, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "weapon", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -3.6341073182855936, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "weapon", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, taunt=True)\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.6410379409790039, -2.288818359375e-05, -0.0003204345703125, -3.814697265625e-06, -0.000247955322265625, -0.000225067138671875, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0007003545761108398, 0.0, -0.0037136077880859375, -0.02891826629638672, -0.00063323974609375, -0.0002460479736328125, -0.0025119781494140625, -2.6702880859375e-05, 0.0, -0.0001373291015625, -6.103515625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -0.0012273748870939016, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.5139447896217462e-05, -2.2649765014648438e-06, -0.005184173583984375, -0.7137660980224609, -7.62939453125e-06, -2.073570966720581, 0.0, -0.028832435607910156, -0.001567840576171875, -6.878376007080078e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.9496043686521034, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=[Aura(ChangeAttack(2), WeaponSelector()),\n            Aura(Give(), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -0.4321727752685547, -1.33514404296875e-05, -0.0007457733154296875, -0.0001239776611328125, -0.6457347869873047, -0.0012111663818359375, -3.814697265625e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.0486222505569458, -3.814697265625e-06, -3.0517578125e-05, -0.0022687911987304688, -0.0001468658447265625, -0.1032327339053154, -5.7220458984375e-06, -0.0066776275634765625, -2.47955322265625e-05, -0.00782492570579052, -0.0017999588744714856, -2.0265579223632812e-06, -0.0128631591796875, -0.007134437561035156, -1.9073486328125e-06, -1.9073486328125e-06, -0.034281373023986816, -2.491474151611328e-05, -4.00543212890625e-05, -0.01683807373046875, -0.0006275177001953125, -0.9778899550437927, -0.010932615958154202, -0.001293182373046875, -7.62939453125e-06, -0.4290103316307068, -0.010471278801560402, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Give", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -3.950169121716378, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "Give", "_type": "Template77"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=[Aura(ChangeAttack(2), WeaponSelector()),\n            Aura(weapon(), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -0.4321727752685547, -1.33514404296875e-05, -0.0007457733154296875, -0.0001239776611328125, -0.6457347869873047, -0.0012111663818359375, -3.814697265625e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.0486222505569458, -3.814697265625e-06, -3.0517578125e-05, -0.0022687911987304688, -0.0001468658447265625, -0.1032327339053154, -5.7220458984375e-06, -0.0066776275634765625, -2.47955322265625e-05, -0.00782492570579052, -0.0017999588744714856, -2.0265579223632812e-06, -0.0128631591796875, -0.007134437561035156, -1.9073486328125e-06, -1.9073486328125e-06, -0.034281373023986816, -2.491474151611328e-05, -4.00543212890625e-05, -0.01683807373046875, -0.0006275177001953125, -0.4920225441455841, -0.11253321915864944, -0.0003223419189453125, -9.5367431640625e-06, -1.0838608741760254, -0.0033586013596504927, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "weapon", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -4.212671484435155, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "weapon", "_type": "Template77"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Is<UNK>(MINION_TYPE.MECH)])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.6410379409790039, -2.288818359375e-05, -0.0003204345703125, -3.814697265625e-06, -0.000247955322265625, -0.000225067138671875, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0007003545761108398, 0.0, -0.0037136077880859375, -0.02891826629638672, -0.00063323974609375, -0.0002460479736328125, -0.0025119781494140625, -2.6702880859375e-05, 0.0, -0.0001373291015625, -6.103515625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -0.0012273748870939016, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.5139447896217462e-05, -2.2649765014648438e-06, -0.005184173583984375, -0.7137660980224609, -7.62939453125e-06, -0.28961730003356934, -1.9073486328125e-06, -0.000263214111328125, -0.00029754638671875, -0.1371011734008789, -0.0005283355712890625, -0.0004425048828125, -9.1552734375e-05, -5.53131103515625e-05, -1.5667599439620972, -0.44680893421173096, -0.005857706069946289, -0.020040512084960938, -0.0020809173583984375, 0.0, -1.9073486328125e-05, -4.00543212890625e-05, -0.13979625701904297, 0.0, -0.049590110778808594, -4.0531158447265625e-06], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "<UNK>", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "score": -4.504960751975773, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "Is<UNK>"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, enrage=[Aura(ChangeAttack(2), WeaponSelector()),\n            Aura(Give(), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -0.4321727752685547, -1.33514404296875e-05, -0.0007457733154296875, -0.0001239776611328125, -0.6457347869873047, -0.0012111663818359375, -3.814697265625e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.0486222505569458, -3.814697265625e-06, -3.0517578125e-05, -0.0022687911987304688, -0.0001468658447265625, -0.1032327339053154, -5.7220458984375e-06, -0.0066776275634765625, -2.47955322265625e-05, -0.00782492570579052, -0.0017999588744714856, -2.0265579223632812e-06, -0.0128631591796875, -0.007134437561035156, -1.9073486328125e-06, -1.9073486328125e-06, -0.034281373023986816, -2.491474151611328e-05, -4.00543212890625e-05, -0.01683807373046875, -0.0006275177001953125, -0.9778899550437927, -0.010932615958154202, -0.001293182373046875, -7.62939453125e-06, -1.21135413646698, -0.0003367648459970951, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Give", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.722378412597088, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "Give", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, deathrattle=Deathrattle(Give(ChangeHealth(1)),\n            SelfSelector()))\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.7509527206420898, -3.0517578125e-05, -0.00025545258540660143, -1.1920928244535389e-07, -0.0003780558181460947, 0.0, -1.3572797775268555, -1.9073486328125e-06, -0.000705718994140625, -7.2479248046875e-05, -0.0002079010009765625, -5.7220458984375e-06, -0.00103759765625, 0.0, -1.71661376953125e-05, -0.5249643325805664, -0.001056671142578125, -0.0015891790390014648, 0.0, -3.4689903259277344e-05, -1.3237066268920898, 0.0, -0.009897077456116676, -1.9073486328125e-06, -0.3447904586791992, -1.9073486328125e-06, -0.00019502629584167153, -0.00033843517303466797, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 109, 200, "3", "<EOS>", "2", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.763952469104758, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Aura(weapon(), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.6410379409790039, -2.288818359375e-05, -0.0003204345703125, -3.814697265625e-06, -0.000247955322265625, -0.000225067138671875, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0007003545761108398, 0.0, -0.0037136077880859375, -0.02891826629638672, -0.00063323974609375, -0.0002460479736328125, -0.0025119781494140625, -2.6702880859375e-05, 0.0, -0.0001373291015625, -6.103515625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -0.0012273748870939016, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.5139447896217462e-05, -2.2649765014648438e-06, -0.005184173583984375, -0.7137660980224609, -7.62939453125e-06, -0.28961730003356934, -1.9073486328125e-06, -0.000263214111328125, -0.00029754638671875, -0.1371011734008789, -0.0005283355712890625, -0.0004425048828125, -9.1552734375e-05, -5.53131103515625e-05, -0.6193646192550659, -0.01649308204650879, -4.38690185546875e-05, -1.6465559005737305, -0.00643157958984375, -0.17392776906490326, -0.17324356734752655, -0.11238956451416016, -7.62939453125e-06, -0.3932187557220459, -0.00340125965885818, -7.152555099310121e-07], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "weapon", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -5.419041501008564, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole0": "weapon", "_type": "Template77"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=UserPicker()))])\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -0.6410379409790039, -2.288818359375e-05, -0.0003204345703125, -3.814697265625e-06, -0.000247955322265625, -0.000225067138671875, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0007003545761108398, 0.0, -0.0037136077880859375, -0.02891826629638672, -0.00063323974609375, -0.0002460479736328125, -0.0025119781494140625, -2.6702880859375e-05, 0.0, -0.0001373291015625, -6.103515625e-05, -1.1444091796875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -0.0012273748870939016, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.5139447896217462e-05, -2.2649765014648438e-06, -0.005184173583984375, -0.7137660980224609, -7.62939453125e-06, -0.28961730003356934, -1.9073486328125e-06, -0.000263214111328125, -0.00029754638671875, -0.1371011734008789, -0.0005283355712890625, -0.0004425048828125, -9.1552734375e-05, -5.53131103515625e-05, -0.6193646192550659, -0.01649308204650879, -4.38690185546875e-05, -0.24129486083984375, -0.001621246337890625, -0.043510276824235916, -9.5367431640625e-06, -1.9222946166992188, -0.6583375930786133, -1.52587890625e-05, 0.0, -0.275590181350708, -0.0032672882080078125, 0.0, -9.1552734375e-05, -0.14415359497070312, -0.00012969970703125, -0.000141143798828125, -3.4332275390625e-05, -0.08381116390228271, -0.002439140807837248, -5.960462772236497e-07, -2.288818359375e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -0.00016427040100097656, -3.099440846199286e-06, -0.008593559265136719, -3.3378591979271732e-06, -0.001346588134765625, -7.82012939453125e-05, -7.2479248046875e-05, -0.002835988998413086, -1.1920928244535389e-07, -0.00064849853515625, -9.5367431640625e-06, -0.008361458778381348, -6.127357482910156e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -6.308827216153013, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000519617460668087, -4.053113570989808e-06, -4.088829518877901e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -4.76837158203125e-05, -1.0728830375228426e-06, -7.62939453125e-06, -0.4100465774536133, -0.000385284423828125, -4.565611743601039e-05, -9.28620938793756e-05, -4.172325134277344e-06, -1.1444091796875e-05, -0.00031387805938720703, 0.0, -0.03487396240234375, 0.0, -6.897439956665039, -3.814697265625e-06, -0.00041639248956926167, 0.0, -9.417499313713051e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Goblin", "Auto-Barber", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 110, 202, "3", "<EOS>", "2", "<EOS>"], "score": -7.344300602805447, "model_output": {"_type": "Module", "body": [{"name": "GoblinAuto-Barber", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Goblin Auto-Barber", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": 2, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, 0.0, -21.91086769104004], "choice_history": [80, 159, 294], "score": -21.910869598388672, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}
{"beams": [{"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(picker=RandomPicker())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -0.4323391914367676, -0.10722780227661133, -7.05718994140625e-05, -0.12569713592529297, -0.0058135986328125, -0.00020050848252139986, -5.7220458984375e-06, -0.000713348388671875, -1.9073486328125e-05, -5.960462772236497e-07, -6.67572021484375e-05, -0.000152587890625, -5.7220458984375e-06, -0.013563752174377441, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.08537864685058594, -0.0017087459564208984, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 282, 65, 256, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -1.5499234602106355, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"hole0": 1, "_type": "Template74"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), MinionSelector(IsType(MINION_TYPE.MECH, True))))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -1.3414478302001953, -9.536697689327411e-06, -2.3841855067985307e-07, -0.00041937828063964844, 0.0, -0.0014102458953857422, -0.0006695985794067383, -7.62939453125e-06, -0.2033892571926117, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.03824598714709282, 0.0, -0.04075336456298828, -9.5367431640625e-05, -3.3378546504536644e-06, -0.27298736572265625, -0.00067138671875, -0.0008296966552734375, -5.7220458984375e-06, -1.9073486328125e-06, -0.3796977996826172, -6.914138066349551e-05, 0.0, -0.05338287353515625, -0.00022125244140625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0038309097290039062, -2.288818359375e-05, -0.00079345703125, -1.1444091796875e-05, -0.022008895874023438, -0.00266265869140625, -0.0001239776611328125, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 178, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "2", "<EOS>", "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 283, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>"], "score": -2.4815718744308413, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole2": "TurnEnded", "_type": "Template1", "hole6": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Damage"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), MinionSelector(Not(IsType(MINION_TYPE.MECH, True)),\n            BothPlayer(), RandomPicker())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -1.3414478302001953, -9.536697689327411e-06, -2.3841855067985307e-07, -0.00041937828063964844, 0.0, -0.0014102458953857422, -0.0006695985794067383, -7.62939453125e-06, -0.2033892571926117, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.03824598714709282, 0.0, -0.04075336456298828, -9.5367431640625e-05, -3.3378546504536644e-06, -1.5592880249023438, -0.00012969970703125, -0.0005207061767578125, -9.5367431640625e-06, 0.0, -0.1763291358947754, -0.0008012056350708008, -0.0004138946533203125, -0.0009002685546875, -0.000522613525390625, -1.1444091796875e-05, 0.0, -0.0015411376953125, -0.000184058808372356, 0.0, -0.001422882080078125, -0.013112068176269531, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0035772323608398438, -1.5497207641601562e-05, -0.0006542205810546875, -1.33514404296875e-05, -0.0047149658203125, -0.004009246826171875, -0.0001068115234375, 0.0, -0.0013780593872070312, 0.0, -0.10193681716918945, -9.894371032714844e-06, -6.67572021484375e-05, -8.96453857421875e-05, 0.0, -0.009463978931307793, -0.00032269954681396484, -2.2649765014648438e-06], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 178, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "2", "<EOS>", "Minion", "Selector", "<EOS>", 284, 40, 136, 19, 160, "Not", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 283, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 68, 260, "Random", "Picker", "<EOS>"], "score": -3.6258005243604146, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole2": "TurnEnded", "_type": "Template1", "hole6": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "Not"}}, {"hole0": "BothPlayer", "_type": "Template77"}, {"hole0": "RandomPicker", "_type": "Template77"}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Damage"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(1)), MinionSelector(picker=RandomPicker())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -0.4323391914367676, -0.10722780227661133, -7.05718994140625e-05, -2.4035110473632812, -0.0010709762573242188, -0.0005875760107301176, 0.0, -0.008139610290527344, -2.288818359375e-05, -4.768370445162873e-07, -5.7220458984375e-05, -0.0001277923583984375, -7.62939453125e-06, -0.0036264657974243164, 0.0, -8.96453857421875e-05, -9.5367431640625e-06, -0.062104225158691406, -0.0014159679412841797, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 282, 64, 255, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -3.7972920293181858, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"hole0": 1, "_type": "Template73"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(2\n            ), CharacterSelector(players=EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -1.5715680122375488, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.7954246401786804, -3.814697265625e-06, -0.14025592803955078, -2.503394853192731e-06, 0.0, -0.2507352828979492, -5.340576171875e-05, -3.814697265625e-06, -0.00626218318939209, -3.576278118089249e-07, -5.91278076171875e-05, 0.0, -0.25921809673309326, -2.5868172087939456e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "2", "<EOS>", "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>"], "score": -3.800526958537631, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "CharacterSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 2}], "hole3": "Damage"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Kill(2),\n            MinionSelector(IsType(MINION_TYPE.MECH, True))))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -1.3414478302001953, -9.536697689327411e-06, -2.3841855067985307e-07, -0.00041937828063964844, 0.0, -0.0014102458953857422, -0.0006695985794067383, -7.62939453125e-06, -1.8289633989334106, -1.0013580322265625e-05, -1.9073486328125e-05, -0.020547866821289062, -3.814697265625e-06, -0.075959213078022, 0.0, -0.011281013488769531, -0.00014698505401611328, -3.4570634852570947e-06, -0.3486976623535156, -0.000690460205078125, -0.00061798095703125, -5.7220458984375e-06, -1.9073486328125e-06, -0.33315277099609375, -6.747245060978457e-05, 0.0, -0.041095733642578125, -0.0002765655517578125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0033864974975585938, -2.288818359375e-05, -0.0008144378662109375, -1.1444091796875e-05, -0.021932601928710938, -0.0025959014892578125, -0.0001201629638671875, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 178, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Kill", "<EOS>", 282, 47, 165, "2", "<EOS>", "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 283, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>"], "score": -4.152174877783267, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole2": "TurnEnded", "_type": "Template1", "hole6": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole4": [{"_type": "Num", "n": 2}], "hole3": "Kill"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), CharacterSelector(players=EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -1.5715680122375488, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.785712718963623, 0.0, -0.6748594045639038, -4.768370445162873e-07, 0.0, -0.29224300384521484, -6.4849853515625e-05, -5.7220458984375e-06, -0.011381864547729492, -3.576278118089249e-07, -4.1961669921875e-05, 0.0, -0.11647701263427734, -2.4556857169955038e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>"], "score": -4.229293864786456, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "CharacterSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(\n            GiveSelector(ChangeHealth(1)), MinionSelector(picker=\n            RandomPicker())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -0.4323391914367676, -2.2893433570861816, 0.0, -0.008486747741699219, -0.6578903198242188, -0.006867408752441406, -0.00031507000676356256, -1.9073486328125e-06, -0.000759124755859375, -1.52587890625e-05, -5.960462772236497e-07, -5.53131103515625e-05, -0.000133514404296875, -5.7220458984375e-06, -0.012767195701599121, 0.0, -7.62939453125e-05, -7.62939453125e-06, -0.08651542663574219, -0.0017096996307373047, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "Selector", "<EOS>", 282, 65, 256, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.274173182181045, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"hole0": 1, "_type": "Template74"}], "hole3": "GiveSelector"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(1)), MinionSelector(picker=EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -0.4323391914367676, -0.10722780227661133, -7.05718994140625e-05, -0.12569713592529297, -0.0058135986328125, -0.00020050848252139986, -5.7220458984375e-06, -0.000713348388671875, -1.9073486328125e-05, -5.960462772236497e-07, -6.67572021484375e-05, -0.000152587890625, -5.7220458984375e-06, -0.013563752174377441, 0.0, -6.866455078125e-05, -7.62939453125e-06, -2.9681406021118164, -1.728534698486328e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 282, 65, 256, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>"], "score": -4.430995862211063, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"hole0": 1, "_type": "Template74"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Kill(),\n            TargetSelector(IsMinion())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -3.554065227508545, -7.152555099310121e-07, 0.0, -0.0010161431273445487, 0.0, -0.02823352813720703, -0.0013599395751953125, -1.71661376953125e-05, -0.09449350833892822, -5.2094459533691406e-05, -0.24872340261936188, -6.67572021484375e-05, 0.0, -0.003139495849609375, -0.18787193298339844, -1.9073486328125e-06, -0.11795291304588318, -0.09258678555488586, -4.9591064453125e-05], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 175, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Kill", "<EOS>", "Target", "Selector", "<EOS>", 282, 68, 260, "Is", "Minion", "<EOS>"], "score": -4.447405038658303, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "TargetSelector", "hole2": "TurnEnded", "_type": "Template1", "hole6": [{"hole0": "IsMinion", "_type": "Template77"}], "hole3": "Kill"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), MinionSelector(picker=RandomPicker())))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -0.6574621200561523, -5.722029527532868e-06, -2.3841855067985307e-07, -0.0011584777384996414, 0.0, -0.00018346309661865234, -0.0002994537353515625, 0.0, -1.5715680122375488, -1.9073486328125e-06, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.785712718963623, 0.0, -0.7756105661392212, -3.62396240234375e-05, -3.576278118089249e-07, -0.00025177001953125, -6.4849853515625e-05, 0.0, -0.5087090730667114, 0.0, -0.0011463165283203125, -7.62939453125e-06, -0.1080552339553833, -0.002119898796081543, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 177, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.530198496657732, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -0.06865119934082031, -3.6912403106689453, -0.00010311572259524837, -1.0848044439626392e-05, -0.0004059077182319015, -1.9073486328125e-06, -0.0055321455001831055, -0.09104132652282715, -6.103515625e-05, -0.6043789386749268, -8.96453857421875e-05, -0.03477036952972412, -3.457069396972656e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 96, 173, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>"], "score": -4.545444051416439, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "hole5": "PlayerSelector", "hole2": "TurnEnded", "_type": "Template1", "hole3": "Draw"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(player=EnemyPlayer()),\n            ActionTag(Resurrect<UNK>(), PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -2.8613290786743164, -0.0010852813720703125, -7.748572897980921e-06, 0.0, -0.0009125949000008404, 0.0, -0.000637054443359375, -1.5854835510253906e-05, -1.9073486328125e-05, -7.2479248046875e-05, -0.013881683349609375, -0.000240325927734375, -7.82012939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016999244689941406, -1.9073486328125e-06, -0.0003147125244140625, -0.0007171630859375, -0.027498245239257812, -3.24249267578125e-05, -1.9073486328125e-06, -0.08814918994903564, -0.013446807861328125, 0.0, -5.7220458984375e-06, -7.2479248046875e-05, -1.52587890625e-05, -4.76837158203125e-05, 0.0, -0.000362396240234375, -1.1444091796875e-05, -0.41794395446777344, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, 0.0, 0.0, -0.0001087188720703125, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.0238170623779297, -2.288818359375e-05, -0.5031840205192566, -0.03597915545105934, -0.005248069763183594, -0.004466056823730469, 0.0, -0.03388535976409912, -1.1801719665527344e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Resurrect", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.083036812190244, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"hole0": "Resurrect<UNK>", "_type": "Template77"}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(player=EnemyPlayer()),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(1))]),\n            SelfSelector()))])\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.002360417041927576, -3.492808900773525e-05, -1.0728831512096804e-05, -2.6702880859375e-05, -2.6702880859375e-05, 0.0, -3.576278118089249e-07, -2.86102294921875e-05, -2.503394853192731e-06, -3.62396240234375e-05, -0.0031499862670898438, -0.0005931854248046875, -0.00025614796322770417, -0.0006979702739045024, -8.58306884765625e-06, -1.9073486328125e-06, -2.3841855067985307e-07, -2.3841855067985307e-07, -0.009418487548828125, -3.814697265625e-06, -0.0324249267578125, -5.7220458984375e-06, -2.8613290786743164, -0.0010852813720703125, -7.748572897980921e-06, 0.0, -0.0009125949000008404, 0.0, -0.000637054443359375, -1.5854835510253906e-05, -1.9073486328125e-05, -7.2479248046875e-05, -0.013881683349609375, -0.000240325927734375, -7.82012939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00016999244689941406, -1.9073486328125e-06, -0.0003147125244140625, -0.0007171630859375, -0.027498245239257812, -3.24249267578125e-05, -1.9073486328125e-06, -0.08814918994903564, -0.013446807861328125, 0.0, -5.7220458984375e-06, -7.2479248046875e-05, -1.52587890625e-05, -4.76837158203125e-05, 0.0, -0.000362396240234375, -1.1444091796875e-05, -0.41794395446777344, -2.0265579223632812e-06, 0.0, -1.52587890625e-05, -7.62939453125e-06, 0.0, 0.0, -0.0001087188720703125, -3.24249267578125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.9577884674072266, -0.0007381439208984375, -3.0636783776571974e-05, -0.00015854835510253906, -3.814697265625e-06, -0.7107170820236206, -1.1444091796875e-05, -0.001590728759765625, -0.0037593841552734375, -4.57763671875e-05, -0.6402523517608643, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -0.000308990478515625, -2.09808349609375e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Iron", "Sensei", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "MECH", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.791883079499371, "model_output": {"_type": "Module", "body": [{"name": "IronSensei", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template8", "hole2": "ROGUE", "hole3": "MECH"}, {"hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -23.136898040771484], "choice_history": [80, 159, 294], "score": -23.136919021606445, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n"}
{"beams": [{"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =Battlecry(GiveAura(0), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -1.671895980834961, -0.011689186096191406, -0.9890469908714294, -0.011512874625623226, -0.005841867532581091, -0.0001964569091796875, -0.6998767852783203, -5.7220458984375e-06, -0.7011680006980896, -3.814697265625e-06, -0.00133514404296875, -0.0001049041748046875, -0.0006472459645010531, -1.728534698486328e-05, -0.0007317978306673467, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 241, "Give", "Aura", "<EOS>", 282, 47, 165, "Immune", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -4.183781254367176, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 0}], "hole0": "GiveAura", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON,\n            minion_type=MINION_TYPE)\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -3.9309825897216797, 0.0, -0.22362709045410156, -1.52587890625e-05, -8.0108642578125e-05, -3.814697265625e-06, -0.010717391967773438, -0.00018310546875, -0.015261445194482803, -1.9073486328125e-05, -0.00024387246230617166, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -4.233808820921666, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "minion_type", "hole2": "WARLOCK", "hole8": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =Battlecry(Immune(BattleAxe()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -1.671895980834961, -0.011689186096191406, -0.49761319160461426, -0.0014448165893554688, -0.000843048095703125, -1.6281938552856445, -0.0003147125244140625, -0.21681295335292816, -0.16948430240154266, -2.3841855067985307e-07, -9.5367431640625e-05, -7.62939453125e-06, -0.0009044892503879964, -3.933906555175781e-06, -1.1324837942083832e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 241, "Immune", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -4.289022227442672, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "Immune", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =Battlecry(GiveAura(1), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -1.671895980834961, -0.011689186096191406, -0.9890469908714294, -0.011512874625623226, -0.005841867532581091, -0.0001964569091796875, -0.6998767852783203, -5.7220458984375e-06, -1.0214853286743164, 0.0, -0.000728607177734375, -1.33514404296875e-05, -0.000940310419537127, -3.933906555175781e-06, -0.00023338454775512218, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 28, 241, "Give", "Aura", "<EOS>", 282, 47, 165, "1", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -4.503177977778222, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole1": [{"_type": "Num", "n": 1}], "hole0": "GiveAura", "_type": "Template59"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =Battlecry(Damage(1), CharacterSelector()))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -4.006051540374756, -0.020165443420410156, -0.5538114905357361, -1.9073486328125e-06, -0.05521869659423828, -6.079673767089844e-06, -3.576278118089249e-07, -0.013276100158691406, -9.5367431640625e-06, -2.4437842512270436e-05, -0.00010514259338378906, -3.79079720005393e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 27, 231, "1", "<EOS>", "Character", "Selector", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -4.738415838302814, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56"}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())), Battlecry(Remove(), SelfSelector()),\n            RandomPicker(9)))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.5883035659790039, -1.9073486328125e-05, -1.9073486328125e-06, -0.00030159950256347656, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-06, -0.08513379096984863, -5.14984130859375e-05, -1.9073486328125e-06, -0.000152587890625, -8.392333984375e-05, -0.0007554292678833008, 0.0, -0.0007076263427734375, -1.9073486328125e-06, -0.07972526550292969, -0.0002002716064453125, 0.0, -0.0016765594482421875, -0.0010204315185546875, -1.9073486328125e-06, 0.0, -0.04339599609375, -1.9073486328125e-06, -6.4849853515625e-05, -1.0221672058105469, -4.1961669921875e-05, -0.15405744314193726, -0.0013164108386263251, -0.012437820434570312, -1.9073486328125e-06, -0.03952586650848389, -1.1444091796875e-05, 0.0, -0.07907772064208984, -0.0004673004150390625, -1.9073486328125e-06, -2.47955322265625e-05, -0.3421306610107422, -0.3361666202545166, 0.0, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.3678146004676819, -1.9073486328125e-06, -0.00145721435546875, -5.7220458984375e-06, -0.006947463843971491, -2.0265579223632812e-06, -1.8596476365928538e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Remove", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -5.39224082741017, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"hole0": "Remove", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer())),\n            RandomPicker(9), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.PIRATE))), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.9408254623413086, -7.62939453125e-06, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -7.2479248046875e-05, -1.9073486328125e-06, -0.018282532691955566, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008792877197265625, -0.0021228790283203125, -1.9073486328125e-06, 0.0, -0.8042211532592773, -0.0029468536376953125, 0.0, -0.000186920166015625, -2.288818359375e-05, 0.0, -0.11430812627077103, -1.9073486328125e-06, -0.0039577484130859375, -0.09064102172851562, -2.288818359375e-05, 0.0, -0.0025377273559570312, -0.0004425048828125, -1.9073486328125e-06, -5.7220458984375e-06, -0.009067535400390625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.11024284362792969, -0.00036406517028808594, -9.5367431640625e-06, -0.031768798828125, -0.045925140380859375, -1.9073486328125e-06, 0.0, -0.018018722534179688, -5.340576171875e-05, 0.0, -0.05275726318359375, -0.0001087188720703125, -0.0002593994140625, -1.52587890625e-05, -7.62939453125e-06, -0.0007343292236328125, -4.982948303222656e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.42423534393310547, -5.960462772236497e-07, -3.4332275390625e-05, -2.288818359375e-05, -9.5367431640625e-06, -0.6696585416793823, 0.0, -0.006104469299316406, -1.1444091796875e-05, -0.15299975872039795, -0.00020241737365722656, 0.0, -0.0004730224609375, -5.7220458984375e-06, -0.0006173552246764302, -1.9073486328125e-06, -3.218649908376392e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -5.732880586669829, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())), Battlecry(Remove(), SelfSelector()),\n            RandomPicker(2)))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.5883035659790039, -1.9073486328125e-05, -1.9073486328125e-06, -0.00030159950256347656, -1.1920928244535389e-07, -0.000301361083984375, -1.9073486328125e-06, -0.08513379096984863, -5.14984130859375e-05, -1.9073486328125e-06, -0.000152587890625, -8.392333984375e-05, -0.0007554292678833008, 0.0, -0.0007076263427734375, -1.9073486328125e-06, -0.07972526550292969, -0.0002002716064453125, 0.0, -0.0016765594482421875, -0.0010204315185546875, -1.9073486328125e-06, 0.0, -0.04339599609375, -1.9073486328125e-06, -6.4849853515625e-05, -1.0221672058105469, -4.1961669921875e-05, -0.15405744314193726, -0.0013164108386263251, -0.012437820434570312, -1.9073486328125e-06, -0.03952586650848389, -1.1444091796875e-05, 0.0, -0.07907772064208984, -0.0004673004150390625, -1.9073486328125e-06, -2.47955322265625e-05, -0.3421306610107422, -0.3361666202545166, 0.0, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.3223217725753784, 0.0, -0.0009326934814453125, -5.7220458984375e-06, -0.012794909067451954, -2.0265579223632812e-06, -3.111314072157256e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Remove", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "2", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -6.352081533183046, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"hole0": "Remove", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer())),\n            RandomPicker(9), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.DEMON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.9408254623413086, -7.62939453125e-06, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -7.2479248046875e-05, -1.9073486328125e-06, -0.018282532691955566, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008792877197265625, -0.0021228790283203125, -1.9073486328125e-06, 0.0, -0.8042211532592773, -0.0029468536376953125, 0.0, -0.000186920166015625, -2.288818359375e-05, 0.0, -0.11430812627077103, -1.9073486328125e-06, -0.0039577484130859375, -0.09064102172851562, -2.288818359375e-05, 0.0, -0.0025377273559570312, -0.0004425048828125, -1.9073486328125e-06, -5.7220458984375e-06, -0.009067535400390625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.11024284362792969, -0.00036406517028808594, -9.5367431640625e-06, -0.031768798828125, -0.045925140380859375, -1.9073486328125e-06, 0.0, -0.018018722534179688, -5.340576171875e-05, 0.0, -0.05275726318359375, -0.0001087188720703125, -0.0002593994140625, -1.52587890625e-05, -7.62939453125e-06, -0.0007343292236328125, -4.982948303222656e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -1.8630952835083008, -4.601478576660156e-05, -2.86102294921875e-05, -3.814697265625e-05, -1.1444091796875e-05, -0.06311225891113281, -3.933906555175781e-06, -0.000331878662109375, -7.62939453125e-06, -0.010154959745705128, 0.0, -0.0024871826171875, -1.33514404296875e-05, -0.015160638839006424, 0.0, -0.0003880701260641217, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -6.433379435824428, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer())),\n            RandomPicker(9), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.9408254623413086, -7.62939453125e-06, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -7.2479248046875e-05, -1.9073486328125e-06, -0.018282532691955566, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008792877197265625, -0.0021228790283203125, -1.9073486328125e-06, 0.0, -0.8042211532592773, -0.0029468536376953125, 0.0, -0.000186920166015625, -2.288818359375e-05, 0.0, -0.11430812627077103, -1.9073486328125e-06, -0.0039577484130859375, -0.09064102172851562, -2.288818359375e-05, 0.0, -0.0025377273559570312, -0.0004425048828125, -1.9073486328125e-06, -5.7220458984375e-06, -0.009067535400390625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.11024284362792969, -0.00036406517028808594, -9.5367431640625e-06, -0.031768798828125, -0.045925140380859375, -1.9073486328125e-06, 0.0, -0.018018722534179688, -5.340576171875e-05, 0.0, -0.05275726318359375, -0.0001087188720703125, -0.0002593994140625, -1.52587890625e-05, -7.62939453125e-06, -0.0007343292236328125, -4.982948303222656e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.42423534393310547, -5.960462772236497e-07, -3.4332275390625e-05, -2.288818359375e-05, -9.5367431640625e-06, -1.7276114225387573, -3.933906555175781e-06, -0.00048828125, -5.7220458984375e-06, -0.010027049109339714, 0.0, -0.010149002075195312, -9.5367431640625e-06, -0.0066592334769666195, -1.9073486328125e-06, -0.00021944021864328533, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -6.657978258488377, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Give(Buff(ChangeAttack(Attribute('<UNK>',\n            HeroSelector())))), MinionSelector(IsType(MINION_TYPE.PIRATE),\n            BothPlayer())), RandomPicker(9), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.PIRATE))), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.42156219482421875, 0.0, -0.0046596527099609375, -0.35721778869628906, -0.000949859619140625, -0.011913776397705078, -0.07886314392089844, 0.0, -1.1444091796875e-05, -0.0006504058837890625, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -0.6265897750854492, 0.0, -0.0002155303955078125, -0.00212860107421875, -0.0001068115234375, -0.041220903396606445, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.2668344974517822, -1.3709050108445808e-05, 0.0, -0.13459396362304688, -4.57763671875e-05, 0.0, 0.0, -0.607177734375, -0.003047943115234375, 0.0, -0.018825531005859375, -0.649993896484375, -2.86102294921875e-05, -4.38690185546875e-05, -2.6702880859375e-05, -0.0023660659790039062, -2.300739288330078e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, 0.0, -0.7305850982666016, -4.768370445162873e-07, -0.000232696533203125, -1.9073486328125e-06, -0.013161063194274902, -6.294249760685489e-05, -1.52587890625e-05, -0.0075092315673828125, -0.001590728759765625, 0.0, -1.9073486328125e-06, -0.47933387756347656, -0.008042335510253906, -3.814697265625e-06, -0.0001926422119140625, -0.0001983642578125, 0.0, -0.4156739413738251, 0.0, -0.0035066604614257812, -0.5571956634521484, -4.00543212890625e-05, 0.0, -0.003963470458984375, -0.0004825592041015625, -1.9073486328125e-06, -7.62939453125e-06, -0.0031871795654296875, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.08263206481933594, -0.00024175643920898438, -1.1444091796875e-05, -0.02739715576171875, -0.023122787475585938, -1.9073486328125e-06, 0.0, -0.008326530456542969, -0.00014495849609375, 0.0, -0.04774665832519531, -0.00012969970703125, -0.000217437744140625, -9.5367431640625e-06, -1.9073486328125e-06, -0.0004444122314453125, -1.919269561767578e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.3916025161743164, -5.960462772236497e-07, -3.4332275390625e-05, -2.288818359375e-05, -9.5367431640625e-06, -0.4181647300720215, 0.0, -0.012537002563476562, -1.1444091796875e-05, -0.16899096965789795, -0.00025594234466552734, 0.0, -0.000461578369140625, -3.814697265625e-06, -0.000602453073952347, -1.9073486328125e-06, -3.218649908376392e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Attack", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -7.361267209812155, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole0": "ChangeAttack", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Give(Buff(ChangeAttack(Attribute('<UNK>',\n            HeroSelector())))), MinionSelector(IsType(MINION_TYPE.DEMON),\n            BothPlayer())), RandomPicker(9), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.PIRATE))), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(9, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -0.42156219482421875, 0.0, -0.0046596527099609375, -0.35721778869628906, -0.000949859619140625, -0.011913776397705078, -0.07886314392089844, 0.0, -1.1444091796875e-05, -0.0006504058837890625, -0.000164031982421875, -5.7220458984375e-06, -5.7220458984375e-06, -0.6265897750854492, 0.0, -0.0002155303955078125, -0.00212860107421875, -0.0001068115234375, -0.041220903396606445, -3.814697265625e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.2668344974517822, -1.3709050108445808e-05, 0.0, -0.13459396362304688, -4.57763671875e-05, 0.0, 0.0, -0.607177734375, -0.003047943115234375, 0.0, -0.018825531005859375, -0.649993896484375, -2.86102294921875e-05, -4.38690185546875e-05, -2.6702880859375e-05, -0.0023660659790039062, -2.300739288330078e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, 0.0, -1.1833486557006836, -2.872943878173828e-05, -0.000225067138671875, -1.9073486328125e-06, -0.0036814212799072266, -9.810923802433535e-05, -2.09808349609375e-05, -0.004146575927734375, -0.0015277862548828125, 0.0, 0.0, -0.9409999847412109, -0.01192474365234375, -3.814697265625e-06, -0.0001888275146484375, -0.0002841949462890625, 0.0, -0.30905795097351074, 0.0, -0.0025262832641601562, -0.34982872009277344, -4.00543212890625e-05, 0.0, -0.0033216476440429688, -0.0004978179931640625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0020294189453125, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0799713134765625, -0.00024378299713134766, -1.1444091796875e-05, -0.027301788330078125, -0.033214569091796875, -1.9073486328125e-06, 0.0, -0.007887840270996094, -0.00016021728515625, 0.0, -0.04635429382324219, -0.0001277923583984375, -0.0002193450927734375, -9.5367431640625e-06, -1.9073486328125e-06, -0.0004253387451171875, -1.728534698486328e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.3937826156616211, -5.960462772236497e-07, -3.4332275390625e-05, -2.288818359375e-05, -1.1444091796875e-05, -0.3781313896179199, 0.0, -0.014512062072753906, -1.1444091796875e-05, -0.17427146434783936, -0.00026166439056396484, 0.0, -0.0004596710205078125, -3.814697265625e-06, -0.0006014996324665844, -1.9073486328125e-06, -3.218649908376392e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Attack", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "9", "<EOS>", "7", "<EOS>"], "score": -7.924974114694834, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"hole1": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole0": "ChangeAttack", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 9, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer())),\n            RandomPicker(9), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.PIRATE))), minion_type=MINION_TYPE.DEMON)))\n\n    def create_minion(self, player):\n        return Minion(9, 7, stealth=True, enrage=[Aura(ChangeAttack(7),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.9408254623413086, -7.62939453125e-06, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -7.2479248046875e-05, -1.9073486328125e-06, -0.018282532691955566, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008792877197265625, -0.0021228790283203125, -1.9073486328125e-06, 0.0, -0.8042211532592773, -0.0029468536376953125, 0.0, -0.000186920166015625, -2.288818359375e-05, 0.0, -0.11430812627077103, -1.9073486328125e-06, -0.0039577484130859375, -0.09064102172851562, -2.288818359375e-05, 0.0, -0.0025377273559570312, -0.0004425048828125, -1.9073486328125e-06, -5.7220458984375e-06, -0.009067535400390625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.11024284362792969, -0.00036406517028808594, -9.5367431640625e-06, -0.031768798828125, -0.045925140380859375, -1.9073486328125e-06, 0.0, -0.018018722534179688, -5.340576171875e-05, 0.0, -0.05275726318359375, -0.0001087188720703125, -0.0002593994140625, -1.52587890625e-05, -7.62939453125e-06, -0.0007343292236328125, -4.982948303222656e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.42423534393310547, -5.960462772236497e-07, -3.4332275390625e-05, -2.288818359375e-05, -9.5367431640625e-06, -1.566604495048523, 0.0, -0.0034999847412109375, -0.00016021728515625, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018310546875, -9.5367431640625e-06, -0.0037412643432617188, -4.5299530029296875e-06, -0.8930511474609375, -8.96453857421875e-05, -2.491474151611328e-05, -1.52587890625e-05, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -0.0021916627883911133, -1.1920928244535389e-07, -0.0002498626708984375, -0.0023632049560546875, -2.6702880859375e-05, -0.0001220703125, -0.002269744873046875, -3.814697265625e-06, 0.0, -0.0006542205810546875, -9.5367431640625e-06, -0.000156402587890625, -0.0001201629638671875, -5.7220458984375e-06, -2.7060459615313448e-05, -3.1113624572753906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00040853017708286643, 0.0, -0.002838134765625, -0.000713348388671875, -5.7220458984375e-06, -0.6069173812866211, -3.4332275390625e-05, -0.000885009765625, -2.09808349609375e-05, -5.364418029785156e-05, 0.0, -1.017247200012207, -0.008148193359375, -0.7606600522994995, -7.629378160345368e-06], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "9", "<EOS>", 47, 165, "7", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "7", "<EOS>"], "score": -9.778120780036048, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 7, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON, battlecry\n            =(Battlecry(Heal(9), CharacterSelector(players=BothPlayer())),\n            RandomPicker(9), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.PIRATE))), minion_type=MINION_TYPE.DEMON)))\n\n    def create_minion(self, player):\n        return Minion(9, 7, stealth=True, auras=[Aura(Immune(),\n            MinionSelector(players=BothPlayer()))])\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011610332876443863, -0.0005617127753794193, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -5.7220458984375e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.04076862335205078, -0.000186920166015625, -0.00030119650182314217, -9.655952453613281e-06, -0.0018114997074007988, -2.3841855067985307e-07, -0.000997781753540039, -5.7220458984375e-06, -0.0063304901123046875, 0.0, -0.000331878662109375, -5.7220458984375e-06, -3.814697265625e-05, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0010738372802734375, -1.1444091796875e-05, -0.037032127380371094, 0.0, -0.28028202056884766, -0.0006608963012695312, -0.11570262908935547, -6.4849853515625e-05, -0.0001697540283203125, -1.9073486328125e-06, -3.814697265625e-06, -0.0037499666213989258, 0.0, -7.62939453125e-06, -0.23298072814941406, -0.0001697540283203125, -9.34600830078125e-05, -3.814697265625e-06, -1.1098804473876953, -0.0002384185791015625, -3.814697265625e-06, -0.010187149047851562, 0.0, -0.1465369015932083, -3.24249267578125e-05, -0.0002079010009765625, -0.1526803970336914, -1.9073486328125e-05, 0.0, -0.0832052230834961, -2.47955322265625e-05, 0.0, -0.9408254623413086, -7.62939453125e-06, 0.0, -0.0008298158645629883, -1.1920928244535389e-07, -7.2479248046875e-05, -1.9073486328125e-06, -0.018282532691955566, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008792877197265625, -0.0021228790283203125, -1.9073486328125e-06, 0.0, -0.8042211532592773, -0.0029468536376953125, 0.0, -0.000186920166015625, -2.288818359375e-05, 0.0, -0.11430812627077103, -1.9073486328125e-06, -0.0039577484130859375, -0.09064102172851562, -2.288818359375e-05, 0.0, -0.0025377273559570312, -0.0004425048828125, -1.9073486328125e-06, -5.7220458984375e-06, -0.009067535400390625, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.11024284362792969, -0.00036406517028808594, -9.5367431640625e-06, -0.031768798828125, -0.045925140380859375, -1.9073486328125e-06, 0.0, -0.018018722534179688, -5.340576171875e-05, 0.0, -0.05275726318359375, -0.0001087188720703125, -0.0002593994140625, -1.52587890625e-05, -7.62939453125e-06, -0.0007343292236328125, -4.982948303222656e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -0.42423534393310547, -5.960462772236497e-07, -3.4332275390625e-05, -2.288818359375e-05, -9.5367431640625e-06, -1.566604495048523, 0.0, -0.0034999847412109375, -0.00016021728515625, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018310546875, -9.5367431640625e-06, -0.0037412643432617188, -4.5299530029296875e-06, -0.8930511474609375, -8.96453857421875e-05, -2.491474151611328e-05, -1.52587890625e-05, -7.62939453125e-06, -4.9591064453125e-05, 0.0, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -0.0021916627883911133, -1.1920928244535389e-07, -0.0002498626708984375, -0.0023632049560546875, -2.6702880859375e-05, -0.0001220703125, -0.002269744873046875, -3.814697265625e-06, 0.0, -0.0006542205810546875, -9.5367431640625e-06, -0.000156402587890625, -0.0001201629638671875, -5.7220458984375e-06, -2.7060459615313448e-05, -3.1113624572753906e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00040853017708286643, 0.0, -0.002838134765625, -0.000713348388671875, -5.7220458984375e-06, -0.6069173812866211, -3.4332275390625e-05, -0.000885009765625, -2.09808349609375e-05, -5.364418029785156e-05, 0.0, -0.8776721954345703, -0.00011444091796875, -0.6021026372909546, -3.814697265625e-06, -0.012216567993164062, -0.00064849853515625, -2.47955322265625e-05, -0.0001430511474609375, -0.0002346038818359375, -1.9073486328125e-06, -0.0015106201171875, -0.0011211633682250977, -1.33514404296875e-05, -9.918212890625e-05, -0.023546218872070312, -0.001617431640625, -0.04699791222810745, -8.392333984375e-05, -3.24249267578125e-05, -0.0052642822265625, -3.814697265625e-06, 0.0, -0.14446544647216797, -0.002811431884765625, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -3.814697265625e-06, -0.41217339038848877, -1.1920928244535389e-07, -2.288818359375e-05, -1.9073486328125e-06, -0.021845102310180664, -1.3589859008789062e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mal'Ganis", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Mal'Ganis", "<EOS>", "9", "<EOS>", "WARLOCK", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", "battlecry", "<EOS>", 35, 265, 284, 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "9", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "9", "<EOS>", 47, 165, "7", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Immune", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>"], "score": -10.146874935986268, "model_output": {"_type": "Module", "body": [{"name": "Mal'Ganis", "_type": "ClassDef", "body": [{"hole1": 9, "hole0": "Mal'Ganis", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARLOCK", "hole8": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, {"args": [{"_type": "Num", "n": 9}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, {"args": [{"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}]}, "_type": "Template9", "hole6": "DEMON", "hole4": "minion_type", "hole3": "LEGENDARY"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 9}, {"_type": "Num", "n": 7}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole0": "Immune", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -23.241804122924805], "choice_history": [80, 159, 294], "score": -23.241819381713867, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n"}
{"beams": [{"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(self.target.calculate_attack())\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -0.46286582946777344, -2.47955322265625e-05, -0.0001242160506080836, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -8.392333984375e-05, -2.288818359375e-05, -0.0001678466796875, -0.00080108642578125, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -1.0013580322265625e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001659393310546875, -3.4332275390625e-05, -0.0002346038818359375, -0.00011193125828867778, -8.976459503173828e-05, -0.006918309722095728, -0.00018310546875, -0.002751258434727788, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.00012421145220287144, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.002635955810546875, -0.00010025501251220703, -0.000148773193359375, -0.0026674270629882812, -2.6702880859375e-05, -0.23993051052093506, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.00021183490753173828, -9.5367431640625e-06, -0.0004367828369140625, 0.0, -1.2026281356811523, -0.0004367828369140625, -0.5301303863525391, -0.08418655395507812, -3.814697265625e-06, -2.09808349609375e-05, -0.0007648468017578125, 0.0, -9.1552734375e-05, -2.288818359375e-05, -4.38690185546875e-05, 0.0, -0.6977826356887817, -1.9073486328125e-06, -9.1552734375e-05, -0.008723258972167969, -0.18395423889160156, -0.0005207061767578125, -1.52587890625e-05, -0.0032291412353515625, 0.0, -0.26905059814453125, 0.0, -0.0022878646850585938, -3.4332275390625e-05, -0.0001220703125, -3.4332275390625e-05, -0.1695566177368164, -0.0009069442749023438], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mistress", " ", "of", " ", "Pain", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "score": -3.883439447634366, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "add_effect", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>)),\n            PlayerSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -1.733896255493164, -0.0067539215087890625, -0.00029392691794782877, -2.3126602172851562e-05, -0.0002595186233520508, -1.52587890625e-05, -4.9710182793205604e-05, -1.9073486328125e-06, -5.6981294619617984e-05, 0.0, -0.000232696533203125, -1.71661376953125e-05, -0.6420812606811523, -5.841255187988281e-06, -0.04164600372314453, -0.14145755767822266, -6.794923137931619e-06, 0.0, -0.002102796919643879, -7.62939453125e-06, -0.66377854347229, -0.000598907470703125, -0.7718397378921509, -0.004678845405578613, -0.0006347893504425883, -1.52587890625e-05, -0.0002536773681640625, -0.04983043670654297, -3.0517578125e-05, 0.0, -0.0021123886108398438, -0.004773974418640137, 0.0, -0.020257949829101562, -1.9073486328125e-06, -9.5367431640625e-06, -0.010566234588623047, -1.9073486328125e-06, -9.1552734375e-05, -0.0002269744873046875, -1.33514404296875e-05, 0.0, -0.03694343566894531, -5.7220458984375e-06, -0.02704620361328125, -0.0003147125244140625, -0.0001392364501953125, -0.000164031982421875, -0.05060768127441406, -3.814697265625e-06, -0.02598094940185547, -1.71661376953125e-05, -0.057346343994140625, -3.4809112548828125e-05, -0.007517814636230469, -1.1444091796875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "MECH", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 79, 271, "source_list", "<EOS>", 19, 160, "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "score": -4.312016399081585, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "_type": "Template8", "hole2": "WARLOCK", "hole3": "MECH"}, {"hole1": 4, "hole0": 1, "hole5": "PlayerSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}, {"arg": "source_list", "value": {"_type": "Name", "id": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "AddCard"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -1.733896255493164, -0.0067539215087890625, -0.00029392691794782877, -2.3126602172851562e-05, -0.0002595186233520508, -1.52587890625e-05, -4.9710182793205604e-05, -1.9073486328125e-06, -5.6981294619617984e-05, 0.0, -0.000232696533203125, -1.71661376953125e-05, -0.6420812606811523, -5.841255187988281e-06, -0.04164600372314453, -0.14145755767822266, -6.794923137931619e-06, 0.0, -0.002102796919643879, -7.62939453125e-06, -0.748450517654419, -0.5097380876541138, -0.000308990478515625, -0.5305553674697876, -9.5367431640625e-05, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -0.18248827755451202, -1.1444091796875e-05, -0.03889656066894531, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "MECH", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>"], "score": -4.586753235750621, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "_type": "Template8", "hole2": "WARLOCK", "hole3": "MECH"}, {"hole1": 4, "hole0": 1, "hole5": "HeroSelector", "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 4}], "hole3": "Heal"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnStarted(), ActionTag(Heal(4\n            ), HeroSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -1.733896255493164, -0.0067539215087890625, -0.00029392691794782877, -2.3126602172851562e-05, -0.0002595186233520508, -1.52587890625e-05, -4.9710182793205604e-05, -1.9073486328125e-06, -5.6981294619617984e-05, 0.0, -0.000232696533203125, -1.71661376953125e-05, -0.6420812606811523, -5.841255187988281e-06, -0.04164600372314453, -0.14145755767822266, -6.794923137931619e-06, 0.0, -0.002102796919643879, -7.62939453125e-06, -0.748450517654419, -0.9361258745193481, -1.52587890625e-05, -0.13147437572479248, -0.004671216011047363, -3.814697265625e-06, -8.0108642578125e-05, -3.814697265625e-06, -0.5206500291824341, -7.62939453125e-06, -0.06405448913574219, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "MECH", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>"], "score": -4.981709511571353, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "_type": "Template8", "hole2": "WARLOCK", "hole3": "MECH"}, {"hole1": 4, "hole0": 1, "hole5": "HeroSelector", "hole2": "TurnStarted", "_type": "Template1", "hole4": [{"_type": "Num", "n": 4}], "hole3": "Heal"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -1.733896255493164, -0.0067539215087890625, -0.00029392691794782877, -2.3126602172851562e-05, -0.0002595186233520508, -1.52587890625e-05, -4.9710182793205604e-05, -1.9073486328125e-06, -5.6981294619617984e-05, 0.0, -0.000232696533203125, -1.71661376953125e-05, -1.6148195266723633, -0.000438690185546875, -0.0796365737915039, -0.15087223052978516, -6.9141310632403474e-06, 0.0, -0.003228973364457488, -5.7220458984375e-06, -0.7218625545501709, -0.12532329559326172, -0.0006084442138671875, -0.5335036516189575, -0.0001354217529296875, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -0.1794086992740631, -1.1444091796875e-05, -0.034821510314941406, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "BEAST", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>"], "score": -5.193599649091539, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "_type": "Template8", "hole2": "WARLOCK", "hole3": "BEAST"}, {"hole1": 4, "hole0": 1, "hole5": "HeroSelector", "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 4}], "hole3": "Heal"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -1.733896255493164, -0.0067539215087890625, -0.00029392691794782877, -2.3126602172851562e-05, -0.0002595186233520508, -1.52587890625e-05, -4.9710182793205604e-05, -1.9073486328125e-06, -5.6981294619617984e-05, 0.0, -0.000232696533203125, -1.71661376953125e-05, -0.6420812606811523, -5.841255187988281e-06, -0.04164600372314453, -0.14145755767822266, -6.794923137931619e-06, 0.0, -0.002102796919643879, -7.62939453125e-06, -0.66377854347229, -0.000598907470703125, -1.846483826637268, -7.2479248046875e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.22415751218795776, -1.33514404296875e-05, -0.038265228271484375, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 123, 263, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "MECH", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>"], "score": -5.349576564126437, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "_type": "Template8", "hole2": "WARLOCK", "hole3": "MECH"}, {"hole1": 4, "hole0": 1, "hole5": "HeroSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"_type": "Num", "n": 4}], "hole3": "Heal"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n        player.draw()\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -0.46286582946777344, -2.47955322265625e-05, -0.0001242160506080836, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -8.392333984375e-05, -2.288818359375e-05, -0.0001678466796875, -0.00080108642578125, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -1.0013580322265625e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001659393310546875, -3.4332275390625e-05, -0.0002346038818359375, -0.00011193125828867778, -8.976459503173828e-05, -0.006918309722095728, -0.00018310546875, -0.002751258434727788, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.00012421145220287144, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.002635955810546875, -0.00010025501251220703, -0.000148773193359375, -0.0026674270629882812, -2.6702880859375e-05, -0.23993051052093506, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.00021183490753173828, -9.5367431640625e-06, -0.0004367828369140625, 0.0, -0.7082967758178711, -1.1444091796875e-05, -0.017223358154296875, -1.52587890625e-05, -0.0005741119384765625, -3.814697265625e-06, -8.0108642578125e-05, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -7.05718994140625e-05, -1.728534698486328e-05, -9.655935173213948e-06, -0.6603183746337891, -0.0001125335693359375, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.0001316070556640625, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -8.296966552734375e-05, -5.7220458984375e-06, -0.000408172607421875, -5.7220458984375e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.57763671875e-05, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.6312150955200195, 0.0, -0.0005130767822265625, -4.1961669921875e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.000888824462890625, -1.9073486328125e-06, -0.0002613067626953125, -1.9073486328125e-06, -1.52587890625e-05, -0.0001316070556640625, -0.0004787445068359375, -1.9073486328125e-06, -0.0950174331665039, -1.33514404296875e-05, -0.025804519653320312, -0.0042572021484375, -1.9073486328125e-06, -0.06361961364746094, -7.62939453125e-06, -0.37709999084472656, 0.0, -0.0010519027709960938, -0.06269073486328125, -2.288818359375e-05, 0.0, -0.004412651062011719, -5.340576171875e-05, -0.060016632080078125, 0.0, -0.014272450469434261, -4.1961669921875e-05, -0.03706932067871094, 0.0, -7.05718994140625e-05, -0.34542083740234375, -1.52587890625e-05, 0.0, -0.04638671875, -1.1444091796875e-05, -0.544703483581543, 0.0, -0.024346232414245605, -6.866455078125e-05], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mistress", " ", "of", " ", "Pain", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.4565336954574235, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(4),\n            HeroSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -2.7650609016418457, -0.0002765655517578125, -2.264974000354414e-06, -5.483549102791585e-05, -1.6927717297221534e-05, -7.62939453125e-06, -4.720687138615176e-05, 0.0, -5.197519203647971e-05, 0.0, -0.000457763671875, -9.5367431640625e-06, -0.007110595703125, -5.91278076171875e-05, -0.00017547607421875, -3.24249267578125e-05, -3.24249267578125e-05, 0.0, -6.866455078125e-05, -1.71661376953125e-05, -0.005596160888671875, -0.000171661376953125, -0.14489459991455078, -0.030877113342285156, -0.0004748307983390987, 0.0, -0.02717551961541176, -5.7220458984375e-06, -1.3014386892318726, -0.12965679168701172, -0.00029754638671875, -0.9509191513061523, -5.7220458984375e-06, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.1659686118364334, -3.814697265625e-06, -0.02587890625, -3.814697265625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>"], "score": -5.564157922422282, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "hole2": "WARLOCK", "_type": "Template12", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "hole5": "HeroSelector", "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 4}], "hole3": "Heal"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Summon(\n            BlackPain()), PlayerSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -2.7650609016418457, -0.0002765655517578125, -2.264974000354414e-06, -5.483549102791585e-05, -1.6927717297221534e-05, -7.62939453125e-06, -4.720687138615176e-05, 0.0, -5.197519203647971e-05, 0.0, -0.000457763671875, -9.5367431640625e-06, -0.007110595703125, -5.91278076171875e-05, -0.00017547607421875, -3.24249267578125e-05, -3.24249267578125e-05, 0.0, -6.866455078125e-05, -1.71661376953125e-05, -0.005596160888671875, -0.000171661376953125, -0.14489459991455078, -0.030877113342285156, -0.0004748307983390987, 0.0, -0.02717551961541176, -5.7220458984375e-06, -0.3314574956893921, -0.0004926919937133789, -1.4901328086853027, 0.0, -2.6702880859375e-05, -0.00510406494140625, -5.14984130859375e-05, -0.8802589774131775, -0.21664577722549438, 0.0, -0.03058147430419922, -9.5367431640625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Summon", "<EOS>", 282, 68, 260, "Black", "Pain", "<EOS>", "Player", "Selector", "<EOS>"], "score": -5.944696311509006, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "hole2": "WARLOCK", "_type": "Template12", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "hole5": "PlayerSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole0": "BlackPain", "_type": "Template77"}], "hole3": "Summon"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Summon(\n            BlackPain()), PlayerSelector()))])\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -2.7650609016418457, -0.0002765655517578125, -2.264974000354414e-06, -5.483549102791585e-05, -1.6927717297221534e-05, -7.62939453125e-06, -4.720687138615176e-05, 0.0, -5.197519203647971e-05, 0.0, -0.000457763671875, -9.5367431640625e-06, -0.007110595703125, -5.91278076171875e-05, -0.00017547607421875, -3.24249267578125e-05, -3.24249267578125e-05, 0.0, -6.866455078125e-05, -1.71661376953125e-05, -0.005596160888671875, -0.000171661376953125, -0.14489459991455078, -0.030877113342285156, -0.0004748307983390987, 0.0, -0.02717551961541176, -5.7220458984375e-06, -1.3014386892318726, -0.12965679168701172, -0.00029754638671875, -0.7410182952880859, -1.9073486328125e-06, -4.00543212890625e-05, -0.009356498718261719, -6.103515625e-05, -0.8549212217330933, -0.25160837173461914, 0.0, -0.024773478507995605, -9.5367431640625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Mistress", " ", "of", " ", "Pain", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 96, 176, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Summon", "<EOS>", 282, 68, 260, "Black", "Pain", "<EOS>", "Player", "Selector", "<EOS>"], "score": -6.303118710076205, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Mistress of Pain", "hole2": "WARLOCK", "_type": "Template12", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "hole5": "PlayerSelector", "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"hole0": "BlackPain", "_type": "Template77"}], "hole3": "Summon"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n        player.draw()\n        self.target()\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -0.46286582946777344, -2.47955322265625e-05, -0.0001242160506080836, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -8.392333984375e-05, -2.288818359375e-05, -0.0001678466796875, -0.00080108642578125, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -1.0013580322265625e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001659393310546875, -3.4332275390625e-05, -0.0002346038818359375, -0.00011193125828867778, -8.976459503173828e-05, -0.006918309722095728, -0.00018310546875, -0.002751258434727788, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.00012421145220287144, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.002635955810546875, -0.00010025501251220703, -0.000148773193359375, -0.0026674270629882812, -2.6702880859375e-05, -0.23993051052093506, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.00021183490753173828, -9.5367431640625e-06, -0.0004367828369140625, 0.0, -0.7082967758178711, -1.1444091796875e-05, -0.017223358154296875, -1.52587890625e-05, -0.0005741119384765625, -3.814697265625e-06, -8.0108642578125e-05, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -7.05718994140625e-05, -1.728534698486328e-05, -9.655935173213948e-06, -0.990814208984375, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.33514404296875e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.0067901611328125e-05, -1.9073486328125e-06, -0.0001983642578125, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.8472185134887695, 0.0, -0.0009832382202148438, -0.0001621246337890625, -2.47955322265625e-05, -1.9073486328125e-06, -0.000240325927734375, 0.0, -0.00096893310546875, -3.814697265625e-06, -1.33514404296875e-05, -0.0001049041748046875, -0.0003204345703125, -1.9073486328125e-06, -0.1440105438232422, -7.62939453125e-06, -0.010164260864257812, -0.004177093505859375, -1.9073486328125e-06, -0.08014488220214844, -5.7220458984375e-06, -0.00311279296875, 0.0, -0.0021877288818359375, -0.2946643829345703, -8.0108642578125e-05, 0.0, -0.0029287338256835938, -0.0002384185791015625, -0.06553173065185547, 0.0, -0.020139336585998535, -3.62396240234375e-05, -0.10032272338867188, 0.0, -0.0003299713134765625, -0.4981670379638672, -2.86102294921875e-05, 0.0, -0.02900218963623047, -6.29425048828125e-05, -0.793940544128418, 0.0, -0.02122318744659424, -6.4849853515625e-05, -0.08789634704589844, 0.0, -7.05718994140625e-05, -0.9499120712280273, -2.288818359375e-05, 0.0, -0.12456417083740234, -5.14984130859375e-05, -1.0574016571044922, 0.0, -0.10702133178710938, -2.288818359375e-05], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mistress", " ", "of", " ", "Pain", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>"], "score": -7.694139506554151, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n        game.check_delayed()\n        self.target.add_effect(self.target.card.minion_type())\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -0.46286582946777344, -2.47955322265625e-05, -0.0001242160506080836, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -8.392333984375e-05, -2.288818359375e-05, -0.0001678466796875, -0.00080108642578125, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -1.0013580322265625e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001659393310546875, -3.4332275390625e-05, -0.0002346038818359375, -0.00011193125828867778, -8.976459503173828e-05, -0.006918309722095728, -0.00018310546875, -0.002751258434727788, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.00012421145220287144, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.002635955810546875, -0.00010025501251220703, -0.000148773193359375, -0.0026674270629882812, -2.6702880859375e-05, -0.23993051052093506, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.00021183490753173828, -9.5367431640625e-06, -0.0004367828369140625, 0.0, -0.7082967758178711, -1.1444091796875e-05, -0.017223358154296875, -1.52587890625e-05, -0.0005741119384765625, -3.814697265625e-06, -8.0108642578125e-05, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -7.05718994140625e-05, -1.728534698486328e-05, -9.655935173213948e-06, -0.990814208984375, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.33514404296875e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.0067901611328125e-05, -1.9073486328125e-06, -0.0001983642578125, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.8472185134887695, 0.0, -0.0009832382202148438, -0.0001621246337890625, -2.47955322265625e-05, -1.9073486328125e-06, -0.000240325927734375, 0.0, -0.00096893310546875, -3.814697265625e-06, -1.33514404296875e-05, -0.0001049041748046875, -0.0003204345703125, -1.9073486328125e-06, -0.1440105438232422, -7.62939453125e-06, -0.010164260864257812, -0.004177093505859375, -1.9073486328125e-06, -0.08014488220214844, -5.7220458984375e-06, -0.00311279296875, 0.0, -0.0021877288818359375, -0.2946643829345703, -8.0108642578125e-05, 0.0, -0.0029287338256835938, -0.0002384185791015625, -0.06553173065185547, 0.0, -0.020139336585998535, -3.62396240234375e-05, -0.10032272338867188, 0.0, -0.0003299713134765625, -0.4981670379638672, -2.86102294921875e-05, 0.0, -0.02900218963623047, -6.29425048828125e-05, -1.272667407989502, 0.0, -0.0027426481246948242, -1.9073486328125e-06, -0.2246532440185547, 0.0, -5.7220458984375e-05, -0.0037174224853515625, -7.62939453125e-06, -7.62939453125e-06, -0.0056610107421875, -1.9073486328125e-06, -0.08610916137695312, -3.814697265625e-05, -0.0013631582260131836, -1.1444091796875e-05, -0.00028228759765625, -5.7220458984375e-06, -0.4443514347076416, 0.0, -0.035208702087402344, -0.8223171234130859, -0.000865936279296875, -0.000408172607421875, -1.9073486328125e-06, -0.0073184967041015625, -1.9073486328125e-06, -0.022657394409179688, -3.814697265625e-06, -0.030673980712890625, -1.9073486328125e-06, -0.34430885314941406, -0.001068115234375, -0.00074005126953125, -5.14984130859375e-05, -0.24261236190795898, -9.72747802734375e-05, -0.04836082458496094, -3.814697265625e-05], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mistress", " ", "of", " ", "Pain", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "game", "<EOS>", "check_delayed", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>"], "score": -8.150363352036024, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "check_delayed"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_effect"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n        player.draw()\n        self.target.add_effect(self.target.card.minion_type())\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -0.46286582946777344, -2.47955322265625e-05, -0.0001242160506080836, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -8.392333984375e-05, -2.288818359375e-05, -0.0001678466796875, -0.00080108642578125, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -1.0013580322265625e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001659393310546875, -3.4332275390625e-05, -0.0002346038818359375, -0.00011193125828867778, -8.976459503173828e-05, -0.006918309722095728, -0.00018310546875, -0.002751258434727788, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.00012421145220287144, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.002635955810546875, -0.00010025501251220703, -0.000148773193359375, -0.0026674270629882812, -2.6702880859375e-05, -0.23993051052093506, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.00021183490753173828, -9.5367431640625e-06, -0.0004367828369140625, 0.0, -0.7082967758178711, -1.1444091796875e-05, -0.017223358154296875, -1.52587890625e-05, -0.0005741119384765625, -3.814697265625e-06, -8.0108642578125e-05, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -7.05718994140625e-05, -1.728534698486328e-05, -9.655935173213948e-06, -0.990814208984375, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.33514404296875e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.0067901611328125e-05, -1.9073486328125e-06, -0.0001983642578125, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.8472185134887695, 0.0, -0.0009832382202148438, -0.0001621246337890625, -2.47955322265625e-05, -1.9073486328125e-06, -0.000240325927734375, 0.0, -0.00096893310546875, -3.814697265625e-06, -1.33514404296875e-05, -0.0001049041748046875, -0.0003204345703125, -1.9073486328125e-06, -0.1440105438232422, -7.62939453125e-06, -0.010164260864257812, -0.004177093505859375, -1.9073486328125e-06, -0.08014488220214844, -5.7220458984375e-06, -0.00311279296875, 0.0, -0.0021877288818359375, -0.2946643829345703, -8.0108642578125e-05, 0.0, -0.0029287338256835938, -0.0002384185791015625, -0.06553173065185547, 0.0, -0.020139336585998535, -3.62396240234375e-05, -0.10032272338867188, 0.0, -0.0003299713134765625, -0.4981670379638672, -2.86102294921875e-05, 0.0, -0.02900218963623047, -6.29425048828125e-05, -0.793940544128418, 0.0, -0.02122318744659424, -6.4849853515625e-05, -0.08789634704589844, 0.0, -7.05718994140625e-05, -0.4902791976928711, -1.1444091796875e-05, -2.86102294921875e-05, -0.0034732818603515625, -1.9073486328125e-06, -0.03675270080566406, -1.71661376953125e-05, -0.010082006454467773, -1.9073486328125e-05, -0.000400543212890625, -5.7220458984375e-06, -0.6361238956451416, 0.0, -0.042903900146484375, -0.886418342590332, -0.0011386871337890625, -0.0003719329833984375, -1.9073486328125e-06, -0.006458282470703125, -1.9073486328125e-06, -0.020936965942382812, -5.7220458984375e-06, -0.027227401733398438, -1.9073486328125e-06, -0.3840646743774414, -0.0011043548583984375, -0.0007457733154296875, -5.7220458984375e-05, -0.25603926181793213, -9.1552734375e-05, -0.04819774627685547, -4.00543212890625e-05], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mistress", " ", "of", " ", "Pain", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>"], "score": -8.308146145081068, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_effect"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n        self.target.add_effect(self.target.card.minion_type())\n        if self.target.index < 10:\n            left_minion = player.game.other_player.minions[index - 1]\n", "score_history": [-0.0002288818359375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.71661376953125e-05, -0.00014876213390380144, -0.002502599498257041, -0.0042595695704221725, -5.602834789897315e-06, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -4.0531158447265625e-06, -9.5367431640625e-06, -0.46286582946777344, -2.47955322265625e-05, -0.0001242160506080836, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.33514404296875e-05, -8.392333984375e-05, -2.288818359375e-05, -0.0001678466796875, -0.00080108642578125, -9.5367431640625e-06, 0.0, -9.918212890625e-05, -1.9073486328125e-06, -1.0013580322265625e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0001659393310546875, -3.4332275390625e-05, -0.0002346038818359375, -0.00011193125828867778, -8.976459503173828e-05, -0.006918309722095728, -0.00018310546875, -0.002751258434727788, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.00012421145220287144, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.1444091796875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0001659393310546875, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -0.002635955810546875, -0.00010025501251220703, -0.000148773193359375, -0.0026674270629882812, -2.6702880859375e-05, -0.23993051052093506, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.33514404296875e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.00021183490753173828, -9.5367431640625e-06, -0.0004367828369140625, 0.0, -0.7082967758178711, -1.1444091796875e-05, -0.017223358154296875, -1.52587890625e-05, -0.0005741119384765625, -3.814697265625e-06, -8.0108642578125e-05, -9.34600830078125e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -7.05718994140625e-05, -1.728534698486328e-05, -9.655935173213948e-06, -0.990814208984375, -3.814697265625e-06, -1.33514404296875e-05, -2.288818359375e-05, -1.33514404296875e-05, -8.392333984375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.0067901611328125e-05, -1.9073486328125e-06, -0.0001983642578125, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -2.0265579223632812e-06, -0.8472185134887695, 0.0, -0.0009832382202148438, -0.0001621246337890625, -2.47955322265625e-05, -1.9073486328125e-06, -0.000240325927734375, 0.0, -0.00096893310546875, -3.814697265625e-06, -1.33514404296875e-05, -0.0001049041748046875, -0.0003204345703125, -1.9073486328125e-06, -0.1440105438232422, -7.62939453125e-06, -0.010164260864257812, -0.004177093505859375, -1.9073486328125e-06, -0.08014488220214844, -5.7220458984375e-06, -0.00311279296875, 0.0, -0.0021877288818359375, -0.2946643829345703, -8.0108642578125e-05, 0.0, -0.0029287338256835938, -0.0002384185791015625, -0.06553173065185547, 0.0, -0.020139336585998535, -3.62396240234375e-05, -0.10032272338867188, 0.0, -0.0003299713134765625, -0.9374351501464844, -2.86102294921875e-05, -7.62939453125e-06, -0.0039157867431640625, 0.0, -0.08801651000976562, -1.33514404296875e-05, -0.304760217666626, -1.9073486328125e-05, -0.0004825592041015625, -5.7220458984375e-06, -0.6588699817657471, 0.0, -0.02173900604248047, -0.8884592056274414, -0.000934600830078125, -0.000492095947265625, -1.9073486328125e-06, -0.006542205810546875, -1.9073486328125e-06, -0.0239105224609375, -5.7220458984375e-06, -0.03163337707519531, -1.9073486328125e-06, -0.3188180923461914, -0.0011043548583984375, -0.00074005126953125, -5.91278076171875e-05, -0.25431501865386963, -8.7738037109375e-05, -0.0455322265625, -3.814697265625e-05, -0.6898488998413086, -0.37261009216308594, -0.0071010589599609375, -9.5367431640625e-05, -0.15132808685302734, 0.0, -0.0028133392333984375, -5.7220458984375e-06, -0.0053577423095703125, 0.0, -0.003857254981994629, -7.62939453125e-06, -0.0003223419189453125, -1.9073486328125e-06, -0.990290641784668, -1.52587890625e-05, -1.1444091796875e-05, -0.7526693344116211, -0.000457763671875, -0.18123435974121094, -1.9073486328125e-06, -0.09554322808980942, -1.9073486328125e-06, -0.0023813247680664062, -0.23352432250976562, -0.0001621246337890625, -0.0001277923583984375, -5.7220458984375e-05, -1.9073486328125e-06, -1.5970479249954224, 0.0, -0.38593387603759766, -0.001312255859375, -7.2479248046875e-05, -5.7220458984375e-05, -0.0003566741943359375, -3.814697265625e-06, -0.24176406860351562, -0.00023651123046875, -0.000209808349609375, -1.33514404296875e-05, -0.198807954788208, -5.960462772236497e-07, -0.0017044533742591739, -2.3841855067985307e-07, -0.018958210945129395, 0.0, -0.01995772123336792, -5.7220458984375e-06, -0.0019969940185546875, -8.392333984375e-05, -0.025572776794433594, -0.00084686279296875, -0.0005092620849609375, -1.9073486328125e-06, -0.025554656982421875, -1.52587890625e-05, -0.4381141662597656, -0.0038690567016601562, -5.7220458984375e-06, -0.0003192424774169922, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Mistress", "Of", "Pain", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Mistress", " ", "of", " ", "Pain", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 92, 146, 15, 139, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 279, 8, 282, 47, 165, "10", "<EOS>", 295, 85, 128, 282, 45, 160, "left_minion", "<EOS>", 22, 171, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 83, 150, 12, 131, 19, 160, "index", "<EOS>", 82, 21, 165, "1", "<EOS>"], "score": -14.065823125422654, "model_output": {"_type": "Module", "body": [{"name": "MistressOfPain", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "minion_type"}}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_effect"}}, "_type": "Expr"}, {"body": [{"value": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "slice": {"value": {"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Name", "id": "index"}, "right": {"_type": "Num", "n": 1}}, "_type": "Index"}, "_type": "Subscript"}, "targets": [{"_type": "Name", "id": "left_minion"}], "_type": "Assign"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 10}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-0.0002288818359375, 0.0, -21.253154754638672], "choice_history": [80, 159, 294], "score": -21.25338363647461, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n"}
{"beams": [{"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(\n            IncreasePowermace(), IncreasePowermace()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9473050832748413, -0.2088707685470581, -0.00020802021026611328, -0.17866083979606628, -0.31625062227249146, -8.809524297248572e-05, -0.4635803997516632, -0.3874987065792084, -0.00017404060054104775], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Increase", "Powermace", "<EOS>", "Increase", "Powermace", "<EOS>"], "score": -2.94587221139264, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "IncreasePowermace"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(\n            IncreasePowermace(), WeaponSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9473050832748413, -0.2088707685470581, -0.00020802021026611328, -0.17866083979606628, -0.31625062227249146, -8.809524297248572e-05, -1.4322580099105835, -0.0025676172226667404, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Increase", "Powermace", "<EOS>", "Weapon", "Selector", "<EOS>"], "score": -3.52944481080376, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "WeaponSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(Give(), ActionTag(Give(),\n            WeaponSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9940052628517151, -0.035364627838134766, -1.5040693283081055, -0.005373010411858559, -0.7281808853149414, -0.0005413465551100671, 0.0], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Give", "<EOS>", "Give", "<EOS>", "Weapon", "Selector", "<EOS>"], "score": -3.710770096397397, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "Give", "hole0": "Give", "_type": "Template31", "hole3": "WeaponSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(Give(), ActionTag(\n            IncreasePowermace(), IncreasePowermace()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9940052628517151, -0.035364627838134766, -0.9046281576156616, -0.5931236743927002, -0.00010824178752955049, -0.4286380410194397, -0.3260585367679596, -0.00014734029537066817], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Give", "<EOS>", "Increase", "Powermace", "<EOS>", "Increase", "Powermace", "<EOS>"], "score": -3.7253095176860427, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "Give", "_type": "Template31", "hole3": "IncreasePowermace"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(Kill(\n            ), WeaponSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9473050832748413, -0.2088707685470581, -0.00020802021026611328, -2.7114462852478027, -6.520548049593344e-05, -0.03077995590865612, -0.0013281995197758079, 0.0], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Kill", "<EOS>", "Weapon", "Selector", "<EOS>"], "score": -4.343239153306428, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "Kill", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "WeaponSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(\n            IncreasePowermace(), Kill()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9473050832748413, -0.2088707685470581, -0.00020802021026611328, -0.17866083979606628, -0.31625062227249146, -8.809524297248572e-05, -2.346717119216919, -8.010558667592704e-05], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Increase", "Powermace", "<EOS>", "Kill", "<EOS>"], "score": -4.441416289264822, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "Kill"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(Give(), ActionTag(\n            IncreasePowermace(), WeaponSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9940052628517151, -0.035364627838134766, -0.9046281576156616, -0.5931236743927002, -0.00010824178752955049, -1.5175977945327759, -0.001744820037856698, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Give", "<EOS>", "Increase", "Powermace", "<EOS>", "Weapon", "Selector", "<EOS>"], "score": -4.489808333383188, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "Give", "_type": "Template31", "hole3": "WeaponSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker())))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -2.754124641418457, -0.06018040329217911, -0.012941598892211914, 0.0, -0.5808948278427124, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00016021728515625, -3.814697265625e-06, -0.06259670108556747, 0.0, -0.14165782928466797, -2.717968527576886e-05, 0.0, -0.5806407928466797, -4.76837158203125e-05, 0.0, -0.008507847785949707, -3.099440846199286e-06, -8.20159912109375e-05, -9.5367431640625e-06, -0.03482699394226074, -3.361701965332031e-05, 0.0, -4.00543212890625e-05, -1.33514404296875e-05, -0.00034415721893310547, -1.1920922133867862e-06, -0.0001983642578125, -1.33514404296875e-05, -0.010982751846313477, -8.356571197509766e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 209, "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "3", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.515550731938589, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "Heal", "hole0": "TurnEnded", "hole5": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": [{"_type": "Num", "n": 3}], "_type": "Template31", "hole3": "CharacterSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(\n            IncreasePowermace(), IncreaseWeaponSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9473050832748413, -0.2088707685470581, -0.00020802021026611328, -0.17866083979606628, -0.31625062227249146, -8.809524297248572e-05, -0.4635803997516632, -2.000781774520874, -0.0022583582904189825, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Increase", "Powermace", "<EOS>", "Increase", "Weapon", "Selector", "<EOS>"], "score": -4.561239716233466, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "IncreaseWeaponSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(\n            IncreasePowermace(), Increase+2/+2()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -0.18178653717041016, -0.17610454559326172, -0.9473050832748413, -0.2088707685470581, -0.00020802021026611328, -0.17866083979606628, -0.31625062227249146, -8.809524297248572e-05, -0.4635803997516632, -2.116748571395874, -0.00017404060054104775], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Increase", "Powermace", "<EOS>", "Increase", "+2/+2", "<EOS>"], "score": -4.6751220762093055, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "Increase+2/+2"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            OneIn(2)))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -2.4991626739501953, -4.76837158203125e-05, -0.00106048583984375, -2.0265579223632812e-06, -5.91278076171875e-05, -0.0001621246337890625, -0.4491701126098633, -0.010532379150390625, -8.0108642578125e-05, -7.62939453125e-06, -3.814697265625e-05, -0.000634312629699707, -4.780292510986328e-05, -1.33514404296875e-05, -0.004695892333984375, -6.67572021484375e-05, -0.0052051544189453125, -0.00045668703387491405, -2.1457672119140625e-06, -0.008384292013943195, -0.06967183947563171, -0.0009513161494396627, -1.9073486328125e-05, -0.004241943359375, -1.9073486328125e-06, 0.0, -0.0005893707275390625, -1.52587890625e-05, -1.9073486328125e-06, -0.000324249267578125, -0.41084766387939453, -0.0005054473876953125, -1.9073486328125e-05, -3.0517578125e-05, -0.030628323554992676, -4.2318482883274555e-05, -9.5367431640625e-06, -0.3136606216430664, -0.00418853759765625, -7.62939453125e-06, -1.9073486328125e-06, -0.0646657943725586, -0.01398003101348877, -1.1920928244535389e-07, -0.002803802490234375, -0.30869197845458984, -0.0006809234619140625, -0.24881333112716675, -0.026759888976812363, -1.7404556274414062e-05, -5.91278076171875e-05, 0.0, -0.047931671142578125, -4.112720489501953e-05, 0.0, -0.026991844177246094, -0.023651123046875, 0.0, 0.0, -1.6929343938827515, -0.0712195634841919, -1.71661376953125e-05, -0.0025730133056640625, -0.0056247711181640625, 0.0, -0.09608110040426254, 0.0], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "One", "In", "<EOS>", 282, 47, 165, "2", "<EOS>"], "score": -6.5344700658173664, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "OneIn"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(WeaponAttack(), ActionTag(\n            IncreasePowermace(), IncreasePowermace()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -3.971501350402832, -0.0001430511474609375, -3.9934591768542305e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-05, -1.71661376953125e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0010509490966796875, -7.62939453125e-06, 0.0, -4.00543212890625e-05, 0.0, -8.70227722771233e-06, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.0001201629638671875, -3.814697265625e-06, -7.62939453125e-06, -8.344646857949556e-07, -0.00019097328186035156, -1.9073486328125e-06, 0.0, -8.559227717341855e-05, -2.1099953301018104e-05, -2.86102294921875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.924701690673828e-05, -7.152555099310121e-07, -0.000244140625, 0.0, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.9311904907226562e-05, -4.88758041683468e-06, -0.000400543212890625, -3.814697265625e-06, -0.000766754150390625, -0.1352062225341797, -0.0017414093017578125, -0.21391761302947998, -4.291534423828125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0014630556106567383, 0.0, -1.52587890625e-05, -0.0007991790771484375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -2.6941299438476562e-05, 0.0, -0.0002079010009765625, -0.0001811981201171875, -3.814697265625e-05, -5.91278076171875e-05, -0.0030078887939453125, -3.814697265625e-05, 0.0, -0.006229519844055176, -1.9073486328125e-06, -5.14984130859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9311904907226562e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -5.53131103515625e-05, -2.3126602172851562e-05, -6.556489552167477e-06, -0.0017242431640625, -0.24337482452392578, -0.1765756607055664, -0.9375896453857422, -0.21638375520706177, -0.00019848346710205078, -0.17814573645591736, -0.3410537838935852, -8.547266043024138e-05, -0.4623652696609497, -0.40559476613998413, -0.00017702073091641068], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Powermace", "<EOS>", 47, 165, "3", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 78, 261, "2", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 71, 206, "Weapon", "Attack", "<EOS>", "Increase", "Powermace", "<EOS>", "Increase", "Powermace", "<EOS>"], "score": -7.304919742790247, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Powermace"}, {"_type": "Num", "n": 3}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"hole0": 2, "_type": "Template78"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"hole1": "IncreasePowermace", "hole0": "WeaponAttack", "_type": "Template31", "hole3": "IncreasePowermace"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -23.321792602539062], "choice_history": [80, 159, 294], "score": -23.32179832458496, "model_output": {"_type": "Module", "body": []}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), HeroSelector(\n            EnemyPlayer()))), ActionTag(Heal(2), HeroSelector()))))))))))))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -2.4991626739501953, -4.76837158203125e-05, -0.00106048583984375, -2.0265579223632812e-06, -5.91278076171875e-05, -0.0001621246337890625, -0.4491701126098633, -0.010532379150390625, -8.0108642578125e-05, -7.62939453125e-06, -3.814697265625e-05, -0.000634312629699707, -4.780292510986328e-05, -1.33514404296875e-05, -0.004695892333984375, -6.67572021484375e-05, -0.0052051544189453125, -0.00045668703387491405, -2.1457672119140625e-06, -0.008384292013943195, -0.06967183947563171, -0.0009513161494396627, -1.9073486328125e-05, -0.004241943359375, -1.9073486328125e-06, 0.0, -0.0005893707275390625, -1.52587890625e-05, -1.9073486328125e-06, -0.000324249267578125, -0.41084766387939453, -0.0005054473876953125, -1.9073486328125e-05, -3.0517578125e-05, -0.030628323554992676, -4.2318482883274555e-05, -9.5367431640625e-06, -0.3136606216430664, -0.00418853759765625, -7.62939453125e-06, -1.9073486328125e-06, -0.0646657943725586, -0.01398003101348877, -1.1920928244535389e-07, -0.002803802490234375, -0.30869197845458984, -0.0006809234619140625, -0.24881333112716675, -0.026759888976812363, -1.7404556274414062e-05, -5.91278076171875e-05, 0.0, -0.047931671142578125, -4.112720489501953e-05, 0.0, -0.026991844177246094, -0.023651123046875, 0.0, 0.0, -0.4473508596420288, -7.772445678710938e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.09034347534179688, -0.000484466552734375, -1.1444091796875e-05, -5.7220458984375e-06, -0.040300481021404266, -9.381365816807374e-05, -1.9073486328125e-06, -0.30445384979248047, -0.007534027099609375, -7.62939453125e-06, -1.9073486328125e-06, -0.1262199878692627, -0.029712200164794922, -2.1457672119140625e-06, -0.0013065338134765625, -0.15715312957763672, -0.0003032684326171875, -0.1820705235004425, -0.044790927320718765, -6.318092346191406e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.027167081832885742, -4.8995018005371094e-05, 0.0, -0.0058269500732421875, -0.004154205322265625, 0.0, 0.0, -0.5001925230026245, -6.890296936035156e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.09961318969726562, -0.000247955322265625, -1.9073486328125e-05, -7.62939453125e-06, -0.08267723023891449, -0.00011205087503185496, -1.9073486328125e-06, -0.304046630859375, -0.003192901611328125, -5.7220458984375e-06, -1.9073486328125e-06, -0.25468671321868896, -0.033542633056640625, -2.2649765014648438e-06, -0.00107574462890625, -0.27567481994628906, -0.0002498626708984375, -0.16511262953281403, -0.09187251329421997, -9.775161743164062e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.01678931713104248, -7.021427154541016e-05, -1.1920928244535389e-07, -0.0049591064453125, -0.003047943115234375, 0.0, 0.0, -0.46137893199920654, -6.54458999633789e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.11436080932617188, -0.0002231597900390625, -2.09808349609375e-05, -7.62939453125e-06, -0.11250409483909607, -0.00013016855518799275, -3.814697265625e-06, -0.3130159378051758, -0.0030498504638671875, -5.7220458984375e-06, -1.9073486328125e-06, -0.347561240196228, -0.04064977169036865, -2.2649765014648438e-06, -0.0010242462158203125, -0.3620319366455078, -0.00022125244140625, -0.16236929595470428, -0.11193706095218658, -0.00011301040649414062, -4.57763671875e-05, -1.9073486328125e-06, -0.015609264373779297, -7.033348083496094e-05, -1.1920928244535389e-07, -0.004970550537109375, -0.0029964447021484375, 0.0, 0.0, -0.4699791669845581, -6.747245788574219e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.11692523956298828, -0.0002193450927734375, -2.09808349609375e-05, -7.62939453125e-06, -0.12263759970664978, -0.0001323140604654327, -3.814697265625e-06, -0.3174562454223633, -0.0030059814453125, -3.814697265625e-06, -1.9073486328125e-06, -0.3987172842025757, -0.04513871669769287, -2.2649765014648438e-06, -0.001033782958984375, -0.4012126922607422, -0.000209808349609375, -0.16215048730373383, -0.12203361093997955, -0.00012063980102539062, -4.57763671875e-05, -1.9073486328125e-06, -0.015186071395874023, -6.854534149169922e-05, -1.1920928244535389e-07, -0.0047283172607421875, -0.0029544830322265625, 0.0, 0.0, -0.4859055280685425, -6.949900853214785e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.11875343322753906, -0.000217437744140625, -2.09808349609375e-05, -7.62939453125e-06, -0.12724456191062927, -0.00013219486572779715, -3.814697265625e-06, -0.3192424774169922, -0.00299072265625, -3.814697265625e-06, -1.9073486328125e-06, -0.4275306463241577, -0.047601938247680664, -2.2649765014648438e-06, -0.001041412353515625, -0.42105960845947266, -0.00020599365234375, -0.16215874254703522, -0.12736675143241882, -0.00012445449829101562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014999151229858398, -6.854534149169922e-05, -1.1920928244535389e-07, -0.0044422149658203125, -0.0029449462890625, 0.0, 0.0, -0.5117224454879761, -7.152556645451114e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.12000846862792969, -0.0002155303955078125, -2.09808349609375e-05, -7.62939453125e-06, -0.12968727946281433, -0.0001318372815148905, -3.814697265625e-06, -0.3204469680786133, -0.0029850006103515625, -3.814697265625e-06, -1.9073486328125e-06, -0.444424033164978, -0.04901432991027832, -2.2649765014648438e-06, -0.0010433197021484375, -0.43200111389160156, -0.0002040863037109375, -0.1621496081352234, -0.13037031888961792, -0.00012826919555664062, -4.38690185546875e-05, -1.9073486328125e-06, -0.0149153470993042, -6.67572021484375e-05, -1.1920928244535389e-07, -0.004138946533203125, -0.0029506683349609375, 0.0, 0.0, -0.5457800626754761, -7.343291508732364e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.120941162109375, -0.0002155303955078125, -2.09808349609375e-05, -7.62939453125e-06, -0.13074764609336853, -0.00013112211308907717, -3.814697265625e-06, -0.32132530212402344, -0.00298309326171875, -3.814697265625e-06, -1.9073486328125e-06, -0.45497071743011475, -0.04984486103057861, -2.2649765014648438e-06, -0.0010433197021484375, -0.4384641647338867, -0.000202178955078125, -0.16211172938346863, -0.13220617175102234, -0.00012826919555664062, -4.38690185546875e-05, -1.9073486328125e-06, -0.014879107475280762, -6.4849853515625e-05, -1.1920928244535389e-07, -0.0038394927978515625, -0.0029544830322265625, 0.0, 0.0, -0.5865573883056641, -7.545947300968692e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.12175178527832031, -0.000213623046875, -2.09808349609375e-05, -7.62939453125e-06, -0.1309783160686493, -0.00013040694466326386, -3.814697265625e-06, -0.32201099395751953, -0.00298309326171875, -3.814697265625e-06, -1.9073486328125e-06, -0.46222150325775146, -0.05037117004394531, -2.2649765014648438e-06, -0.001041412353515625, -0.44249534606933594, -0.000202178955078125, -0.16206999123096466, -0.13342991471290588, -0.00013017654418945312, -4.38690185546875e-05, -1.9073486328125e-06, -0.014863848686218262, -6.4849853515625e-05, -1.1920928244535389e-07, -0.0035552978515625, -0.0029544830322265625, 0.0, 0.0, -0.6325759887695312, -7.55786822992377e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12250614166259766, -0.000213623046875, -2.09808349609375e-05, -7.62939453125e-06, -0.13073083758354187, -0.00012957259605173022, -3.814697265625e-06, -0.3225889205932617, -0.00298309326171875, -3.814697265625e-06, -1.9073486328125e-06, -0.46771085262298584, -0.05073535442352295, -2.2649765014648438e-06, -0.0010395050048828125, -1.1641645431518555, -0.01681232452392578, -0.006070411764085293, -3.4332275390625e-05, -0.5100936889648438, -3.0517578125e-05, -0.12609100341796875, -0.007750216871500015, -2.3841855067985307e-07, -0.021183114498853683, -0.0015636609168723226, 0.0, -0.2068338394165039, -0.0050220489501953125, 0.0, 0.0, -0.6637643575668335, -0.0002887248992919922, -1.9073486328125e-06, -6.103515625e-05, -0.35517024993896484, -0.000362396240234375, -3.4332275390625e-05, -3.0517578125e-05, -0.13884331285953522, -0.0027407966554164886, -1.9073486328125e-06, -0.018726348876953125, -3.814697265625e-06, -0.0021601710468530655, 0.0, -0.0290069580078125, -0.0001678466796875, -0.15236413478851318, -2.7417810997576453e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 61, 250, "Hero", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "2", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -26.784420356680414, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole1": "EnemyPlayer", "hole0": "HeroSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            ActionTag(Give(BuffUntil(WeaponAttack(), SelfSelector())),\n            IsType(MINION_TYPE.BEAST))))))))))))))))))))))))))))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -8.34461570775602e-06, -0.0007686609169468284, -7.62939453125e-06, 0.0, 0.0, -0.0014122724533081055, -2.7298927307128906e-05, -2.3841855067985307e-07, -0.001224517822265625, -0.040856361389160156, -2.288818359375e-05, -3.576278118089249e-07, -1.9073486328125e-06, -0.001277923583984375, -1.9073486328125e-06, -0.024379968643188477, 0.0, -0.002960205078125, -1.9073486328125e-06, -0.0045680999755859375, -1.9073486328125e-06, -7.62939453125e-06, -0.0007190704345703125, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, 0.0, -0.00020599365234375, -0.0001964569091796875, -3.24249267578125e-05, -0.0003147125244140625, -0.0001983642578125, -2.288818359375e-05, 0.0, -0.00366973876953125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.987022399902344e-06, -4.0531158447265625e-06, -5.7220458984375e-06, -5.14984130859375e-05, -2.6941299438476562e-05, -6.794906312279636e-06, -0.0022411346435546875, -2.4991626739501953, -4.76837158203125e-05, -0.00106048583984375, -2.0265579223632812e-06, -5.91278076171875e-05, -0.0001621246337890625, -0.4491701126098633, -0.010532379150390625, -8.0108642578125e-05, -7.62939453125e-06, -3.814697265625e-05, -0.000634312629699707, -4.780292510986328e-05, -1.33514404296875e-05, -0.004695892333984375, -6.67572021484375e-05, -0.0052051544189453125, -0.00045668703387491405, -2.1457672119140625e-06, -0.008384292013943195, -0.06967183947563171, -0.0009513161494396627, -1.9073486328125e-05, -0.004241943359375, -1.9073486328125e-06, 0.0, -0.0005893707275390625, -1.52587890625e-05, -1.9073486328125e-06, -0.000324249267578125, -0.41084766387939453, -0.0005054473876953125, -1.9073486328125e-05, -3.0517578125e-05, -0.030628323554992676, -4.2318482883274555e-05, -9.5367431640625e-06, -0.3136606216430664, -0.00418853759765625, -7.62939453125e-06, -1.9073486328125e-06, -0.0646657943725586, -0.01398003101348877, -1.1920928244535389e-07, -0.002803802490234375, -0.30869197845458984, -0.0006809234619140625, -0.24881333112716675, -0.026759888976812363, -1.7404556274414062e-05, -5.91278076171875e-05, 0.0, -0.047931671142578125, -4.112720489501953e-05, 0.0, -0.026991844177246094, -0.023651123046875, 0.0, 0.0, -0.4473508596420288, -7.772445678710938e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.09034347534179688, -0.000484466552734375, -1.1444091796875e-05, -5.7220458984375e-06, -0.040300481021404266, -9.381365816807374e-05, -1.9073486328125e-06, -0.30445384979248047, -0.007534027099609375, -7.62939453125e-06, -1.9073486328125e-06, -0.1262199878692627, -0.029712200164794922, -2.1457672119140625e-06, -0.0013065338134765625, -0.15715312957763672, -0.0003032684326171875, -0.1820705235004425, -0.044790927320718765, -6.318092346191406e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.027167081832885742, -4.8995018005371094e-05, 0.0, -0.0058269500732421875, -0.004154205322265625, 0.0, 0.0, -0.5001925230026245, -6.890296936035156e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.09961318969726562, -0.000247955322265625, -1.9073486328125e-05, -7.62939453125e-06, -0.08267723023891449, -0.00011205087503185496, -1.9073486328125e-06, -0.304046630859375, -0.003192901611328125, -5.7220458984375e-06, -1.9073486328125e-06, -0.25468671321868896, -0.033542633056640625, -2.2649765014648438e-06, -0.00107574462890625, -0.27567481994628906, -0.0002498626708984375, -0.16511262953281403, -0.09187251329421997, -9.775161743164062e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.01678931713104248, -7.021427154541016e-05, -1.1920928244535389e-07, -0.0049591064453125, -0.003047943115234375, 0.0, 0.0, -0.46137893199920654, -6.54458999633789e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.11436080932617188, -0.0002231597900390625, -2.09808349609375e-05, -7.62939453125e-06, -0.11250409483909607, -0.00013016855518799275, -3.814697265625e-06, -0.3130159378051758, -0.0030498504638671875, -5.7220458984375e-06, -1.9073486328125e-06, -0.347561240196228, -0.04064977169036865, -2.2649765014648438e-06, -0.0010242462158203125, -0.3620319366455078, -0.00022125244140625, -0.16236929595470428, -0.11193706095218658, -0.00011301040649414062, -4.57763671875e-05, -1.9073486328125e-06, -0.015609264373779297, -7.033348083496094e-05, -1.1920928244535389e-07, -0.004970550537109375, -0.0029964447021484375, 0.0, 0.0, -0.4699791669845581, -6.747245788574219e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.11692523956298828, -0.0002193450927734375, -2.09808349609375e-05, -7.62939453125e-06, -0.12263759970664978, -0.0001323140604654327, -3.814697265625e-06, -0.3174562454223633, -0.0030059814453125, -3.814697265625e-06, -1.9073486328125e-06, -0.3987172842025757, -0.04513871669769287, -2.2649765014648438e-06, -0.001033782958984375, -0.4012126922607422, -0.000209808349609375, -0.16215048730373383, -0.12203361093997955, -0.00012063980102539062, -4.57763671875e-05, -1.9073486328125e-06, -0.015186071395874023, -6.854534149169922e-05, -1.1920928244535389e-07, -0.0047283172607421875, -0.0029544830322265625, 0.0, 0.0, -0.4859055280685425, -6.949900853214785e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.11875343322753906, -0.000217437744140625, -2.09808349609375e-05, -7.62939453125e-06, -0.12724456191062927, -0.00013219486572779715, -3.814697265625e-06, -0.3192424774169922, -0.00299072265625, -3.814697265625e-06, -1.9073486328125e-06, -0.4275306463241577, -0.047601938247680664, -2.2649765014648438e-06, -0.001041412353515625, -0.42105960845947266, -0.00020599365234375, -0.16215874254703522, -0.12736675143241882, -0.00012445449829101562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014999151229858398, -6.854534149169922e-05, -1.1920928244535389e-07, -0.0044422149658203125, -0.0029449462890625, 0.0, 0.0, -0.5117224454879761, -7.152556645451114e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.12000846862792969, -0.0002155303955078125, -2.09808349609375e-05, -7.62939453125e-06, -0.12968727946281433, -0.0001318372815148905, -3.814697265625e-06, -0.3204469680786133, -0.0029850006103515625, -3.814697265625e-06, -1.9073486328125e-06, -0.444424033164978, -0.04901432991027832, -2.2649765014648438e-06, -0.0010433197021484375, -0.43200111389160156, -0.0002040863037109375, -0.1621496081352234, -0.13037031888961792, -0.00012826919555664062, -4.38690185546875e-05, -1.9073486328125e-06, -0.0149153470993042, -6.67572021484375e-05, -1.1920928244535389e-07, -0.004138946533203125, -0.0029506683349609375, 0.0, 0.0, -0.5457800626754761, -7.343291508732364e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.120941162109375, -0.0002155303955078125, -2.09808349609375e-05, -7.62939453125e-06, -0.13074764609336853, -0.00013112211308907717, -3.814697265625e-06, -0.32132530212402344, -0.00298309326171875, -3.814697265625e-06, -1.9073486328125e-06, -0.45497071743011475, -0.04984486103057861, -2.2649765014648438e-06, -0.0010433197021484375, -0.4384641647338867, -0.000202178955078125, -0.16211172938346863, -0.13220617175102234, -0.00012826919555664062, -4.38690185546875e-05, -1.9073486328125e-06, -0.014879107475280762, -6.4849853515625e-05, -1.1920928244535389e-07, -0.0038394927978515625, -0.0029544830322265625, 0.0, 0.0, -0.5865573883056641, -7.545947300968692e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.12175178527832031, -0.000213623046875, -2.09808349609375e-05, -7.62939453125e-06, -0.1309783160686493, -0.00013040694466326386, -3.814697265625e-06, -0.32201099395751953, -0.00298309326171875, -3.814697265625e-06, -1.9073486328125e-06, -0.46222150325775146, -0.05037117004394531, -2.2649765014648438e-06, -0.001041412353515625, -0.44249534606933594, -0.000202178955078125, -0.16206999123096466, -0.13342991471290588, -0.00013017654418945312, -4.38690185546875e-05, -1.9073486328125e-06, -0.014863848686218262, -6.4849853515625e-05, -1.1920928244535389e-07, -0.0035552978515625, -0.0029544830322265625, 0.0, 0.0, -0.6325759887695312, -7.55786822992377e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12250614166259766, -0.000213623046875, -2.09808349609375e-05, -7.62939453125e-06, -0.13073083758354187, -0.00012957259605173022, -3.814697265625e-06, -0.3225889205932617, -0.00298309326171875, -3.814697265625e-06, -1.9073486328125e-06, -0.46771085262298584, -0.05073535442352295, -2.2649765014648438e-06, -0.0010395050048828125, -0.4450979232788086, -0.000202178955078125, -0.1620407998561859, -0.13430596888065338, -0.00013017654418945312, -4.38690185546875e-05, -1.9073486328125e-06, -0.01485908031463623, -6.4849853515625e-05, -1.1920928244535389e-07, -0.0032863616943359375, -0.002948760986328125, 0.0, 0.0, -0.6821002960205078, -7.760524022160098e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12322521209716797, -0.0002117156982421875, -2.09808349609375e-05, -7.62939453125e-06, -0.1302163302898407, -0.0001288574276259169, -3.814697265625e-06, -0.32309818267822266, -0.0029850006103515625, -3.814697265625e-06, -1.9073486328125e-06, -0.47218549251556396, -0.05101180076599121, -2.2649765014648438e-06, -0.00103759765625, -0.44679832458496094, -0.0002002716064453125, -0.16202569007873535, -0.13496699929237366, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.01485908031463623, -6.496906280517578e-05, -1.1920928244535389e-07, -0.0030384063720703125, -0.00293731689453125, 0.0, 0.0, -0.7332812547683716, -7.963179814396426e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12391090393066406, -0.0002117156982421875, -2.09808349609375e-05, -7.62939453125e-06, -0.12955841422080994, -0.00012814225920010358, -3.814697265625e-06, -0.32355785369873047, -0.002986907958984375, -3.814697265625e-06, -1.9073486328125e-06, -0.4760087728500366, -0.05123400688171387, -2.2649765014648438e-06, -0.0010356903076171875, -0.4478893280029297, -0.0002002716064453125, -0.1620280146598816, -0.13548104465007782, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014860987663269043, -6.496906280517578e-05, -1.1920928244535389e-07, -0.002811431884765625, -0.00292205810546875, 0.0, 0.0, -0.7843953371047974, -7.963179814396426e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12456130981445312, -0.0002117156982421875, -2.09808349609375e-05, -7.62939453125e-06, -0.12883195281028748, -0.00012742709077429026, -3.814697265625e-06, -0.3239784240722656, -0.0029888153076171875, -3.814697265625e-06, -1.9073486328125e-06, -0.47935616970062256, -0.05142176151275635, -2.2649765014648438e-06, -0.001033782958984375, -0.44854736328125, -0.0002002716064453125, -0.16204309463500977, -0.13588814437389374, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014863848686218262, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0026073455810546875, -0.0029010772705078125, 0.0, 0.0, -0.8340264558792114, -7.975100743351504e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12517356872558594, -0.000209808349609375, -2.09808349609375e-05, -7.62939453125e-06, -0.1280824840068817, -0.0001268311170861125, -3.814697265625e-06, -0.32436370849609375, -0.0029888153076171875, -3.814697265625e-06, -1.9073486328125e-06, -0.4823201894760132, -0.05158281326293945, -2.2649765014648438e-06, -0.001033782958984375, -0.4488801956176758, -0.0002002716064453125, -0.16206927597522736, -0.13620910048484802, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014867663383483887, -6.306171417236328e-05, -1.1920928244535389e-07, -0.002422332763671875, -0.002880096435546875, 0.0, 0.0, -0.8811522722244263, -8.165835606632754e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12574481964111328, -0.000209808349609375, -2.09808349609375e-05, -7.62939453125e-06, -0.12733957171440125, -0.00012623514339793473, -3.814697265625e-06, -0.32471561431884766, -0.00299072265625, -3.814697265625e-06, -1.9073486328125e-06, -0.48495328426361084, -0.05172300338745117, -2.2649765014648438e-06, -0.0010318756103515625, -0.4489631652832031, -0.0002002716064453125, -0.16210511326789856, -0.13646236062049866, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014871478080749512, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0022602081298828125, -0.0028591156005859375, 0.0, 0.0, -0.9251319169998169, -8.165835606632754e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12627315521240234, -0.000209808349609375, -2.09808349609375e-05, -7.62939453125e-06, -0.12661954760551453, -0.00012575836444739252, -3.814697265625e-06, -0.32503795623779297, -0.0029926300048828125, -3.814697265625e-06, -1.9073486328125e-06, -0.487296462059021, -0.051846981048583984, -2.2649765014648438e-06, -0.00102996826171875, -0.4488534927368164, -0.0002002716064453125, -0.16214704513549805, -0.13665825128555298, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014875292778015137, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0021152496337890625, -0.0028362274169921875, 0.0, 0.0, -0.9656401872634888, -8.177756535587832e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12675952911376953, -0.000209808349609375, -2.09808349609375e-05, -7.62939453125e-06, -0.12593278288841248, -0.0001252815854968503, -3.814697265625e-06, -0.3253307342529297, -0.002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -0.48937833309173584, -0.05195462703704834, -2.2649765014648438e-06, -0.00102996826171875, -0.44858646392822266, -0.0002002716064453125, -0.1621933877468109, -0.1368078589439392, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014878153800964355, -6.306171417236328e-05, -1.1920928244535389e-07, -0.001987457275390625, -0.00281524658203125, 0.0, 0.0, -1.0025883913040161, -8.177756535587832e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12720680236816406, -0.000209808349609375, -2.09808349609375e-05, -7.62939453125e-06, -0.12528619170188904, -0.00012492400128394365, -3.814697265625e-06, -0.32559680938720703, -0.002994537353515625, -3.814697265625e-06, -1.9073486328125e-06, -0.49122464656829834, -0.05204904079437256, -2.2649765014648438e-06, -0.00102996826171875, -0.4481983184814453, -0.0002002716064453125, -0.16224044561386108, -0.136919304728508, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014882922172546387, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0018768310546875, -0.0027942657470703125, 0.0, 0.0, -1.036048173904419, -8.368491398869082e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12761306762695312, -0.0002079010009765625, -2.09808349609375e-05, -7.62939453125e-06, -0.12468226999044418, -0.000124566417071037, -3.814697265625e-06, -0.3258371353149414, -0.0029964447021484375, -3.814697265625e-06, -1.9073486328125e-06, -0.49286210536956787, -0.0521320104598999, -2.2649765014648438e-06, -0.0010280609130859375, -0.44771766662597656, -0.0002002716064453125, -0.16229061782360077, -0.13699927926063538, -0.00013399124145507812, -4.38690185546875e-05, -1.9073486328125e-06, -0.014886736869812012, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0017795562744140625, -0.0027751922607421875, 0.0, 0.0, -1.066194772720337, -8.368491398869082e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12798309326171875, -0.0002079010009765625, -2.288818359375e-05, -7.62939453125e-06, -0.12412341684103012, -0.00012420883285813034, -3.814697265625e-06, -0.32605552673339844, -0.00299835205078125, -3.814697265625e-06, -1.9073486328125e-06, -0.4943126440048218, -0.05220448970794678, -2.2649765014648438e-06, -0.0010280609130859375, -0.44716644287109375, -0.0002002716064453125, -0.1623399555683136, -0.1370541751384735, -0.00013399124145507812, -4.38690185546875e-05, -1.9073486328125e-06, -0.01488959789276123, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0016937255859375, -0.0027561187744140625, 0.0, 0.0, -1.0932581424713135, -8.368491398869082e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12831783294677734, -0.0002079010009765625, -2.288818359375e-05, -7.62939453125e-06, -0.1236083135008812, -0.00012397044338285923, -3.814697265625e-06, -0.3262519836425781, -0.00299835205078125, -3.814697265625e-06, -1.9073486328125e-06, -0.495597243309021, -0.052268385887145996, -2.2649765014648438e-06, -0.0010280609130859375, -0.4465675354003906, -0.0002002716064453125, -0.16238869726657867, -0.13708798587322235, -0.00013399124145507812, -4.38690185546875e-05, -1.9073486328125e-06, -0.014893412590026855, -6.306171417236328e-05, -1.1920928244535389e-07, -0.001617431640625, -0.00273895263671875, 0.0, 0.0, -1.1174900531768799, -8.38041232782416e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12862014770507812, -0.0002079010009765625, -2.288818359375e-05, -7.62939453125e-06, -0.12313612550497055, -0.00012373205390758812, -3.814697265625e-06, -0.3264293670654297, -0.00299835205078125, -3.814697265625e-06, -1.9073486328125e-06, -0.49673402309417725, -0.052324533462524414, -2.2649765014648438e-06, -0.0010280609130859375, -0.4459371566772461, -0.0002002716064453125, -0.16243696212768555, -0.1371065080165863, -0.00013399124145507812, -4.38690185546875e-05, -1.9073486328125e-06, -0.01489722728729248, -6.306171417236328e-05, -1.1920928244535389e-07, -0.001552581787109375, -0.00272369384765625, 0.0, 0.0, -1.1391441822052002, -8.38041232782416e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12889385223388672, -0.0002079010009765625, -2.288818359375e-05, -7.62939453125e-06, -0.12270494550466537, -0.00012349366443231702, -3.814697265625e-06, -0.32658863067626953, -0.0030002593994140625, -3.814697265625e-06, -1.9073486328125e-06, -0.49773919582366943, -0.05237412452697754, -2.2649765014648438e-06, -0.001026153564453125, -0.44529247283935547, -0.000202178955078125, -0.1624828577041626, -0.13711249828338623, -0.00013399124145507812, -4.38690185546875e-05, -1.9073486328125e-06, -0.0149000883102417, -6.306171417236328e-05, -1.1920928244535389e-07, -0.001495361328125, -0.00270843505859375, 0.0, 0.0, -1.1584818363189697, -8.38041232782416e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.12914085388183594, -0.0002079010009765625, -2.288818359375e-05, -7.62939453125e-06, -0.12231191247701645, -0.0001232552749570459, -3.814697265625e-06, -0.3267326354980469, -0.0030002593994140625, -3.814697265625e-06, -1.9073486328125e-06, -0.49862992763519287, -0.05241703987121582, -2.2649765014648438e-06, -0.001026153564453125, -0.4446420669555664, -0.000202178955078125, -0.1625283807516098, -0.13710840046405792, -0.00013399124145507812, -4.38690185546875e-05, -1.9073486328125e-06, -0.014902949333190918, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0014438629150390625, -0.002696990966796875, 0.0, 0.0, -1.1757347583770752, -8.38041232782416e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.1293621063232422, -0.0002079010009765625, -2.288818359375e-05, -7.62939453125e-06, -0.12195523828268051, -0.00012313608021941036, -3.814697265625e-06, -0.3268623352050781, -0.003002166748046875, -3.814697265625e-06, -1.9073486328125e-06, -0.49941766262054443, -0.052454233169555664, -2.2649765014648438e-06, -0.001026153564453125, -0.4440011978149414, -0.000202178955078125, -0.16256986558437347, -0.13709768652915955, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014905810356140137, -6.306171417236328e-05, -1.1920928244535389e-07, -0.001399993896484375, -0.0026836395263671875, 0.0, 0.0, -1.1911194324493408, -8.38041232782416e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.1295614242553711, -0.00020599365234375, -2.288818359375e-05, -7.62939453125e-06, -0.12163075059652328, -0.0001230168854817748, -3.814697265625e-06, -0.3269777297973633, -0.003002166748046875, -3.814697265625e-06, -1.9073486328125e-06, -0.5001157522201538, -0.05248761177062988, -2.2649765014648438e-06, -0.001026153564453125, -0.4433755874633789, -0.000202178955078125, -0.16260918974876404, -0.1370815485715866, -0.00013208389282226562, -4.38690185546875e-05, -1.9073486328125e-06, -0.014908671379089355, -6.306171417236328e-05, -1.1920928244535389e-07, -0.001361846923828125, -0.002674102783203125, 0.0, 0.0, -1.1810638904571533, -0.07113385200500488, 0.0, -0.05072784423828125, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -0.013804435729980469, -3.814697265625e-06, -0.632054328918457, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Powermace", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 102, 185, "Powermace", "<EOS>", "3", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "3", "<EOS>", 47, 165, "2", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 68, 260, "Weapon", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "score": -72.0953690233948, "model_output": {"_type": "Module", "body": [{"name": "Powermace", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template16", "hole2": "SHAMAN"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Num", "n": 2}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"args": [{"hole0": "WeaponAttack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}], "gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n"}
{"beams": [{"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -0.24157238006591797, -0.0009860992431640625, -0.002109765773639083, -1.9073486328125e-06, -3.3497806725790724e-05, -0.019613265991210938, 0.0, -0.010578655637800694, -1.9073486328125e-06, -0.06622886657714844, -0.01995849609375, -0.01497650146484375, -0.00533294677734375, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -6.615901656914502e-05, 0.0, -6.38953351881355e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 53, 219, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -0.4574709857051573, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template66", "hole2": 4}, {"hole0": "UserPicker", "_type": "Template41"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -3.050969123840332, -3.24249267578125e-05, -0.0013490915298461914, 0.0, -0.0002994537353515625, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.002239227294921875, 0.0, -0.0005168914794921875, 0.0, -0.004981040954589844, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002614259719848633, -1.9073486328125e-06, -1.1444091796875e-05, -0.24405384063720703, -0.000972747802734375, -0.0020984408911317587, -1.9073486328125e-06, -3.337859743623994e-05, -0.019598007202148438, 0.0, -0.010544978082180023, -1.9073486328125e-06, -0.06587696075439453, -0.0199737548828125, -0.014973640441894531, -0.005324363708496094, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -6.639741332037374e-05, 0.0, -6.38953351881355e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 53, 219, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -3.4601273849557117, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template66", "hole2": 4}, {"hole0": "UserPicker", "_type": "Template41"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "EPIC"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeAttack(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -0.24157238006591797, -0.0009860992431640625, -0.002109765773639083, -1.9073486328125e-06, -3.3497806725790724e-05, -3.9757909774780273, 0.0, -0.2989192008972168, -1.9073486328125e-06, -0.06712055206298828, -0.01824474334716797, -0.016172409057617188, -0.003185272216796875, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, -6.985426443861797e-05, 0.0, -5.578940545092337e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "4", "<EOS>", 53, 219, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -4.700203368146475, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 4}, {"hole0": "UserPicker", "_type": "Template41"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(MechAttack())]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -2.191647529602051, -0.012835502624511719, -0.0063332319259643555, -0.09349727630615234, -1.9073486328125e-06, -1.9073486328125e-06, -0.000690460205078125, -2.86102294921875e-05, -0.0011104342993348837, -1.9073486328125e-06, -0.042797088623046875, -0.7253322601318359, -3.814697265625e-06, -0.00032615437521599233, -5.91278076171875e-05, -1.71661376953125e-05, -0.4030303955078125, -7.62939453125e-06, -0.0015745162963867188, -2.6106754376087338e-05, -0.059618111699819565, -0.8354095816612244, -1.0609603123157285e-05, -0.017658233642578125, -0.2748222351074219, -1.52587890625e-05, 0.0, -0.0005340576171875, -0.0001125335693359375, 0.0, -4.00543212890625e-05, -6.103515625e-05, -5.7220458984375e-06, -9.548664093017578e-05, -1.1920928244535389e-07, -0.018672943115234375, -1.52587890625e-05, -0.004108428955078125, -2.1457672119140625e-05, 0.0, -0.0009765625, -2.09808349609375e-05, -1.1444080882938579e-05, 0.0, -4.9233436584472656e-05, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "Mech", "Attack", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -4.767456656597425, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": [{"_type": "Num", "n": 2}], "hole0": "ChangeHealth", "hole2": "ChangeAttack", "_type": "Template30", "hole4": [{"hole1": "MechAttack", "hole0": "Buff", "_type": "Template69"}], "hole3": 2}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(Null, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -0.24157238006591797, -0.0009860992431640625, -0.002109765773639083, -1.9073486328125e-06, -3.3497806725790724e-05, -0.019613265991210938, 0.0, -0.010578655637800694, -1.9073486328125e-06, -3.5930604934692383, -0.05743122100830078, -5.7220458984375e-06, 0.0, -0.31312084197998047, -7.05718994140625e-05, 0.0, -0.000762939453125, -0.40837574005126953, -7.05718994140625e-05, -1.9073486328125e-05, 0.0, -0.0001983642578125, -8.0108642578125e-05, -1.9073486328125e-05, -0.006507992744445801, 0.0, -0.0083770751953125, -9.5367431640625e-06, -0.07196998596191406, -3.266334533691406e-05, 0.0, -0.0004558563232421875, -1.1444091796875e-05, -1.2993789823667612e-05, 0.0, -4.231929051456973e-05, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 46, 162, "Null", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -4.811406349566795, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template66", "hole2": 4}, {"args": [{"value": "Null", "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>Clunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.698710918426514, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -0.24157238006591797, -0.0009860992431640625, -0.002109765773639083, -1.9073486328125e-06, -3.3497806725790724e-05, -0.019613265991210938, 0.0, -0.010578655637800694, -1.9073486328125e-06, -0.06622886657714844, -0.01995849609375, -0.01497650146484375, -0.00533294677734375, 0.0, -6.4849853515625e-05, -7.62939453125e-06, -6.615901656914502e-05, 0.0, -6.38953351881355e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 53, 219, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -5.147032729925712, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Clunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template66", "hole2": 4}, {"hole0": "UserPicker", "_type": "Template41"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Damage(2), MinionSelector(IsType(MINION_TYPE.MECH),\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -3.535287857055664, -0.0013637542724609375, -0.03814677894115448, -3.24249267578125e-05, -8.96453857421875e-05, -0.05615997314453125, -5.7220458984375e-06, 0.0, -0.48602819442749023, -0.0031719207763671875, 0.0, -0.44153404235839844, -0.054500579833984375, -7.43865966796875e-05, -9.5367431640625e-05, 0.0, -0.054697148501873016, -0.00363897904753685, 0.0, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.0005645751953125, 0.0, -6.67572021484375e-05, -3.814697265625e-06, -0.28081703186035156, 0.0, -0.14277172088623047, 0.0, -0.03723597526550293, -1.2159347534179688e-05, -0.00228118896484375, -0.0002269744873046875, -2.6702880859375e-05, -0.00011085325968451798, 0.0, -4.0173501474782825e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 66, 257, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -5.214881752454829, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole0": 2, "_type": "Template75"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(3))]),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -4.376911640167236, -0.007848739624023438, -3.731250762939453e-05, -0.0044403076171875, -3.814697265625e-06, -0.011242151260375977, -7.2479248046875e-05, -0.000396728515625, -0.00128936767578125, -1.9073486328125e-06, -0.731268048286438, -2.6702880859375e-05, -0.0032529830932617188, -0.0007343292236328125, -3.24249267578125e-05, 0.0, -0.014982223510742188, -4.00543212890625e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0003185272216796875, -3.814697265625e-06, -7.62939453125e-05, 0.0, -0.024354934692382812, -9.5367431640625e-06, -0.0005817413330078125, -2.86102294921875e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-05, -1.1324825209158007e-05, 0.0, -4.994868504581973e-05, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "3", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -5.2540677310953114, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 3}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(MechAttack())]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -2.191647529602051, -0.012835502624511719, -0.0063332319259643555, -0.09349727630615234, -1.9073486328125e-06, -1.9073486328125e-06, -0.000690460205078125, -2.86102294921875e-05, -0.0011104342993348837, -1.9073486328125e-06, -0.042797088623046875, -0.6765270233154297, -1.9073486328125e-06, -0.0010477297473698854, -4.38690185546875e-05, -3.4332275390625e-05, -1.1356830596923828, -7.62939453125e-06, -0.0016183853149414062, -2.6464349502930418e-05, -0.06634705513715744, -0.7011120319366455, -1.0609603123157285e-05, -0.012056350708007812, -0.27443408966064453, -1.52587890625e-05, 0.0, -0.0005512237548828125, -0.0001277923583984375, 0.0, -4.00543212890625e-05, -5.91278076171875e-05, -5.7220458984375e-06, -9.357929229736328e-05, -1.1920928244535389e-07, -0.018812179565429688, -1.52587890625e-05, -0.0040645599365234375, -2.1457672119140625e-05, 0.0, -0.0010662078857421875, -2.09808349609375e-05, -1.3351428606256377e-05, 0.0, -4.9233436584472656e-05, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "Mech", "Attack", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -5.318726781677434, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": [{"_type": "Num", "n": 2}], "hole0": "ChangeHealth", "hole2": "ChangeHealth", "_type": "Template30", "hole4": [{"hole1": "MechAttack", "hole0": "Buff", "_type": "Template69"}], "hole3": 2}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Damage(2), MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -3.535287857055664, -0.0013637542724609375, -0.03814677894115448, -3.24249267578125e-05, -8.96453857421875e-05, -0.05615997314453125, -5.7220458984375e-06, 0.0, -0.48602819442749023, -0.0031719207763671875, 0.0, -1.1240434646606445, -0.03897571563720703, -0.000179290771484375, -0.0003757476806640625, -1.1444091796875e-05, -0.0035299062728881836, -0.003936767578125, 0.0, -0.00379180908203125, -1.9073486328125e-06, 0.0, -0.0002613067626953125, 0.0, -0.000125885009765625, -3.814697265625e-06, -0.28127574920654297, -1.9073486328125e-06, -0.15386009216308594, -5.7220458984375e-06, -9.070574742509052e-05, 0.0, -4.7802455810597166e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 66, 257, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -5.806679471513206, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole0": 2, "_type": "Template75"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())]),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -2.191647529602051, -0.012835502624511719, -0.0063332319259643555, -0.09349727630615234, -1.9073486328125e-06, -1.9073486328125e-06, -0.000690460205078125, -2.86102294921875e-05, -0.0011104342993348837, -1.9073486328125e-06, -0.042797088623046875, -0.6765270233154297, -1.9073486328125e-06, -0.0010477297473698854, -4.38690185546875e-05, -3.4332275390625e-05, -1.0113306045532227, -0.1949634552001953, -5.7220458984375e-05, -1.9073486328125e-06, -0.12452888488769531, -0.009202957153320312, 0.0, -0.001033782958984375, -0.014883041381835938, -3.4332275390625e-05, -3.62396240234375e-05, -8.392333984375e-05, -0.0010148286819458008, -0.0007435083389282227, 0.0, -0.0030670166015625, 0.0, 0.0, -5.14984130859375e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.02874469757080078, 0.0, -0.0001049041748046875, -0.0011339187622070312, -1.33514404296875e-05, -0.07924652099609375, 0.0, -0.8451919555664062, -5.7220458984375e-06, -0.004854321479797363, -4.0411949157714844e-05, 0.0, -0.7709560394287109, 0.0, -0.4918595552444458, -9.369850158691406e-05, 0.0, -0.000148773193359375, -3.814697265625e-06, -5.8172474382445216e-05, 0.0, -3.3497643016744405e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 282, 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -6.686134765031028, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": [{"_type": "Num", "n": 2}], "hole0": "ChangeHealth", "hole2": "ChangeHealth", "_type": "Template30", "hole4": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "hole3": 2}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())]),\n            ActionTag(Give(ChangeAttack(2)), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -2.191647529602051, -0.012835502624511719, -0.0063332319259643555, -0.09349727630615234, -1.9073486328125e-06, -1.9073486328125e-06, -0.000690460205078125, -2.86102294921875e-05, -0.0011104342993348837, -1.9073486328125e-06, -0.042797088623046875, -0.6765270233154297, -1.9073486328125e-06, -0.0010477297473698854, -4.38690185546875e-05, -3.4332275390625e-05, -1.0113306045532227, -0.1949634552001953, -5.7220458984375e-05, -1.9073486328125e-06, -0.12452888488769531, -0.009202957153320312, 0.0, -0.001033782958984375, -0.014883041381835938, -3.4332275390625e-05, -3.62396240234375e-05, -8.392333984375e-05, -0.0010148286819458008, -0.0007435083389282227, 0.0, -0.0030670166015625, 0.0, 0.0, -5.14984130859375e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.02874469757080078, 0.0, -0.0001049041748046875, -0.0011339187622070312, -1.33514404296875e-05, -0.07924652099609375, 0.0, -0.8451919555664062, -5.7220458984375e-06, -0.004854321479797363, -4.0411949157714844e-05, 0.0, -0.6530370712280273, -0.0002040863037109375, -1.9073486328125e-06, 0.0, -0.05181598663330078, -0.00029754638671875, 0.0, -7.62939453125e-06, -0.09268665313720703, -0.0001354217529296875, -0.0035445690155029297, 0.0, -5.0902228394988924e-05, -0.7121686935424805, -1.9073486328125e-06, -0.05628538131713867, 0.0, -0.0039882659912109375, -9.5367431640625e-06, -3.266334533691406e-05, -3.0517578125e-05, 0.0, -0.0003681182861328125, -3.814697265625e-06, -0.00013242574641481042, -1.9073486328125e-06, -8.690086542628706e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 282, 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -6.997875027435811, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": [{"_type": "Num", "n": 2}], "hole0": "ChangeHealth", "hole2": "ChangeHealth", "_type": "Template30", "hole4": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "hole3": 2}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())]),\n            ActionTag(Give(ChangeHealth(2)), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -2.191647529602051, -0.012835502624511719, -0.0063332319259643555, -0.09349727630615234, -1.9073486328125e-06, -1.9073486328125e-06, -0.000690460205078125, -2.86102294921875e-05, -0.0011104342993348837, -1.9073486328125e-06, -0.042797088623046875, -0.6765270233154297, -1.9073486328125e-06, -0.0010477297473698854, -4.38690185546875e-05, -3.4332275390625e-05, -1.0113306045532227, -0.1949634552001953, -5.7220458984375e-05, -1.9073486328125e-06, -0.12452888488769531, -0.009202957153320312, 0.0, -0.001033782958984375, -0.014883041381835938, -3.4332275390625e-05, -3.62396240234375e-05, -8.392333984375e-05, -0.0010148286819458008, -0.0007435083389282227, 0.0, -0.0030670166015625, 0.0, 0.0, -5.14984130859375e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.02874469757080078, 0.0, -0.0001049041748046875, -0.0011339187622070312, -1.33514404296875e-05, -0.07924652099609375, 0.0, -0.8451919555664062, -5.7220458984375e-06, -0.004854321479797363, -4.0411949157714844e-05, 0.0, -0.6530370712280273, -0.0002040863037109375, -1.9073486328125e-06, 0.0, -0.05181598663330078, -0.00029754638671875, 0.0, -7.62939453125e-06, -0.09268665313720703, -0.0001354217529296875, -0.0035445690155029297, 0.0, -5.0902228394988924e-05, -0.6792259216308594, 0.0, -0.1576705425977707, -1.9073486328125e-06, -0.00981903076171875, -9.5367431640625e-06, -2.5033950805664062e-05, -2.47955322265625e-05, 0.0, -0.0003452301025390625, -3.814697265625e-06, -0.00012312985199969262, -1.9073486328125e-06, -8.725847146706656e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 282, 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -7.0721030036629315, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": [{"_type": "Num", "n": 2}], "hole0": "ChangeHealth", "hole2": "ChangeHealth", "_type": "Template30", "hole4": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "hole3": 2}, {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template66", "hole2": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=RandomPicker(2)\n            )]), CharacterSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.009149174205958843, -0.00021741451928392053, -5.483620952873025e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.0014019012451171875, -0.0001621246337890625, -9.583967766957358e-05, -1.2278553185751662e-05, -1.6808467989903875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, 0.0, -0.0042934417724609375, -1.9073486328125e-06, -0.05062389373779297, 0.0, -0.00015842914581298828, 0.0, -6.29425048828125e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.0022487640380859375, 0.0, -0.000469207763671875, 0.0, -0.006244659423828125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.0002480745315551758, -1.9073486328125e-06, -1.1444091796875e-05, -2.191647529602051, -0.012835502624511719, -0.0063332319259643555, -0.09349727630615234, -1.9073486328125e-06, -1.9073486328125e-06, -0.000690460205078125, -2.86102294921875e-05, -0.0011104342993348837, -1.9073486328125e-06, -0.042797088623046875, -0.6765270233154297, -1.9073486328125e-06, -0.0010477297473698854, -4.38690185546875e-05, -3.4332275390625e-05, -1.0113306045532227, -0.1949634552001953, -5.7220458984375e-05, -1.9073486328125e-06, -0.12452888488769531, -0.009202957153320312, 0.0, -0.001033782958984375, -0.014883041381835938, -3.4332275390625e-05, -3.62396240234375e-05, -8.392333984375e-05, -0.0010148286819458008, -0.0007435083389282227, 0.0, -0.0030670166015625, 0.0, 0.0, -5.14984130859375e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -0.02874469757080078, 0.0, -0.0001049041748046875, -0.0011339187622070312, -1.33514404296875e-05, -0.07924652099609375, 0.0, -0.5809497833251953, -7.62939453125e-06, -1.1444091796875e-05, -2.47955322265625e-05, -0.5025701522827148, -0.18502724170684814, 0.0, -9.918212890625e-05, -0.018671035766601562, -1.1444091796875e-05, -0.19232428073883057, 0.0, -0.014749526977539062, -0.42122459411621094, -1.1444091796875e-05, -1.9073486328125e-06, -1.2763900756835938, -0.00032806396484375, 0.0, -0.019128799438476562, -0.0001201629638671875, 0.0, -0.006876945495605469, 0.0, -0.04514884948730469, -1.9073486328125e-06, -0.005739331245422363, -0.00026357173919677734, 0.0, -0.0002040863037109375, -5.7220458984375e-06, -1.871574204415083e-05, 0.0, -5.042547491029836e-05, -2.0265579223632812e-06], "choice_history": [80, 159, 295, 88, 138, "Screwjank", "Clunker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Screwjank", " ", "Clunker", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 51, 205, "Change", "Health", "<EOS>", 282, 47, 165, "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 282, 40, 137, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 290, 79, 271, "picker", "<EOS>", 14, 136, 19, 160, "Random", "Picker", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "5", "<EOS>"], "score": -7.842851947892058, "model_output": {"_type": "Module", "body": [{"name": "ScrewjankClunker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Screwjank Clunker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "WARRIOR", "hole8": {"args": [{"hole1": [{"_type": "Num", "n": 2}], "hole0": "ChangeHealth", "hole2": "ChangeHealth", "_type": "Template30", "hole4": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "hole3": 2}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "RARE"}, {"hole1": 5, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-0.0003070831298828125, -3.814697265625e-06, -22.640758514404297], "choice_history": [80, 159, 294], "score": -22.641069412231445, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}
{"beams": [{"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -0.11906016618013382, -1.9073468138230965e-06, -0.00021469198691193014, -1.1920928244535389e-07, -0.00422978401184082, -2.0265579223632812e-06, -0.4565896987915039, -0.005131721496582031, -0.0004629137401934713, -0.00010132767056347802, -0.005023955833166838, -0.00020873545145150274, -0.001434326171875, -6.103515625e-05, -0.0008640289306640625, -0.000308990478515625, -0.0002994537353515625, -3.814697265625e-06, -0.0003108978271484375, -0.1941678524017334, -0.009109735488891602, -2.288818359375e-05, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.18842875957489014, -3.814697265625e-06, -0.035378456115722656, -0.0001678466796875, -0.003849148517474532, -0.01217186450958252, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "2", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -2.246582199992183, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -1.0911270380020142, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -0.11906016618013382, -1.9073468138230965e-06, -0.00021469198691193014, -1.1920928244535389e-07, -0.00422978401184082, -2.0265579223632812e-06, -0.4565896987915039, -0.005131721496582031, -0.0004629137401934713, -0.00010132767056347802, -0.005023955833166838, -0.00020873545145150274, -0.001434326171875, -6.103515625e-05, -0.0008640289306640625, -0.000308990478515625, -0.0002994537353515625, -3.814697265625e-06, -0.0003108978271484375, -0.1941678524017334, -0.009109735488891602, -2.288818359375e-05, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.18842875957489014, -3.814697265625e-06, -0.035378456115722656, -0.0001678466796875, -0.003849148517474532, -0.01217186450958252, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "2", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -2.9147611755743057, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "Sneed Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old', 8, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -1.149409294128418, -7.41475960239768e-05, -1.9073486328125e-06, -0.009473800659179688, -2.300739288330078e-05, -3.063678741455078e-05, -1.9073486328125e-05, -9.918212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0003452301025390625, 0.0, -0.00115966796875, 0.0, -0.2949228286743164, -0.000286102294921875, -0.1279781609773636, -1.7881377516459906e-06, -0.00022315559908747673, -1.1920928244535389e-07, -0.004326820373535156, -2.0265579223632812e-06, -0.4489555358886719, -0.005141258239746094, -0.0004693473456427455, -0.0001147983202827163, -0.004916905891150236, -0.00024318693613167852, -0.001483917236328125, -6.29425048828125e-05, -0.000858306884765625, -0.00031280517578125, -0.0003299713134765625, -3.814697265625e-06, -0.0003147125244140625, -0.19144117832183838, -0.009179949760437012, -2.288818359375e-05, -7.62939453125e-05, -5.91278076171875e-05, -1.1444091796875e-05, -0.18986962735652924, -3.814697265625e-06, -0.035759925842285156, -0.0001678466796875, -0.0038510558661073446, -0.01217949390411377, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "2", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -3.0458594340291185, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old', 8, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -1.0911270380020142, -5.745887756347656e-05, -0.001885652425698936, -1.149409294128418, -7.41475960239768e-05, -1.9073486328125e-06, -0.009473800659179688, -2.300739288330078e-05, -3.063678741455078e-05, -1.9073486328125e-05, -9.918212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0003452301025390625, 0.0, -0.00115966796875, 0.0, -0.2949228286743164, -0.000286102294921875, -0.1279781609773636, -1.7881377516459906e-06, -0.00022315559908747673, -1.1920928244535389e-07, -0.004326820373535156, -2.0265579223632812e-06, -0.4489555358886719, -0.005141258239746094, -0.0004693473456427455, -0.0001147983202827163, -0.004916905891150236, -0.00024318693613167852, -0.001483917236328125, -6.29425048828125e-05, -0.000858306884765625, -0.00031280517578125, -0.0003299713134765625, -3.814697265625e-06, -0.0003147125244140625, -0.19144117832183838, -0.009179949760437012, -2.288818359375e-05, -7.62939453125e-05, -5.91278076171875e-05, -1.1444091796875e-05, -0.18986962735652924, -3.814697265625e-06, -0.035759925842285156, -0.0001678466796875, -0.0038510558661073446, -0.01217949390411377, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sneed", " ", "Old", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "2", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -3.7140384096112413, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "Sneed Old", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(3), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -0.11906016618013382, -1.9073468138230965e-06, -0.00021469198691193014, -1.1920928244535389e-07, -0.00422978401184082, -2.0265579223632812e-06, -0.4565896987915039, -0.005131721496582031, -0.0004629137401934713, -0.00010132767056347802, -0.005023955833166838, -0.00020873545145150274, -0.001434326171875, -6.103515625e-05, -0.0008640289306640625, -0.000308990478515625, -0.0002994537353515625, -3.814697265625e-06, -0.0003108978271484375, -0.1941678524017334, -0.009109735488891602, -2.288818359375e-05, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.5226681232452393, 0.0, -0.4390068054199219, -0.0001544952392578125, -0.0036535263061523438, -0.018752098083496094, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "3", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -4.990817358191627, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(0, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -3.021171808242798, -8.583032467868179e-06, -0.0005487196613103151, -1.1920928244535389e-07, -0.0029921531677246094, -2.0265579223632812e-06, -0.3053703308105469, -0.005068778991699219, -0.00034458169830031693, -0.0001696346007520333, -0.004837988875806332, -0.0002362727973377332, -0.0014133453369140625, -5.53131103515625e-05, -0.0008983612060546875, -0.00028228759765625, -0.0002899169921875, -1.9073486328125e-06, -0.0003108978271484375, -0.20107710361480713, -0.008926868438720703, -2.09808349609375e-05, -7.62939453125e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.19314299523830414, -3.814697265625e-06, -0.0360870361328125, -0.0001659393310546875, -0.003776669269427657, -0.01213085651397705, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "<UNK>", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "2", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -5.008311344383394, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 0, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -2.858003616333008, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -0.11906016618013382, -1.9073468138230965e-06, -0.00021469198691193014, -1.1920928244535389e-07, -0.00422978401184082, -2.0265579223632812e-06, -0.4565896987915039, -0.005131721496582031, -0.0004629137401934713, -0.00010132767056347802, -0.005023955833166838, -0.00020873545145150274, -0.001434326171875, -6.103515625e-05, -0.0008640289306640625, -0.000308990478515625, -0.0002994537353515625, -3.814697265625e-06, -0.0003108978271484375, -0.1941678524017334, -0.009109735488891602, -2.288818359375e-05, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -0.18842875957489014, -3.814697265625e-06, -0.035378456115722656, -0.0001678466796875, -0.003849148517474532, -0.01217186450958252, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "<UNK>", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "2", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -5.043568317951205, "model_output": {"_type": "Module", "body": [{"name": "<UNK><UNK>Shredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(2))]), SelfSelector()))])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -1.4687976837158203, -1.3946266174316406, -0.001937675173394382, 0.0, -0.0014216816052794456, -3.218649908376392e-06, -0.0495150089263916, -0.08409905433654785, -1.6689286894688848e-06, -1.33514404296875e-05, -6.4849853515625e-05, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, -0.007717609405517578, -0.00012302398681640625, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, 0.0, -5.91278076171875e-05, -2.1457672119140625e-06, -0.03128337860107422, 0.0, -8.7738037109375e-05, -0.0016155242919921875, -0.0001659393310546875, -3.814697265625e-06, 0.0, -0.011916279792785645, -1.728534698486328e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.8916778564453125, -0.00043487548828125, -0.00015664100646972656, -0.003954172134399414, -1.9073486328125e-06, -0.05872321128845215, -9.5367431640625e-06, -0.0005626678466796875, -0.017427444458007812, -5.7220458984375e-06, -0.22716379165649414, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.00031745433807373047, -0.000476837158203125, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 180, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.1982393883713485, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "hole2": "MinionDied", "_type": "Template10", "hole4": [{"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(3), IsMinion()])), PlayerSelector()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -1.0911270380020142, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -0.11906016618013382, -1.9073468138230965e-06, -0.00021469198691193014, -1.1920928244535389e-07, -0.00422978401184082, -2.0265579223632812e-06, -0.4565896987915039, -0.005131721496582031, -0.0004629137401934713, -0.00010132767056347802, -0.005023955833166838, -0.00020873545145150274, -0.001434326171875, -6.103515625e-05, -0.0008640289306640625, -0.000308990478515625, -0.0002994537353515625, -3.814697265625e-06, -0.0003108978271484375, -0.1941678524017334, -0.009109735488891602, -2.288818359375e-05, -7.2479248046875e-05, -5.7220458984375e-05, -1.1444091796875e-05, -2.5226681232452393, 0.0, -0.4390068054199219, -0.0001544952392578125, -0.0036535263061523438, -0.018752098083496094, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Summon", "<EOS>", "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 47, 165, "3", "<EOS>", 67, 259, "Is", "Minion", "<EOS>"], "score": -5.65899633377375, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "Sneed Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "Summon", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Summon(Summon()), PlayerSelector()))])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -1.4687976837158203, -1.3946266174316406, -0.001937675173394382, 0.0, -0.0014216816052794456, -3.218649908376392e-06, -0.0495150089263916, -0.08409905433654785, -1.6689286894688848e-06, -1.33514404296875e-05, -6.4849853515625e-05, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, -0.007717609405517578, -0.00012302398681640625, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, 0.0, -5.91278076171875e-05, -2.1457672119140625e-06, -0.03128337860107422, 0.0, -8.7738037109375e-05, -0.0016155242919921875, -0.0001659393310546875, -3.814697265625e-06, 0.0, -0.011916279792785645, -1.728534698486328e-05, -1.9073486328125e-06, -7.82012939453125e-05, -2.0699944496154785, -0.0002689361572265625, -0.11744749546051025, -1.0251946150674485e-05, -0.03718071058392525, -0.02075652964413166, -7.43865966796875e-05, -3.814697265625e-06, -0.002647995948791504, -7.891654968261719e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 180, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 61, 250, "Summon", "<EOS>", "Summon", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -6.245771684126794, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "hole2": "MinionDied", "_type": "Template10", "hole4": [{"args": [{"hole1": "Summon", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(<UNK>Summon(2),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -0.26492881774902344, -0.0002994537353515625, -0.11906016618013382, -1.9073468138230965e-06, -0.00021469198691193014, -1.1920928244535389e-07, -0.00422978401184082, -2.0265579223632812e-06, -1.4259014129638672, -6.866455078125e-05, -1.9073486328125e-06, 0.0, -0.000244140625, 0.0, -0.0004730224609375, -0.05617046356201172, -0.0018978118896484375, -2.09808349609375e-05, -0.0008563995361328125, -0.48438218235969543, -1.1129525899887085, -4.410646579344757e-05, -0.0018863677978515625, -0.3832550048828125, -3.814697265625e-06, -0.2867658734321594, 0.0, -0.19785499572753906, -0.010926246643066406, -1.71661376953125e-05, 0.0, -0.5783185958862305, -0.0001392364501953125, 0.0, -0.013659477233886719, -0.0001068115234375, -7.62939453125e-06, -0.001467585563659668, -3.814697265625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.0800786018371582, -0.0001277923583984375, 0.0, -0.0001087188720703125, -7.62939453125e-06, -0.0019606351852416992, 0.0, -8.20159912109375e-05, -4.00543212890625e-05, -0.34781455993652344, -0.000858306884765625, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Summon", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -6.320981736580499, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>Summon"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(1))]), SelfSelector()))])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -1.4687976837158203, -1.3946266174316406, -0.001937675173394382, 0.0, -0.0014216816052794456, -3.218649908376392e-06, -0.0495150089263916, -0.08409905433654785, -1.6689286894688848e-06, -1.33514404296875e-05, -6.4849853515625e-05, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, -0.007717609405517578, -0.00012302398681640625, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, 0.0, -5.91278076171875e-05, -2.1457672119140625e-06, -0.03128337860107422, 0.0, -8.7738037109375e-05, -0.0016155242919921875, -0.0001659393310546875, -3.814697265625e-06, 0.0, -0.011916279792785645, -1.728534698486328e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.8916778564453125, -0.00043487548828125, -0.00015664100646972656, -0.003954172134399414, -1.9073486328125e-06, -0.05872321128845215, -9.5367431640625e-06, -0.0005626678466796875, -0.017427444458007812, -5.7220458984375e-06, -1.6108222007751465, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -9.059906005859375e-05, -0.001310586929321289, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 180, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -6.582540931607127, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "hole2": "MinionDied", "_type": "Template10", "hole4": [{"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -1.4687976837158203, -1.3946266174316406, -0.001937675173394382, 0.0, -0.0014216816052794456, -3.218649908376392e-06, -0.0495150089263916, -0.08409905433654785, -1.6689286894688848e-06, -1.33514404296875e-05, -6.4849853515625e-05, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, -0.007717609405517578, -0.00012302398681640625, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, 0.0, -5.91278076171875e-05, -2.1457672119140625e-06, -0.03128337860107422, 0.0, -8.7738037109375e-05, -0.0016155242919921875, -0.0001659393310546875, -3.814697265625e-06, 0.0, -0.011916279792785645, -1.728534698486328e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.3108558654785156, -0.0011749267578125, -9.5367431640625e-06, -0.0001125335693359375, -0.7928926944732666, -0.0009673609165474772, -0.00032126886071637273, -0.025447845458984375, -0.002765655517578125, -0.0011806488037109375, -0.0001163482666015625, 0.0, -0.00012218952178955078, -0.005292413290590048, -8.344629350176547e-06, -0.027078628540039062, -3.4332275390625e-05, -6.866455078125e-05, -1.1914501190185547, 0.0, -0.00186920166015625, -0.000335693359375, -0.0003299713134765625, 0.0, -0.016895413398742676, -3.576278118089249e-07, -0.0275803804397583, -1.1920928244535389e-07, -0.00016021728515625, 0.0, -0.021336674690246582, -0.00011360645294189453, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 180, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -7.425829209036628, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "hole2": "MinionDied", "_type": "Template10", "hole4": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(MinionDied(IsType(MINION_TYPE.\n            MECH)), ActionTag(AddCard(CardQuery(conditions=[IsType(\n            MINION_TYPE.MECH), True])), PlayerSelector()))])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.43865966796875e-05, -5.7220458984375e-06, -0.00021038226259406656, -0.06101749837398529, -0.0040338048711419106, -3.647756966529414e-05, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -0.007892608642578125, -9.5367431640625e-06, -8.058547973632812e-05, -3.933906555175781e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-05, -1.33514404296875e-05, 0.0, -0.000919342041015625, -0.04994487762451172, -0.0023660659790039062, -0.42294806241989136, -5.745887756347656e-05, -0.001885652425698936, -0.3814353942871094, -0.0006053447723388672, -2.09808349609375e-05, -0.00012481211160775274, -1.9073486328125e-06, -0.008153915405273438, -2.491474151611328e-05, -2.682209014892578e-05, -1.52587890625e-05, -0.000102996826171875, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0002880096435546875, 0.0, -0.001148223876953125, 0.0, -1.4687976837158203, -1.3946266174316406, -0.001937675173394382, 0.0, -0.0014216816052794456, -3.218649908376392e-06, -0.0495150089263916, -0.08409905433654785, -1.6689286894688848e-06, -1.33514404296875e-05, -6.4849853515625e-05, -4.9591064453125e-05, -1.9073486328125e-06, 0.0, -0.007717609405517578, -0.00012302398681640625, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, 0.0, -3.62396240234375e-05, 0.0, -5.91278076171875e-05, -2.1457672119140625e-06, -0.03128337860107422, 0.0, -8.7738037109375e-05, -0.0016155242919921875, -0.0001659393310546875, -3.814697265625e-06, 0.0, -0.011916279792785645, -1.728534698486328e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.3108558654785156, -0.0011749267578125, -9.5367431640625e-06, -0.0001125335693359375, -0.7928926944732666, -0.0009673609165474772, -0.00032126886071637273, -0.025447845458984375, -0.002765655517578125, -0.0011806488037109375, -0.0001163482666015625, 0.0, -0.00012218952178955078, -0.005292413290590048, -8.344629350176547e-06, -0.027078628540039062, -3.4332275390625e-05, -6.866455078125e-05, -0.44423389434814453, -1.9073486328125e-06, -0.04889678955078125, -0.0002155303955078125, -0.01595306396484375, -0.0003566741943359375, -0.0011081695556640625, -3.814697265625e-06, -2.86102294921875e-05, -0.14779150485992432, -0.008791327476501465, 0.0, -0.000583648681640625, -5.91278076171875e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -4.9591064453125e-05, -2.1457672119140625e-06, -0.022606849670410156, -1.9073486328125e-06, -1.083094596862793, -0.14332008361816406, -0.0008945465087890625, 0.0, -0.000270843505859375, -1.9073486328125e-06, -0.2660115957260132, -2.944469451904297e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Old", "Shredder", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 180, "5", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -8.35010126943098, "model_output": {"_type": "Module", "body": [{"name": "<UNK>OldShredder", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 8, "hole0": "<UNK> Old Shredder", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 5, "hole2": "MinionDied", "_type": "Template10", "hole4": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"value": true, "_type": "NameConstant"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -21.577545166015625], "choice_history": [80, 159, 294], "score": -21.577552795410156, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n"}
{"beams": [{"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(<UNK>AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector()))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.829853892326355, -0.25824737548828125, -0.00021290729637257755, -0.0003416144463699311, -0.00140380859375, -0.01102447509765625, -0.0002994537353515625, -5.7220458984375e-05, 0.0, -0.00017380714416503906, -0.012286634184420109, -1.3470649719238281e-05, -0.0858001708984375, -0.00040435791015625, -1.1444091796875e-05, -0.17985081672668457, 0.0, -0.008004188537597656, -0.000186920166015625, -0.9798154830932617, -0.00286865234375, -0.0015506744384765625, -2.09808349609375e-05, -7.62939453125e-06, -0.000859379768371582, -0.0005071163177490234, 0.0, -0.0005340576171875, -7.62939453125e-06, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.001987457275390625, -3.933906555175781e-06, -0.06693077087402344, -7.748603820800781e-06, -0.000705718994140625, -1.33514404296875e-05, -0.005602002143859863, -1.919269561767578e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.017669483730728, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector()))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.7175936698913574, 0.0, -0.0038356781005859375, -0.000152587890625, -1.0143299102783203, -0.004093170166015625, -0.0008697509765625, -2.09808349609375e-05, -7.62939453125e-06, -0.0012059211730957031, -0.001461625099182129, 0.0, -0.0005474090576171875, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.0022983551025390625, -3.933906555175781e-06, -0.06399917602539062, -5.841255187988281e-06, -0.0006504058837890625, -1.33514404296875e-05, -0.005344510078430176, -1.919269561767578e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.061679555367604, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH)])), PlayerSelector()))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -2.5206470489501953, -0.004151344299316406, -0.0002313679869985208, -0.0014450866729021072, -0.0001987216528505087, -0.02527785301208496, -0.11462543159723282, -0.0008287429809570312, -0.000152587890625, -0.08564281463623047, -0.0021791458129882812, -0.021683692932128906, -5.7220458984375e-06, -3.814697265625e-06, -0.00043725964496843517, -0.0007163286209106445, 0.0, -0.001995086669921875, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -0.010425567626953125, -2.1457672119140625e-06, -0.10697174072265625, -5.9604644775390625e-06], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 24, 216, "Add", "Card", "<EOS>", "conditions", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "score": -3.071613774360898, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"hole1": "conditions", "hole0": "AddCard", "_type": "Template39", "hole2": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(<UNK>AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH), True])), PlayerSelector()))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.829853892326355, -0.25824737548828125, -0.00021290729637257755, -0.0003416144463699311, -0.00140380859375, -0.01102447509765625, -0.0002994537353515625, -5.7220458984375e-05, 0.0, -0.00017380714416503906, -0.012286634184420109, -1.3470649719238281e-05, -0.0858001708984375, -0.00040435791015625, -1.1444091796875e-05, -0.17985081672668457, 0.0, -0.008004188537597656, -0.000186920166015625, -0.48319244384765625, -0.0001277923583984375, -0.023822784423828125, -1.9073486328125e-06, -5.53131103515625e-05, -0.024149656295776367, -0.14677608013153076, 0.0, -0.0003643035888671875, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0029048919677734375, -3.933906555175781e-06, -0.058269500732421875, -5.9604644775390625e-06, -1.0348730087280273, -0.021627426147460938, -0.0030574798583984375, 0.0, -0.050228118896484375, -2.6702880859375e-05, -0.14539587497711182, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.9511262622570342, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"value": true, "_type": "NameConstant"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            player=BothPlayer())), ActionTag(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.8224301338195801, 0.0, -0.000919342041015625, -5.7220458984375e-06, -0.52288818359375, -2.6941299438476562e-05, 0.0, -0.017839431762695312, -0.0011444091796875, 0.0, 0.0, -0.01976299285888672, -7.05718994140625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008831024169921875, -0.05688285827636719, -2.47955322265625e-05, -0.0005435943603515625, -0.045848920941352844, -0.00010108859714819118, -0.001965341391041875, -0.00018310546875, -3.0517578125e-05, -0.0001850128173828125, -0.0004024505615234375, 0.0, -6.54458999633789e-05, -0.008297531865537167, -2.3245811462402344e-05, -0.00045013427734375, -0.0001983642578125, -3.0517578125e-05, -0.6242501735687256, 0.0, -0.0011415481567382812, -2.47955322265625e-05, -2.6702880859375e-05, 0.0, -0.0015392303466796875, -1.9073486328125e-06, -0.3448326587677002, -1.9073486328125e-06, -0.26894664764404297, 0.0, -0.0020563602447509766, -6.079673767089844e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.9892563164128063, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH), True])), PlayerSelector()))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.7175936698913574, 0.0, -0.0038356781005859375, -0.000152587890625, -0.4632530212402344, -0.0001678466796875, -0.01148223876953125, -1.9073486328125e-06, -9.1552734375e-05, -0.02723252773284912, -0.23150789737701416, 0.0, -0.0004730224609375, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0035648345947265625, -3.933906555175781e-06, -0.06109905242919922, -5.9604644775390625e-06, -1.2716827392578125, -0.019870758056640625, -0.0024843215942382812, 0.0, -0.05358123779296875, -2.86102294921875e-05, -0.13391172885894775, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.247261239480153, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"value": true, "_type": "NameConstant"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            player=EnemyPlayer())), ActionTag(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.8224301338195801, 0.0, -0.000919342041015625, -5.7220458984375e-06, -0.9127483367919922, -3.159046173095703e-05, 0.0, -0.05119609832763672, -0.0011234283447265625, 0.0, 0.0, -0.029842376708984375, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0021209716796875, -0.07051658630371094, -3.0517578125e-05, -0.00049591064453125, -0.05787772685289383, -8.47573101054877e-05, -0.0017591419164091349, -0.000164031982421875, -3.24249267578125e-05, -0.00019073486328125, -0.0003986358642578125, 0.0, -5.9723854064941406e-05, -0.008166521787643433, -2.1338462829589844e-05, -0.000423431396484375, -0.000194549560546875, -2.86102294921875e-05, -0.6288272142410278, 0.0, -0.0010099411010742188, -2.47955322265625e-05, -2.6702880859375e-05, 0.0, -0.0015773773193359375, -1.9073486328125e-06, -0.3418170213699341, -1.9073486328125e-06, -0.3028221130371094, 0.0, -0.0020563602447509766, -6.079673767089844e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.48433490656565, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST)), PlayerSelector()))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -2.824922561645508, 0.0, -0.0009002685546875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.005399823188781738, -1.1920928244535389e-07, -0.420904278755188, -5.7220458984375e-06, -0.0041484832763671875, -1.9073486328125e-06, -0.0006719827651977539, -4.6253204345703125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.502235485505231, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            player=BothPlayer())), ActionTag(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST)), PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.8224301338195801, 0.0, -0.000919342041015625, -5.7220458984375e-06, -0.52288818359375, -2.6941299438476562e-05, 0.0, -0.017839431762695312, -0.0011444091796875, 0.0, 0.0, -0.01976299285888672, -7.05718994140625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008831024169921875, -0.05688285827636719, -2.47955322265625e-05, -0.0005435943603515625, -0.045848920941352844, -0.00010108859714819118, -0.001965341391041875, -0.00018310546875, -3.0517578125e-05, -0.0001850128173828125, -0.0004024505615234375, 0.0, -6.54458999633789e-05, -0.008297531865537167, -2.3245811462402344e-05, -0.00045013427734375, -0.0001983642578125, -3.0517578125e-05, -0.6242501735687256, 0.0, -0.0011415481567382812, -2.47955322265625e-05, -2.6702880859375e-05, 0.0, -0.0015392303466796875, -1.9073486328125e-06, -1.253363847732544, -7.62939453125e-06, -0.0011959075927734375, -1.9073486328125e-06, -0.0007174015045166016, -3.6835670471191406e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.6287361919773815, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            player=BothPlayer())), ActionTag(AddCard(CardQuery(conditions=[\n            IsType(MINION_TYPE.MECH), True])), PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.8224301338195801, 0.0, -0.000919342041015625, -5.7220458984375e-06, -0.52288818359375, -2.6941299438476562e-05, 0.0, -0.017839431762695312, -0.0011444091796875, 0.0, 0.0, -0.01976299285888672, -7.05718994140625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008831024169921875, -0.05688285827636719, -2.47955322265625e-05, -0.0005435943603515625, -0.045848920941352844, -0.00010108859714819118, -0.001965341391041875, -0.00018310546875, -3.0517578125e-05, -0.0001850128173828125, -0.0004024505615234375, 0.0, -6.54458999633789e-05, -0.008297531865537167, -2.3245811462402344e-05, -0.00045013427734375, -0.0001983642578125, -3.0517578125e-05, -0.8671700954437256, -1.9073486328125e-06, -0.008596420288085938, -0.0003337860107421875, -0.31421852111816406, -0.000125885009765625, -0.0028057098388671875, -3.814697265625e-06, -5.91278076171875e-05, -0.003392338752746582, -0.07520556449890137, 0.0, -0.00016021728515625, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0033416748046875, -5.841255187988281e-06, -0.05766487121582031, -9.775161743164062e-06, -1.0285968780517578, -0.017812728881835938, -0.0051288604736328125, 0.0, -0.0022678375244140625, -0.000152587890625, -0.197564959526062, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 46, 161, "True", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.3310688078297375, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"value": true, "_type": "NameConstant"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            player=BothPlayer())), ActionTag(AddCard(CardQuery(conditions=[\n            IsType(MINION_TYPE.MECH), BothPlayer()])), PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.8224301338195801, 0.0, -0.000919342041015625, -5.7220458984375e-06, -0.52288818359375, -2.6941299438476562e-05, 0.0, -0.017839431762695312, -0.0011444091796875, 0.0, 0.0, -0.01976299285888672, -7.05718994140625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0008831024169921875, -0.05688285827636719, -2.47955322265625e-05, -0.0005435943603515625, -0.045848920941352844, -0.00010108859714819118, -0.001965341391041875, -0.00018310546875, -3.0517578125e-05, -0.0001850128173828125, -0.0004024505615234375, 0.0, -6.54458999633789e-05, -0.008297531865537167, -2.3245811462402344e-05, -0.00045013427734375, -0.0001983642578125, -3.0517578125e-05, -0.8671700954437256, -1.9073486328125e-06, -0.008596420288085938, -0.0003337860107421875, -0.31421852111816406, -0.000125885009765625, -0.0028057098388671875, -3.814697265625e-06, -5.91278076171875e-05, -0.003392338752746582, -0.07520556449890137, 0.0, -0.00016021728515625, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0033416748046875, -5.841255187988281e-06, -0.05766487121582031, -9.775161743164062e-06, -0.5584487915039062, 0.0, -0.47243940830230713, -1.1563301086425781e-05, -6.67572021484375e-05, -0.028987884521484375, -1.9073486328125e-06, -0.41249096393585205, -8.499621617374942e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.5520715057670955, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH), PlayerSelector()])),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.7175936698913574, 0.0, -0.0038356781005859375, -0.000152587890625, -0.4632530212402344, -0.0001678466796875, -0.01148223876953125, -1.9073486328125e-06, -9.1552734375e-05, -0.02723252773284912, -0.23150789737701416, 0.0, -0.0004730224609375, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0035648345947265625, -3.933906555175781e-06, -0.06109905242919922, -5.9604644775390625e-06, -0.6093044281005859, 0.0, -0.8452315330505371, -0.00015270709991455078, 0.0, -0.000736236572265625, -0.03273963928222656, 0.0, 0.0, -0.1298435926437378, -0.00017750263214111328, -5.7220458984375e-06, -9.5367431640625e-06, -0.007115364074707031, -0.09158039093017578, -3.24249267578125e-05, -0.0003108978271484375, -0.03514668345451355, -0.00011515490768942982, -0.0013185380958020687, -0.0001583099365234375, -3.0517578125e-05, -0.000263214111328125, -0.000396728515625, 0.0, -6.35385513305664e-05, -0.0072861588560044765, -2.1338462829589844e-05, -0.000392913818359375, -0.000213623046875, -3.0517578125e-05, -0.7265905141830444, 0.0, -0.0007600784301757812, -2.288818359375e-05, -2.6702880859375e-05, 0.0, -0.001583099365234375, -1.9073486328125e-06, -0.33694374561309814, -1.9073486328125e-06, -0.11991310119628906, 0.0, -0.0014842748641967773, -6.198883056640625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.71570763357407, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "PlayerSelector", "_type": "Template77"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            conditions=[IsType(MINION_TYPE.MECH), BothPlayer()])),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.7175936698913574, 0.0, -0.0038356781005859375, -0.000152587890625, -0.4632530212402344, -0.0001678466796875, -0.01148223876953125, -1.9073486328125e-06, -9.1552734375e-05, -0.02723252773284912, -0.23150789737701416, 0.0, -0.0004730224609375, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0035648345947265625, -3.933906555175781e-06, -0.06109905242919922, -5.9604644775390625e-06, -0.6093044281005859, 0.0, -0.5634446144104004, -1.1563301086425781e-05, -7.05718994140625e-05, -0.4329051971435547, -0.0011539459228515625, 0.0, 0.0, -0.022975683212280273, -7.43865966796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0023241043090820312, -0.10749626159667969, -3.0517578125e-05, -0.0003337860107421875, -0.033630408346652985, -0.00017940578982234, -0.002793471794575453, -0.0001850128173828125, -3.24249267578125e-05, -0.000263214111328125, -0.00038909912109375, 0.0, -6.365776062011719e-05, -0.008589501492679119, -1.9431114196777344e-05, -0.000392913818359375, -0.000209808349609375, -2.86102294921875e-05, -0.7251729965209961, 0.0, -0.0007543563842773438, -2.09808349609375e-05, -2.6702880859375e-05, 0.0, -0.001499176025390625, -1.9073486328125e-06, -0.35909759998321533, -1.9073486328125e-06, -0.11893463134765625, 0.0, -0.0016425848007202148, -6.198883056640625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.759772323336378, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            player=EnemyPlayer())), ActionTag(AddCard(CardQuery(conditions=\n            [IsType(MINION_TYPE.MECH), BothPlayer()])), PlayerSelector())))\n", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -2.09808349609375e-05, -2.8967464459128678e-05, -0.00026452523889020085, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -3.933906555175781e-06, -0.000118255615234375, -0.14690876007080078, -0.0002288818359375, 0.0, -2.861022494471399e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.00010824200580827892, -9.894371032714844e-06, -0.0001398324966430664, -4.6491513785440475e-06, -0.009019851684570312, -3.0517578125e-05, -0.001063704490661621, -1.1920922133867862e-06, -0.00012528352090157568, -1.1920928244535389e-07, -0.015363812446594238, -9.655952453613281e-06, -0.3514900207519531, -0.00018310546875, -3.814697265625e-06, -1.9073486328125e-06, -0.00014126300811767578, -1.9073486328125e-06, -0.0006694793701171875, -0.023430824279785156, -0.014329910278320312, -6.4849853515625e-05, -0.003780364990234375, -0.6340208053588867, -0.0015288491267710924, -0.0004255161911714822, -0.024789810180664062, -0.0035638809204101562, -6.4849853515625e-05, -7.62939453125e-05, 0.0, -7.724761962890625e-05, -0.009152562357485294, -2.0265579223632812e-06, -0.0029239654541015625, -0.000522613525390625, -1.9073486328125e-05, -0.8224301338195801, 0.0, -0.000919342041015625, -5.7220458984375e-06, -0.9127483367919922, -3.159046173095703e-05, 0.0, -0.05119609832763672, -0.0011234283447265625, 0.0, 0.0, -0.029842376708984375, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0021209716796875, -0.07051658630371094, -3.0517578125e-05, -0.00049591064453125, -0.05787772685289383, -8.47573101054877e-05, -0.0017591419164091349, -0.000164031982421875, -3.24249267578125e-05, -0.00019073486328125, -0.0003986358642578125, 0.0, -5.9723854064941406e-05, -0.008166521787643433, -2.1338462829589844e-05, -0.000423431396484375, -0.000194549560546875, -2.86102294921875e-05, -0.8623944520950317, -1.9073486328125e-06, -0.008959770202636719, -0.0003223419189453125, -0.31075191497802734, -0.0001277923583984375, -0.002742767333984375, -3.814697265625e-06, -5.91278076171875e-05, -0.0032883882522583008, -0.07735323905944824, 0.0, -0.0001621246337890625, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.003337860107421875, -5.841255187988281e-06, -0.05740165710449219, -9.775161743164062e-06, -0.5507745742797852, 0.0, -0.4666200876235962, -1.1563301086425781e-05, -6.67572021484375e-05, -0.026386260986328125, -1.9073486328125e-06, -0.4152834415435791, -8.32080768304877e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Toshley", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Toshley", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.992329439143511, "model_output": {"_type": "Module", "body": [{"name": "Toshley", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Toshley", "_type": "Template19", "hole2": "ALL", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-0.0003948211669921875, -1.71661376953125e-05, -22.345169067382812], "choice_history": [80, 159, 294], "score": -22.3455810546875, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n"}
{"beams": [{"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.4261903762817383, -0.0014371871948242188, -4.005352093372494e-05, -7.748603820800781e-06, -0.00047528743743896484, 0.0, -0.01710057258605957, 0.0, -0.0017185211181640625, -0.000232696533203125, -4.7681533033028245e-07, 0.0, -2.2768945200368762e-05, 0.0, -0.07053565979003906, -0.0003032684326171875, -0.0002231597900390625, -7.2479248046875e-05, -0.014566421508789062, -0.00029754638671875, -7.05718994140625e-05, -3.814697265625e-06, 0.0, -0.0006029605865478516, 0.0, -0.0005855560302734375, -0.001613616943359375, -0.0015354156494140625, -0.049425601959228516, -1.1444091796875e-05, -0.00022125244140625, -1.33514404296875e-05, -0.2166721373796463, -2.6822082872968167e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -0.8042685529189839, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Warbot", "_type": "Template6", "hole2": "WARRIOR"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.4261903762817383, -0.0014371871948242188, -4.005352093372494e-05, -7.748603820800781e-06, -0.00047528743743896484, 0.0, -0.01710057258605957, 0.0, -0.0017185211181640625, -0.000232696533203125, -4.7681533033028245e-07, 0.0, -2.2768945200368762e-05, 0.0, -0.07053565979003906, -0.0003032684326171875, -0.0002231597900390625, -7.2479248046875e-05, -0.014566421508789062, -0.00029754638671875, -7.05718994140625e-05, -3.814697265625e-06, 0.0, -0.0006029605865478516, 0.0, -0.0005855560302734375, -0.001613616943359375, -0.0015354156494140625, -0.049425601959228516, -1.1444091796875e-05, -0.00022125244140625, -1.33514404296875e-05, -1.662400484085083, -0.001063346047885716, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -2.251035330938066, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Warbot", "_type": "Template6", "hole2": "WARRIOR"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.8146295547485352, -0.0003833770751953125, -3.576278118089249e-07, -2.09808349609375e-05, -0.0003695487976074219, 0.0, -7.069110870361328e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -0.24397754669189453, 0.0, -0.09160327911376953, -0.000148773193359375, -1.1920565157197416e-07, 0.0, -2.8491003831732087e-05, 0.0, -0.059539079666137695, -9.72747802734375e-05, -8.0108642578125e-05, -4.38690185546875e-05, -0.026968002319335938, -0.000335693359375, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -0.0007002353668212891, 0.0, -0.000579833984375, -0.0015163421630859375, -0.0015087127685546875, -0.03790581226348877, -7.62939453125e-06, -0.00026702880859375, -1.1444091796875e-05, -0.11428245157003403, -2.5749202904989943e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Warbot", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -2.3958539589247607, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Warbot", "hole2": "minion_type", "_type": "Template7", "hole4": "MECH", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.4261903762817383, -0.0014371871948242188, -4.005352093372494e-05, -7.748603820800781e-06, -0.00047528743743896484, 0.0, -0.01710057258605957, 0.0, -0.0017185211181640625, -0.000232696533203125, -4.7681533033028245e-07, 0.0, -2.2768945200368762e-05, 0.0, -0.07053565979003906, -0.0003032684326171875, -0.0002231597900390625, -7.2479248046875e-05, -0.014566421508789062, -0.00029754638671875, -7.05718994140625e-05, -3.814697265625e-06, 0.0, -0.0006029605865478516, 0.0, -0.0005855560302734375, -0.001613616943359375, -0.0015354156494140625, -3.2593321800231934, -5.7220458984375e-06, -0.0022945404052734375, -7.62939453125e-06, -0.06506955623626709, -0.0009378194226883352, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -3.865549205748721, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Warbot", "_type": "Template6", "hole2": "WARRIOR"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.849569320678711, -2.86102294921875e-05, -7.748602001811378e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -5.91278076171875e-05, -0.0001049041748046875, -2.09808349609375e-05, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -4.1723224057932384e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0018901824951171875, -1.9073486328125e-05, -2.09808349609375e-05, -5.006777428206988e-06, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.0011395214824005961, -3.814697265625e-06, -0.000453948974609375, 0.0, -3.814697265625e-06, 0.0, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0044193267822265625, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.3589859008789062e-05, -8.344646857949556e-07, -0.010072708129882812, 0.0, -0.5948152542114258, -0.025269508361816406, -0.0001506805419921875, -0.00016224382852669805, 0.0, -0.00037384033203125, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0003662109375, -3.814697265625e-06, -1.0918302536010742, -3.3020973205566406e-05, -0.03614616394042969, -2.47955322265625e-05, -3.576233211788349e-07, 0.0, -2.3603428417118266e-05, 0.0, -0.03260171413421631, -1.33514404296875e-05, -0.0001430511474609375, -7.62939453125e-05, -0.05855369567871094, -0.00019073486328125, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0006639957427978516, 0.0, -0.0005207061767578125, -0.0015125274658203125, -0.0016117095947265625, -0.0315852165222168, -7.62939453125e-06, -0.0015964508056640625, -7.62939453125e-06, -0.15536125004291534, -2.4557106371503323e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Warbot", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -3.902118995538892, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.8146295547485352, -0.0003833770751953125, -3.576278118089249e-07, -2.09808349609375e-05, -0.0003695487976074219, 0.0, -7.069110870361328e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -2.0102949142456055, -0.0002613067626953125, -0.0761871337890625, -0.000263214111328125, -2.3838947527110577e-07, 0.0, -4.3272932089166716e-05, 0.0, -0.13844799995422363, -4.00543212890625e-05, -7.82012939453125e-05, -2.86102294921875e-05, -0.030618667602539062, -0.0003566741943359375, -5.340576171875e-05, -1.9073486328125e-06, 0.0, -0.0011179447174072266, 0.0, -0.000492095947265625, -0.001556396484375, -0.00164794921875, -0.04269218444824219, -7.62939453125e-06, -0.0003223419189453125, -1.1444091796875e-05, -0.10082300007343292, -2.5868412194540724e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Warbot", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.221549346894733, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Warbot", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.849569320678711, -2.86102294921875e-05, -7.748602001811378e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -1.71661376953125e-05, -5.91278076171875e-05, -0.0001049041748046875, -2.09808349609375e-05, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -4.1723224057932384e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0018901824951171875, -1.9073486328125e-05, -2.09808349609375e-05, -5.006777428206988e-06, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -0.0011395214824005961, -3.814697265625e-06, -0.000453948974609375, 0.0, -3.814697265625e-06, 0.0, -6.306171417236328e-05, -1.1920928244535389e-07, -0.0044193267822265625, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.3589859008789062e-05, -8.344646857949556e-07, -0.010072708129882812, 0.0, -0.5948152542114258, -0.025269508361816406, -0.0001506805419921875, -0.00016224382852669805, 0.0, -0.00037384033203125, -1.52587890625e-05, -7.62939453125e-06, 0.0, -0.0003662109375, -3.814697265625e-06, -1.5339527130126953, -2.9206275939941406e-05, -0.020768165588378906, -3.814697265625e-05, -4.7681533033028245e-07, 0.0, -3.3259369956795126e-05, 0.0, -0.03029656410217285, -4.9591064453125e-05, -0.0001773834228515625, -0.000102996826171875, -0.030780792236328125, -0.0001735687255859375, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.0006277561187744141, 0.0, -0.000545501708984375, -0.00140380859375, -0.001491546630859375, -0.0319981575012207, -7.62939453125e-06, -0.0015888214111328125, -7.62939453125e-06, -0.15150518715381622, -2.4437898900941946e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Warbot", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.295199349249394, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Warbot"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.8146295547485352, -0.0003833770751953125, -3.576278118089249e-07, -2.09808349609375e-05, -0.0003695487976074219, 0.0, -7.069110870361328e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -0.24397754669189453, 0.0, -2.4502487182617188, -1.52587890625e-05, -2.383312676101923e-07, 0.0, -3.743169145309366e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Warbot", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 110, 202, "1", "<EOS>", "3", "<EOS>"], "score": -4.510457992365389, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Warbot", "hole2": "minion_type", "_type": "Template7", "hole4": "MECH", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 3, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, auras=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.4261903762817383, -0.0014371871948242188, -4.005352093372494e-05, -7.748603820800781e-06, -0.00047528743743896484, 0.0, -0.01710057258605957, 0.0, -0.0017185211181640625, -0.000232696533203125, -4.7681533033028245e-07, 0.0, -2.2768945200368762e-05, 0.0, -3.8641271591186523, -1.9073486328125e-06, -0.0001964569091796875, -5.340576171875e-05, -0.0047454833984375, -0.0002803802490234375, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -0.00030553340911865234, 0.0, -0.0005054473876953125, -0.0011138916015625, -0.001895904541015625, -0.026591777801513672, -9.5367431640625e-06, -0.000713348388671875, -1.1444091796875e-05, -0.19392666220664978, -2.5868412194540724e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.542067973875419, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Warbot", "_type": "Template6", "hole2": "WARRIOR"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), WeaponSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.8146295547485352, -0.0003833770751953125, -3.576278118089249e-07, -2.09808349609375e-05, -0.0003695487976074219, 0.0, -7.069110870361328e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -0.24397754669189453, 0.0, -0.09160327911376953, -0.000148773193359375, -1.1920565157197416e-07, 0.0, -2.8491003831732087e-05, 0.0, -0.059539079666137695, -9.72747802734375e-05, -8.0108642578125e-05, -4.38690185546875e-05, -0.026968002319335938, -0.000335693359375, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -0.0007002353668212891, 0.0, -0.000579833984375, -0.0015163421630859375, -0.0015087127685546875, -0.03790581226348877, -7.62939453125e-06, -0.00026702880859375, -1.1444091796875e-05, -2.2778594493865967, -0.0014104837318882346, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Warbot", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -4.560817598618939, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Warbot", "hole2": "minion_type", "_type": "Template7", "hole4": "MECH", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, Target=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -0.4261903762817383, -0.0014371871948242188, -4.005352093372494e-05, -7.748603820800781e-06, -0.00047528743743896484, 0.0, -0.01710057258605957, 0.0, -0.0017185211181640625, -0.000232696533203125, -4.7681533033028245e-07, 0.0, -2.2768945200368762e-05, 0.0, -4.314165115356445, -0.000148773193359375, -0.019718170166015625, -6.29425048828125e-05, -0.007030487060546875, -0.001041412353515625, -0.000118255615234375, -3.814697265625e-06, 0.0, -0.0023003816604614258, 0.0, -0.0004405975341796875, -0.0018157958984375, -0.0027008056640625, -0.0789954662322998, -1.33514404296875e-05, -0.000278472900390625, -1.1444091796875e-05, -0.13445551693439484, -2.5987619665102102e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Warbot", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "Target", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.010814263484463, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Warbot", "_type": "Template6", "hole2": "WARRIOR"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "Target", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -1.8146295547485352, -0.0003833770751953125, -3.576278118089249e-07, -2.09808349609375e-05, -0.0003695487976074219, 0.0, -7.069110870361328e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.000423431396484375, 0.0, -3.413564682006836, -7.62939453125e-06, -0.35342884063720703, -1.71661376953125e-05, -1.6196630895137787e-05, -1.9073486328125e-06, -4.61336640000809e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Warbot", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "1", "<EOS>", "3", "<EOS>"], "score": -5.583259447071157, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Warbot", "hole2": "minion_type", "_type": "Template7", "hole4": "DRAGON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 3, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 0, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.2278481335670222e-05, -0.00020563602447509766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, -6.174656391143799, -0.0036630630493164062, -0.0007446783129125834, -0.0005483627319335938, -0.03753096982836723, -0.014710426330566406, -0.0005819797515869141, -7.82012939453125e-05, -0.23108196258544922, -0.0001087188720703125, -6.313319317996502e-06, -5.7220458984375e-06, -7.05706188455224e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Warbot", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "Warbot", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 110, 202, "1", "<EOS>", "3", "<EOS>"], "score": -6.464051050757007, "model_output": {"_type": "Module", "body": [{"name": "Warbot", "_type": "ClassDef", "body": [{"hole1": "ALL", "hole0": "Warbot", "_type": "Template13", "hole2": "COMMON"}, {"hole1": 3, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -22.955909729003906], "choice_history": [80, 159, 294], "score": -22.955913543701172, "model_output": {"_type": "Module", "body": []}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -17.65239143371582, -6.545888900756836, -0.1540895700454712], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -24.352375626564026, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}], "gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}
{"beams": [{"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, enrage=[Aura(ChangeAttack(8),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.5820684432983398, -1.1444091796875e-05, -9.918212890625e-05, -2.1457672119140625e-06, -5.14984130859375e-05, -4.57763671875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005664825439453125, -7.641315460205078e-05, 0.0, -0.0001468658447265625, -0.0010318756103515625, -0.000659942626953125, -0.0001964569091796875, -3.814697265625e-05, -7.62939453125e-06, 0.0, -0.0007529258728027344, -0.0001964569091796875, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.775161743164062e-06, -6.318072337307967e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00019407272338867188, -1.0609622222546022e-05, -0.022307395935058594, -0.0055980682373046875, -3.814697265625e-06, -0.2474682331085205, 0.0, -0.0001354217529296875, -0.0002307891845703125, -1.71661376953125e-05, -1.9073486328125e-06, -0.14689350128173828, -0.0064907073974609375, -0.14788489043712616, -7.259845733642578e-05], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "8", "<EOS>"], "score": -1.1738549855162717, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 8, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>deck(player.<UNK>),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -0.827238142490387, -0.006587504874914885, 0.0, -0.0020904541015625, 0.0, -1.71661376953125e-05, 0.0, -0.7235186100006104, 0.0, -0.058867089450359344, -2.9802276912960224e-06, -0.0009784698486328125, 0.0, -0.0001910924620460719, -0.00011706344957929105, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "deck", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -2.7593051930633976, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>deck"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>deck(CARD_SOURCE.\n            <UNK>), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -0.827238142490387, -0.006587504874914885, 0.0, -0.0020904541015625, 0.0, -1.71661376953125e-05, 0.0, -1.1280910968780518, -7.271740287251305e-06, -0.0012320280075073242, -1.5020326827652752e-05, -0.0001087188720703125, 0.0, -0.0005065202713012695, -0.00010132788156624883, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "deck", "<EOS>", 282, 37, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.1056918716020903, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>deck"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, enrage=[Aura(ChangeAttack(6),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.5820684432983398, -1.1444091796875e-05, -9.918212890625e-05, -2.1457672119140625e-06, -5.14984130859375e-05, -4.57763671875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005664825439453125, -7.641315460205078e-05, 0.0, -0.0001468658447265625, -0.0010318756103515625, -0.000659942626953125, -0.0001964569091796875, -3.814697265625e-05, -7.62939453125e-06, 0.0, -0.0007529258728027344, -0.0001964569091796875, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.775161743164062e-06, -6.318072337307967e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00019407272338867188, -1.0609622222546022e-05, -0.022307395935058594, -0.0055980682373046875, -3.814697265625e-06, -0.2474682331085205, 0.0, -0.0001354217529296875, -0.0002307891845703125, -1.71661376953125e-05, -1.9073486328125e-06, -0.14689350128173828, -0.0064907073974609375, -2.1875758171081543, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "6", "<EOS>"], "score": -3.2134828504731274, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 6, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Your(player.<UNK>),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -0.903700053691864, -0.6378180384635925, -4.9591064453125e-05, -0.030182838439941406, 0.0, -9.5367431640625e-06, 0.0, -0.23977398872375488, 0.0, -0.5965659618377686, -5.960462772236497e-07, -0.003391265869140625, 0.0, -0.0001516341872047633, -0.0001223087019752711, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Your", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.5514624337890552, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>Your"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, charge=True, enrage=[Aura(ChangeAttack(8),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.5820684432983398, -1.1444091796875e-05, -9.918212890625e-05, -2.1457672119140625e-06, -5.14984130859375e-05, -4.57763671875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005664825439453125, -7.641315460205078e-05, 0.0, -0.0001468658447265625, -0.0010318756103515625, -0.000659942626953125, -0.0001964569091796875, -3.814697265625e-05, -7.62939453125e-06, 0.0, -0.0007529258728027344, -0.0001964569091796875, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.775161743164062e-06, -6.318072337307967e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00019407272338867188, -1.0609622222546022e-05, -0.022307395935058594, -0.0055980682373046875, -3.814697265625e-06, -2.5253546237945557, -1.9073486328125e-06, -0.0005054473876953125, -0.0002193450927734375, -2.288818359375e-05, 0.0, -0.24976634979248047, -0.007561683654785156, -0.28128474950790405, -0.0001277923583984375], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "8", "<EOS>"], "score": -3.6895045575310803, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 8, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, divine_shield=True, enrage=[Aura(ChangeAttack(8\n            ), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.5820684432983398, -1.1444091796875e-05, -9.918212890625e-05, -2.1457672119140625e-06, -5.14984130859375e-05, -4.57763671875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005664825439453125, -7.641315460205078e-05, 0.0, -0.0001468658447265625, -0.0010318756103515625, -0.000659942626953125, -0.0001964569091796875, -3.814697265625e-05, -7.62939453125e-06, 0.0, -0.0007529258728027344, -0.0001964569091796875, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.775161743164062e-06, -6.318072337307967e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00019407272338867188, -1.0609622222546022e-05, -0.022307395935058594, -0.0055980682373046875, -3.814697265625e-06, -3.0632240772247314, 0.0, -0.001003265380859375, -0.0001354217529296875, -1.1444091796875e-05, 0.0, -0.14423465728759766, -0.004611015319824219, -0.23307093977928162, -0.00010693073272705078], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "divine_shield", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "8", "<EOS>"], "score": -4.071057521980009, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "divine_shield", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 8, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, effects=[Effect(DidDamage(),\n            ActionTag(Kill(), TargetSelector(IsMinion())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.5820684432983398, -1.1444091796875e-05, -9.918212890625e-05, -2.1457672119140625e-06, -5.14984130859375e-05, -4.57763671875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005664825439453125, -7.641315460205078e-05, 0.0, -0.0001468658447265625, -0.0010318756103515625, -0.000659942626953125, -0.0001964569091796875, -3.814697265625e-05, -7.62939453125e-06, 0.0, -0.0007529258728027344, -0.0001964569091796875, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.775161743164062e-06, -6.318072337307967e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00019407272338867188, -1.0609622222546022e-05, -0.022307395935058594, -0.0055980682373046875, -3.814697265625e-06, -0.2474682331085205, 0.0, -0.0001354217529296875, -0.0002307891845703125, -1.71661376953125e-05, -1.9073486328125e-06, -2.2868432998657227, -0.6511602401733398, -0.04005987197160721, -0.0019956768956035376, -2.3603439331054688e-05, -0.027157068252563477, -7.48631136957556e-05, -0.04023917019367218, -0.0011196128325536847, 0.0, -0.0001201629638671875, -0.00691986083984375, -2.09808349609375e-05, -0.6393219232559204, -0.02452843450009823, -0.00016224384307861328], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 71, 207, "Did", "Damage", "<EOS>", "Kill", "<EOS>", "Target", "Selector", "<EOS>", 282, 68, 260, "Is", "Minion", "<EOS>"], "score": -4.592260300918468, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole1": "Kill", "hole0": "DidDamage", "_type": "Template31", "hole4": [{"hole0": "IsMinion", "_type": "Template77"}], "hole3": "TargetSelector"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, stealth=True, enrage=[Aura(ChangeAttack(8),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.5820684432983398, -1.1444091796875e-05, -9.918212890625e-05, -2.1457672119140625e-06, -5.14984130859375e-05, -4.57763671875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005664825439453125, -7.641315460205078e-05, 0.0, -0.0001468658447265625, -0.0010318756103515625, -0.000659942626953125, -0.0001964569091796875, -3.814697265625e-05, -7.62939453125e-06, 0.0, -0.0007529258728027344, -0.0001964569091796875, -2.6702880859375e-05, -1.1444091796875e-05, -7.62939453125e-06, -9.775161743164062e-06, -6.318072337307967e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.00019407272338867188, -1.0609622222546022e-05, -0.022307395935058594, -0.0055980682373046875, -3.814697265625e-06, -3.5363175868988037, 0.0, -0.00069427490234375, -9.72747802734375e-05, -1.1444091796875e-05, 0.0, -0.23529720306396484, -0.006735801696777344, -0.19869354367256165, -9.167194366455078e-05], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "8", "<EOS>"], "score": -4.602598571460447, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 8, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Deathlord(player.\n            <UNK>), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -2.080435037612915, -0.6378180384635925, -4.9591064453125e-05, -0.030182838439941406, 0.0, -9.5367431640625e-06, 0.0, -0.23977398872375488, 0.0, -0.5965659618377686, -5.960462772236497e-07, -0.003391265869140625, 0.0, -0.0001516341872047633, -0.0001223087019752711, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Deathlord", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.728197417710106, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>Deathlord"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>deck(MINION_TYPE.\n            <UNK>), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -0.827238142490387, -0.006587504874914885, 0.0, -0.0020904541015625, 0.0, -1.71661376953125e-05, 0.0, -2.1965830326080322, -5.125993993715383e-06, -0.6766757965087891, -2.646416032803245e-05, -0.0003681182861328125, 0.0, -0.00032317638397216797, -0.0003709790180437267, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "deck", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.84998258058377, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>deck"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>YourYour(player.\n            <UNK>), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -0.903700053691864, -2.2856545448303223, -0.10043998807668686, -5.14984130859375e-05, -0.015710830688476562, 0.0, -1.9073486328125e-05, 0.0, -0.22808659076690674, 0.0, -0.3980304002761841, -3.576278118089249e-07, -0.001781463623046875, 0.0, -0.0001658201072132215, -9.512898395769298e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Your", "Your", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.073432370591803, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>YourYour"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Yourdeck(\n            CARD_SOURCE.<UNK>), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -0.1889972686767578, -3.814697265625e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.00016438961029052734, 0.0, -0.000102996826171875, -0.05575752258300781, -0.021409988403320312, -1.33514404296875e-05, -0.0001621246337890625, -0.03185790404677391, -0.903700053691864, -2.7607171535491943, -0.007261037826538086, 0.0, -0.011295318603515625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.2900315523147583, -4.529942543740617e-06, -0.0007846355438232422, -1.811977563193068e-05, -6.67572021484375e-05, 0.0, -0.0005010366439819336, -8.249280654126778e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Your", "deck", "<EOS>", 282, 37, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.114176474058155, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>Yourdeck"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=[Deathrattle(Bounce(),\n            MinionSelector(condition=Null, players=BothPlayer())), Effect(\n            MinionDied(IsType(MINION_TYPE.BEAST)), PlayerSelector())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00010227633902104571, -0.00019514461746439338, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529952548182337e-06, -1.1563301086425781e-05, -1.1205658665858209e-05, -8.96453857421875e-05, -0.009889602661132812, -3.814697265625e-05, -3.4570634852570947e-06, -2.312659489689395e-05, -9.655952453613281e-06, -2.3841855067985307e-07, -3.1590458092978224e-05, 0.0, -0.8244447708129883, -5.91278076171875e-05, -2.3841855067985307e-07, -2.3841855067985307e-07, -5.424021583166905e-05, -0.00024458981351926923, -0.0054007768630981445, -0.0005463361740112305, -1.7820653915405273, -0.000286102294921875, -0.0053882598876953125, -0.000675201416015625, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.363073468208313, -1.9073486328125e-06, -1.71661376953125e-05, -0.643763542175293, -0.00029754638671875, -0.12328647822141647, -3.921975439880043e-05, -0.00554656982421875, -0.0256805419921875, -3.814697265625e-06, 0.0, -8.606910705566406e-05, -0.017226219177246094, -3.576278118089249e-07, -0.2871522903442383, -0.000148773193359375, -7.62939453125e-06, -0.40043461322784424, -5.125868119648658e-05, -0.022881507873535156, -0.00014495849609375, -0.0010663270950317383, -3.814697265625e-06, -0.006928443908691406, -5.340576171875e-05, -0.025279998779296875, 0.0, -4.76837158203125e-05, -1.9073486328125e-05, -0.1074068546295166, -1.7523765563964844e-05, -1.9073486328125e-06, -0.0006618499755859375, -0.000576019287109375, 0.0, 0.0, -0.3027667999267578, 0.0, -0.0003509521484375, -0.05394744873046875, -0.5559062957763672, -1.9073486328125e-06, 0.0, -0.8005001544952393, -0.06472504138946533, -6.675719760096399e-06, -1.9073486328125e-06, -0.0004062652587890625, -0.00028228759765625, -3.814697265625e-06, -1.9073486328125e-06, -0.006002306938171387, -0.00011980533599853516, 0.0, -2.86102294921875e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0005570650100708008, -2.1696090698242188e-05, -0.13428211212158203, -3.814697265625e-06, -0.03564929962158203, -1.9073486328125e-06, -0.013920068740844727, -0.0004700421995949, 0.0], "choice_history": [80, 159, 295, 88, 138, "Deathlord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Deathrattle", "<EOS>", 283, 68, 260, "Bounce", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 291, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 136, 19, 160, "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -6.631509142029557, "model_output": {"_type": "Module", "body": [{"name": "Deathlord", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template16", "hole2": "ALL"}, {"hole1": 8, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": "Bounce", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}, {"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionDied"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -23.055639266967773], "choice_history": [80, 159, 294], "score": -23.05564308166504, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n"}
{"beams": [{"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, taunt=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -1.1222431659698486, 0.0, -0.0010623931884765625, -5.7220458984375e-06, -2.384185791015625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -2.1076911651538097, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, enrage=[Aura(ChangeAttack(2),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -1.9086027145385742, -0.005270957946777344, -0.08159013092517853, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "2", "<EOS>"], "score": -2.7194033377812588, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 2, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, charge=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -1.9355499744415283, -5.841255187988281e-06, -0.001255035400390625, -1.33514404296875e-05, -2.384185791015625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -2.9212040864871227, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, spell_targetable=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -2.1530325412750244, 0.0, -0.060710906982421875, -2.288818359375e-05, -0.00017380714416503906, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "spell_targetable", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.198317643349, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "spell_targetable", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, buffs=[Buff(CantAttack())])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -1.953395128250122, -9.059905096364673e-06, -0.0004062652587890625, -7.2479248046875e-05, -9.5367431640625e-06, -0.032711029052734375, -2.47955322265625e-05, -0.0014760494232177734, -2.0265566490706988e-05, -0.4828481376171112, -0.06973352283239365, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "buffs", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "Cant", "Attack", "<EOS>"], "score": -3.5250837691931878, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"hole1": "CantAttack", "hole0": "Buff", "_type": "Template69"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(players\n            =BothPlayer()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -1.217637062072754, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -4.768370445162873e-07, 0.0, -1.3758805990219116, 0.0, -7.62939453125e-06, -6.866455078125e-05, -0.0016994476318359375, -0.000637054443359375, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00012624263763427734, -3.814697265625e-06, -0.002132415771484375, -0.03619384765625, -0.0050067901611328125, -9.5367431640625e-06, -0.0001201629638671875, -0.052484508603811264, -0.001971694640815258, -2.3841855067985307e-07, -0.0031032562255859375, -0.00286865234375, -2.47955322265625e-05, -0.0008563101291656494, 0.0, -0.00019073486328125, -0.000774383544921875, -0.0005550384521484375, -3.814697265625e-06, -0.16796207427978516, -0.0003064870834350586, 0.0, -7.43865966796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.3513861894607544, -2.3841855067985307e-07, -0.000164031982421875, -1.9073486328125e-06, -0.08617448806762695, -8.594989776611328e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Mana", "Change", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>"], "score": -3.583038921576353, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=[Aura(ManaChange(2), CardSelector(players\n            =BothPlayer()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -1.217637062072754, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -4.768370445162873e-07, 0.0, -0.5958436727523804, -2.3841855067985307e-07, -2.09808349609375e-05, -3.4332275390625e-05, -0.000102996826171875, -0.0053806304931640625, -8.0108642578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.5675936937332153, -9.5367431640625e-06, -0.00115966796875, -0.35866546630859375, -0.01641368865966797, -7.82012939453125e-05, -0.0002384185791015625, -0.061197396367788315, -0.001030518440529704, -1.1920928244535389e-07, -0.0015087127685546875, -0.002559661865234375, -2.86102294921875e-05, -0.002030611038208008, 0.0, -0.000179290771484375, -0.0015125274658203125, -0.0006103515625, -3.814697265625e-06, -0.2774076461791992, -0.00034224987030029297, 0.0, -8.7738037109375e-05, -1.52587890625e-05, -3.814697265625e-06, -0.15316379070281982, -1.1920928244535389e-07, -0.000164031982421875, -1.9073486328125e-06, -0.09493684768676758, -8.976459503173828e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "buffs", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Mana", "Change", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>"], "score": -3.6346275274328903, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -1.217637062072754, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -4.768370445162873e-07, 0.0, -2.273505449295044, 0.0, -0.0028390884399414062, -1.71661376953125e-05, -8.344650268554688e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.768495436866253, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, auras=[Aura(2(), MinionSelector(\n            IsType(MINION_TYPE.BEAST)))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -1.6794559955596924, -1.9073486328125e-06, -0.0003185272216796875, -7.05718994140625e-05, -3.814697265625e-05, -0.002960205078125, -3.814697265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.0006853342056274414, -3.0517578125e-05, -4.76837158203125e-05, -0.04489326477050781, -0.0003662109375, -0.7199891209602356, -0.001968860626220703, -0.00012969970703125, -0.0717477798461914, -3.814697265625e-06, 0.0, -0.0003037452697753906, -0.000164031982421875, -2.3841855067985307e-07, -0.5449409484863281, -0.001102447509765625, -0.0001373291015625, -3.4332275390625e-05, -3.814697265625e-06, -0.0007249116897583008, -0.00022399425506591797, 0.0, -0.013154983520507812, -3.0517578125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0001316070556640625, -5.841255187988281e-06, -0.09886741638183594, -7.987022399902344e-06], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "score": -4.16705089444379, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole0": "2", "_type": "Template77"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, auras=[Aura(2(), MinionSelector(\n            IsType(MINION_TYPE.BEAST), BothPlayer()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -1.6794559955596924, -1.9073486328125e-06, -0.0003185272216796875, -7.05718994140625e-05, -3.814697265625e-05, -0.002960205078125, -3.814697265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.0006853342056274414, -3.0517578125e-05, -4.76837158203125e-05, -0.04489326477050781, -0.0003662109375, -0.7199891209602356, -0.001968860626220703, -0.00012969970703125, -0.0717477798461914, -3.814697265625e-06, 0.0, -0.0003037452697753906, -0.000164031982421875, -2.3841855067985307e-07, -0.8675422668457031, -7.62939453125e-06, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.0004975795745849609, -0.0001418590545654297, 0.0, -9.5367431640625e-05, -4.1961669921875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00014495849609375, -5.841255187988281e-06, -0.11710357666015625, -7.987022399902344e-06, -0.0008449554443359375, -1.9073486328125e-06, -0.02167046070098877, -5.948540274403058e-05, -0.0004978179931640625], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 68, 260, "Both", "Player", "<EOS>"], "score": -4.51637321344181, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"hole0": "2", "_type": "Template77"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, buffs=[Buff(<UNK>Windfury())])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -0.36058712005615234, -9.5367431640625e-06, -3.0875205993652344e-05, -8.344650268554688e-06, -3.814697265625e-06, -0.0008563995361328125, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.00238800048828125, -1.1920928244535389e-07, -0.0033092498779296875, -0.00091552734375, -5.91278076171875e-05, -0.00037384033203125, -8.392333984375e-05, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -2.6702880859375e-05, -0.0001373291015625, -6.4849853515625e-05, -1.1444091796875e-05, -1.060962586052483e-05, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -6.556497282872442e-06, -1.9073486328125e-06, -0.003467559814453125, -0.00016021728515625, -8.20159912109375e-05, -0.07613372802734375, -1.9073486328125e-06, -0.000507354736328125, -0.0001220703125, -7.748603820800781e-06, 0.0, -0.2595357894897461, -0.000911712646484375, -1.953395128250122, -9.059905096364673e-06, -0.0004062652587890625, -7.2479248046875e-05, -9.5367431640625e-06, -0.032711029052734375, -2.47955322265625e-05, -0.0014760494232177734, -2.0265566490706988e-05, -1.4541234970092773, -0.10120298713445663, -5.960462772236497e-07], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "1", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "buffs", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "<UNK>", "Windfury", "<EOS>"], "score": -4.527829188933694, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "buffs", "value": {"_type": "List", "elts": [{"hole1": "<UNK>Windfury", "hole0": "Buff", "_type": "Template69"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(players\n            =BothPlayer()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -3.684809684753418, -0.00026702880859375, -2.002696055569686e-05, -1.5139551578613464e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768357030116022e-06, 0.0, -6.186962127685547e-05, 0.0, -0.0012226104736328125, -3.814697265625e-06, -5.96045310885529e-06, -4.768370445162873e-07, -2.026555648626527e-06, 0.0, -0.3723849058151245, -2.0265579223632812e-06, -1.33514404296875e-05, -5.91278076171875e-05, -0.0007781982421875, -0.000507354736328125, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.00011861324310302734, -1.9073486328125e-06, -0.0007266998291015625, -0.014822006225585938, -0.004565238952636719, -1.33514404296875e-05, -0.0001430511474609375, -0.05327391251921654, -0.0016231717308983207, -2.1457672119140625e-06, -0.003124237060546875, -0.0024280548095703125, -2.288818359375e-05, -0.0010099038481712341, 0.0, -0.0002384185791015625, -0.0016384124755859375, -0.0006923675537109375, -3.814697265625e-06, -0.16109943389892578, -0.0002816915512084961, 0.0, -7.05718994140625e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.3187037706375122, -2.3841855067985307e-07, -0.000152587890625, -1.9073486328125e-06, -0.09054040908813477, -8.404254913330078e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Mana", "Change", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>"], "score": -4.7157665223089325, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template6", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsType(MINION_TYPE.MECH)))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -0.05575275421142578, -5.340576171875e-05, -3.099436753473128e-06, -8.70227722771233e-06, -9.775161743164062e-06, -1.9073486328125e-06, -2.872943878173828e-05, 0.0, -4.017353057861328e-05, 0.0, -0.04897129535675049, -1.52587890625e-05, -0.0006122589111328125, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.16872692108154297, -4.38690185546875e-05, -1.217637062072754, -3.814697265625e-06, -3.933906555175781e-06, 0.0, -4.768370445162873e-07, 0.0, -1.3758805990219116, 0.0, -7.62939453125e-06, -6.866455078125e-05, -0.0016994476318359375, -0.000637054443359375, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00012624263763427734, -3.814697265625e-06, -0.002132415771484375, -0.03619384765625, -0.0050067901611328125, -9.5367431640625e-06, -0.0001201629638671875, -0.052484508603811264, -0.001971694640815258, -2.3841855067985307e-07, -0.0031032562255859375, -0.00286865234375, -2.47955322265625e-05, -0.0008563101291656494, 0.0, -0.00019073486328125, -0.000774383544921875, -0.0005550384521484375, -3.814697265625e-06, -0.16796207427978516, -0.0003064870834350586, 0.0, -7.43865966796875e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.2450543642044067, -3.3378546504536644e-06, -0.06508064270019531, -0.0003566741943359375, -1.9073486328125e-06, -3.814697265625e-06, -0.000865936279296875, -6.318092346191406e-05, 0.0, -7.2479248046875e-05, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -0.0021953582763671875, -9.5367431640625e-06, -0.605499267578125, -6.914137884450611e-06], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Mana", "Change", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "score": -5.064456696724129, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.950943836476654e-05, -1.7046782886609435e-05, -2.67025734501658e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -8.344646857949556e-07, -2.09808349609375e-05, -4.256422996520996, -9.72747802734375e-05, -1.2278481335670222e-05, -2.5987612389144488e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -7.152555099310121e-07, 0.0, -6.306171417236328e-05, -1.1444091796875e-05, -0.0016841888427734375, -7.62939453125e-06, -5.9604562920867465e-06, -4.768370445162873e-07, -1.311301275563892e-06, 0.0, -1.3523313999176025, -1.1920928244535389e-07, -0.001117706298828125, -0.0001392364501953125, -8.583065209677443e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nerub'ar", "Weblord", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.6121125184129, "model_output": {"_type": "Module", "body": [{"name": "Nerub'arWeblord", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template15", "hole2": "ALL"}, {"hole1": 4, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -23.29920768737793], "choice_history": [80, 159, 294], "score": -23.299213409423828, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n"}
{"beams": [{"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -0.1865314245223999, -1.9073486328125e-06, -0.10240840911865234, -0.0003833770751953125, -0.0029355287551879883, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 20, 161, "False", "<EOS>"], "score": -0.3042582064981616, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "spell_targetable", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=1)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -0.1865314245223999, -1.9073486328125e-06, -2.537799835205078, -2.86102294921875e-05, -0.0026651620864868164, -2.288818359375e-05], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 21, 165, "1", "<EOS>"], "score": -2.739043572556511, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "spell_targetable", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -2.1697561740875244, -0.0007146596908569336, -0.17151546478271484, -0.0009403228759765625, -0.0018482208251953125, -0.24166011810302734, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -0.0003777742385864258, -1.9073486328125e-06, -9.5367431640625e-06, -0.009092330932617188, -0.000621795654296875, -0.5279874801635742, -0.0001544952392578125, -0.3935203552246094, -5.7220458984375e-06, -0.035184621810913086, -0.0012822146527469158, -2.47955322265625e-05], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -3.566731789253936, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, windfury=True)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -3.941861391067505, -0.007933497428894043, -0.0008716583251953125, -0.000141143798828125, -0.02403569221496582, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "windfury", "<EOS>", 20, 161, "False", "<EOS>"], "score": -3.98684666455938, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=True)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -2.1697561740875244, -0.0007146596908569336, -2.0273056030273438, -0.0001544952392578125, -0.003732919692993164, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 20, 161, "False", "<EOS>"], "score": -4.2136595040674365, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "auras", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, charge=True)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -4.554341793060303, -4.00543212890625e-05, -0.0006160736083984375, -0.000545501708984375, -0.024070024490356445, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "charge", "<EOS>", 20, 161, "False", "<EOS>"], "score": -4.591622450959221, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[1])\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -2.1697561740875244, -0.0007146596908569336, -0.17151546478271484, -0.0009403228759765625, -0.0018482208251953125, -2.413898468017578, -0.0002269744873046875, -0.46047350764274597, -1.71661376953125e-05], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 155, 282, 47, 165, "1", "<EOS>"], "score": -5.23138470352842, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"_type": "Num", "n": 1}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Buff(CantAttack())])\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -2.1697561740875244, -0.0007146596908569336, -0.17151546478271484, -0.0009403228759765625, -0.0018482208251953125, -2.3967714309692383, -5.7220458984375e-05, -0.014522433280944824, -0.027338266372680664, -1.0659133195877075, -0.11751611530780792, -0.01096343994140625], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "Cant", "Attack", "<EOS>"], "score": -5.9898508131618655, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"hole1": "CantAttack", "hole0": "Buff", "_type": "Template69"}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=1)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -2.1697561740875244, -0.0007146596908569336, -3.997316360473633, -0.0001850128173828125, -0.003029107814654708, -1.71661376953125e-05], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 21, 165, "1", "<EOS>"], "score": -6.183012226002575, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALLCOMMON,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -5.933615684509277, -7.43865966796875e-05, -0.01759052276611328, -3.0517578125e-05, -9.417266119271517e-05, -0.00016796588897705078, -0.0005822650855407119, -0.0007287263870239258, -0.09757256507873535, -1.9073486328125e-06, -0.1369638442993164, -0.000553131103515625, -0.0027543306350708008, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "COMMON", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 20, 161, "False", "<EOS>"], "score": -6.1925555900334075, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALLCOMMON"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "spell_targetable", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, range=True)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -5.920485496520996, -7.82012939453125e-05, -0.34383487701416016, -0.0002384185791015625, -0.0034601688385009766, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "range", "<EOS>", 20, 161, "False", "<EOS>"], "score": -6.2800928145761645, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "range", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=Minion)\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -0.1865314245223999, -1.9073486328125e-06, -4.438820838928223, -4.00543212890625e-05, -1.3114628791809082, -0.3696603775024414], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 19, 160, "Minion", "<EOS>"], "score": -6.318511226784722, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "spell_targetable", "hole3": {"_type": "Name", "id": "Minion"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Buff(Damage())])\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -0.00461578369140625, -7.2479248046875e-05, -4.959047510055825e-05, -0.00011837482452392578, -0.0002935931843239814, -0.0010148286819458008, -2.1697561740875244, -0.0007146596908569336, -0.17151546478271484, -0.0009403228759765625, -0.0018482208251953125, -2.3967714309692383, -5.7220458984375e-05, -0.014522433280944824, -0.027338266372680664, -1.5814753770828247, -0.00012958049774169922], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 109, 200, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "Damage", "<EOS>"], "score": -6.37706289590551, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"hole1": 6, "hole0": 4, "_type": "Template23", "hole2": "auras", "hole3": {"_type": "List", "elts": [{"hole1": "Damage", "hole0": "Buff", "_type": "Template69"}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n    return Minion\n", "score_history": [0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.4424220353248529e-05, -4.327246642787941e-05, -1.9550132492440753e-05, -2.86102294921875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -5.841255187988281e-06, -3.62396240234375e-05, -0.0012874603271484375, -0.00011444091796875, -2.9802276912960224e-06, -1.9431114196777344e-05, -2.586841583251953e-05, -7.62939453125e-06, -6.914122786838561e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.004009246826171875, -8.518389701843262, -0.11934947967529297, -0.09360408782958984, 0.0, -0.004710197448730469, -0.0013580322265625], "choice_history": [80, 159, 295, 88, 138, "Spectral", "Knight", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 94, 167, 19, 160, "Minion", "<EOS>"], "score": -8.743240593898918, "model_output": {"_type": "Module", "body": [{"name": "SpectralKnight", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template15", "hole2": "ALL"}, {"value": {"_type": "Name", "id": "Minion"}, "_type": "Return"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -7.62939453125e-06, -23.59952163696289], "choice_history": [80, 159, 294], "score": -23.599529266357422, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n"}
{"beams": [{"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -0.06291604787111282, -1.9073486328125e-06, -0.09684455394744873, -0.0001811981201171875, -8.439661905867979e-05, -0.05775737762451172, -2.86102294921875e-05, -1.9073486328125e-06, -0.36282968521118164, -0.00021646064124070108, -0.23275470733642578, -0.0003032684326171875, -0.038399696350097656, -0.003961679991334677, -0.004657745361328125, -3.814697265625e-06, -1.025199526338838e-05, 0.0, -1.4066696166992188e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -1.809705859827396, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(1)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -0.06291604787111282, -1.9073486328125e-06, -0.09684455394744873, -0.0001811981201171875, -8.439661905867979e-05, -0.05775737762451172, -2.86102294921875e-05, -1.9073486328125e-06, -1.231508731842041, -1.1920928244535389e-07, -4.57763671875e-05, -0.0002346038818359375, -0.055463194847106934, -0.0026248693466186523, -1.9073486328125e-06, -0.0002193450927734375, -1.9073486328125e-06, -4.053112206747755e-06, -1.1920928244535389e-07, -2.9087066650390625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -2.4566881977867254, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardQuery(source=\n            CARD_SOURCE.<UNK>, minion=SelfSelector())), PlayerSelector(\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -1.106393814086914, -0.00014495849609375, 0.0, -0.0014133453369140625, -0.6810010671615601, -2.47955322265625e-05, -0.0027799606323242188, -0.00045013427734375, -9.72747802734375e-05, -0.2938345670700073, 0.0, -0.0005702972412109375, -5.340576171875e-05, -1.52587890625e-05, 0.0, -0.004182934761047363, -4.529942543740617e-06, -0.18601524829864502, -8.18967746454291e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.4515115022659302, -1.1920928244535389e-07, -0.03588390350341797, -5.7220458984375e-06, -0.07336580753326416, -0.0736771821975708, 0.0, -0.022829649969935417, -5.161762237548828e-05, -1.1920928244535389e-07, -0.00089263916015625, -1.33514404296875e-05, 0.0, -0.4592021703720093, 0.0, -0.0001316070556640625, -3.814697265625e-06, -0.03714430332183838, -0.003546595573425293, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -4.0531158447265625e-06, -3.576278118089249e-07, -7.450580596923828e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 79, 271, "minion", "<EOS>", 33, 260, "Self", "Selector", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -3.742862608559342, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}, {"arg": "minion", "value": {"hole0": "SelfSelector", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(1)),\n            MinionSelector(condition=IsType(MINION_TYPE.DRAGON))))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -0.06291604787111282, -1.9073486328125e-06, -0.09684455394744873, -0.0001811981201171875, -8.439661905867979e-05, -0.05775737762451172, -2.86102294921875e-05, -1.9073486328125e-06, -0.36282968521118164, -0.00021646064124070108, -2.198843002319336, -0.000885009765625, -2.47955322265625e-05, 0.0, -0.03684437274932861, -0.0022788047790527344, -1.1920928244535389e-07, -2.47955322265625e-05, -2.09808349609375e-05, 0.0, -3.62396240234375e-05, 0.0, -0.02597332000732422, -0.00010097026824951172, -0.041774749755859375, -2.0265579223632812e-06, -0.021137237548828125, -1.1444091796875e-05, -2.384185791015625e-06, -3.814689989667386e-06, -4.601478576660156e-05, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -3.8576109496230373, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON))), PlayerSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -1.106393814086914, -0.00014495849609375, 0.0, -0.0014133453369140625, -0.803911566734314, 0.0, -0.054915428161621094, -0.0003204345703125, -1.9073486328125e-06, -0.21854734420776367, -6.9141146923357155e-06, -0.5327291488647461, -0.0005130767822265625, -1.1444091796875e-05, -1.9073486328125e-06, -0.005074501037597656, -0.0015985965728759766, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.021887898445129395, -0.00010383128392277285, -0.043064117431640625, -2.0265579223632812e-06, -0.6776180267333984, -0.0010175704956054688, -1.1920928244535389e-07, -0.0002994537353515625, -3.814697265625e-05, 0.0, -0.09619295597076416, 0.0, -0.0002040863037109375, -9.5367431640625e-06, -0.029316306114196777, -0.0013734102249145508, 0.0, -0.000164031982421875, -1.9073486328125e-06, -6.079673312342493e-06, -2.3841855067985307e-07, -7.641315460205078e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -3.9042127414427767, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=Adjacent())), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -1.106393814086914, -0.00014495849609375, 0.0, -0.0014133453369140625, -0.803911566734314, 0.0, -0.054915428161621094, -0.0003204345703125, -1.9073486328125e-06, -0.21854734420776367, -6.9141146923357155e-06, -0.9005441665649414, -7.82012939453125e-05, -0.6643242835998535, -0.001336449757218361, -0.020173344761133194, -0.0002856254577636719, -1.0728830375228426e-06, -0.005374908447265625, -1.71661376953125e-05, -1.9073486328125e-06, -0.10825622081756592, 0.0, -3.814697265625e-05, -3.814697265625e-06, -0.03406500816345215, -0.005330204963684082, 0.0, -0.000118255615234375, -1.9073486328125e-06, -4.4107428038842045e-06, -1.1920928244535389e-07, -4.220008850097656e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.232781347155154, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(1)),\n            MinionSelector(condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -0.06291604787111282, -1.9073486328125e-06, -0.09684455394744873, -0.0001811981201171875, -8.439661905867979e-05, -0.05775737762451172, -2.86102294921875e-05, -1.9073486328125e-06, -0.36282968521118164, -0.00021646064124070108, -2.9189815521240234, -0.0002498626708984375, -0.012468218803405762, 0.0, -0.007903099060058594, -1.1444091796875e-05, -1.776205863279756e-05, 0.0, -1.1920919860131107e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.469244488695573, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(1)),\n            SelfSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -0.06291604787111282, -1.9073486328125e-06, -3.041186809539795, -0.002758026123046875, 0.0, -0.0395965576171875, -4.57763671875e-05, 0.0, -0.3756052255630493, 0.0, -6.67572021484375e-05, -0.0002231597900390625, -0.03569650650024414, -0.0011353492736816406, 0.0, -0.0002117156982421875, -1.9073486328125e-06, -3.6954847928427625e-06, 0.0, -3.0875205993652344e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Self", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.508218800939254, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "SelfSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(1)),\n            MinionSelector(condition=Adjacent(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -0.06291604787111282, -1.9073486328125e-06, -0.09684455394744873, -0.0001811981201171875, -8.439661905867979e-05, -3.0332822799682617, -1.1444091796875e-05, -1.9073486328125e-05, -0.05394303798675537, -0.0002930937916971743, -0.25130176544189453, -0.0005645751953125, -0.1825329065322876, -0.0013132075546309352, -0.0002040863037109375, -1.71661376953125e-05, -0.06519615650177002, 0.0, -0.00014495849609375, -3.814697265625e-05, -0.02974259853363037, -0.0014967918395996094, 0.0, -0.00079345703125, -1.9073486328125e-06, -2.6226039153698366e-06, -4.768370445162873e-07, -2.5033950805664062e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 291, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.729691374517607, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(SpellDamage(0)),\n            PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -0.4472513198852539, -0.00029754638671875, 0.0, -0.05934631824493408, -0.1334390640258789, -0.0005588531494140625, -8.96453857421875e-05, -0.00061798095703125, -9.5367431640625e-06, -2.9263386726379395, -3.814697265625e-06, -0.17959511280059814, -3.051753265026491e-05, -2.3841830625315197e-06, -0.09609794616699219, -6.67572021484375e-05, -1.9073486328125e-06, -0.5708476305007935, -1.1920928244535389e-07, -5.340576171875e-05, -0.0001068115234375, -0.033870816230773926, -0.0014497041702270508, 0.0, -0.0008029937744140625, -5.7220458984375e-06, -4.887579507339979e-06, -1.1920928244535389e-07, -3.266334533691406e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "Silence", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.758050469925429, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Silence(SpellDamage(\n            1)), MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -2.7192156314849854, -0.0003023120516445488, -0.13697250187397003, -0.008520722389221191, -0.0130615234375, -0.009883880615234375, -0.6216850280761719, -0.0001621246337890625, 0.0, -0.12413537502288818, -0.09917771816253662, -0.0008220672607421875, -0.000324249267578125, -0.0012989044189453125, -5.7220458984375e-06, -0.09064238518476486, 0.0, -0.07110416889190674, -0.000186920166015625, -4.23184028477408e-05, -0.006439208984375, -2.47955322265625e-05, 0.0, -0.31057679653167725, -0.0001896439935080707, -0.3126821517944336, -0.000232696533203125, -0.040340304374694824, -0.0035886738914996386, -0.0040340423583984375, -1.9073486328125e-06, -1.01327859738376e-05, 0.0, -1.3947486877441406e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "LEGENDARY", "<EOS>", "Silence", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.762125279061898, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON))), Silence(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -1.106393814086914, -0.00014495849609375, 0.0, -0.0014133453369140625, -0.803911566734314, 0.0, -0.054915428161621094, -0.0003204345703125, -1.9073486328125e-06, -0.21854734420776367, -6.9141146923357155e-06, -0.5327291488647461, -0.0005130767822265625, -1.1444091796875e-05, -1.9073486328125e-06, -0.005074501037597656, -0.0015985965728759766, 0.0, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, -0.021887898445129395, -0.00010383128392277285, -0.043064117431640625, -2.0265579223632812e-06, -1.2447137832641602, -1.1682510375976562e-05, -0.04344940185546875, -0.000133514404296875, -5.7220458984375e-06, -0.48901331424713135, 0.0, -0.000598907470703125, -2.86102294921875e-05, -0.008819937705993652, -0.0009794235229492188, 0.0, -0.0001392364501953125, -1.9073486328125e-06, -7.86781220085686e-06, -2.3841855067985307e-07, -0.00010311603546142578, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Silence", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -4.885901121683723, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "Silence", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardQuery(source=\n            CARD_SOURCE.<UNK>, minion=SelfSelector())), PlayerSelector(\n            players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -1.106393814086914, -0.00014495849609375, 0.0, -0.0014133453369140625, -0.6810010671615601, -2.47955322265625e-05, -0.0027799606323242188, -0.00045013427734375, -9.72747802734375e-05, -0.2938345670700073, 0.0, -0.0005702972412109375, -5.340576171875e-05, -1.52587890625e-05, 0.0, -0.004182934761047363, -4.529942543740617e-06, -0.18601524829864502, -8.18967746454291e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.4515115022659302, -1.1920928244535389e-07, -0.03588390350341797, -5.7220458984375e-06, -0.07336580753326416, -0.0736771821975708, 0.0, -0.022829649969935417, -5.161762237548828e-05, -1.1920928244535389e-07, -0.00089263916015625, -1.33514404296875e-05, 0.0, -1.3757423162460327, -1.1920928244535389e-07, -2.47955322265625e-05, -1.9073486328125e-06, -0.42313528060913086, -2.1696068870369345e-05, 0.0, -0.0027923583984375, -1.9073486328125e-06, -2.1457672119140625e-06, -2.2649765014648438e-06, -0.00011646747589111328, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 79, 271, "minion", "<EOS>", 33, 260, "Self", "Selector", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -5.044371631250243, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}, {"arg": "minion", "value": {"hole0": "SelfSelector", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardQuery(source=\n            CARD_SOURCE.<UNK>, player=BothPlayer())), PlayerSelector(picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -0.029936006292700768, -3.8265450712060556e-05, -0.00012945409980602562, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -7.641315460205078e-05, -9.536738616588991e-07, -5.7220458984375e-05, -0.012309074401855469, -1.71661376953125e-05, -3.3020962291629985e-05, -2.503394853192731e-06, -9.5367431640625e-06, -0.00030517578125, -1.71661376953125e-05, -2.002716064453125e-05, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0020475387573242188, -0.14114761352539062, -2.074220174108632e-05, -3.576272865757346e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -1.0728830375228426e-06, -5.7220458984375e-06, -0.08493733406066895, -0.0014415971236303449, -0.02017723210155964, -0.001485586166381836, -0.0027446746826171875, -0.009894371032714844, -1.106393814086914, -0.00014495849609375, 0.0, -0.0014133453369140625, -0.6810010671615601, -2.47955322265625e-05, -0.0027799606323242188, -0.00045013427734375, -9.72747802734375e-05, -0.2938345670700073, 0.0, -0.0005702972412109375, -5.340576171875e-05, -1.52587890625e-05, 0.0, -0.004182934761047363, -4.529942543740617e-06, -0.18601524829864502, -8.18967746454291e-05, -8.0108642578125e-05, -2.6702880859375e-05, -1.8334561586380005, 0.0, -8.96453857421875e-05, -1.9073486328125e-06, -0.2906392812728882, -6.198883056640625e-06, -4.1961669921875e-05, -0.3495649993419647, -1.728534698486328e-05, -1.1920928244535389e-07, -0.0013828277587890625, -1.52587890625e-05, 0.0, -0.06131720542907715, 0.0, -0.0001621246337890625, -3.814697265625e-06, -0.0248563289642334, -0.0033212900161743164, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -4.172324224782642e-06, -3.576278118089249e-07, -7.259845733642578e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Wailing", "Soul", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "5", "<EOS>"], "score": -5.149438975653553, "model_output": {"_type": "Module", "body": [{"name": "WailingSoul", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Wailing Soul", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}, {"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 5, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-0.0001506805419921875, -2.09808349609375e-05, -22.159526824951172], "choice_history": [80, 159, 294], "score": -22.159698486328125, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}
{"beams": [{"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -0.2946205139160156, -0.0004901885986328125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0010836124420166016, 0.0, -0.000164031982421875, -0.002532958984375, -0.0001430511474609375, -0.10567402839660645, -1.33514404296875e-05, -0.0003108978271484375, -0.0005340576171875, -0.011235475540161133, -0.0003682374954223633, 0.0, -0.001132965087890625, -0.011827468872070312, -3.814697265625e-06, -5.7220458984375e-06, -0.0054912567138671875, -7.62939453125e-06, -7.62939453125e-06, -0.0007801055908203125, -0.0005283355712890625, -0.018823955208063126, -0.0022956132888793945, -0.05180168151855469, -1.71661376953125e-05, -0.020070074126124382, -0.00033867359161376953, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -0.6693909721468856, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "Attack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -1.369490623474121, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0008704662322998047, -1.9073486328125e-06, -0.00063323974609375, -0.003692626953125, -0.0002574920654296875, -0.4932858943939209, -1.9073486328125e-06, -0.001522064208984375, -0.000522613525390625, -0.7285940647125244, -0.0001697540283203125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -2.7381883500163724, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -1.369490623474121, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0008704662322998047, -1.9073486328125e-06, -0.00063323974609375, -0.003692626953125, -0.0002574920654296875, -1.2992501258850098, -2.288818359375e-05, -0.0008983612060546875, -0.001087188720703125, -0.03839075565338135, -0.0002461671829223633, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -2.853987538630264, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -1.369490623474121, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0008704662322998047, -1.9073486328125e-06, -0.00063323974609375, -0.003692626953125, -0.0002574920654296875, -0.4932858943939209, -1.9073486328125e-06, -0.001522064208984375, -0.000522613525390625, -1.2006409168243408, -0.0003465414047241211, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>"], "score": -3.2104138968532254, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -0.2946205139160156, -0.0004901885986328125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0010836124420166016, 0.0, -0.000164031982421875, -0.002532958984375, -0.0001430511474609375, -2.657172918319702, -1.9073486328125e-06, -0.000438690185546875, -0.000194549560546875, -0.2149893045425415, -0.0002994537353515625, -1.9073486328125e-06, -0.000823974609375, -0.0092926025390625, -5.7220458984375e-06, -5.7220458984375e-06, -0.008150219917297363, -5.7220458984375e-06, -7.62939453125e-06, -0.0006351470947265625, -0.00042724609375, -0.01704721339046955, -0.0013457536697387695, -0.051998138427734375, -1.71661376953125e-05, -0.03003108501434326, -0.00035381317138671875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -3.431368719229596, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "Attack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), HeroSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -1.369490623474121, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0008704662322998047, -1.9073486328125e-06, -0.00063323974609375, -0.003692626953125, -0.0002574920654296875, -0.4932858943939209, -1.9073486328125e-06, -0.001522064208984375, -0.000522613525390625, -1.8098118305206299, -4.9233436584472656e-05, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -3.8192913172786405, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -1.369490623474121, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0008704662322998047, -1.9073486328125e-06, -0.00063323974609375, -0.003692626953125, -0.0002574920654296875, -2.521878719329834, -2.09808349609375e-05, -0.00040435791015625, -9.5367431640625e-05, -0.09005367755889893, -0.0002079010009765625, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "5", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.126754963213699, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 5, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(5), SelfSelector()),\n            Aura(Attack(), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -0.2946205139160156, -0.0004901885986328125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0010836124420166016, 0.0, -0.000164031982421875, -0.002532958984375, -0.0001430511474609375, -3.7792437076568604, -7.62939453125e-06, -0.00026702880859375, -5.91278076171875e-05, -0.01148831844329834, -0.0003014802932739258, -1.9073486328125e-06, -0.0010700225830078125, -0.0028533935546875, -3.814697265625e-06, -5.7220458984375e-06, -0.006660103797912598, -5.7220458984375e-06, -7.62939453125e-06, -0.000682830810546875, -0.0004940032958984375, -0.01645621657371521, -0.002170085906982422, -0.05490684509277344, -1.71661376953125e-05, -0.027527213096618652, -0.0003807544708251953, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "5", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.3427335558479, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 5, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "Attack", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True, enrage=[Aura(ChangeAttack(3),\n            SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -3.4718103408813477, -3.814697265625e-06, -0.00011444091796875, -1.1444091796875e-05, -6.67572021484375e-05, -0.0005207061767578125, -3.24249267578125e-05, -9.655952453613281e-06, 0.0, -6.29425048828125e-05, -0.0004564523696899414, -4.768370445162873e-07, -0.0012569427490234375, -0.0003185272216796875, -0.00011444091796875, -0.00018310546875, -5.91278076171875e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -0.0012149810791015625, -6.29425048828125e-05, -3.62396240234375e-05, -9.5367431640625e-06, -3.5762769812208717e-07, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0017724036006256938, -7.987022399902344e-06, -0.000720977783203125, -0.0005035400390625, -2.47955322265625e-05, -0.1956768035888672, 0.0, -0.0004100799560546875, -0.0003185272216796875, -1.71661376953125e-05, 0.0, -0.038468360900878906, -0.0064640045166015625, -0.7441670298576355, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "3", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "3", "<EOS>"], "score": -4.46758689888307, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 3, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Attack(), MinionSelector(HasAttack(), EnemyPlayer()))])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -0.2946205139160156, -0.0004901885986328125, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0010836124420166016, 0.0, -0.000164031982421875, -0.002532958984375, -0.0001430511474609375, -0.10567402839660645, -1.33514404296875e-05, -0.0003108978271484375, -0.0005340576171875, -0.011235475540161133, -0.0003682374954223633, 0.0, -0.001132965087890625, -0.011827468872070312, -3.814697265625e-06, -5.7220458984375e-06, -0.0054912567138671875, -7.62939453125e-06, -7.62939453125e-06, -0.0007801055908203125, -0.0005283355712890625, -0.018823955208063126, -0.0022956132888793945, -3.2500476837158203, -0.05261421203613281, -1.9073486328125e-06, 0.0, -0.004632115364074707, -5.14984130859375e-05, 0.0, -0.084625244140625, -0.09866142272949219, -0.0001316070556640625, -0.39721933007240295, -0.00755782425403595, -4.708766573457979e-05, -0.01180267333984375, -7.62939453125e-06, -0.19658374786376953, -5.9604644775390625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 68, 260, "Attack", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 68, 260, "Has", "Attack", "<EOS>", 68, 260, "Enemy", "Player", "<EOS>"], "score": -4.701153320631221, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 1, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole0": "Attack", "_type": "Template77"}, {"args": [{"hole0": "HasAttack", "_type": "Template77"}, {"hole0": "EnemyPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True, enrage=[Aura(ChangeAttack(6),\n            SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -3.4718103408813477, -3.814697265625e-06, -0.00011444091796875, -1.1444091796875e-05, -6.67572021484375e-05, -0.0005207061767578125, -3.24249267578125e-05, -9.655952453613281e-06, 0.0, -6.29425048828125e-05, -0.0004564523696899414, -4.768370445162873e-07, -0.0012569427490234375, -0.0003185272216796875, -0.00011444091796875, -0.00018310546875, -5.91278076171875e-05, -9.5367431640625e-06, 0.0, -7.748603820800781e-06, -0.0012149810791015625, -6.29425048828125e-05, -3.62396240234375e-05, -9.5367431640625e-06, -3.5762769812208717e-07, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0017724036006256938, -7.987022399902344e-06, -0.000720977783203125, -0.0005035400390625, -2.47955322265625e-05, -0.1956768035888672, 0.0, -0.0004100799560546875, -0.0003185272216796875, -1.71661376953125e-05, 0.0, -0.038468360900878906, -0.0064640045166015625, -1.0092806816101074, -1.71661376953125e-05], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "3", "<EOS>", 291, 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "6", "<EOS>"], "score": -4.7327158094246045, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 3}], "_type": "Call", "keywords": [{"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 6, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(4), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -0.03516674041748047, -1.52587890625e-05, -1.5139352399273776e-05, 0.0, -6.115421274444088e-05, -5.960462772236497e-07, -0.09902286529541016, -0.0005036592483520508, -0.001552581787109375, -6.866455078125e-05, -1.369490623474121, -2.86102294921875e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -0.0008704662322998047, -1.9073486328125e-06, -0.00063323974609375, -0.003692626953125, -0.0002574920654296875, -3.7595601081848145, -3.4332275390625e-05, -0.000797271728515625, -7.82012939453125e-05, -0.12977242469787598, -0.00018322467803955078, 0.0], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "4", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.4045176146571805, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 4, "_type": "Template73"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -8.207467079162598, -4.9591064453125e-05, -4.410734163684538e-06, 0.0, -0.00010001659393310547, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -8.210289561935014, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, effects=[Effect(Attack(), MinionSelector())])\n", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0002637753786984831, -2.5987286790041253e-05, -2.3841855067985307e-07, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -5.841255187988281e-06, -3.814697265625e-06, -2.1457672119140625e-06, -4.00543212890625e-05, -0.001796722412109375, -9.1552734375e-05, -2.729855441430118e-05, -4.4107433495810255e-05, -2.384185791015625e-06, 0.0, -0.00013732902880292386, 0.0, -0.00015473365783691406, -1.9073486328125e-06, -5.848549842834473, -0.4006185531616211, -0.00015484073082916439, -3.755022044060752e-05, -0.0019821813330054283, -0.00026568613247945905, -0.8734188079833984, -5.364417302189395e-05, -7.62939453125e-06, -0.11408138275146484, -0.0003147125244140625, -0.5970168709754944, -1.177253246307373, -4.768370445162873e-07], "choice_history": [80, 159, 295, 88, 138, "Amani", "Berserker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 179, "2", "<EOS>", "3", "<EOS>", "Attack", "<EOS>", 282, 68, 260, "Minion", "Selector", "<EOS>"], "score": -9.016421982390824, "model_output": {"_type": "Module", "body": [{"name": "AmaniBerserker", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template15", "hole2": "ALL"}, {"hole1": 3, "hole0": 2, "_type": "Template10", "hole4": [{"hole0": "MinionSelector", "_type": "Template77"}], "hole2": "Attack"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-3.814697265625e-06, -2.09808349609375e-05, -23.578941345214844], "choice_history": [80, 159, 294], "score": -23.57896614074707, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n"}
{"beams": [{"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -1.4358768463134766, -1.9073486328125e-05, -0.0003299713134765625, -1.9073486328125e-06, -5.7220458984375e-06, -0.03228652477264404, -3.814697265625e-06, -3.24249267578125e-05, -1.71661376953125e-05, -0.0019474029541015625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0858076810836792, -0.01782989501953125, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -3.0517578125e-05, -3.1948089599609375e-05, 0.0, -0.0001983642578125, -5.7220458984375e-06, -0.2515408992767334, -7.867813110351562e-06, 0.0, -5.91278076171875e-05, -0.0001220703125, 0.0, 0.0, -0.0011644363403320312, -0.000446319580078125, -7.62939453125e-06, -0.0004730224609375, -0.013773918151855469, -0.10529041290283203, -9.5367431640625e-06, -9.1552734375e-05, -0.09904314577579498, -0.0009071826934814453, -0.00012361998960841447, -4.1961669921875e-05, -3.814697265625e-05, -0.0003376007080078125, -0.0001220703125, -1.33514404296875e-05, -0.0003281831741333008, -0.011836051940917969, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.12327885627746582, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.14984130859375e-05, 0.0, -0.0034694671630859375, -1.9073486328125e-06, -0.004688382148742676, -1.1444091796875e-05, -0.5181665420532227, -5.7220458984375e-06, -0.0007271766080521047, -0.0012400150299072266, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -2.8563910967914055, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -1.4358768463134766, -1.9073486328125e-05, -0.0003299713134765625, -1.9073486328125e-06, -5.7220458984375e-06, -0.03228652477264404, -3.814697265625e-06, -3.24249267578125e-05, -1.71661376953125e-05, -0.0019474029541015625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0858076810836792, -0.01782989501953125, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -3.0517578125e-05, -3.1948089599609375e-05, 0.0, -0.0001983642578125, -5.7220458984375e-06, -0.2515408992767334, -7.867813110351562e-06, 0.0, -5.91278076171875e-05, -0.0001220703125, 0.0, 0.0, -0.0011644363403320312, -0.000446319580078125, -7.62939453125e-06, -0.0004730224609375, -0.013773918151855469, -0.10529041290283203, -9.5367431640625e-06, -9.1552734375e-05, -0.09904314577579498, -0.0009071826934814453, -0.00012361998960841447, -4.1961669921875e-05, -3.814697265625e-05, -0.0003376007080078125, -0.0001220703125, -1.33514404296875e-05, -0.0003281831741333008, -0.011836051940917969, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.12327885627746582, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.14984130859375e-05, 0.0, -0.0034694671630859375, -1.9073486328125e-06, -0.004688382148742676, -1.1444091796875e-05, -0.9068965911865234, 0.0, -0.010921120643615723, -0.0003457069396972656, 0.0, -0.06765222549438477, -0.4573094844818115, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>"], "score": -3.779382491846256, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -1.4358768463134766, -1.9073486328125e-05, -0.0003299713134765625, -1.9073486328125e-06, -5.7220458984375e-06, -0.03228652477264404, -3.814697265625e-06, -3.24249267578125e-05, -1.71661376953125e-05, -0.0019474029541015625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0858076810836792, -0.01782989501953125, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -3.0517578125e-05, -3.1948089599609375e-05, 0.0, -0.0001983642578125, -5.7220458984375e-06, -1.6053187847137451, -5.2928924560546875e-05, 0.0, -5.7220458984375e-05, -0.0001277923583984375, 0.0, 0.0, -0.0007991790771484375, -0.0006427764892578125, -1.1444091796875e-05, -0.000743865966796875, -0.011422157287597656, -0.0878458023071289, -9.5367431640625e-06, -8.7738037109375e-05, -0.08562525361776352, -0.0010631084442138672, -0.00011658663424896076, -4.1961669921875e-05, -3.814697265625e-05, -0.0003376007080078125, -0.0001239776611328125, -1.33514404296875e-05, -0.0003186464309692383, -0.011678576469421387, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.10527467727661133, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.14984130859375e-05, 0.0, -0.003566741943359375, -1.9073486328125e-06, -0.004682660102844238, -1.1444091796875e-05, -0.5377864837646484, -5.7220458984375e-06, -0.000740647257771343, -0.0012067556381225586, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.178775044454589, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Antonidas())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -1.4358768463134766, -1.9073486328125e-05, -0.0003299713134765625, -1.9073486328125e-06, -5.7220458984375e-06, -0.03228652477264404, -3.814697265625e-06, -3.24249267578125e-05, -1.71661376953125e-05, -0.0019474029541015625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0858076810836792, -0.01782989501953125, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -3.0517578125e-05, -3.1948089599609375e-05, 0.0, -0.0001983642578125, -5.7220458984375e-06, -0.2515408992767334, -7.867813110351562e-06, 0.0, -5.91278076171875e-05, -0.0001220703125, 0.0, 0.0, -0.0011644363403320312, -0.000446319580078125, -7.62939453125e-06, -0.0004730224609375, -0.013773918151855469, -0.10529041290283203, -9.5367431640625e-06, -9.1552734375e-05, -0.09904314577579498, -0.0009071826934814453, -0.00012361998960841447, -4.1961669921875e-05, -3.814697265625e-05, -0.0003376007080078125, -0.0001220703125, -1.33514404296875e-05, -0.0003281831741333008, -0.011836051940917969, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.12327885627746582, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -5.14984130859375e-05, 0.0, -0.0034694671630859375, -1.9073486328125e-06, -0.004688382148742676, -1.1444091796875e-05, -0.9068965911865234, 0.0, -0.010921120643615723, -0.0003457069396972656, 0.0, -0.06765222549438477, -1.1600341796875, -0.06600222736597061], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Antonidas", "<EOS>"], "score": -4.548103692372017, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Antonidas", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(AddCard(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.5825642347335815, -7.867813110351562e-06, 0.0, -0.00014495849609375, -0.000156402587890625, 0.0, 0.0, -0.0013217926025390625, -0.00041961669921875, -7.62939453125e-06, -0.0003490447998046875, -0.01187896728515625, -0.12079143524169922, -9.5367431640625e-06, -0.000102996826171875, -0.09647355228662491, -0.0009711980819702148, -0.0001164674322353676, -4.76837158203125e-05, -4.1961669921875e-05, -0.0003528594970703125, -0.00011444091796875, -1.33514404296875e-05, -0.0003110170364379883, -0.011381864547729492, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08881533145904541, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0037403106689453125, -1.9073486328125e-06, -0.0047560930252075195, -9.5367431640625e-06, -0.5339984893798828, -5.7220458984375e-06, -0.0007634162320755422, -0.0012784004211425781, 0.0, -0.0001354217529296875, -0.0026073455810546875, 0.0, 0.0, -0.15351295471191406, -5.7220458984375e-06, -0.000339508056640625, -0.00101470947265625, -1.1286287307739258, -4.38690185546875e-05, -3.814697265625e-06, -0.24264740943908691, -0.0008020401000976562, -4.088878631591797e-05, -0.000446319580078125, -1.52587890625e-05, -1.52587890625e-05, -0.007836580276489258, 0.0, -0.0005702972412109375, -1.52587890625e-05, -0.4570118188858032, -7.748603820800781e-06, 0.0, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.0017070770263671875, -0.0003337860107421875, -1.1444091796875e-05, -0.0005245208740234375, -0.014126777648925781, -0.1470947265625, -9.5367431640625e-06, -9.1552734375e-05, -0.09840091317892075, -0.0010503530502319336, -0.00015163415810093284, -4.9591064453125e-05, -5.14984130859375e-05, -0.000396728515625, -0.000102996826171875, -1.71661376953125e-05, -0.0002919435501098633, -0.011268258094787598, -1.9073486328125e-06, -5.14984130859375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.06850671768188477, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.0039234161376953125, -1.9073486328125e-06, -0.0048934221267700195, -1.1444091796875e-05, -0.5587530136108398, -5.7220458984375e-06, -0.0007307528867386281, -0.001247406005859375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Add", "Card", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.420719573461604, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(AddCard(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.8702553510665894, -5.2928924560546875e-05, 0.0, -0.00012969970703125, -0.000186920166015625, 0.0, 0.0, -0.0007886886596679688, -0.000640869140625, -9.5367431640625e-06, -0.00054168701171875, -0.008929252624511719, -0.0963754653930664, -9.5367431640625e-06, -9.918212890625e-05, -0.07803618907928467, -0.0011464357376098633, -0.00010979169746860862, -4.57763671875e-05, -4.38690185546875e-05, -0.00035858154296875, -0.000118255615234375, -1.33514404296875e-05, -0.0003014802932739258, -0.01123964786529541, -1.9073486328125e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08139848709106445, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0038299560546875, -1.9073486328125e-06, -0.004745602607727051, -9.5367431640625e-06, -0.5556697845458984, -5.7220458984375e-06, -0.0007730721845291555, -0.0012357234954833984, 0.0, -0.0001373291015625, -0.0026149749755859375, 0.0, 0.0, -0.1534748077392578, -5.7220458984375e-06, -0.0003414154052734375, -0.00099945068359375, -1.1477127075195312, -4.38690185546875e-05, -3.814697265625e-06, -0.24477505683898926, -0.0008039474487304688, -4.088878631591797e-05, -0.0004425048828125, -1.52587890625e-05, -1.52587890625e-05, -0.007860422134399414, 0.0, -0.000568389892578125, -1.52587890625e-05, -0.45637190341949463, -7.748603820800781e-06, 0.0, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.0017032623291015625, -0.0003337860107421875, -1.1444091796875e-05, -0.0005245208740234375, -0.014130592346191406, -0.14691448211669922, -9.5367431640625e-06, -9.1552734375e-05, -0.09846778213977814, -0.0010503530502319336, -0.00015163415810093284, -4.9591064453125e-05, -5.14984130859375e-05, -0.0003986358642578125, -0.000102996826171875, -1.71661376953125e-05, -0.0002919435501098633, -0.011256814002990723, -1.9073486328125e-06, -5.14984130859375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.06804704666137695, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.003930091857910156, -1.9073486328125e-06, -0.004892468452453613, -1.1444091796875e-05, -0.5587339401245117, -5.7220458984375e-06, -0.0007307528867386281, -0.0012464523315429688, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Add", "Card", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.6968228464811475, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(AddCard(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.5825642347335815, -7.867813110351562e-06, 0.0, -0.00014495849609375, -0.000156402587890625, 0.0, 0.0, -0.0013217926025390625, -0.00041961669921875, -7.62939453125e-06, -0.0003490447998046875, -0.01187896728515625, -0.12079143524169922, -9.5367431640625e-06, -0.000102996826171875, -0.09647355228662491, -0.0009711980819702148, -0.0001164674322353676, -4.76837158203125e-05, -4.1961669921875e-05, -0.0003528594970703125, -0.00011444091796875, -1.33514404296875e-05, -0.0003110170364379883, -0.011381864547729492, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08881533145904541, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0037403106689453125, -1.9073486328125e-06, -0.0047560930252075195, -9.5367431640625e-06, -0.5339984893798828, -5.7220458984375e-06, -0.0007634162320755422, -0.0012784004211425781, 0.0, -0.0001354217529296875, -0.0026073455810546875, 0.0, 0.0, -0.15351295471191406, -5.7220458984375e-06, -0.000339508056640625, -0.00101470947265625, -1.1286287307739258, -4.38690185546875e-05, -3.814697265625e-06, -0.24264740943908691, -0.0008020401000976562, -4.088878631591797e-05, -0.000446319580078125, -1.52587890625e-05, -1.52587890625e-05, -0.007836580276489258, 0.0, -0.0005702972412109375, -1.52587890625e-05, -0.4570118188858032, -7.748603820800781e-06, 0.0, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.0017070770263671875, -0.0003337860107421875, -1.1444091796875e-05, -0.0005245208740234375, -0.014126777648925781, -0.1470947265625, -9.5367431640625e-06, -9.1552734375e-05, -0.09840091317892075, -0.0010503530502319336, -0.00015163415810093284, -4.9591064453125e-05, -5.14984130859375e-05, -0.000396728515625, -0.000102996826171875, -1.71661376953125e-05, -0.0002919435501098633, -0.011268258094787598, -1.9073486328125e-06, -5.14984130859375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.06850671768188477, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.0039234161376953125, -1.9073486328125e-06, -0.0048934221267700195, -1.1444091796875e-05, -0.8499221801757812, 0.0, -0.011081337928771973, -0.0003476142883300781, 0.0, -0.06493616104125977, -0.45336174964904785, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Add", "Card", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>"], "score": -6.239637444041357, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(AddCard(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.8702553510665894, -5.2928924560546875e-05, 0.0, -0.00012969970703125, -0.000186920166015625, 0.0, 0.0, -0.0007886886596679688, -0.000640869140625, -9.5367431640625e-06, -0.00054168701171875, -0.008929252624511719, -0.0963754653930664, -9.5367431640625e-06, -9.918212890625e-05, -0.07803618907928467, -0.0011464357376098633, -0.00010979169746860862, -4.57763671875e-05, -4.38690185546875e-05, -0.00035858154296875, -0.000118255615234375, -1.33514404296875e-05, -0.0003014802932739258, -0.01123964786529541, -1.9073486328125e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08139848709106445, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0038299560546875, -1.9073486328125e-06, -0.004745602607727051, -9.5367431640625e-06, -0.5556697845458984, -5.7220458984375e-06, -0.0007730721845291555, -0.0012357234954833984, 0.0, -0.0001373291015625, -0.0026149749755859375, 0.0, 0.0, -0.1534748077392578, -5.7220458984375e-06, -0.0003414154052734375, -0.00099945068359375, -1.1477127075195312, -4.38690185546875e-05, -3.814697265625e-06, -0.24477505683898926, -0.0008039474487304688, -4.088878631591797e-05, -0.0004425048828125, -1.52587890625e-05, -1.52587890625e-05, -0.007860422134399414, 0.0, -0.000568389892578125, -1.52587890625e-05, -0.45637190341949463, -7.748603820800781e-06, 0.0, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.0017032623291015625, -0.0003337860107421875, -1.1444091796875e-05, -0.0005245208740234375, -0.014130592346191406, -0.14691448211669922, -9.5367431640625e-06, -9.1552734375e-05, -0.09846778213977814, -0.0010503530502319336, -0.00015163415810093284, -4.9591064453125e-05, -5.14984130859375e-05, -0.0003986358642578125, -0.000102996826171875, -1.71661376953125e-05, -0.0002919435501098633, -0.011256814002990723, -1.9073486328125e-06, -5.14984130859375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.06804704666137695, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.003930091857910156, -1.9073486328125e-06, -0.004892468452453613, -1.1444091796875e-05, -0.8499469757080078, 0.0, -0.011086106300354004, -0.0003476142883300781, 0.0, -0.06491899490356445, -0.45337265729904175, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Add", "Card", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>"], "score": -6.515784049637652, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(SpellCast(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector(<UNK>Player())), ActionTag(\n            AddCard(CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.5825642347335815, -7.867813110351562e-06, 0.0, -0.00014495849609375, -0.000156402587890625, 0.0, 0.0, -0.0013217926025390625, -0.00041961669921875, -7.62939453125e-06, -0.0003490447998046875, -0.01187896728515625, -0.12079143524169922, -9.5367431640625e-06, -0.000102996826171875, -0.09647355228662491, -0.0009711980819702148, -0.0001164674322353676, -4.76837158203125e-05, -4.1961669921875e-05, -0.0003528594970703125, -0.00011444091796875, -1.33514404296875e-05, -0.0003110170364379883, -0.011381864547729492, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08881533145904541, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0037403106689453125, -1.9073486328125e-06, -0.0047560930252075195, -9.5367431640625e-06, -0.5339984893798828, -5.7220458984375e-06, -0.0007634162320755422, -0.0012784004211425781, 0.0, -0.0001354217529296875, -0.0026073455810546875, 0.0, 0.0, -0.15351295471191406, -5.7220458984375e-06, -0.000339508056640625, -0.00101470947265625, -0.5163002014160156, -3.814697265625e-06, 0.0, -0.3214606046676636, -0.06981182098388672, 0.0, -0.030580520629882812, -0.0002422332763671875, -0.0036678314208984375, -1.9073486328125e-05, -1.1444091796875e-05, -0.7121811509132385, -0.0001614093780517578, -0.001931905746459961, -8.96453857421875e-05, -8.392333984375e-05, -0.0010833740234375, -0.0003566741943359375, -7.62939453125e-06, -0.00030541419982910156, -0.03973209857940674, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -2.86102294921875e-05, -0.22632622718811035, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -0.0021657943725585938, -3.814697265625e-06, -0.005535244941711426, -5.7220458984375e-06, -0.39455509185791016, 0.0, -0.09195196628570557, -0.00026166439056396484, 0.0, -0.22475719451904297, -0.39930689334869385, -3.814697265625e-06, -0.0002231597900390625, -0.08237838745117188, 0.0, 0.0, -0.01758861541748047, -0.00042247772216796875, -1.52587890625e-05, -0.000232696533203125, -0.008220672607421875, -0.3579587936401367, -1.1444091796875e-05, -5.53131103515625e-05, -0.03073626011610031, -0.00040411949157714844, -0.00033295145840384066, -5.7220458984375e-05, -3.0517578125e-05, -0.0003757476806640625, -0.0001544952392578125, -7.62939453125e-06, -0.0002747774124145508, -0.01368570327758789, -1.9073486328125e-06, -4.9591064453125e-05, -2.288818359375e-05, -1.33514404296875e-05, -0.265399694442749, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.00286865234375, -1.9073486328125e-06, -0.004868745803833008, -9.5367431640625e-06, -0.5269594192504883, -5.7220458984375e-06, -0.0017559528350830078, -0.0012627840042114258, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 136, 19, 160, "Spell", "Cast", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -7.028132418387024, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(AddCard(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Antonidas())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.5825642347335815, -7.867813110351562e-06, 0.0, -0.00014495849609375, -0.000156402587890625, 0.0, 0.0, -0.0013217926025390625, -0.00041961669921875, -7.62939453125e-06, -0.0003490447998046875, -0.01187896728515625, -0.12079143524169922, -9.5367431640625e-06, -0.000102996826171875, -0.09647355228662491, -0.0009711980819702148, -0.0001164674322353676, -4.76837158203125e-05, -4.1961669921875e-05, -0.0003528594970703125, -0.00011444091796875, -1.33514404296875e-05, -0.0003110170364379883, -0.011381864547729492, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08881533145904541, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0037403106689453125, -1.9073486328125e-06, -0.0047560930252075195, -9.5367431640625e-06, -0.5339984893798828, -5.7220458984375e-06, -0.0007634162320755422, -0.0012784004211425781, 0.0, -0.0001354217529296875, -0.0026073455810546875, 0.0, 0.0, -0.15351295471191406, -5.7220458984375e-06, -0.000339508056640625, -0.00101470947265625, -1.1286287307739258, -4.38690185546875e-05, -3.814697265625e-06, -0.24264740943908691, -0.0008020401000976562, -4.088878631591797e-05, -0.000446319580078125, -1.52587890625e-05, -1.52587890625e-05, -0.007836580276489258, 0.0, -0.0005702972412109375, -1.52587890625e-05, -0.4570118188858032, -7.748603820800781e-06, 0.0, -6.103515625e-05, -8.20159912109375e-05, 0.0, 0.0, -0.0017070770263671875, -0.0003337860107421875, -1.1444091796875e-05, -0.0005245208740234375, -0.014126777648925781, -0.1470947265625, -9.5367431640625e-06, -9.1552734375e-05, -0.09840091317892075, -0.0010503530502319336, -0.00015163415810093284, -4.9591064453125e-05, -5.14984130859375e-05, -0.000396728515625, -0.000102996826171875, -1.71661376953125e-05, -0.0002919435501098633, -0.011268258094787598, -1.9073486328125e-06, -5.14984130859375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.06850671768188477, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-05, -4.9591064453125e-05, 0.0, -0.0039234161376953125, -1.9073486328125e-06, -0.0048934221267700195, -1.1444091796875e-05, -0.8499221801757812, 0.0, -0.011081337928771973, -0.0003476142883300781, 0.0, -0.06493616104125977, -1.1771211624145508, -0.06841633468866348], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Add", "Card", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Antonidas", "<EOS>"], "score": -7.031807469449625, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "AddCard"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Antonidas", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(SpellCast(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector(<UNK>Player())), ActionTag(\n            AddCard(CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.8702553510665894, -5.2928924560546875e-05, 0.0, -0.00012969970703125, -0.000186920166015625, 0.0, 0.0, -0.0007886886596679688, -0.000640869140625, -9.5367431640625e-06, -0.00054168701171875, -0.008929252624511719, -0.0963754653930664, -9.5367431640625e-06, -9.918212890625e-05, -0.07803618907928467, -0.0011464357376098633, -0.00010979169746860862, -4.57763671875e-05, -4.38690185546875e-05, -0.00035858154296875, -0.000118255615234375, -1.33514404296875e-05, -0.0003014802932739258, -0.01123964786529541, -1.9073486328125e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08139848709106445, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0038299560546875, -1.9073486328125e-06, -0.004745602607727051, -9.5367431640625e-06, -0.5556697845458984, -5.7220458984375e-06, -0.0007730721845291555, -0.0012357234954833984, 0.0, -0.0001373291015625, -0.0026149749755859375, 0.0, 0.0, -0.1534748077392578, -5.7220458984375e-06, -0.0003414154052734375, -0.00099945068359375, -0.5036020278930664, -3.814697265625e-06, 0.0, -0.31380927562713623, -0.0693674087524414, 0.0, -0.030521392822265625, -0.000244140625, -0.00371551513671875, -1.9073486328125e-05, -1.1444091796875e-05, -0.7169820666313171, -0.0001614093780517578, -0.0019376277923583984, -8.96453857421875e-05, -8.58306884765625e-05, -0.0010814666748046875, -0.00035858154296875, -7.62939453125e-06, -0.00030350685119628906, -0.03980457782745361, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -2.86102294921875e-05, -0.225225567817688, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -0.0021648406982421875, -3.814697265625e-06, -0.0055381059646606445, -5.7220458984375e-06, -0.3954925537109375, 0.0, -0.09230387210845947, -0.00026166439056396484, 0.0, -0.22467041015625, -0.3992995321750641, -3.814697265625e-06, -0.000225067138671875, -0.08189773559570312, 0.0, 0.0, -0.017534255981445312, -0.00042247772216796875, -1.52587890625e-05, -0.0002346038818359375, -0.008226394653320312, -0.35779285430908203, -1.1444091796875e-05, -5.53131103515625e-05, -0.030737485736608505, -0.00040411949157714844, -0.00033295145840384066, -5.7220458984375e-05, -3.0517578125e-05, -0.0003757476806640625, -0.0001544952392578125, -7.62939453125e-06, -0.0002747774124145508, -0.01368570327758789, -1.9073486328125e-06, -4.9591064453125e-05, -2.288818359375e-05, -1.33514404296875e-05, -0.26531100273132324, 0.0, -1.9073486328125e-05, -1.71661376953125e-05, -5.340576171875e-05, 0.0, -0.0028676986694335938, -1.9073486328125e-06, -0.0048677921295166016, -9.5367431640625e-06, -0.5262947082519531, -5.7220458984375e-06, -0.0017578601837158203, -0.0012627840042114258, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 136, 19, 160, "Spell", "Cast", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -7.266969388552745, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(SpellCast(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector()), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector()))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.5825642347335815, -7.867813110351562e-06, 0.0, -0.00014495849609375, -0.000156402587890625, 0.0, 0.0, -0.0013217926025390625, -0.00041961669921875, -7.62939453125e-06, -0.0003490447998046875, -0.01187896728515625, -0.12079143524169922, -9.5367431640625e-06, -0.000102996826171875, -0.09647355228662491, -0.0009711980819702148, -0.0001164674322353676, -4.76837158203125e-05, -4.1961669921875e-05, -0.0003528594970703125, -0.00011444091796875, -1.33514404296875e-05, -0.0003110170364379883, -0.011381864547729492, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08881533145904541, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0037403106689453125, -1.9073486328125e-06, -0.0047560930252075195, -9.5367431640625e-06, -0.5339984893798828, -5.7220458984375e-06, -0.0007634162320755422, -0.0012784004211425781, 0.0, -0.0001354217529296875, -0.0026073455810546875, 0.0, 0.0, -0.15351295471191406, -5.7220458984375e-06, -0.000339508056640625, -0.00101470947265625, -0.5163002014160156, -3.814697265625e-06, 0.0, -0.3214606046676636, -0.06981182098388672, 0.0, -0.030580520629882812, -0.0002422332763671875, -0.0036678314208984375, -1.9073486328125e-05, -1.1444091796875e-05, -0.7121811509132385, -0.0001614093780517578, -0.001931905746459961, -8.96453857421875e-05, -8.392333984375e-05, -0.0010833740234375, -0.0003566741943359375, -7.62939453125e-06, -0.00030541419982910156, -0.03973209857940674, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -2.86102294921875e-05, -0.22632622718811035, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -0.0021657943725585938, -3.814697265625e-06, -0.005535244941711426, -5.7220458984375e-06, -1.1343307495117188, -5.7220458984375e-06, -0.018862128257751465, -0.00454401969909668, 0.0, -1.1444091796875e-05, -0.001110076904296875, 0.0, 0.0, -0.008568763732910156, -0.004981040954589844, -1.71661376953125e-05, -0.00012969970703125, -0.011578559875488281, -0.32363224029541016, -7.62939453125e-06, -0.000225067138671875, -0.03487465903162956, -0.00061798095703125, -0.00012731531751342118, -4.76837158203125e-05, -2.6702880859375e-05, -0.000431060791015625, -0.000171661376953125, -7.62939453125e-06, -0.0002995729446411133, -0.008488059043884277, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.37306392192840576, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0030355453491210938, -3.814697265625e-06, -0.0046694278717041016, -9.5367431640625e-06, -0.8011684417724609, -5.7220458984375e-06, -0.0012652872828766704, -0.001408219337463379, 0.0], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 136, 19, 160, "Spell", "Cast", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -7.33872368743868, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(SpellCast(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector()), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            <UNK>Player())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.5825642347335815, -7.867813110351562e-06, 0.0, -0.00014495849609375, -0.000156402587890625, 0.0, 0.0, -0.0013217926025390625, -0.00041961669921875, -7.62939453125e-06, -0.0003490447998046875, -0.01187896728515625, -0.12079143524169922, -9.5367431640625e-06, -0.000102996826171875, -0.09647355228662491, -0.0009711980819702148, -0.0001164674322353676, -4.76837158203125e-05, -4.1961669921875e-05, -0.0003528594970703125, -0.00011444091796875, -1.33514404296875e-05, -0.0003110170364379883, -0.011381864547729492, -1.9073486328125e-06, -5.53131103515625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08881533145904541, 0.0, -1.71661376953125e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0037403106689453125, -1.9073486328125e-06, -0.0047560930252075195, -9.5367431640625e-06, -0.5339984893798828, -5.7220458984375e-06, -0.0007634162320755422, -0.0012784004211425781, 0.0, -0.0001354217529296875, -0.0026073455810546875, 0.0, 0.0, -0.15351295471191406, -5.7220458984375e-06, -0.000339508056640625, -0.00101470947265625, -0.5163002014160156, -3.814697265625e-06, 0.0, -0.3214606046676636, -0.06981182098388672, 0.0, -0.030580520629882812, -0.0002422332763671875, -0.0036678314208984375, -1.9073486328125e-05, -1.1444091796875e-05, -0.7121811509132385, -0.0001614093780517578, -0.001931905746459961, -8.96453857421875e-05, -8.392333984375e-05, -0.0010833740234375, -0.0003566741943359375, -7.62939453125e-06, -0.00030541419982910156, -0.03973209857940674, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -2.86102294921875e-05, -0.22632622718811035, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -0.0021657943725585938, -3.814697265625e-06, -0.005535244941711426, -5.7220458984375e-06, -1.1343307495117188, -5.7220458984375e-06, -0.018862128257751465, -0.00454401969909668, 0.0, -1.1444091796875e-05, -0.001110076904296875, 0.0, 0.0, -0.008568763732910156, -0.004981040954589844, -1.71661376953125e-05, -0.00012969970703125, -0.011578559875488281, -0.32363224029541016, -7.62939453125e-06, -0.000225067138671875, -0.03487465903162956, -0.00061798095703125, -0.00012731531751342118, -4.76837158203125e-05, -2.6702880859375e-05, -0.000431060791015625, -0.000171661376953125, -7.62939453125e-06, -0.0002995729446411133, -0.008488059043884277, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.37306392192840576, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0030355453491210938, -3.814697265625e-06, -0.0046694278717041016, -9.5367431640625e-06, -0.5990495681762695, -1.9073486328125e-06, -0.010999917984008789, -0.0002923011779785156, 0.0, -0.07739043235778809, -0.41514572501182556, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 136, 19, 160, "Spell", "Cast", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>"], "score": -7.637761591102382, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector())), Effect(SpellCast(AddCard(CardQuery(source=\n            CARD_SOURCE.<UNK>)), PlayerSelector()), ActionTag(AddCard(\n            CardQuery(source=CARD_SOURCE.<UNK>)), PlayerSelector(\n            <UNK>Player())))])\n", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -4.38690185546875e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.005081485956907272, -0.0001538873475510627, -0.00010990611917804927, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.91278076171875e-05, -0.007731437683105469, -0.0001239776611328125, -0.00011836781777674332, -1.7046926586772315e-05, -6.079673767089844e-06, -1.9073486328125e-06, -0.0016503953374922276, 0.0, -0.001094818115234375, -1.1444091796875e-05, -6.294241757132113e-05, 0.0, -0.1131439208984375, -6.866455078125e-05, -8.499620162183419e-05, -1.1920928244535389e-07, -0.007098575588315725, 0.0, -0.007304191589355469, -1.1444091796875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -0.2730426788330078, -1.9073486328125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.021900653839111328, 0.0, -1.33514404296875e-05, -3.4332275390625e-05, -0.06542396545410156, -5.7220458984375e-06, -1.9073486328125e-06, -0.527454137802124, -0.017203330993652344, -1.9073486328125e-06, -0.0001087188720703125, -1.33514404296875e-05, -2.09808349609375e-05, -5.5909156799316406e-05, 0.0, -0.0002079010009765625, -1.9073486328125e-05, -0.8702553510665894, -5.2928924560546875e-05, 0.0, -0.00012969970703125, -0.000186920166015625, 0.0, 0.0, -0.0007886886596679688, -0.000640869140625, -9.5367431640625e-06, -0.00054168701171875, -0.008929252624511719, -0.0963754653930664, -9.5367431640625e-06, -9.918212890625e-05, -0.07803618907928467, -0.0011464357376098633, -0.00010979169746860862, -4.57763671875e-05, -4.38690185546875e-05, -0.00035858154296875, -0.000118255615234375, -1.33514404296875e-05, -0.0003014802932739258, -0.01123964786529541, -1.9073486328125e-06, -5.340576171875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.08139848709106445, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -4.9591064453125e-05, 0.0, -0.0038299560546875, -1.9073486328125e-06, -0.004745602607727051, -9.5367431640625e-06, -0.5556697845458984, -5.7220458984375e-06, -0.0007730721845291555, -0.0012357234954833984, 0.0, -0.0001373291015625, -0.0026149749755859375, 0.0, 0.0, -0.1534748077392578, -5.7220458984375e-06, -0.0003414154052734375, -0.00099945068359375, -0.5036020278930664, -3.814697265625e-06, 0.0, -0.31380927562713623, -0.0693674087524414, 0.0, -0.030521392822265625, -0.000244140625, -0.00371551513671875, -1.9073486328125e-05, -1.1444091796875e-05, -0.7169820666313171, -0.0001614093780517578, -0.0019376277923583984, -8.96453857421875e-05, -8.58306884765625e-05, -0.0010814666748046875, -0.00035858154296875, -7.62939453125e-06, -0.00030350685119628906, -0.03980457782745361, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, -2.86102294921875e-05, -0.225225567817688, 0.0, -2.47955322265625e-05, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -0.0021648406982421875, -3.814697265625e-06, -0.0055381059646606445, -5.7220458984375e-06, -1.1323471069335938, -5.7220458984375e-06, -0.01887643337249756, -0.004544973373413086, 0.0, -1.1444091796875e-05, -0.0010986328125, 0.0, 0.0, -0.008557319641113281, -0.0049953460693359375, -1.71661376953125e-05, -0.00012969970703125, -0.01160430908203125, -0.3231992721557617, -7.62939453125e-06, -0.000225067138671875, -0.03485703840851784, -0.00061798095703125, -0.0001271961082238704, -4.76837158203125e-05, -2.6702880859375e-05, -0.000431060791015625, -0.0001735687255859375, -7.62939453125e-06, -0.0002995729446411133, -0.00848996639251709, -1.9073486328125e-06, -6.29425048828125e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.37234020233154297, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, -4.38690185546875e-05, 0.0, -0.0030336380004882812, -3.814697265625e-06, -0.0046694278717041016, -9.5367431640625e-06, -0.5995931625366211, -1.9073486328125e-06, -0.011003732681274414, -0.0002923011779785156, 0.0, -0.07739710807800293, -0.41515254974365234, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Archmage", "Antonidas", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 105, 188, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "LEGENDARY", "<EOS>", 109, 200, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 136, 19, 160, "Spell", "Cast", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "<UNK>", "Player", "<EOS>"], "score": -7.874284101735604, "model_output": {"_type": "Module", "body": [{"name": "ArchmageAntonidas", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Archmage Antonidas", "_type": "Template19", "hole2": "MAGE", "hole3": "LEGENDARY"}, {"hole1": 7, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}, {"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"hole1": "<UNK>Player", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-7.82012939453125e-05, -6.4849853515625e-05, -20.674821853637695], "choice_history": [80, 159, 294], "score": -20.674964904785156, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n"}
{"beams": [{"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.8264390230178833, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0010433197021484375, -2.86102294921875e-05, -3.24249267578125e-05, 0.0, -0.07222481817007065, -3.814697265625e-06, -0.0005245208740234375, -0.000762939453125, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, -5.91278076171875e-05, -0.0001888275146484375, 0.0, -0.13349032402038574, -1.9073486328125e-05, -3.814697265625e-06, -0.00301361083984375, -1.71661376953125e-05, -0.02507549710571766, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -1.0732033530375702, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -0.5833253860473633, -0.0017547607421875, -0.036594390869140625, -0.0011348724365234375, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -3.62396240234375e-05, -0.0001354217529296875, 0.0, -0.1587362289428711, -3.063678741455078e-05, -3.814697265625e-06, -0.010546684265136719, -2.86102294921875e-05, -0.02248683199286461, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -1.4611549673727495, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -1.207962989807129, -0.0001430511474609375, -0.025740623474121094, -0.00110626220703125, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, -0.0001468658447265625, 0.0, -0.16599130630493164, -3.826618194580078e-05, -3.814697265625e-06, -0.006709098815917969, -4.00543212890625e-05, -0.019240856170654297, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -2.073454741214846, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DRAGON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -2.9821290969848633, -1.9073486328125e-06, -0.001842498779296875, -0.0004558563232421875, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, 0.0, -2.288818359375e-05, -4.00543212890625e-05, -0.0001430511474609375, 0.0, -0.1258786916732788, -2.288818359375e-05, -3.814697265625e-06, -0.0048961639404296875, -2.288818359375e-05, -0.02486622892320156, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "targeting", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -3.786592731078599, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "targeting", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.8264390230178833, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0010433197021484375, -2.86102294921875e-05, -3.24249267578125e-05, 0.0, -0.07222481817007065, -3.814697265625e-06, -0.0005245208740234375, -0.000762939453125, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, -5.91278076171875e-05, -0.0001888275146484375, 0.0, -2.7419087886810303, -1.2993770724278875e-05, -3.814697265625e-06, -0.03691673278808594, -1.1444091796875e-05, -0.0002346038818359375, -3.385542368050665e-05, -0.3946826457977295, -0.08622153848409653], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "<EOS>"], "score": -4.171610284366579, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "<UNK>", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -3.3991832733154297, -1.919269561767578e-05, -0.004841804504394531, -0.000415802001953125, -1.33514404296875e-05, 0.0, -1.52587890625e-05, 0.0, -1.52587890625e-05, -4.38690185546875e-05, -0.00017547607421875, 0.0, -0.10411906242370605, -2.09808349609375e-05, -3.814697265625e-06, -0.007359504699707031, -1.52587890625e-05, -0.02629147656261921, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.188777198841308, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "MECH", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -0.5833253860473633, -0.0017547607421875, -0.036594390869140625, -0.0011348724365234375, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -3.62396240234375e-05, -0.0001354217529296875, 0.0, -3.0133771896362305, -3.373622530489229e-05, -1.9073486328125e-06, -0.006542205810546875, -5.7220458984375e-06, -0.022466663271188736, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.311749584795507, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.8264390230178833, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0010433197021484375, -2.86102294921875e-05, -3.24249267578125e-05, 0.0, -3.3371870517730713, 0.0, -0.0003757476806640625, -0.0009670257568359375, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, -5.53131103515625e-05, -0.000202178955078125, 0.0, -0.11324799060821533, -1.71661376953125e-05, -3.814697265625e-06, -0.0039272308349609375, -1.33514404296875e-05, -0.03204900398850441, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.3257989360145075, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "target_func", "_type": "Template7", "hole4": "find_friendly_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.8264390230178833, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0010433197021484375, -2.86102294921875e-05, -3.24249267578125e-05, 0.0, -0.07222481817007065, -3.814697265625e-06, -0.0005245208740234375, -0.000762939453125, -4.57763671875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -5.91278076171875e-05, -5.91278076171875e-05, -0.0001888275146484375, 0.0, -3.463972330093384, -2.8729436962748878e-05, -1.9073486328125e-06, -0.0029926300048828125, -3.814697265625e-06, -0.014753667637705803, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.393336945969168, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "target_func", "_type": "Template7", "hole4": "find_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -0.5833253860473633, -0.0017547607421875, -0.036594390869140625, -0.0011348724365234375, -1.1444091796875e-05, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, -3.62396240234375e-05, -0.0001354217529296875, 0.0, -2.807706832885742, -6.306066643446684e-05, -9.5367431640625e-06, -0.09702587127685547, -2.288818359375e-05, -0.000164031982421875, -3.4928310924442485e-05, -0.242924302816391, -0.10307247936725616], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "<EOS>"], "score": -4.520346092690488, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "<UNK>", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=hearthbreaker.DEMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -3.425936698913574, -5.7220458984375e-06, -0.5001020431518555, -0.0006351470947265625, -0.023896217346191406, -0.0010833740234375, -9.5367431640625e-06, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -5.91278076171875e-05, -2.86102294921875e-05, -0.000156402587890625, 0.0, -0.13749539852142334, -2.872943878173828e-05, -3.814697265625e-06, -0.010999679565429688, -3.0517578125e-05, -0.023414891213178635, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "hearthbreaker", "<EOS>", "DEMON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.729365870182846, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "hearthbreaker"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -1.207962989807129, -0.0001430511474609375, -0.025740623474121094, -0.00110626220703125, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, -0.0001468658447265625, 0.0, -2.9462952613830566, -3.075598942814395e-05, -1.9073486328125e-06, -0.0035467147827148438, -9.5367431640625e-06, -0.017697785049676895, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.849013306019515, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DRAGON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DRAGON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -1.207962989807129, -0.0001430511474609375, -0.025740623474121094, -0.00110626220703125, -3.814697265625e-06, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.0517578125e-05, -0.0001468658447265625, 0.0, -2.666804790496826, -3.743137858691625e-05, -9.5367431640625e-06, -0.1169891357421875, -1.9073486328125e-05, -0.0001773834228515625, -3.826617466984317e-05, -0.22249488532543182, -0.07690426707267761], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 282, 61, 250, "Buff", "<EOS>", "<UNK>", "<EOS>"], "score": -4.964906114565565, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DRAGON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": "add_buff", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"hole1": "<UNK>", "hole0": "Buff", "_type": "Template69"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -6.29425048828125e-05, -8.96453857421875e-05, -8.20159912109375e-05, -4.136476854910143e-05, -4.577635263558477e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0018683671951293945, -6.4849853515625e-05, -0.0001373291015625, -7.05718994140625e-05, -0.002613067626953125, -0.0010080337524414062, -0.0018240257631987333, -1.001357759378152e-05, -0.0017824172973632812, -8.20159912109375e-05, -0.5897866487503052, -7.62939453125e-06, -0.00579833984375, -7.62939453125e-06, -0.04078865051269531, -2.47955322265625e-05, -0.5833253860473633, -0.0017547607421875, -4.298187255859375, -0.0001773834228515625, -0.0946972668170929, 0.0, -0.0018427346367388964, 0.0], "choice_history": [80, 159, 295, 88, 138, "Bananas", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Bananas", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -5.6262286017308725, "model_output": {"_type": "Module", "body": [{"name": "Bananas", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Bananas", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-9.5367431640625e-06, -1.1444091796875e-05, -21.423185348510742], "choice_history": [80, 159, 294], "score": -21.423206329345703, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n"}
{"beams": [{"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -0.04813957214355469, -0.0004291534423828125, -2.47955322265625e-05, -1.71661376953125e-05, -0.0008220672607421875, -4.76837158203125e-05, -2.4557106371503323e-05, -1.71661376953125e-05, -0.000518798828125, 0.0, -0.000225067138671875, -0.000186920166015625, -3.814697265625e-06, -4.887569048150908e-06, -1.561641511216294e-05, -0.0001923877716762945, -4.76837158203125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.003538894932717085, -3.814697265625e-06, -0.0002536773681640625, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -7.283687591552734e-05, -8.344646857949556e-07, -0.0006618499755859375, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -2.3126602172851562e-05, -1.0728830375228426e-06, -0.13148212432861328, -1.7404556274414062e-05, -4.76837158203125e-05, -0.0023298263549804688, -0.000148773193359375, -0.0019006729125976562, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -2.47955322265625e-05, -0.000171661376953125, -4.00543212890625e-05, -3.814697265625e-06, -0.0012383460998535156, -2.09808349609375e-05, -4.57763671875e-05, -1.1920928244535389e-07, -0.18503296375274658, -0.00033473968505859375, -0.26366519927978516, -0.3415870666503906, -2.288818359375e-05, 0.0, -0.0020427703857421875, -1.9073486328125e-06, -0.00048065185546875, -0.0002079010009765625, -0.0001201629638671875, -1.9073486328125e-06, -0.3436164855957031, -7.68899917602539e-05, -1.9073486328125e-06, -0.5349521636962891, -3.814697265625e-06, -0.00316619873046875, -7.62939453125e-06, -0.000518798828125, 0.0, -0.00048148632049560547, -5.7220458984375e-05, -1.9073486328125e-05, -2.47955322265625e-05, -0.10342228412628174, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Blessed", " ", "Champion", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -1.9792975503369092, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -0.04813957214355469, -0.0004291534423828125, -2.47955322265625e-05, -1.71661376953125e-05, -0.0008220672607421875, -4.76837158203125e-05, -2.4557106371503323e-05, -1.71661376953125e-05, -0.000518798828125, 0.0, -0.000225067138671875, -0.000186920166015625, -3.814697265625e-06, -4.887569048150908e-06, -1.561641511216294e-05, -0.0001923877716762945, -4.76837158203125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.003538894932717085, -3.814697265625e-06, -0.0002536773681640625, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -7.283687591552734e-05, -8.344646857949556e-07, -0.0006618499755859375, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -2.3126602172851562e-05, -1.0728830375228426e-06, -0.13148212432861328, -1.7404556274414062e-05, -4.76837158203125e-05, -0.0023298263549804688, -0.000148773193359375, -0.0019006729125976562, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -2.47955322265625e-05, -0.000171661376953125, -4.00543212890625e-05, -3.814697265625e-06, -0.0012383460998535156, -2.09808349609375e-05, -4.57763671875e-05, -1.1920928244535389e-07, -0.18503296375274658, -0.00033473968505859375, -0.26366519927978516, -1.3839092254638672, -0.004332542419433594, 0.0, -0.000476837158203125, -5.7220458984375e-06, -0.00011444091796875, -0.0002117156982421875, -6.67572021484375e-05, -5.7220458984375e-06, -0.05519509315490723, -3.349775215610862e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Blessed", " ", "Champion", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 224, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "score": -2.09283128555397, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -0.04813957214355469, -0.0004291534423828125, -2.47955322265625e-05, -1.71661376953125e-05, -0.0008220672607421875, -4.76837158203125e-05, -2.4557106371503323e-05, -1.71661376953125e-05, -0.000518798828125, 0.0, -0.000225067138671875, -0.000186920166015625, -3.814697265625e-06, -4.887569048150908e-06, -1.561641511216294e-05, -0.0001923877716762945, -4.76837158203125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.003538894932717085, -3.814697265625e-06, -0.0002536773681640625, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -7.283687591552734e-05, -8.344646857949556e-07, -0.0006618499755859375, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -2.3126602172851562e-05, -1.0728830375228426e-06, -0.13148212432861328, -1.7404556274414062e-05, -4.76837158203125e-05, -0.0023298263549804688, -0.000148773193359375, -0.0019006729125976562, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -2.47955322265625e-05, -0.000171661376953125, -4.00543212890625e-05, -3.814697265625e-06, -0.0012383460998535156, -2.09808349609375e-05, -4.57763671875e-05, -1.1920928244535389e-07, -0.18503296375274658, -0.00033473968505859375, -0.26366519927978516, -0.3415870666503906, -2.288818359375e-05, 0.0, -0.0020427703857421875, -1.9073486328125e-06, -0.00048065185546875, -0.0002079010009765625, -0.0001201629638671875, -1.9073486328125e-06, -0.3436164855957031, -7.68899917602539e-05, -1.9073486328125e-06, -1.3140077590942383, -1.9073486328125e-06, -0.6174435615539551, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Blessed", " ", "Champion", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -3.268108757154536, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(self.target.\n            calculate_attack()), self)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -1.215153694152832, -0.0025005340576171875, -0.0003604888916015625, 0.0, -0.0023941993713378906, -4.57763671875e-05, -0.00018310546875, -0.0006313323974609375, -2.09808349609375e-05, -0.24793720245361328, -0.0026092529296875, -0.000431060791015625, 0.0, -0.0044574737548828125, -9.5367431640625e-06, -0.001865386962890625, -1.9073486328125e-06, -0.9426918029785156, -5.91278076171875e-05, -2.09808349609375e-05, -8.58306884765625e-05, -0.045017123222351074, -0.00020241737365722656], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "score": -6.303218602715781, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -0.7642240524291992, -0.011341094970703125, -0.0002079010009765625, 0.0, -0.00074005126953125, 0.0, -0.0020246505737304688, -5.53131103515625e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.7330349683761597, -7.259845733642578e-05, -3.814697265625e-06, -0.9220380783081055, -1.9073486328125e-06, -0.003935813903808594, -2.288818359375e-05, -4.38690185546875e-05, 0.0, -0.0014371871948242188, -3.4332275390625e-05, -1.9073486328125e-05, -3.24249267578125e-05, -0.1564103364944458, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -6.432343720971396, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -0.7642240524291992, -0.011341094970703125, -0.0002079010009765625, 0.0, -0.00074005126953125, 0.0, -0.0020246505737304688, -5.53131103515625e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.7330349683761597, -7.259845733642578e-05, -3.814697265625e-06, -0.6592178344726562, 0.0, -0.6896958351135254, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -6.6972910161603, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(<UNK>)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -0.7642240524291992, -0.011341094970703125, -0.0002079010009765625, 0.0, -0.00074005126953125, 0.0, -0.0020246505737304688, -5.53131103515625e-05, -0.0001163482666015625, -1.9073486328125e-06, -2.186994791030884, -6.699562072753906e-05, -0.00014495849609375, -0.09749794006347656, 0.0, -0.02919626235961914, -2.396106719970703e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>"], "score": -6.929175614892294, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "<UNK>", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.health)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -0.7642240524291992, -0.011341094970703125, -0.0002079010009765625, 0.0, -0.00074005126953125, 0.0, -0.0020246505737304688, -5.53131103515625e-05, -0.0001163482666015625, -1.9073486328125e-06, -1.600443720817566, -0.03879666328430176, -7.62939453125e-06, -0.5283975601196289, -1.9073486328125e-06, -0.0029125213623046875, -4.00543212890625e-05, -0.000225067138671875, 0.0, -0.003640413284301758, -4.00543212890625e-05, -2.288818359375e-05, -3.62396240234375e-05, -0.2047802209854126, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -6.9946070905316375, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(player.<UNK>.\n            calculate_attack()), self)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -1.215153694152832, -0.0025005340576171875, -0.0003604888916015625, 0.0, -0.0023941993713378906, -4.57763671875e-05, -0.00018310546875, -0.0006313323974609375, -2.09808349609375e-05, -0.24793720245361328, -0.0026092529296875, -0.000431060791015625, 0.0, -0.0044574737548828125, -9.5367431640625e-06, -0.001865386962890625, -1.9073486328125e-06, -0.4960966110229492, 0.0, -0.9461407661437988, -3.933904736186378e-06, -0.339502215385437, -4.029273986816406e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", "calculate_attack", "<EOS>"], "score": -7.096925139006991, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "calculate_attack"}}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.<UNK>(<UNK>)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -0.04813957214355469, -0.0004291534423828125, -2.47955322265625e-05, -1.71661376953125e-05, -0.0008220672607421875, -4.76837158203125e-05, -2.4557106371503323e-05, -1.71661376953125e-05, -0.000518798828125, 0.0, -0.000225067138671875, -0.000186920166015625, -3.814697265625e-06, -4.887569048150908e-06, -1.561641511216294e-05, -0.0001923877716762945, -4.76837158203125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.003538894932717085, -3.814697265625e-06, -0.0002536773681640625, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -7.283687591552734e-05, -8.344646857949556e-07, -0.0006618499755859375, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -2.3126602172851562e-05, -1.0728830375228426e-06, -0.13148212432861328, -1.7404556274414062e-05, -4.76837158203125e-05, -0.0023298263549804688, -0.000148773193359375, -0.0019006729125976562, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -2.47955322265625e-05, -0.000171661376953125, -4.00543212890625e-05, -3.814697265625e-06, -0.0012383460998535156, -2.09808349609375e-05, -4.57763671875e-05, -1.1920928244535389e-07, -0.18503296375274658, -0.00033473968505859375, -1.4826908111572266, -6.866455078125e-05, -0.000171661376953125, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -9.918212890625e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -5.340576171875e-05, -0.0031282901763916016, -7.152555099310121e-07, -0.20248126983642578, -0.0003910064697265625, -3.814697265625e-06, -1.33514404296875e-05, -2.47955322265625e-05, -8.0108642578125e-05, 0.0, -0.00081634521484375, 0.0, -0.0002987384214065969, -8.58306884765625e-05, -0.000331878662109375, -3.814697265625e-06, -2.288818359375e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.0002117156982421875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002231597900390625, -1.3828277587890625e-05, -0.001018524169921875, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.7772203683853149, -0.00342559814453125, -0.0004405975341796875, -0.00395965576171875, -0.0002231597900390625, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.04097557067871094, -1.9073486328125e-06, -0.002927422523498535, -1.71661376953125e-05, -0.0001277923583984375, -5.7220458984375e-06, -0.04633605480194092, -0.0010956525802612305, -0.04326915740966797, -3.62396240234375e-05, -2.6702880859375e-05, -0.0025272369384765625, -5.7220458984375e-06, -0.672026515007019, -7.987013304955326e-06, -0.009394645690917969, -5.7220458984375e-06, -0.0002117156982421875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.004715085029602051, -1.71661376953125e-05, -9.72747802734375e-05, -1.52587890625e-05, -0.09071958065032959, -1.9192693798686378e-05, -0.0011310577392578125, -0.6599721908569336, -0.000949859619140625, -9.918212890625e-05, -0.00014495849609375, -0.0001983642578125, -0.7041988372802734, -7.62939453125e-06, -1.9073486328125e-06, -0.07604789733886719, -5.7220458984375e-06, -0.0002288818359375, -5.7220458984375e-06, -0.0016126625705510378, -3.814697265625e-06, -0.0002002716064453125, -1.0034599304199219, -0.0002803802490234375, -0.1773052215576172, -0.0003986358642578125, -5.340576171875e-05, -1.9073486328125e-06, -0.0004177093505859375, 0.0, -0.000118255615234375, -4.57763671875e-05, -0.0081101655960083, -0.000141143798828125, -0.000263214111328125, -1.9073486328125e-06, -0.20024490356445312, -0.00019168853759765625, -0.00035858154296875, -0.0007381439208984375, -0.0002193450927734375, -0.00031280517578125, -4.57763671875e-05, -0.010686874389648438, -0.005092620849609375, -1.9073486328125e-06, -0.0001354217529296875, -0.0199127197265625, -3.814697265625e-06, -7.62939453125e-06, -0.0002918243408203125, -1.9073486328125e-06, -0.000446319580078125, -3.814697265625e-06, -0.00019657611846923828, -4.57763671875e-05, -0.0002536773681640625, -1.9073486328125e-06, -0.11681747436523438, -7.748603820800781e-06, -5.53131103515625e-05, -0.002239227294921875, -1.9073486328125e-06, -0.03197193145751953, -8.58306884765625e-06, -0.0005588531494140625, -1.9073486328125e-06, -0.0012493133544921875, -0.04884147644042969, -5.7220458984375e-06, 0.0, -0.0010814666748046875, -3.814697265625e-06, -0.0005950927734375, -1.33514404296875e-05, -0.0011101961135864258, -9.1552734375e-05, -0.0005025863647460938, 0.0, -0.24927139282226562, -7.748603820800781e-06, -2.6702880859375e-05, -0.002552032470703125, -1.9073486328125e-06, -0.04041147232055664, -8.70227722771233e-06], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Blessed", " ", "Champion", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "temp_attack", "<EOS>", 14, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 92, 147, 15, 139, 19, 160, "temp_attack", "<EOS>", 279, 2, 282, 47, 165, "0", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 46, 162, "Null", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>"], "score": -7.149546773277265, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}, "targets": [{"_type": "Name", "id": "temp_attack"}], "_type": "Assign"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}], "_type": "If", "orelse": [{"value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "test": {"_type": "Compare", "left": {"_type": "Name", "id": "temp_attack"}, "ops": [{"_type": "Eq"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -1.6810914278030396, -7.62939453125e-06, -0.47124576568603516, 0.0, -0.014332771301269531, -0.00565338134765625, -0.0001049041748046875, 0.0, -0.0007762908935546875, 0.0, -0.0007781982421875, -3.0517578125e-05, -0.0001316070556640625, -3.814697265625e-06, -0.6767499446868896, -0.00023090839385986328, -1.9073486328125e-06, -1.106027603149414, -1.9073486328125e-06, -0.0018463134765625, -3.0517578125e-05, -5.53131103515625e-05, 0.0, -0.0023488998413085938, -3.4332275390625e-05, -1.71661376953125e-05, -2.47955322265625e-05, -0.25223875045776367, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -7.3652558322537445, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(<UNK>)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -0.562470555305481, 0.0, -0.12258338928222656, 0.0, -0.7642240524291992, -0.011341094970703125, -0.0002079010009765625, 0.0, -0.00074005126953125, 0.0, -0.0020246505737304688, -5.53131103515625e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.7330349683761597, -7.259845733642578e-05, -3.814697265625e-06, -0.6592178344726562, 0.0, -1.4064931869506836, -6.19888032815652e-06], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "DRUID", "<EOS>", "RARE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>"], "score": -7.4140793080887235, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "DRUID", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "RARE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "<UNK>"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -3.1176910400390625, -0.0018205642700195312, -1.8358125089434907e-05, -0.02554476261138916, -1.8358230590820312e-05, -8.0108642578125e-05, -1.6810914278030396, -7.62939453125e-06, -0.47124576568603516, 0.0, -0.014332771301269531, -0.00565338134765625, -0.0001049041748046875, 0.0, -0.0007762908935546875, 0.0, -0.0007781982421875, -3.0517578125e-05, -0.0001316070556640625, -3.814697265625e-06, -0.6767499446868896, -0.00023090839385986328, -1.9073486328125e-06, -0.736724853515625, 0.0, -0.7934598922729492, -2.09808349609375e-05], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 23, 201, "Blessed", " ", "Champion", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 45, 160, "self", "<EOS>"], "score": -7.5328302379239105, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"hole1": "PALADIN", "hole0": "Blessed Champion", "_type": "Template25", "hole2": "FREE"}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Name", "id": "self"}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.change_attack(<UNK>)\n", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -9.894321920000948e-06, -2.7537107598618604e-05, -1.1920928244535389e-07, -0.000263214111328125, 0.0, 0.0, -0.00017595291137695312, -3.933906555175781e-06, -7.867813110351562e-06, -0.000579833984375, -0.004899024963378906, -1.9073486328125e-06, -5.8770154282683507e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, -3.62396240234375e-05, -5.53131103515625e-05, -6.103515625e-05, -0.04813957214355469, -0.0004291534423828125, -2.47955322265625e-05, -1.71661376953125e-05, -0.0008220672607421875, -4.76837158203125e-05, -2.4557106371503323e-05, -1.71661376953125e-05, -0.000518798828125, 0.0, -0.000225067138671875, -0.000186920166015625, -3.814697265625e-06, -4.887569048150908e-06, -1.561641511216294e-05, -0.0001923877716762945, -4.76837158203125e-05, -4.57763671875e-05, -3.814697265625e-06, -0.003538894932717085, -3.814697265625e-06, -0.0002536773681640625, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -7.283687591552734e-05, -8.344646857949556e-07, -0.0006618499755859375, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -5.91278076171875e-05, -5.340576171875e-05, -2.3126602172851562e-05, -1.0728830375228426e-06, -0.13148212432861328, -1.7404556274414062e-05, -4.76837158203125e-05, -0.0023298263549804688, -0.000148773193359375, -0.0019006729125976562, 0.0, -0.0001239776611328125, -9.5367431640625e-06, -2.47955322265625e-05, -0.000171661376953125, -4.00543212890625e-05, -3.814697265625e-06, -0.0012383460998535156, -2.09808349609375e-05, -4.57763671875e-05, -1.1920928244535389e-07, -0.18503296375274658, -0.00033473968505859375, -1.4826908111572266, -6.866455078125e-05, -0.000171661376953125, -1.9073486328125e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -9.918212890625e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -5.340576171875e-05, -0.0031282901763916016, -7.152555099310121e-07, -0.20248126983642578, -0.0003910064697265625, -3.814697265625e-06, -1.33514404296875e-05, -2.47955322265625e-05, -8.0108642578125e-05, 0.0, -0.00081634521484375, 0.0, -0.0002987384214065969, -8.58306884765625e-05, -0.000331878662109375, -3.814697265625e-06, -2.288818359375e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.0002117156982421875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.0002231597900390625, -1.3828277587890625e-05, -0.001018524169921875, -8.58306884765625e-05, -3.24249267578125e-05, -0.0001354217529296875, -1.9073486328125e-06, -0.7772203683853149, -0.00342559814453125, -0.0004405975341796875, -0.00395965576171875, -0.0002231597900390625, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.04097557067871094, -1.9073486328125e-06, -0.002927422523498535, -1.71661376953125e-05, -0.0001277923583984375, -5.7220458984375e-06, -0.04633605480194092, -0.0010956525802612305, -0.04326915740966797, -3.62396240234375e-05, -2.6702880859375e-05, -0.0025272369384765625, -5.7220458984375e-06, -0.672026515007019, -7.987013304955326e-06, -0.009394645690917969, -5.7220458984375e-06, -0.0002117156982421875, -1.9073486328125e-06, -0.000255584716796875, 0.0, -0.004715085029602051, -1.71661376953125e-05, -9.72747802734375e-05, -1.52587890625e-05, -0.09071958065032959, -1.9192693798686378e-05, -0.0011310577392578125, -0.6599721908569336, -0.000949859619140625, -9.918212890625e-05, -0.00014495849609375, -0.0001983642578125, -0.7041988372802734, -7.62939453125e-06, -1.9073486328125e-06, -0.07604789733886719, -5.7220458984375e-06, -0.0002288818359375, -5.7220458984375e-06, -0.0016126625705510378, -3.814697265625e-06, -0.0002002716064453125, -1.0034599304199219, -0.0002803802490234375, -0.1773052215576172, -0.0003986358642578125, -5.340576171875e-05, -1.9073486328125e-06, -0.0004177093505859375, 0.0, -0.000118255615234375, -4.57763671875e-05, -0.0081101655960083, -0.000141143798828125, -0.000263214111328125, -1.9073486328125e-06, -0.20024490356445312, -0.00019168853759765625, -0.00035858154296875, -0.0007381439208984375, -0.0002193450927734375, -0.00031280517578125, -4.57763671875e-05, -0.010686874389648438, -0.005092620849609375, -1.9073486328125e-06, -0.0001354217529296875, -0.0199127197265625, -3.814697265625e-06, -7.62939453125e-06, -0.0002918243408203125, -1.9073486328125e-06, -0.000446319580078125, -3.814697265625e-06, -0.00019657611846923828, -4.57763671875e-05, -0.0002536773681640625, -1.9073486328125e-06, -0.11681747436523438, -7.748603820800781e-06, -5.53131103515625e-05, -0.002239227294921875, -1.9073486328125e-06, -0.03197193145751953, -8.58306884765625e-06, -0.0005588531494140625, -1.9073486328125e-06, -0.0012493133544921875, -0.04884147644042969, -5.7220458984375e-06, 0.0, -0.0010814666748046875, -3.814697265625e-06, -0.0005950927734375, -1.33514404296875e-05, -0.0011101961135864258, -9.1552734375e-05, -0.0005025863647460938, 0.0, -2.1496334075927734, -0.0008440017700195312, -4.00543212890625e-05, -0.22277545928955078, -5.7220458984375e-06, -0.528874397277832, -6.79492904964718e-06], "choice_history": [80, 159, 295, 88, 138, "Blessed", "Champion", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Blessed", " ", "Champion", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "temp_attack", "<EOS>", 14, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 92, 147, 15, 139, 19, 160, "temp_attack", "<EOS>", 279, 2, 282, 47, 165, "0", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 46, 162, "Null", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 45, 160, "<UNK>", "<EOS>"], "score": -9.759446651779612, "model_output": {"_type": "Module", "body": [{"name": "BlessedChampion", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}, "targets": [{"_type": "Name", "id": "temp_attack"}], "_type": "Assign"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}], "_type": "If", "orelse": [{"value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}], "test": {"_type": "Compare", "left": {"_type": "Name", "id": "temp_attack"}, "ops": [{"_type": "Eq"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-2.288818359375e-05, -1.52587890625e-05, -21.19103240966797], "choice_history": [80, 159, 294], "score": -21.191070556640625, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n"}
{"beams": [{"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(6), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.38721370697021484, -0.17723000049591064, -0.00016427040100097656, -0.0006721019162796438, -3.814697265625e-06, -0.0020599365234375, -7.05718994140625e-05, -0.7679526209831238, 0.0, -0.00093841552734375, -4.9591064453125e-05, -0.00709378719329834, -6.377696990966797e-05, -1.9073486328125e-06, -0.0006427764892578125, -1.1444091796875e-05, -8.308848191518337e-05, -1.6689286894688848e-06, -0.005045173689723015, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Attack", "Greater", "Than", "<EOS>", 282, 47, 165, "6", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -2.0852024794025326, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "AttackGreaterThan"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.BEAST), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.1783933639526367, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.00060272216796875, -4.0531158447265625e-06, -0.31571388244628906, -1.1920928244535389e-07, -0.0003566741943359375, 0.0, -0.013254284858703613, -1.6570085790590383e-05, -3.814697265625e-06, -0.019519805908203125, -1.9073486328125e-06, -8.666468784213066e-05, -1.4305104514278355e-06, -0.00436445651575923, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -2.268542698697992, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Replace(), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -2.1207401752471924, -0.0008611673256382346, -0.06852912902832031, -0.002742767333984375, -0.13721084594726562, -0.00018131732940673828, 0.0, -0.00063323974609375, -3.814697265625e-06, -0.0001462628715671599, -2.1457672119140625e-06, -0.0077086626552045345, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Replace", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -2.778451336151136, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Replace", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.1783933639526367, -0.0003037452697753906, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -0.00060272216796875, -4.0531158447265625e-06, -1.5674095153808594, -1.1920928244535389e-07, -0.000904083251953125, 0.0, -0.005199432373046875, -1.0013571227318607e-05, -1.9073486328125e-06, -0.007963180541992188, -3.814697265625e-06, -8.368436829186976e-05, -1.0728830375228426e-06, -0.005165793001651764, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -3.501965704862677, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(1), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.38721370697021484, -0.17723000049591064, -0.00016427040100097656, -0.0006721019162796438, -3.814697265625e-06, -0.0020599365234375, -7.05718994140625e-05, -2.043024778366089, -1.9073486328125e-06, -0.006801605224609375, -0.00079345703125, -0.3209792375564575, -9.953975677490234e-05, -3.814697265625e-06, -0.0003604888916015625, -5.7220458984375e-06, -0.00012683580280281603, -9.536738616588991e-07, -0.004957195837050676, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Attack", "Greater", "Than", "<EOS>", 282, 47, 165, "1", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -3.680473764866683, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "AttackGreaterThan"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(TakeAttack())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -1.8299369812011719, -0.000263214111328125, -5.340576171875e-05, -4.38690185546875e-05, -0.008057213388383389, -1.3828268492943607e-05, -0.000202178955078125, -0.13913536071777344, -0.000148773193359375, -0.004803657531738281, -0.5754175186157227, -0.02040576934814453, -0.09743905067443848, -5.7220458984375e-06, -0.021234512329101562, -1.9073486328125e-05, -0.0006923675537109375, -0.0002867775037884712, -0.5089789032936096, -0.2944001853466034, -3.099436753473128e-06, -0.06911849975585938, 0.0, -0.0014264583587646484, -6.246566044865176e-05, -1.1920928244535389e-07, -0.011571884155273438, -7.62939453125e-06, -0.00010847892554011196, -1.311301275563892e-06, -0.003173589473590255, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 43, 155, 283, 58, 244, "1", "<EOS>", 61, 250, "Buff", "<EOS>", "Take", "Attack", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -3.7620983032717703, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"args": [{"_type": "List", "elts": [{"hole0": 1, "_type": "Template61"}, {"hole1": "TakeAttack", "hole0": "Buff", "_type": "Template69"}]}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(2())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -1.8299369812011719, -0.000263214111328125, -5.340576171875e-05, -4.38690185546875e-05, -0.008057213388383389, -1.3828268492943607e-05, -0.000202178955078125, -0.13913536071777344, -0.000148773193359375, -0.004803657531738281, -0.5754175186157227, -0.02040576934814453, -0.09743905067443848, -5.7220458984375e-06, -0.021234512329101562, -1.9073486328125e-05, -0.0006923675537109375, -0.0002867775037884712, -0.9284729361534119, -0.002800319343805313, -0.12240791320800781, -3.814697265625e-06, -0.02099752239882946, -2.5510787963867188e-05, 0.0, -0.003177642822265625, -5.7220458984375e-06, -0.0001654602529015392, -1.0728830375228426e-06, -0.0029082295950502157, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 43, 155, 283, 58, 244, "1", "<EOS>", 61, 250, "Buff", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -3.954211703939393, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"args": [{"_type": "List", "elts": [{"hole0": 1, "_type": "Template61"}, {"hole1": "2", "hole0": "Buff", "_type": "Template69"}]}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(0), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.38721370697021484, -0.17723000049591064, -0.00016427040100097656, -0.0006721019162796438, -3.814697265625e-06, -0.0020599365234375, -7.05718994140625e-05, -2.8548638820648193, -2.348422094655689e-05, -0.19525814056396484, -2.6702880859375e-05, -0.04504799842834473, -5.555152893066406e-05, -1.9073486328125e-06, -0.000370025634765625, -9.5367431640625e-06, -7.319437281694263e-05, -1.1920922133867862e-06, -0.005015849135816097, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Attack", "Greater", "Than", "<EOS>", 282, 47, 165, "Action", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -4.404065693649663, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "AttackGreaterThan"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(picker=RandomPicker()))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -2.7780227661132812, -0.001434326171875, -1.442432312614983e-05, -0.0006389617919921875, -5.7220458984375e-06, -0.22256481647491455, -3.814697265625e-06, -0.000858306884765625, -0.0060062408447265625, 0.0, -0.4675668478012085, -1.33514404296875e-05, -0.45301246643066406, -0.05424785614013672, -3.0517578125e-05, -3.814697265625e-06, -0.10182487964630127, -0.0002880096435546875, -2.3841855067985307e-07, -0.1196746826171875, -3.0517578125e-05, -1.9073486328125e-06, -0.0012379884719848633, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.07136058807373047, -0.00010156631469726562, 0.0, -0.0020809173583984375, -2.86102294921875e-05, -4.673000512411818e-05, -2.50339189733495e-06, -0.004757404327392578, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -4.460987355646807, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 2}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(1))]), MinionSelector(picker=RandomPicker()))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -2.7780227661132812, -0.001434326171875, -1.442432312614983e-05, -0.0006389617919921875, -5.7220458984375e-06, -0.22256481647491455, -3.814697265625e-06, -0.000858306884765625, -0.0060062408447265625, 0.0, -1.0269008874893188, -1.71661376953125e-05, -0.18215370178222656, -0.0154571533203125, -4.1961669921875e-05, -1.9073486328125e-06, -0.07027053833007812, -0.00023651123046875, -2.3841855067985307e-07, -0.029941558837890625, -2.86102294921875e-05, -1.9073486328125e-06, -0.0014690160751342773, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -0.03759765625, -0.00012433528900146484, 0.0, -0.0020847320556640625, -3.24249267578125e-05, -4.3272932089166716e-05, -2.7418097943154862e-06, -0.005069255828857422, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -4.55614581339853, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -2.7780227661132812, -0.001434326171875, -1.442432312614983e-05, -0.0006389617919921875, -5.7220458984375e-06, -0.22256481647491455, -3.814697265625e-06, -0.000858306884765625, -0.0060062408447265625, 0.0, -0.4675668478012085, -1.33514404296875e-05, -1.013819694519043, -2.09808349609375e-05, -0.0016061067581176758, -0.00020229816436767578, 0.0, -0.02994823455810547, -1.52587890625e-05, -0.0010384742636233568, -2.384185791015625e-06, -0.006712849251925945, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -4.705582145960705, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(3), MinionSelector(IsType(MINION_TYPE.BEAST),\n            BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.38721370697021484, -0.17723000049591064, -0.00016427040100097656, -0.0006721019162796438, -3.814697265625e-06, -0.0020599365234375, -7.05718994140625e-05, -1.8048503398895264, 0.0, -0.22621917724609375, -0.045635223388671875, -1.1444091796875e-05, 0.0, -0.10424423217773438, -0.0003185272216796875, -2.3841855067985307e-07, -0.16753005981445312, -0.3178396224975586, -3.0517578125e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.21380722522735596, -0.00022208689188119024, -1.1920928244535389e-07, -3.62396240234375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, -7.748603820800781e-06, -0.8238010406494141, -2.2649765014648438e-06, -0.001934051513671875, -1.9073486328125e-06, -0.032708168029785156, -7.390974587906385e-06, -5.7220458984375e-06, -0.0075473785400390625, -2.09808349609375e-05, -8.785639511188492e-05, -1.4305104514278355e-06, -0.0030789265874773264, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Attack", "Greater", "Than", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -5.053394033931241, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "AttackGreaterThan"}}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(3), MinionSelector(IsType(\n            MINION_TYPE.PIRATE), BothPlayer()))))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -0.2645845413208008, -2.09808349609375e-05, -0.2686322331428528, -1.3351433153729886e-05, -0.0042171478271484375, -0.0075283050537109375, -3.814697265625e-06, 0.0, -0.0009073019027709961, -0.0014629364013671875, -1.1920928244535389e-07, -0.013301849365234375, -0.0001068115234375, -1.1444091796875e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.38721370697021484, -1.9168349504470825, -0.06057536229491234, -0.06703018397092819, -0.05270092934370041, -0.012246131896972656, -1.537799835205078e-05, -1.9073486328125e-05, -0.0007038116455078125, -3.814697265625e-06, -0.5171458125114441, 0.0, -0.4763936996459961, -0.02821826934814453, -7.62939453125e-06, 0.0, -0.21686077117919922, -0.000396728515625, -2.3841855067985307e-07, -0.15584564208984375, -0.04339122772216797, -2.288818359375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.2542264461517334, -0.00020146367023698986, -1.1920928244535389e-07, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -5.91278076171875e-05, -5.841255187988281e-06, -0.8990516662597656, -2.0265579223632812e-06, -0.005260467529296875, 0.0, -0.027746200561523438, -6.43729799776338e-06, -3.814697265625e-06, -0.0054416656494140625, -2.288818359375e-05, -8.380351209780201e-05, -9.536738616588991e-07, -0.0036231211852282286, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Kill", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 68, 260, "Both", "Player", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -5.867344319987197, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"hole0": "Kill", "_type": "Template77"}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "BothPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class CabalPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Count(MinionSelector(MinionHas2(), EnemyPlayer())))), Buff(\n            ChangeHealth(Count(MinionSelector(MinionHas2(), EnemyPlayer()))\n            ))]), MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-4.57763671875e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0007838514284230769, -0.009915871545672417, -0.016603710129857063, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -3.576278118089249e-07, -0.0003566741943359375, -0.005526542663574219, -0.0002384185791015625, -1.6212332411669195e-05, -5.6504501117160544e-05, -0.0026978233363479376, -0.030612945556640625, -0.0004048880364280194, -1.9073486328125e-06, -0.0012073516845703125, 0.0, -0.08407843112945557, 0.0, -0.01964282989501953, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.001704096794128418, -7.62939453125e-06, -0.001079559326171875, -1.8299369812011719, -0.000263214111328125, -5.340576171875e-05, -4.38690185546875e-05, -0.008057213388383389, -1.3828268492943607e-05, -0.000202178955078125, -0.13913536071777344, -0.000148773193359375, -0.004803657531738281, -1.0988168716430664, -0.0001544952392578125, -0.0049581509083509445, -0.03789329528808594, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003662109375, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.3749086856842041, -0.00013113021850585938, -0.0001373291015625, -0.026045799255371094, -0.014678955078125, -7.62939453125e-06, 0.0, -0.022803544998168945, -0.0009708404541015625, -3.576278118089249e-07, -0.008558273315429688, -0.08408164978027344, -6.103515625e-05, -0.12872910499572754, -0.028141621500253677, -0.3999965190887451, -6.54458999633789e-05, -3.24249267578125e-05, -3.814697265625e-06, -0.014100313186645508, -0.00028443336486816406, -5.960462772236497e-07, -0.07230567932128906, -0.0004558563232421875, -0.0015698634088039398, -0.10586261749267578, -1.9073486328125e-06, -6.67572021484375e-05, -0.0004558563232421875, -0.000102996826171875, -3.814697265625e-06, -1.9073486328125e-06, -0.14383625984191895, -0.0002510547637939453, -8.7738037109375e-05, -0.012735366821289062, -0.0023937225341796875, -2.288818359375e-05, 0.0, -0.004131793975830078, -0.0005723237991333008, -1.311301275563892e-06, -0.0018463134765625, -0.15311622619628906, -1.9073486328125e-05, -0.1528690606355667, -0.027251001447439194, -0.5299766063690186, -7.319450378417969e-05, -4.57763671875e-05, -3.814697265625e-06, -0.014658451080322266, -0.00032269954681396484, -3.576278118089249e-07, -0.5366621017456055, -0.0022430419921875, -0.005362033843994141, -2.47955322265625e-05, 0.0, -0.0005207061767578125, -3.62396240234375e-05, -5.161702574696392e-05, -2.3841830625315197e-06, -0.0024878974072635174, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Cabal", "Priest", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 99, 182, "Cabal", " ", "Shadow", "<EOS>", "6", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 43, 155, 283, 62, 252, "Change", "Attack", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 68, 260, "Minion", "Has", "2", "<EOS>", 68, 260, "Enemy", "Player", "<EOS>", 62, 252, "Change", "Health", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 68, 260, "Minion", "Has", "2", "<EOS>", 68, 260, "Enemy", "Player", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "5", "<EOS>"], "score": -6.176158022118777, "model_output": {"_type": "Module", "body": [{"name": "CabalPriest", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Cabal Shadow", "hole2": "PRIEST", "_type": "Template12", "hole4": {"args": [{"args": [{"_type": "List", "elts": [{"hole1": [{"args": [{"args": [{"hole0": "MinionHas2", "_type": "Template77"}, {"hole0": "EnemyPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "hole0": "ChangeAttack", "_type": "Template70"}, {"hole1": [{"args": [{"args": [{"hole0": "MinionHas2", "_type": "Template77"}, {"hole0": "EnemyPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "hole0": "ChangeHealth", "_type": "Template70"}]}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 5, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-4.57763671875e-05, 0.0, -21.293859481811523], "choice_history": [80, 159, 294], "score": -21.29390525817871, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}
{"beams": [{"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.8318653106689453, -0.0015592575073242188, -1.490105023549404e-05, -3.695487976074219e-05, -0.0013048648834228516, -2.6702880859375e-05, -3.170967102050781e-05, -1.9073486328125e-06, -1.97885437955847e-05, 0.0, -0.0014972686767578125, -9.5367431640625e-06, -3.0869617462158203, -0.03015613555908203, -1.52587890625e-05, 0.0, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, -4.76837158203125e-05, -4.76837158203125e-05, 0.0, -1.2423834800720215, -6.914137884450611e-06, -3.24249267578125e-05, -0.011518478393554688, -3.814697265625e-06, -0.017726896330714226, 0.0], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -5.277596373744927, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "_type": "Template3", "hole2": "MAGE"}, {"hole1": "set_health_to", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.8318653106689453, -0.0015592575073242188, -1.490105023549404e-05, -3.695487976074219e-05, -0.0013048648834228516, -2.6702880859375e-05, -3.170967102050781e-05, -1.9073486328125e-06, -1.97885437955847e-05, 0.0, -0.0014972686767578125, -9.5367431640625e-06, -0.05836677551269531, -0.000194549560546875, -0.0013256072998046875, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -2.0265579223632812e-06, -4.5299530029296875e-06, -0.21247291564941406, -3.24249267578125e-05, -1.9073486328125e-06, -6.866455078125e-05, -1.52587890625e-05, -0.0001201629638671875, -9.5367431640625e-06, -0.000125885009765625, -1.1444091796875e-05, -1.919269561767578e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -0.20643138885498047, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.0753897428512573, 0.0, -0.0959634780883789, -1.9073486328125e-06, -8.58306884765625e-05, -1.9073486328125e-05, -0.00331878662109375, 0.0, -0.0011072158813476562, -1.71661376953125e-05, -0.000217437744140625, -5.7220458984375e-06, -0.0373382568359375, -1.9073486328125e-06, -0.09141254425048828, -0.0003871917724609375, -0.000152587890625, -9.5367431640625e-06, -0.23714447021484375, -5.7220458984375e-06, -0.6116542816162109, 0.0, -8.58306884765625e-05, -0.08943939208984375, -1.52587890625e-05, -0.20132923126220703, 0.0, -0.009340286254882812, -1.9073486328125e-06, -0.00016117095947265625, 0.0, -0.00044727325439453125, -1.9073486328125e-06, -0.0001926422119140625, -0.00012969970703125, -3.814697265625e-06, -0.0011777877807617188, -4.9591064453125e-05, -9.5367431640625e-06, 0.0, -0.0063724517822265625, 0.0, -0.013881206512451172, 0.0, -0.010960817337036133, -1.9073486328125e-06, -2.09808349609375e-05, -0.05119895935058594, -0.0002651214599609375, -0.004774203058332205, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.016885876655578613, -3.4332275390625e-05, -0.24072265625, -0.0022220611572265625, -0.0018444061279296875, -3.814697265625e-05, -0.08473491668701172, 0.0, -0.07231521606445312, 0.0, -0.00851738452911377, 0.0, -0.0001773834228515625, 0.0, -5.340576171875e-05, -0.6332063674926758, -2.86102294921875e-05, -0.009057044982910156, 0.0, -0.03610038757324219, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.23588943481445312, 0.0, -0.0024566650390625, 0.0, -0.0226764939725399, -1.1920928244535389e-07, -0.0018444061279296875, -9.72747802734375e-05, -1.71661376953125e-05, -0.0006389617919921875, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.015684127807617188, 0.0, -0.01174163818359375, -1.9073486328125e-06, -0.0041599273681640625, 0.0, -0.07116031646728516, -1.9073486328125e-06, -0.0274810791015625, 0.0, -0.006156989838927984, -4.768370445162873e-07, -0.022609710693359375, -2.6702880859375e-05, -4.00543212890625e-05, -0.015299797058105469, -0.0012826919555664062, -9.781826520338655e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.07956445217132568, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -5.537218981649737, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "_type": "Template3", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -0.3211946487426758, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -1.092251181602478, 0.0, -0.0960550308227539, -1.9073486328125e-06, -8.392333984375e-05, -2.09808349609375e-05, -0.0032863616943359375, 0.0, -0.0011053085327148438, -1.52587890625e-05, -0.00022125244140625, -5.7220458984375e-06, -0.03714752197265625, -1.9073486328125e-06, -0.04506969451904297, -0.000335693359375, -0.0001506805419921875, -9.5367431640625e-06, -0.23273563385009766, -5.7220458984375e-06, -0.6973896026611328, 0.0, -7.43865966796875e-05, -0.08303356170654297, -1.71661376953125e-05, -0.2440643310546875, 0.0, -0.008146286010742188, -1.9073486328125e-06, -0.00018024444580078125, 0.0, -0.0004596710205078125, -1.9073486328125e-06, -0.000194549560546875, -0.000133514404296875, -3.814697265625e-06, -0.00121307373046875, -5.14984130859375e-05, -9.5367431640625e-06, 0.0, -0.0061664581298828125, 0.0, -0.014831185340881348, 0.0, -0.011803865432739258, -1.9073486328125e-06, -2.09808349609375e-05, -0.05214405059814453, -0.0002651214599609375, -0.004887464456260204, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.01653873920440674, -3.4332275390625e-05, -0.20904064178466797, -0.0017452239990234375, -0.0022144317626953125, -3.814697265625e-05, -0.07123184204101562, 0.0, -0.05625724792480469, 0.0, -0.009088635444641113, 0.0, -0.00018215179443359375, 0.0, -5.53131103515625e-05, -0.6359109878540039, -2.86102294921875e-05, -0.008805274963378906, 0.0, -0.03472709655761719, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.24104690551757812, 0.0, -0.002460479736328125, 0.0, -0.022635510191321373, -1.1920928244535389e-07, -0.0018367767333984375, -9.72747802734375e-05, -1.71661376953125e-05, -0.00063323974609375, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.015489578247070312, 0.0, -0.011693954467773438, -1.9073486328125e-06, -0.004192352294921875, 0.0, -0.0753164291381836, 0.0, -0.02865123748779297, 0.0, -0.006097028031945229, -4.768370445162873e-07, -0.022584915161132812, -2.6702880859375e-05, -4.00543212890625e-05, -0.015240669250488281, -0.0012884140014648438, -9.769905591383576e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.07952439785003662, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -6.013474197625776, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.3051586151123047, -5.7220458984375e-06, -0.055565834045410156, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0007457733154296875, 0.0, -0.0005779266357421875, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.0012416839599609375, 0.0, -0.1821126937866211, -1.9073486328125e-06, -3.0517578125e-05, -0.0038852691650390625, -1.1444091796875e-05, -0.33643877506256104, 0.0, -0.0010890960693359375, -7.62939453125e-06, -0.0050460100173950195, -9.775161743164062e-06, -0.621211051940918, -0.000507354736328125, -1.9073486328125e-06, 0.0, -0.0010091066360473633, 0.0, -0.06858062744140625, 0.0, -0.0031375885009765625, -1.9073486328125e-06, -0.0002899169921875, -1.9073486328125e-06, -0.006558418273925781, 0.0, -0.002696990966796875, -1.9073486328125e-06, -0.005473115481436253, -7.62939453125e-06, -0.010000228881835938, -0.11869239807128906, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0025787353515625, 0.0, -0.0019806623458862305, -1.9073486328125e-06, -0.012857437133789062, -1.52587890625e-05, -5.7220458984375e-06, -0.6098155975341797, -0.0001983642578125, -0.002263791859149933, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.01728355884552002, -7.43865966796875e-05, -0.3106269836425781, -0.00099945068359375, -0.0018062591552734375, -4.57763671875e-05, -0.0714101791381836, 0.0, -0.04962921142578125, 0.0, -0.005508542060852051, 0.0, -0.00019741058349609375, 0.0, -5.7220458984375e-05, -0.6335868835449219, -2.86102294921875e-05, -0.007849693298339844, 0.0, -0.03514289855957031, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.24599266052246094, 0.0, -0.00250244140625, 0.0, -0.021493129432201385, -1.1920928244535389e-07, -0.001773834228515625, -0.0001010894775390625, -1.9073486328125e-05, -0.0006189346313476562, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.014707565307617188, 0.0, -0.010921478271484375, -1.9073486328125e-06, -0.0048999786376953125, 0.0, -0.08213996887207031, 0.0, -0.0309600830078125, 0.0, -0.006014659535139799, -4.768370445162873e-07, -0.022278785705566406, -2.6702880859375e-05, -4.00543212890625e-05, -0.015830039978027344, -0.0013484954833984375, -9.674590546637774e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.08086144924163818, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -6.520690045876556, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.8318653106689453, -0.0015592575073242188, -1.490105023549404e-05, -3.695487976074219e-05, -0.0013048648834228516, -2.6702880859375e-05, -3.170967102050781e-05, -1.9073486328125e-06, -1.97885437955847e-05, 0.0, -0.0014972686767578125, -9.5367431640625e-06, -0.05836677551269531, -0.000194549560546875, -0.0013256072998046875, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -2.0265579223632812e-06, -4.5299530029296875e-06, -0.21247291564941406, -3.24249267578125e-05, -1.9073486328125e-06, -6.866455078125e-05, -1.52587890625e-05, -0.0001201629638671875, -9.5367431640625e-06, -0.000125885009765625, -1.1444091796875e-05, -1.919269561767578e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.6927719116210938, -5.7220458984375e-06, -0.04331398010253906, -1.71661376953125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.0008258819580078125, 0.0, -0.000553131103515625, 0.0, -2.47955322265625e-05, -4.9591064453125e-05, -0.0012607574462890625, 0.0, -0.17937564849853516, -1.9073486328125e-06, -3.0517578125e-05, -0.003936767578125, -1.1444091796875e-05, -0.34099483489990234, 0.0, -0.0010986328125, -7.62939453125e-06, -0.005315899848937988, -9.775161743164062e-06, -0.6617975234985352, -0.0004749298095703125, -1.9073486328125e-06, 0.0, -0.0013486146926879883, 0.0, -0.06222057342529297, 0.0, -0.003444671630859375, -1.9073486328125e-06, -0.000286102294921875, -1.9073486328125e-06, -0.0067882537841796875, 0.0, -0.002666473388671875, -1.9073486328125e-06, -0.005303714890033007, -7.62939453125e-06, -0.009378433227539062, -0.11577033996582031, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0027370452880859375, 0.0, -0.0020560026168823242, -1.9073486328125e-06, -0.013154983520507812, -1.52587890625e-05, -5.7220458984375e-06, -0.604975700378418, -0.0001983642578125, -0.0022580455988645554, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.017331242561340332, -7.43865966796875e-05, -0.37320995330810547, -0.0012531280517578125, -0.001560211181640625, -4.76837158203125e-05, -0.0847463607788086, 0.0, -0.06317901611328125, 0.0, -0.0051985979080200195, 0.0, -0.000194549560546875, 0.0, -5.53131103515625e-05, -0.6296100616455078, -3.0517578125e-05, -0.008108139038085938, 0.0, -0.036212921142578125, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.2413463592529297, 0.0, -0.002498626708984375, 0.0, -0.02152629755437374, -1.1920928244535389e-07, -0.0017604827880859375, -0.0001010894775390625, -1.9073486328125e-05, -0.0006227493286132812, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.014842987060546875, 0.0, -0.010938644409179688, -1.9073486328125e-06, -0.0048656463623046875, 0.0, -0.07779788970947266, 0.0, -0.02962779998779297, 0.0, -0.006069615017622709, -4.768370445162873e-07, -0.02228832244873047, -2.6702880859375e-05, -4.00543212890625e-05, -0.015903472900390625, -0.0013418197631835938, -9.674602188169956e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.08085095882415771, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -6.679808459180883, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "_type": "Template3", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -1.48646080493927, -1.52587890625e-05, -0.003734588623046875, -1.1444091796875e-05, -0.000125885009765625, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.1444091796875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.23801517486572266, -1.52587890625e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.33514404296875e-05, -0.0001220703125, -9.5367431640625e-06, -7.62939453125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -0.2885398864746094, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.089739203453064, 0.0, -0.09518051147460938, -1.9073486328125e-06, -8.392333984375e-05, -2.09808349609375e-05, -0.0033054351806640625, 0.0, -0.0011157989501953125, -1.52587890625e-05, -0.0002193450927734375, -5.7220458984375e-06, -0.037181854248046875, -1.9073486328125e-06, -0.050018310546875, -0.0003643035888671875, -0.0001506805419921875, -9.5367431640625e-06, -0.23041915893554688, -5.7220458984375e-06, -0.6788239479064941, 0.0, -7.43865966796875e-05, -0.08166027069091797, -1.71661376953125e-05, -0.2541990280151367, 0.0, -0.008172988891601562, -1.9073486328125e-06, -0.00018215179443359375, 0.0, -0.0004634857177734375, -1.9073486328125e-06, -0.000194549560546875, -0.0001277923583984375, -3.814697265625e-06, -0.0012121200561523438, -5.14984130859375e-05, -9.5367431640625e-06, 0.0, -0.00617218017578125, 0.0, -0.014771103858947754, 0.0, -0.011768579483032227, -1.9073486328125e-06, -2.09808349609375e-05, -0.05215167999267578, -0.00026702880859375, -0.004900331608951092, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.01654636859893799, -3.4332275390625e-05, -0.21650981903076172, -0.0018215179443359375, -0.0022258758544921875, -4.00543212890625e-05, -0.07328987121582031, 0.0, -0.05611991882324219, 0.0, -0.009279370307922363, 0.0, -0.0001811981201171875, 0.0, -5.53131103515625e-05, -0.6403579711914062, -2.86102294921875e-05, -0.008901596069335938, 0.0, -0.03552055358886719, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.23981761932373047, 0.0, -0.0024547576904296875, 0.0, -0.022831112146377563, -1.1920928244535389e-07, -0.0018672943115234375, -9.5367431640625e-05, -1.71661376953125e-05, -0.0006351470947265625, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.015577316284179688, 0.0, -0.011747360229492188, -1.9073486328125e-06, -0.004161834716796875, 0.0, -0.07435131072998047, 0.0, -0.028379440307617188, 0.0, -0.0061045377515256405, -4.768370445162873e-07, -0.022627830505371094, -2.6702880859375e-05, -4.00543212890625e-05, -0.015229225158691406, -0.001285552978515625, -9.781820699572563e-05, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.07947957515716553, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.086376014140562, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.3051586151123047, -5.7220458984375e-06, -0.055565834045410156, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0007457733154296875, 0.0, -0.0005779266357421875, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.0012416839599609375, 0.0, -0.1821126937866211, -1.9073486328125e-06, -3.0517578125e-05, -0.0038852691650390625, -1.1444091796875e-05, -0.33643877506256104, 0.0, -0.0010890960693359375, -7.62939453125e-06, -0.0050460100173950195, -9.775161743164062e-06, -0.621211051940918, -0.000507354736328125, -1.9073486328125e-06, 0.0, -0.0010091066360473633, 0.0, -0.06858062744140625, 0.0, -0.0031375885009765625, -1.9073486328125e-06, -0.0002899169921875, -1.9073486328125e-06, -0.006558418273925781, 0.0, -0.002696990966796875, -1.9073486328125e-06, -0.005473115481436253, -7.62939453125e-06, -0.010000228881835938, -0.11869239807128906, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0025787353515625, 0.0, -0.0019806623458862305, -1.9073486328125e-06, -0.012857437133789062, -1.52587890625e-05, -5.7220458984375e-06, -0.6098155975341797, -0.0001983642578125, -0.002263791859149933, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.01728355884552002, -7.43865966796875e-05, -1.369140625, -5.7220458984375e-06, -0.0048923492431640625, -0.14016151428222656, -2.288818359375e-05, 0.0, -0.00286102294921875, 0.0, -0.6106033325195312, -3.814697265625e-06, -0.0001049041748046875, 0.0, -0.09078407287597656, -1.537799835205078e-05, -0.027965545654296875, -1.9073486328125e-06, -0.004395758733153343, -1.5497195136049413e-06, -0.02587902545928955, -6.67572021484375e-05, -4.57763671875e-05, -0.013004302978515625, -0.000789642333984375, -0.00010032719001173973, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.059969305992126465, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.211910482004214, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.3051586151123047, -5.7220458984375e-06, -0.055565834045410156, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0007457733154296875, 0.0, -0.0005779266357421875, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.0012416839599609375, 0.0, -0.1821126937866211, -1.9073486328125e-06, -3.0517578125e-05, -0.0038852691650390625, -1.1444091796875e-05, -1.2545369863510132, -1.9073486328125e-06, -0.001354217529296875, -1.9073486328125e-06, -0.002944350242614746, -5.9604644775390625e-06, -0.22016239166259766, -0.0005893707275390625, -1.9073486328125e-06, 0.0, -0.0002785921096801758, 0.0, -0.27268028259277344, 0.0, -0.00237274169921875, 0.0, -0.0002994537353515625, -1.9073486328125e-06, -0.0046672821044921875, 0.0, -0.0027942657470703125, -1.9073486328125e-06, -0.00548480125144124, -7.62939453125e-06, -0.010898590087890625, -0.13089561462402344, 0.0, -2.6702880859375e-05, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -0.00257110595703125, 0.0, -0.0020750761032104492, -1.9073486328125e-06, -0.013559341430664062, -1.52587890625e-05, -5.7220458984375e-06, -0.6520786285400391, -0.0001983642578125, -0.0022143609821796417, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.017098546028137207, -7.43865966796875e-05, -0.30531883239746094, -0.000980377197265625, -0.0017948150634765625, -4.76837158203125e-05, -0.07053756713867188, 0.0, -0.05009651184082031, 0.0, -0.0054770708084106445, 0.0, -0.0001964569091796875, 0.0, -5.7220458984375e-05, -0.6326065063476562, -2.86102294921875e-05, -0.007793426513671875, 0.0, -0.03520011901855469, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.24616718292236328, 0.0, -0.0025043487548828125, 0.0, -0.021436162292957306, -1.1920928244535389e-07, -0.00177001953125, -0.0001010894775390625, -1.9073486328125e-05, -0.000621795654296875, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.0146942138671875, 0.0, -0.010972976684570312, -1.9073486328125e-06, -0.00482940673828125, 0.0, -0.0818319320678711, 0.0, -0.030770301818847656, 0.0, -0.006023600697517395, -4.768370445162873e-07, -0.022268295288085938, -2.6702880859375e-05, -4.00543212890625e-05, -0.015777587890625, -0.0013446807861328125, -9.686511475592852e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.080771803855896, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "4", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.285418770833068, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(self.target.\n                calculate_attack()), self.target)\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.3051586151123047, -5.7220458984375e-06, -0.055565834045410156, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0007457733154296875, 0.0, -0.0005779266357421875, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.0012416839599609375, 0.0, -0.1821126937866211, -1.9073486328125e-06, -3.0517578125e-05, -0.0038852691650390625, -1.1444091796875e-05, -0.33643877506256104, 0.0, -0.0010890960693359375, -7.62939453125e-06, -0.0050460100173950195, -9.775161743164062e-06, -0.621211051940918, -0.000507354736328125, -1.9073486328125e-06, 0.0, -0.0010091066360473633, 0.0, -0.06858062744140625, 0.0, -0.0031375885009765625, -1.9073486328125e-06, -0.0002899169921875, -1.9073486328125e-06, -0.006558418273925781, 0.0, -0.002696990966796875, -1.9073486328125e-06, -0.005473115481436253, -7.62939453125e-06, -0.010000228881835938, -0.11869239807128906, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0025787353515625, 0.0, -0.0019806623458862305, -1.9073486328125e-06, -0.012857437133789062, -1.52587890625e-05, -5.7220458984375e-06, -0.8025150299072266, -0.21352577209472656, -0.00029754638671875, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -0.008038520812988281, 0.0, -0.040714383125305176, 0.0, -4.57763671875e-05, -0.5872325897216797, -6.4849853515625e-05, -0.0002613067626953125, -9.5367431640625e-06, -0.11127090454101562, -1.9073486328125e-06, -0.11308097839355469, 0.0, -0.0021839141845703125, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.11963176727294922, -5.7220458984375e-06, -0.014270782470703125, -1.1444091796875e-05, -0.0015869140625, 0.0, -0.0009765625, -5.7220458984375e-06, -0.0006313323974609375, 0.0, -0.3314476013183594, -0.0003528594970703125, -0.000213623046875, -7.62939453125e-06, -0.07834911346435547, -1.9073486328125e-06, -0.3118724822998047, 0.0, -0.0001392364501953125, -0.052031517028808594, -1.1444091796875e-05, -0.19213008880615234, 0.0, -0.0062618255615234375, -1.9073486328125e-06, -0.00013256072998046875, 0.0, -0.0002193450927734375, 0.0, -0.000244140625, -5.7220458984375e-05, -1.9073486328125e-06, -0.001007080078125, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.005870819091796875, 0.0, -0.003739476203918457, 0.0, -0.0032845735549926758, -3.814697265625e-06, -2.288818359375e-05, -0.052280426025390625, -0.00030517578125, -0.0026660803705453873, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.02243626117706299, -3.62396240234375e-05], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.313035691132086, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(self.target.\n                calculate_attack()), self.target)\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.8318653106689453, -0.0015592575073242188, -1.490105023549404e-05, -3.695487976074219e-05, -0.0013048648834228516, -2.6702880859375e-05, -3.170967102050781e-05, -1.9073486328125e-06, -1.97885437955847e-05, 0.0, -0.0014972686767578125, -9.5367431640625e-06, -0.05836677551269531, -0.000194549560546875, -0.0013256072998046875, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -2.0265579223632812e-06, -4.5299530029296875e-06, -0.21247291564941406, -3.24249267578125e-05, -1.9073486328125e-06, -6.866455078125e-05, -1.52587890625e-05, -0.0001201629638671875, -9.5367431640625e-06, -0.000125885009765625, -1.1444091796875e-05, -1.919269561767578e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.6927719116210938, -5.7220458984375e-06, -0.04331398010253906, -1.71661376953125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.0008258819580078125, 0.0, -0.000553131103515625, 0.0, -2.47955322265625e-05, -4.9591064453125e-05, -0.0012607574462890625, 0.0, -0.17937564849853516, -1.9073486328125e-06, -3.0517578125e-05, -0.003936767578125, -1.1444091796875e-05, -0.34099483489990234, 0.0, -0.0010986328125, -7.62939453125e-06, -0.005315899848937988, -9.775161743164062e-06, -0.6617975234985352, -0.0004749298095703125, -1.9073486328125e-06, 0.0, -0.0013486146926879883, 0.0, -0.06222057342529297, 0.0, -0.003444671630859375, -1.9073486328125e-06, -0.000286102294921875, -1.9073486328125e-06, -0.0067882537841796875, 0.0, -0.002666473388671875, -1.9073486328125e-06, -0.005303714890033007, -7.62939453125e-06, -0.009378433227539062, -0.11577033996582031, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0027370452880859375, 0.0, -0.0020560026168823242, -1.9073486328125e-06, -0.013154983520507812, -1.52587890625e-05, -5.7220458984375e-06, -0.8084897994995117, -0.21555137634277344, -0.0003032684326171875, -5.7220458984375e-06, -8.392333984375e-05, 0.0, -0.007750511169433594, 0.0, -0.04102528095245361, 0.0, -4.57763671875e-05, -0.5817813873291016, -6.4849853515625e-05, -0.000255584716796875, -9.5367431640625e-06, -0.11052322387695312, -1.9073486328125e-06, -0.11376953125, 0.0, -0.0022077560424804688, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.11948966979980469, -5.7220458984375e-06, -0.014276504516601562, -1.1444091796875e-05, -0.0015888214111328125, 0.0, -0.0009746551513671875, -5.7220458984375e-06, -0.000629425048828125, 0.0, -0.3230161666870117, -0.00035858154296875, -0.0002117156982421875, -7.62939453125e-06, -0.06240653991699219, -1.9073486328125e-06, -0.30167102813720703, 0.0, -0.000152587890625, -0.05283641815185547, -9.5367431640625e-06, -0.2459554672241211, 0.0, -0.006351470947265625, -1.9073486328125e-06, -0.00014209747314453125, 0.0, -0.0002155303955078125, 0.0, -0.0002498626708984375, -5.340576171875e-05, -1.9073486328125e-06, -0.0009889602661132812, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0054473876953125, 0.0, -0.003665924072265625, 0.0, -0.0033332109451293945, -3.814697265625e-06, -2.47955322265625e-05, -0.05303001403808594, -0.0003108978271484375, -0.002615213394165039, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.02271091938018799, -3.62396240234375e-05], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.42357694653947, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "_type": "Template3", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -1.48646080493927, -1.52587890625e-05, -0.003734588623046875, -1.1444091796875e-05, -0.000125885009765625, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.1444091796875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.23801517486572266, -1.52587890625e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.33514404296875e-05, -0.0001220703125, -9.5367431640625e-06, -7.62939453125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.396651268005371, -5.7220458984375e-06, -0.052845001220703125, -1.71661376953125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.0007495880126953125, 0.0, -0.0005855560302734375, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.001239776611328125, 0.0, -0.1837444305419922, -1.9073486328125e-06, -3.0517578125e-05, -0.0038919448852539062, -1.1444091796875e-05, -0.33460676670074463, 0.0, -0.00109100341796875, -7.62939453125e-06, -0.005142331123352051, -9.775161743164062e-06, -0.5755443572998047, -0.000499725341796875, -1.9073486328125e-06, 0.0, -0.0009032487869262695, 0.0, -0.07689857482910156, 0.0, -0.0031280517578125, -1.9073486328125e-06, -0.000293731689453125, -1.9073486328125e-06, -0.006450653076171875, 0.0, -0.002696990966796875, -1.9073486328125e-06, -0.0054822941310703754, -7.62939453125e-06, -0.009912490844726562, -0.11859416961669922, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.002521514892578125, 0.0, -0.0019730329513549805, -1.9073486328125e-06, -0.012796401977539062, -1.52587890625e-05, -5.7220458984375e-06, -0.6074142456054688, -0.0001983642578125, -0.0022697001695632935, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.017299771308898926, -7.43865966796875e-05, -0.32560253143310547, -0.001041412353515625, -0.0018215179443359375, -4.76837158203125e-05, -0.0733175277709961, 0.0, -0.04920387268066406, 0.0, -0.005624890327453613, 0.0, -0.0001964569091796875, 0.0, -5.53131103515625e-05, -0.6381216049194336, -2.86102294921875e-05, -0.007935523986816406, 0.0, -0.035919189453125, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.24481868743896484, 0.0, -0.002498626708984375, 0.0, -0.02169862948358059, -1.1920928244535389e-07, -0.0018024444580078125, -9.918212890625e-05, -1.9073486328125e-05, -0.0006198883056640625, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.01477813720703125, 0.0, -0.010976791381835938, -1.9073486328125e-06, -0.00485992431640625, 0.0, -0.08121967315673828, 0.0, -0.030646324157714844, 0.0, -0.006021096371114254, -4.768370445162873e-07, -0.022319793701171875, -2.6702880859375e-05, -4.00543212890625e-05, -0.01581573486328125, -0.0013446807861328125, -9.68650565482676e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.08081376552581787, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.692234289399941, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(self.target.\n                calculate_attack()), self.target)\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.3051586151123047, -5.7220458984375e-06, -0.055565834045410156, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0007457733154296875, 0.0, -0.0005779266357421875, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.0012416839599609375, 0.0, -0.1821126937866211, -1.9073486328125e-06, -3.0517578125e-05, -0.0038852691650390625, -1.1444091796875e-05, -1.2545369863510132, -1.9073486328125e-06, -0.001354217529296875, -1.9073486328125e-06, -0.002944350242614746, -5.9604644775390625e-06, -0.22016239166259766, -0.0005893707275390625, -1.9073486328125e-06, 0.0, -0.0002785921096801758, 0.0, -0.27268028259277344, 0.0, -0.00237274169921875, 0.0, -0.0002994537353515625, -1.9073486328125e-06, -0.0046672821044921875, 0.0, -0.0027942657470703125, -1.9073486328125e-06, -0.00548480125144124, -7.62939453125e-06, -0.010898590087890625, -0.13089561462402344, 0.0, -2.6702880859375e-05, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -0.00257110595703125, 0.0, -0.0020750761032104492, -1.9073486328125e-06, -0.013559341430664062, -1.52587890625e-05, -5.7220458984375e-06, -0.7528762817382812, -0.20972633361816406, -0.000301361083984375, -5.7220458984375e-06, -8.0108642578125e-05, 0.0, -0.008809089660644531, 0.0, -0.04070007801055908, 0.0, -4.57763671875e-05, -0.6049709320068359, -6.67572021484375e-05, -0.0002765655517578125, -9.5367431640625e-06, -0.11031532287597656, -1.9073486328125e-06, -0.11060905456542969, 0.0, -0.0021066665649414062, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.12108325958251953, -5.7220458984375e-06, -0.014608383178710938, -1.1444091796875e-05, -0.00162506103515625, 0.0, -0.0009794235229492188, -5.7220458984375e-06, -0.00063323974609375, 0.0, -0.33428192138671875, -0.0003528594970703125, -0.000213623046875, -7.62939453125e-06, -0.0784139633178711, -1.9073486328125e-06, -0.31226110458374023, 0.0, -0.0001373291015625, -0.05208110809326172, -1.1444091796875e-05, -0.19257450103759766, 0.0, -0.00624847412109375, -1.9073486328125e-06, -0.00013256072998046875, 0.0, -0.0002193450927734375, 0.0, -0.000244140625, -5.7220458984375e-05, -1.9073486328125e-06, -0.001007080078125, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.005870819091796875, 0.0, -0.0037366151809692383, 0.0, -0.003285527229309082, -3.814697265625e-06, -2.288818359375e-05, -0.052303314208984375, -0.0003032684326171875, -0.002664633095264435, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.02243340015411377, -3.62396240234375e-05], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "4", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>", 282, 40, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.010230969147074, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 4}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"args": [{"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -0.3211946487426758, -3.814697265625e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -1.092251181602478, 0.0, -0.0960550308227539, -1.9073486328125e-06, -8.392333984375e-05, -2.09808349609375e-05, -0.0032863616943359375, 0.0, -0.0011053085327148438, -1.52587890625e-05, -0.00022125244140625, -5.7220458984375e-06, -0.03714752197265625, -1.9073486328125e-06, -0.04506969451904297, -0.000335693359375, -0.0001506805419921875, -9.5367431640625e-06, -0.23273563385009766, -5.7220458984375e-06, -0.6973896026611328, 0.0, -7.43865966796875e-05, -0.08303356170654297, -1.71661376953125e-05, -0.2440643310546875, 0.0, -0.008146286010742188, -1.9073486328125e-06, -0.00018024444580078125, 0.0, -0.0004596710205078125, -1.9073486328125e-06, -0.000194549560546875, -0.000133514404296875, -3.814697265625e-06, -0.00121307373046875, -5.14984130859375e-05, -9.5367431640625e-06, 0.0, -0.0061664581298828125, 0.0, -0.014831185340881348, 0.0, -0.011803865432739258, -1.9073486328125e-06, -2.09808349609375e-05, -0.05214405059814453, -0.0002651214599609375, -0.004887464456260204, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -0.01653873920440674, -3.4332275390625e-05, -0.20904064178466797, -0.0017452239990234375, -0.0022144317626953125, -3.814697265625e-05, -0.07123184204101562, 0.0, -0.05625724792480469, 0.0, -0.009088635444641113, 0.0, -0.00018215179443359375, 0.0, -5.53131103515625e-05, -0.6359109878540039, -2.86102294921875e-05, -0.008805274963378906, 0.0, -0.03472709655761719, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -1.5624237060546875, -1.1444091796875e-05, -0.0013303756713867188, -1.9073486328125e-06, -0.4994077682495117, -3.814697265625e-06, -6.4849853515625e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.000244140625, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.17767810821533203, 0.0, -0.020135879516601562, -5.7220458984375e-06, -0.0011310577392578125, 0.0, -0.12995529174804688, 0.0, -0.12825584411621094, -1.9073486328125e-06, -0.005000140517950058, -7.152555099310121e-07, -0.02434837818145752, -2.09808349609375e-05, -4.9591064453125e-05, -0.02910137176513672, -0.0017948150634765625, -9.471637895330787e-05, -3.814697265625e-06, -0.0001125335693359375, 0.0, -0.07872223854064941, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.14440774443608, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -3.4332275390625e-05, -8.7738037109375e-05, -0.000125885009765625, -4.970903682988137e-05, -0.0007175173377618194, -0.05028405413031578, -9.775130820344202e-06, -0.000186920166015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0002976655960083008, -1.33514404296875e-05, -3.814697265625e-05, -0.000347137451171875, -0.7963428497314453, -0.0001010894775390625, -8.344646857949556e-07, -0.00011754034494515508, -1.6450876501039602e-05, -1.5497207641601562e-05, -2.7894961021956988e-05, -2.288818359375e-05, -2.861018401745241e-06, 0.0, -0.0019893646240234375, -1.1444091796875e-05, -0.006191253662109375, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -0.0004024505615234375, -2.288818359375e-05, -0.000217437744140625, 0.0, -0.3278113603591919, 0.0, -0.0003299713134765625, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, -1.33514404296875e-05, -2.1457672119140625e-06, -2.384185791015625e-06, -0.2969837188720703, -1.9073486328125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -1.33514404296875e-05, -0.000118255615234375, -9.5367431640625e-06, -6.866455078125e-05, -1.33514404296875e-05, -1.919269561767578e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -1.71661376953125e-05, -9.655952453613281e-06, -1.3051586151123047, -5.7220458984375e-06, -0.055565834045410156, -1.71661376953125e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0007457733154296875, 0.0, -0.0005779266357421875, 0.0, -2.288818359375e-05, -5.14984130859375e-05, -0.0012416839599609375, 0.0, -0.1821126937866211, -1.9073486328125e-06, -3.0517578125e-05, -0.0038852691650390625, -1.1444091796875e-05, -0.33643877506256104, 0.0, -0.0010890960693359375, -7.62939453125e-06, -0.0050460100173950195, -9.775161743164062e-06, -0.621211051940918, -0.000507354736328125, -1.9073486328125e-06, 0.0, -0.0010091066360473633, 0.0, -0.06858062744140625, 0.0, -0.0031375885009765625, -1.9073486328125e-06, -0.0002899169921875, -1.9073486328125e-06, -0.006558418273925781, 0.0, -0.002696990966796875, -1.9073486328125e-06, -0.005473115481436253, -7.62939453125e-06, -0.010000228881835938, -0.11869239807128906, 0.0, -2.288818359375e-05, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -0.0025787353515625, 0.0, -0.0019806623458862305, -1.9073486328125e-06, -0.012857437133789062, -1.52587890625e-05, -5.7220458984375e-06, -0.6098155975341797, -0.0001983642578125, -0.002263791859149933, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.01728355884552002, -7.43865966796875e-05, -0.3106269836425781, -0.00099945068359375, -0.0018062591552734375, -4.57763671875e-05, -0.0714101791381836, 0.0, -0.04962921142578125, 0.0, -0.005508542060852051, 0.0, -0.00019741058349609375, 0.0, -5.7220458984375e-05, -0.6335868835449219, -2.86102294921875e-05, -0.007849693298339844, 0.0, -0.03514289855957031, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -1.5440673828125, -1.1444091796875e-05, -0.001323699951171875, -1.9073486328125e-06, -0.48768091201782227, -3.814697265625e-06, -6.29425048828125e-05, -6.29425048828125e-05, -1.9073486328125e-06, -0.00023651123046875, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.17460346221923828, 0.0, -0.01943206787109375, -5.7220458984375e-06, -0.0012149810791015625, 0.0, -0.13073348999023438, 0.0, -0.1309976577758789, -1.9073486328125e-06, -0.0050953892059624195, -7.152555099310121e-07, -0.024205327033996582, -2.09808349609375e-05, -4.9591064453125e-05, -0.02941417694091797, -0.0018253326416015625, -9.4597227871418e-05, -3.814697265625e-06, -0.00011444091796875, 0.0, -0.07987523078918457, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Cone", "Of", "Cold", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.609132149697302, "model_output": {"_type": "Module", "body": [{"name": "ConeOfCold", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Cone of Cold", "hole2": "MAGE", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-05, -8.0108642578125e-05, -21.225322723388672], "choice_history": [80, 159, 294], "score": -21.225421905517578, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n"}
{"beams": [{"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.495121479034424, -0.05040399730205536, -1.9192693798686378e-05, -0.04990971088409424, -0.0010777711868286133, -4.661083221435547e-05, -9.918212890625e-05, -2.2649765014648438e-06, -5.7220458984375e-06, -0.016236543655395508, -0.0005574176902882755, -0.01275545172393322, -0.08262026309967041, -0.0275421142578125, -0.004395484924316406, -0.0001926422119140625, -6.4849853515625e-05, -7.43865966796875e-05, -0.07412207126617432, -0.04697239398956299, -9.5367431640625e-06, -0.013607025146484375, -0.0005168914794921875, -3.814697265625e-05, -0.003331286832690239, -1.1444091796875e-05, -0.007106301374733448, -0.0003833770751953125, -7.390948667307384e-06, -0.005279541015625, -5.7220458984375e-05, -3.814697265625e-06, -0.34901511669158936, -5.006674109608866e-05, -0.35346317291259766, -6.4849853515625e-05, -0.01248323917388916, -0.0038708411157131195, -0.004619598388671875, -1.52587890625e-05, -4.053113570989808e-06, 0.0, -1.0371208190917969e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -3.6318026004937423, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give(), <UNK>()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.1733274459838867, -0.03622433543205261, -2.6702880859375e-05, -0.30706608295440674, -5.7220458984375e-05, -1.2040129149681889e-05, -1.9073486328125e-06, -0.18187999725341797, -1.2755313036905136e-05, -0.5216197371482849, -0.0048661427572369576, -1.063313364982605, -0.0018627643585205078, -0.0883026123046875, -5.340576171875e-05, -7.152555099310121e-07, 0.0, -1.7881393432617188e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 191, "Defender", " ", "Argus", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Give", "<EOS>", "<UNK>", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -4.394279497822247, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender Argus", "hole5": "<UNK>", "hole2": "FREE", "_type": "Template20", "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.495121479034424, -0.05040399730205536, -1.9192693798686378e-05, -0.04990971088409424, -0.0010777711868286133, -4.661083221435547e-05, -9.918212890625e-05, -2.2649765014648438e-06, -5.7220458984375e-06, -0.016236543655395508, -0.0005574176902882755, -0.01275545172393322, -0.08262026309967041, -0.0275421142578125, -0.004395484924316406, -0.0001926422119140625, -6.4849853515625e-05, -7.43865966796875e-05, -0.07412207126617432, -0.04697239398956299, -9.5367431640625e-06, -0.013607025146484375, -0.0005168914794921875, -3.814697265625e-05, -0.003331286832690239, -1.1444091796875e-05, -0.007106301374733448, -0.0003833770751953125, -7.390948667307384e-06, -0.005279541015625, -5.7220458984375e-05, -3.814697265625e-06, -1.310916781425476, -1.1920928244535389e-07, -0.0003528594970703125, -0.0001735687255859375, -0.1897212266921997, -0.0009162425994873047, -1.33514404296875e-05, -0.0006866455078125, -5.7220458984375e-06, -5.960455837339396e-06, 0.0, -1.3947486877441406e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -4.41101233838252, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.495121479034424, -0.05040399730205536, -1.9192693798686378e-05, -0.04990971088409424, -0.0010777711868286133, -4.661083221435547e-05, -9.918212890625e-05, -2.2649765014648438e-06, -5.7220458984375e-06, -0.016236543655395508, -0.0005574176902882755, -0.01275545172393322, -0.08262026309967041, -0.0275421142578125, -0.004395484924316406, -0.0001926422119140625, -6.4849853515625e-05, -7.43865966796875e-05, -0.07412207126617432, -0.04697239398956299, -9.5367431640625e-06, -0.013607025146484375, -0.0005168914794921875, -3.814697265625e-05, -0.003331286832690239, -1.1444091796875e-05, -0.007106301374733448, -0.0003833770751953125, -7.390948667307384e-06, -0.005279541015625, -5.7220458984375e-05, -3.814697265625e-06, -0.34901511669158936, -5.006674109608866e-05, -2.0011301040649414, -0.001178741455078125, -0.030894875526428223, 0.0, -0.004828453063964844, -7.62939453125e-06, -2.5152843591058627e-05, 0.0, -1.668929871811997e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.295352742376501, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), Taunt(ActionTag(\n            Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector()))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -1.7404356002807617, -0.0015705404803156853, -1.7881393432617188e-05, -0.45442402362823486, -0.0008716583251953125, -4.172325134277344e-06, 0.0, -0.6023731231689453, -0.00046753883361816406, -0.5907138586044312, -2.264974000354414e-06, -0.2519945800304413, -5.9604644775390625e-05, -0.004611015319824219, -0.006165504455566406, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -1.0912543535232544, -7.271766662597656e-05, -2.09808349609375e-05, -0.013360023498535156, -0.37253665924072266, -0.0003299713134765625, -7.784263289067894e-05, -0.00910341739654541, -6.4849853515625e-05, -0.1395787000656128, -7.748603820800781e-06, -0.0003795623779296875, -0.016843795776367188, -1.9073486328125e-06, -0.05542027950286865, -1.3470649719238281e-05, -0.0009937286376953125, -7.62939453125e-06, -0.0004525184631347656, -8.606910705566406e-05, 0.0, -0.0010700225830078125, -3.814697265625e-06, -0.0003318192029837519, 0.0, -6.330012547550723e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 193, "Defender", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Kill", "<EOS>", "Taunt", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.371451571854536, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender Argus", "hole5": "Taunt", "hole2": "RARE", "_type": "Template20", "hole6": [{"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(\n            Attack<UNK>Than<UNK>EqualTo(1)), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -3.3632545471191406, -0.09233330935239792, -2.0384763047331944e-05, -0.13620972633361816, -0.00010216236114501953, -4.8041343688964844e-05, -0.0002447366714477539, -2.2649765014648438e-06, -3.814697265625e-06, -0.0316852331161499, -0.002079844241961837, -0.14335015416145325, -0.0018494159448891878, -0.5498561859130859, -0.16383075714111328, -9.72747802734375e-05, -4.00543212890625e-05, -1.71661376953125e-05, -0.18676316738128662, -0.07191884517669678, -0.3690754175186157, -0.021996259689331055, -0.06576240062713623, -0.11247360706329346, -1.9073486328125e-06, -9.5367431640625e-05, -0.000537872314453125, -3.814697265625e-06, -0.23036399483680725, 0.0, -0.04079914093017578, -0.00032258033752441406, -2.2291887944447808e-05, -0.0006256103515625, -3.814697265625e-06, -3.933898369723465e-06, 0.0, -1.7523765563964844e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 196, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.601447009435553, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "Attack<UNK>Than<UNK>EqualTo"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), Taunt(ActionTag(\n            Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector()))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -1.7404356002807617, -0.0015705404803156853, -1.7881393432617188e-05, -1.0080682039260864, -0.0001811981201171875, -5.3763389587402344e-05, -8.58306884765625e-05, -3.933906555175781e-06, 0.0, -0.5602645874023438, -0.0004855394072365016, -0.717303991317749, -1.5497195136049413e-06, -0.2596966028213501, -5.1975250244140625e-05, -0.004551887512207031, -0.006687164306640625, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -1.097652554512024, -6.890296936035156e-05, -2.288818359375e-05, -0.012788772583007812, -0.3445148468017578, -0.0003337860107421875, -7.724661554675549e-05, -0.009343743324279785, -7.2479248046875e-05, -0.19526541233062744, -7.748603820800781e-06, -0.0003814697265625, -0.017459869384765625, -1.9073486328125e-06, -0.09457945823669434, -1.3470649719238281e-05, -0.0008678436279296875, -7.62939453125e-06, -0.0004429817199707031, -8.606910705566406e-05, 0.0, -0.0010623931884765625, -3.814697265625e-06, -0.0003295550122857094, 0.0, -6.306170689640567e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 193, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Kill", "<EOS>", "Taunt", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "2", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -6.090571270450809, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "Taunt", "hole2": "RARE", "_type": "Template20", "hole6": [{"args": [{"hole1": 2, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker(), players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.9340057373046875, -0.011252417229115963, -6.604192458325997e-05, -0.0030099153518676758, -4.9591064453125e-05, -3.4928321838378906e-05, -2.47955322265625e-05, -2.1457672119140625e-06, 0.0, -0.2282114028930664, -0.001013636589050293, -0.5508314371109009, -2.7418097943154862e-06, -0.5813157558441162, -9.5367431640625e-06, -1.7881377516459906e-06, -0.0015869140625, -0.00016021728515625, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.09510684013366699, -0.007235049735754728, 0.0, -0.0023365020751953125, -9.5367431640625e-06, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.0008544921875, -1.2278556823730469e-05, -0.7404575347900391, -2.0265579223632812e-06, -0.008122444152832031, -3.814697265625e-05, -5.7220458984375e-06, -0.22604870796203613, 0.0, -0.006866455078125, -6.866455078125e-05, -0.003923535346984863, -0.0006216764450073242, -1.9073486328125e-06, -0.00289154052734375, -2.6702880859375e-05, -0.679277777671814, -1.5497195136049413e-06, -0.0002841949462890625, -1.9073486328125e-05, -0.00648808479309082, -0.00025081634521484375, -3.933906555175781e-06, -0.0026798248291015625, -5.7220458984375e-06, -7.152555099310121e-07, 0.0, -2.300739288330078e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 291, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -6.110967618155755, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole6": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.PIRATE), picker=UserPicker(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.9340057373046875, -0.011252417229115963, -6.604192458325997e-05, -0.0030099153518676758, -4.9591064453125e-05, -3.4928321838378906e-05, -2.47955322265625e-05, -2.1457672119140625e-06, 0.0, -0.2282114028930664, -0.001013636589050293, -0.5508314371109009, -2.7418097943154862e-06, -0.5813157558441162, -9.5367431640625e-06, -1.7881377516459906e-06, -0.0015869140625, -0.00016021728515625, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.09510684013366699, -0.007235049735754728, 0.0, -0.0023365020751953125, -9.5367431640625e-06, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.0008544921875, -1.2278556823730469e-05, -1.0240192413330078, -2.384185791015625e-06, -0.0021600723266601562, -3.24249267578125e-05, -3.814697265625e-06, -0.11986970901489258, 0.0, -0.0053424835205078125, -5.7220458984375e-05, -0.0037766695022583008, -0.001878499984741211, 0.0, -0.0015172958374023438, -3.814697265625e-05, -0.621745228767395, 0.0, -0.029781341552734375, -1.71661376953125e-05, -0.0025777816772460938, -0.0008362531661987305, -1.9073486328125e-06, -0.0012035369873046875, -1.9073486328125e-06, -3.695486157084815e-06, -1.1920928244535389e-07, -1.728534698486328e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 291, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -6.247742038893627, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole6": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.9340057373046875, -0.011252417229115963, -6.604192458325997e-05, -0.0030099153518676758, -4.9591064453125e-05, -3.4928321838378906e-05, -2.47955322265625e-05, -2.1457672119140625e-06, 0.0, -0.2282114028930664, -0.001013636589050293, -0.5508314371109009, -2.7418097943154862e-06, -0.5813157558441162, -9.5367431640625e-06, -1.7881377516459906e-06, -0.0015869140625, -0.00016021728515625, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.09510684013366699, -0.007235049735754728, 0.0, -0.0023365020751953125, -9.5367431640625e-06, 0.0, -5.53131103515625e-05, -1.9073486328125e-06, -0.0008544921875, -1.2278556823730469e-05, -0.7404575347900391, -2.0265579223632812e-06, -0.008122444152832031, -3.814697265625e-05, -5.7220458984375e-06, -0.22604870796203613, 0.0, -0.006866455078125, -6.866455078125e-05, -0.003923535346984863, -0.0006216764450073242, -1.9073486328125e-06, -0.00289154052734375, -2.6702880859375e-05, -0.829576849937439, 0.0, -0.02631378173828125, -1.52587890625e-05, -0.003209352493286133, -0.0006052255630493164, -3.814697265625e-06, -0.00052642822265625, -1.9073486328125e-06, -4.053113116242457e-06, 0.0, -1.9311904907226562e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 291, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -6.282208901571252, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole6": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=IsType(MINION_TYPE.MURLOC))))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.495121479034424, -0.05040399730205536, -1.9192693798686378e-05, -0.04990971088409424, -0.0010777711868286133, -4.661083221435547e-05, -9.918212890625e-05, -2.2649765014648438e-06, -5.7220458984375e-06, -0.016236543655395508, -0.0005574176902882755, -0.01275545172393322, -0.08262026309967041, -0.0275421142578125, -0.004395484924316406, -0.0001926422119140625, -6.4849853515625e-05, -7.43865966796875e-05, -0.07412207126617432, -0.04697239398956299, -9.5367431640625e-06, -0.013607025146484375, -0.0005168914794921875, -3.814697265625e-05, -0.003331286832690239, -1.1444091796875e-05, -0.007106301374733448, -0.0003833770751953125, -7.390948667307384e-06, -0.005279541015625, -5.7220458984375e-05, -3.814697265625e-06, -0.34901511669158936, -5.006674109608866e-05, -2.169483184814453, -0.0006046295166015625, -2.6702880859375e-05, -1.9073486328125e-06, -0.021899104118347168, -0.004971981048583984, -1.1920928244535389e-07, -0.00011444091796875, -0.0003986358642578125, -3.814697265625e-06, -0.0005321502685546875, 0.0, -0.0058727264404296875, -6.365776062011719e-05, -0.7526235580444336, -1.1324854312988464e-05, -0.3292198181152344, -3.62396240234375e-05, -5.1259203246445395e-06, -1.6689286894688848e-06, -7.748602365609258e-05, -2.9802276912960224e-06, -0.18155527114868164, 0.0, -0.0038652420043945312, -9.5367431640625e-06, -0.0002161264419555664, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.728868529691667, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=IsType(MINION_TYPE.PIRATE))))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.495121479034424, -0.05040399730205536, -1.9192693798686378e-05, -0.04990971088409424, -0.0010777711868286133, -4.661083221435547e-05, -9.918212890625e-05, -2.2649765014648438e-06, -5.7220458984375e-06, -0.016236543655395508, -0.0005574176902882755, -0.01275545172393322, -0.08262026309967041, -0.0275421142578125, -0.004395484924316406, -0.0001926422119140625, -6.4849853515625e-05, -7.43865966796875e-05, -0.07412207126617432, -0.04697239398956299, -9.5367431640625e-06, -0.013607025146484375, -0.0005168914794921875, -3.814697265625e-05, -0.003331286832690239, -1.1444091796875e-05, -0.007106301374733448, -0.0003833770751953125, -7.390948667307384e-06, -0.005279541015625, -5.7220458984375e-05, -3.814697265625e-06, -0.34901511669158936, -5.006674109608866e-05, -2.169483184814453, -0.0006046295166015625, -2.6702880859375e-05, -1.9073486328125e-06, -0.021899104118347168, -0.004971981048583984, -1.1920928244535389e-07, -0.00011444091796875, -0.0003986358642578125, -3.814697265625e-06, -0.0005321502685546875, 0.0, -0.0058727264404296875, -6.365776062011719e-05, -1.5513315200805664, -1.5854737284826115e-05, -0.48069286346435547, -1.71661376953125e-05, -7.152555099310121e-07, -1.1920928244535389e-07, -1.7404556274414062e-05, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -7.493320033474625, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender of Argus", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give(), Give()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.PIRATE))), Aura(Give(ChangeAttack(2)),\n            SelfSelector())])\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.1733274459838867, -0.03622433543205261, -2.6702880859375e-05, -0.30706608295440674, -5.7220458984375e-05, -1.2040129149681889e-05, -1.9073486328125e-06, -0.18187999725341797, -1.2755313036905136e-05, -0.5216197371482849, -0.0048661427572369576, -0.663724422454834, -0.001196359284222126, -0.3035125732421875, -2.47955322265625e-05, -1.311301275563892e-06, -5.602820692729438e-06, -2.050399598374497e-05, -2.50339189733495e-06, -0.5307334661483765, -7.867813110351562e-06, -0.005138397216796875, -5.340576171875e-05, -0.013956069946289062, -0.0034227371215820312, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0024623870849609375, -1.9073486328125e-06, -1.52587890625e-05, -0.04011249542236328, -0.00089263916015625, -0.030896902084350586, -3.814697265625e-06, -0.2753868103027344, -0.010400772094726562, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, -0.0001468658447265625, -3.576278118089249e-07, -0.555511474609375, -0.0010051727294921875, -0.0002574920654296875, -4.1961669921875e-05, -3.814697265625e-06, -0.0005834102630615234, -0.0006730552995577455, 0.0, -0.0008697509765625, -3.24249267578125e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0003566741943359375, -3.349781036376953e-05, -1.0080680847167969, -3.4570680327306036e-06, -0.06739234924316406, -3.0517578125e-05, 0.0, 0.0, -0.0237882137298584, -1.33514404296875e-05, -3.24249267578125e-05, -0.8801441192626953, -0.008157730102539062, -0.008056835271418095, -0.00026476383209228516, -8.58283310662955e-05, -0.11916553974151611, -3.814697265625e-06, -0.23422278463840485, -1.9073486328125e-06, -0.04108619689941406, -3.814697265625e-06, -1.9550323486328125e-05, -4.8041343688964844e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 191, "Defender", " ", "Argus", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Give", "<EOS>", "Give", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -8.07291599197918, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender Argus", "hole5": "Give", "hole2": "FREE", "_type": "Template20", "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "PIRATE"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give(), Give()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), MinionSelector(\n            IsType(MINION_TYPE.BEAST))), Aura(Give(ChangeAttack(2)),\n            SelfSelector())])\n", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -2.86102294921875e-05, -3.0517578125e-05, -8.58306884765625e-05, -4.768258077092469e-05, -0.0030277755577117205, -0.00010716419637901708, -9.154871804639697e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -2.1457672119140625e-06, -0.00095367431640625, -2.50339189733495e-06, -1.9073486328125e-05, -0.001800537109375, -1.1444091796875e-05, -0.00015008436457719654, -1.1920928244535389e-07, -3.814697265625e-06, -0.0005970001220703125, -0.0001430511474609375, -0.00010132789611816406, -3.814697265625e-06, -6.866455078125e-05, -0.008295059204101562, -2.1733274459838867, -0.03622433543205261, -2.6702880859375e-05, -0.30706608295440674, -5.7220458984375e-05, -1.2040129149681889e-05, -1.9073486328125e-06, -0.18187999725341797, -1.2755313036905136e-05, -0.5216197371482849, -0.0048661427572369576, -0.663724422454834, -0.001196359284222126, -0.3035125732421875, -2.47955322265625e-05, -1.311301275563892e-06, -5.602820692729438e-06, -2.050399598374497e-05, -2.50339189733495e-06, -0.5307334661483765, -7.867813110351562e-06, -0.005138397216796875, -5.340576171875e-05, -0.013956069946289062, -0.0034227371215820312, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0024623870849609375, -1.9073486328125e-06, -1.52587890625e-05, -0.04011249542236328, -0.00089263916015625, -0.030896902084350586, -3.814697265625e-06, -0.2753868103027344, -0.010400772094726562, -3.814697265625e-06, 0.0, -2.6941299438476562e-05, -0.0001468658447265625, -3.576278118089249e-07, -0.555511474609375, -0.0010051727294921875, -0.0002574920654296875, -4.1961669921875e-05, -3.814697265625e-06, -0.0005834102630615234, -0.0006730552995577455, 0.0, -0.0008697509765625, -3.24249267578125e-05, -1.1444091796875e-05, -5.53131103515625e-05, 0.0, -0.0003566741943359375, -3.349781036376953e-05, -1.186507225036621, -2.503394853192731e-06, -0.12594985961914062, -4.76837158203125e-05, 0.0, 0.0, -0.027016401290893555, -1.33514404296875e-05, -2.288818359375e-05, -0.7460527420043945, -0.00920867919921875, -0.01257284265011549, -0.0003199577331542969, -7.629230822203681e-05, -0.11099827289581299, -3.814697265625e-06, -0.21832561492919922, -1.9073486328125e-06, -0.03505897521972656, -3.814697265625e-06, -2.1457672119140625e-05, -4.8160552978515625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Defender", "Of", "Argus", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 191, "Defender", " ", "Argus", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Give", "<EOS>", "Give", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 40, 136, 19, 160, "Aura", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -8.154579111375988, "model_output": {"_type": "Module", "body": [{"name": "DefenderOfArgus", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Defender Argus", "hole5": "Give", "hole2": "FREE", "_type": "Template20", "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"_type": "List", "elts": [{"args": [{"hole0": 2, "_type": "Template73"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 2}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-3.0517578125e-05, -3.814697265625e-06, -20.39735984802246], "choice_history": [80, 159, 294], "score": -20.39739418029785, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(8), HeroSelector()))])\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -0.14905929565429688, -3.4332275390625e-05, 0.0, -0.007150888442993164, 0.0, -0.0003376007080078125, -4.9591064453125e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010426044464111328, -1.5377980162156746e-05, -0.11121940612792969, -0.016716957092285156, -2.6702880859375e-05, -0.00379180908203125, 0.0, -0.0001373291015625, -0.0002193450927734375, -0.008352279663085938, -0.006534576416015625, -7.43865966796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0007404088973999023, -9.894371032714844e-06, -2.47955322265625e-05, -0.0022220611572265625, -8.392333984375e-05, -0.003159165382385254, -0.0009317398071289062, 0.0, -0.0064688920974731445, -0.0053336359560489655, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.00078582763671875, -0.000133514404296875, -3.62396240234375e-05, -0.0005340576171875, -0.0030126571655273438, -7.2479248046875e-05, -0.0001811981201171875, -6.4849853515625e-05, -0.42752981185913086, -0.0014709234237670898, -3.814697265625e-06, -0.000946044921875, 0.0, -0.3469550609588623, -3.814697265625e-06, -0.09900093078613281, -2.47955322265625e-05, -0.0005817413330078125, -2.1457672119140625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "8", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -1.5837640634031516, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"_type": "Num", "n": 8}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -1.982132911682129, -0.00011444091796875, -1.9073486328125e-06, -0.002119779586791992, -7.62939453125e-06, -4.00543212890625e-05, -2.288818359375e-05, -1.9073486328125e-06, -2.622593910928117e-06, -4.768360213347478e-06, -2.6702880859375e-05, -3.814697265625e-06, -0.0030198097229003906, -2.396098898316268e-05], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>"], "score": -2.356589211279811, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(2), HeroSelector()))])\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -0.14905929565429688, -3.4332275390625e-05, 0.0, -0.007150888442993164, 0.0, -0.0003376007080078125, -4.9591064453125e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010426044464111328, -1.5377980162156746e-05, -0.11121940612792969, -0.016716957092285156, -2.6702880859375e-05, -0.00379180908203125, 0.0, -0.0001373291015625, -0.0002193450927734375, -0.008352279663085938, -0.006534576416015625, -7.43865966796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0007404088973999023, -9.894371032714844e-06, -2.47955322265625e-05, -0.0022220611572265625, -8.392333984375e-05, -0.003159165382385254, -0.0009317398071289062, 0.0, -0.0064688920974731445, -0.0053336359560489655, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.00078582763671875, -0.000133514404296875, -3.62396240234375e-05, -0.0005340576171875, -0.0030126571655273438, -7.2479248046875e-05, -0.0001811981201171875, -6.4849853515625e-05, -0.42752981185913086, -0.0014709234237670898, -3.814697265625e-06, -0.000946044921875, 0.0, -1.3194516897201538, 0.0, -0.6882953643798828, -4.57763671875e-05, -0.0015087127685546875, -2.1457672119140625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "2", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -3.1464992633314353, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -2.8073558807373047, -0.03895282745361328, -0.21826916933059692, 0.0, -0.020843505859375, -5.14984130859375e-05, 0.0, -0.0016689300537109375, -0.0001201629638671875, 0.0, -0.0012874603271484375, 0.0, -7.05718994140625e-05, 0.0, -0.004655718803405762, -3.254413604736328e-05, 0.0, -0.04208850860595703, -0.000152587890625, -3.492764153634198e-05, -1.1920928244535389e-07, -0.06477667391300201, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 27, 232, "2", "<EOS>", "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "2", "<EOS>", "2", "<EOS>"], "score": -3.256226015757072, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"hole1": "CharacterSelector", "hole0": 2, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}]}, "hole3": "overload"}, {"hole1": 2, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(8), HeroSelector()))])\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -1.9638971090316772, 0.0, -0.1918315887451172, -1.33514404296875e-05, -0.00089263916015625, -0.0002079010009765625, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0009860992431640625, -0.0007305145263671875, -3.62396240234375e-05, -4.57763671875e-05, -0.1339569091796875, -3.814697265625e-05, 0.0, -0.007302522659301758, 0.0, -0.0003337860107421875, -5.14984130859375e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010616779327392578, -1.5258772691595368e-05, -0.11172866821289062, -0.01688671112060547, -2.6702880859375e-05, -0.003757476806640625, 0.0, -0.0001373291015625, -0.0002231597900390625, -0.008657455444335938, -0.006664276123046875, -7.2479248046875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0007423162460327148, -9.894371032714844e-06, -2.47955322265625e-05, -0.00209808349609375, -9.34600830078125e-05, -0.003162980079650879, -0.0009584426879882812, 0.0, -0.0065691471099853516, -0.005300017539411783, -2.3841855067985307e-07, -1.9073486328125e-05, -0.00018310546875, -1.9073486328125e-06, 0.0, -0.0008258819580078125, -0.0001316070556640625, -3.62396240234375e-05, -0.00052642822265625, -0.002956390380859375, -7.05718994140625e-05, -0.0001811981201171875, -6.29425048828125e-05, -0.4282679557800293, -0.0014690160751342773, -3.814697265625e-06, -0.0009441375732421875, 0.0, -0.3491666316986084, -3.814697265625e-06, -0.09905242919921875, -2.47955322265625e-05, -0.000583648681640625, -2.1457672119140625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "8", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -3.55989548631581, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"_type": "Num", "n": 8}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Heal(2), OpponentMinionCountIsGreaterThan(0)))])\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -0.14905929565429688, -3.4332275390625e-05, 0.0, -0.007150888442993164, 0.0, -0.0003376007080078125, -4.9591064453125e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010426044464111328, -1.5377980162156746e-05, -0.11121940612792969, -0.016716957092285156, -2.6702880859375e-05, -0.00379180908203125, 0.0, -0.0001373291015625, -0.0002193450927734375, -0.008352279663085938, -0.006534576416015625, -7.43865966796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0007404088973999023, -9.894371032714844e-06, -2.47955322265625e-05, -0.0022220611572265625, -8.392333984375e-05, -0.003159165382385254, -0.0009317398071289062, 0.0, -0.0064688920974731445, -0.0053336359560489655, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.00078582763671875, -0.000133514404296875, -3.62396240234375e-05, -0.0005340576171875, -0.0030126571655273438, -7.2479248046875e-05, -0.0001811981201171875, -6.4849853515625e-05, -0.42752981185913086, -0.0014709234237670898, -3.814697265625e-06, -0.000946044921875, 0.0, -1.3194516897201538, 0.0, -0.7496347427368164, -0.041961669921875, -5.7220458984375e-06, 0.0, -0.508544921875, -0.000225067138671875, -0.02690887451171875, -0.0014116752427071333, -0.024712562561035156, -0.0009365081787109375, -1.9073486328125e-06, -7.82012939453125e-05, -7.82012939453125e-05, 0.0, -0.13608601689338684, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -3.9472333350909423, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Damage(CharacterSelector(2, 8)), HeroSelector()))])\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -0.14905929565429688, -3.4332275390625e-05, 0.0, -0.007150888442993164, 0.0, -0.0003376007080078125, -4.9591064453125e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010426044464111328, -1.5377980162156746e-05, -0.11121940612792969, -0.016716957092285156, -2.6702880859375e-05, -0.00379180908203125, 0.0, -0.0001373291015625, -0.0002193450927734375, -0.008352279663085938, -0.006534576416015625, -7.43865966796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0007404088973999023, -9.894371032714844e-06, -2.47955322265625e-05, -0.0022220611572265625, -8.392333984375e-05, -0.003159165382385254, -0.0009317398071289062, 0.0, -0.0064688920974731445, -0.0053336359560489655, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.00078582763671875, -0.000133514404296875, -3.62396240234375e-05, -0.0005340576171875, -0.0030126571655273438, -7.2479248046875e-05, -0.0001811981201171875, -6.4849853515625e-05, -2.112858295440674, -1.1920928244535389e-07, -3.814697265625e-06, -0.01615142822265625, -0.0002593994140625, -5.7220458984375e-06, -1.9073486328125e-06, -0.41412925720214844, -0.0001163482666015625, 0.0, -0.037693023681640625, -0.49608707427978516, -9.5367431640625e-06, -0.07561707496643066, -2.3841855067985307e-07, -0.019170761108398438, -1.9073486328125e-06, -0.036174528300762177, -8.976459503173828e-05, -0.04094123840332031, -1.52587890625e-05, -0.000827789306640625, -4.172325134277344e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Damage", "<EOS>", 282, 40, 136, 19, 160, "Character", "Selector", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -3.957403639540182, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -1.9638971090316772, 0.0, -0.1918315887451172, -1.33514404296875e-05, -0.00089263916015625, -0.0002079010009765625, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0009860992431640625, -0.0007305145263671875, -3.62396240234375e-05, -4.57763671875e-05, -2.082155227661133, -0.0001220703125, -1.9073486328125e-06, -0.0020895004272460938, -7.62939453125e-06, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.503385758245713e-06, -4.6491513785440475e-06, -2.86102294921875e-05, -3.814697265625e-06, -0.0030503273010253906, -2.38417815126013e-05], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 136, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>"], "score": -4.443472860513225, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -2.8073558807373047, -0.03895282745361328, -1.6847749948501587, 0.0, -0.07937431335449219, -1.33514404296875e-05, 0.0, -0.0006542205810546875, -0.0001049041748046875, 0.0, -0.000759124755859375, 0.0, -8.0108642578125e-05, 0.0, -0.006113529205322266, -0.0001163482666015625, 0.0, -0.02498340606689453, -0.00019073486328125, -4.732484376290813e-05, 0.0, -0.07340503484010696, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 27, 232, "1", "<EOS>", "Character", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 110, 202, "2", "<EOS>", "2", "<EOS>"], "score": -4.772791032595364, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"hole1": "CharacterSelector", "hole0": 1, "_type": "Template56", "hole2": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}]}, "hole3": "overload"}, {"hole1": 2, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 2, windfury=True)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -1.9638971090316772, 0.0, -2.137451171875, -0.0058231353759765625, -6.723134720232338e-05, 0.0, -0.4557628333568573, 0.0, -0.19469547271728516, -3.814697265625e-06, -0.0038728713989257812, -7.62939453125e-06, -2.7298927307128906e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "2", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.958694543088882, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 2, "hole0": 2, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(ChangeAttack(2), MinionSelector(IsType\n            (MINION_TYPE.TOTEM)))), PlayerSelector()))])\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -0.14905929565429688, -3.4332275390625e-05, 0.0, -0.007150888442993164, 0.0, -0.0003376007080078125, -4.9591064453125e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010426044464111328, -1.5377980162156746e-05, -0.11121940612792969, -0.016716957092285156, -2.6702880859375e-05, -0.00379180908203125, 0.0, -0.0001373291015625, -0.0002193450927734375, -0.008352279663085938, -0.006534576416015625, -7.43865966796875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.0007404088973999023, -9.894371032714844e-06, -2.47955322265625e-05, -0.0022220611572265625, -8.392333984375e-05, -0.003159165382385254, -0.0009317398071289062, 0.0, -0.0064688920974731445, -0.0053336359560489655, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.00078582763671875, -0.000133514404296875, -3.62396240234375e-05, -0.0005340576171875, -0.0030126571655273438, -7.2479248046875e-05, -0.0001811981201171875, -6.4849853515625e-05, -1.6185822486877441, -3.8146954466355965e-06, -9.34600830078125e-05, -0.05362892150878906, -0.000423431396484375, -1.71661376953125e-05, -1.1444091796875e-05, -0.23615264892578125, -0.002633213996887207, 0.0, -0.0010738372802734375, -0.38143253326416016, -0.042716026306152344, -0.009566863998770714, -7.62939453125e-06, -0.2135171890258789, -0.0002231597900390625, -5.7220458984375e-06, 0.0, -0.514256477355957, -0.0011005401611328125, 0.0, -0.5359611511230469, -0.015270233154296875, -3.62396240234375e-05, -2.09808349609375e-05, -7.62939453125e-06, -0.0038394927978515625, -4.792213439941406e-05, -1.9073486328125e-06, -0.043636322021484375, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, 0.0, -0.0010528564453125, -1.9073486328125e-06, -0.4665861129760742, 0.0, -0.0068798065185546875, 0.0, -0.19846057891845703, -8.940695806813892e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 61, 250, "Character", "Attack", "<EOS>", "Is", "Hero", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 40, 136, 19, 160, "Buff", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -5.05454535057882, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole1": "IsHero", "hole0": "CharacterAttack", "_type": "Template69"}, {"args": [{"args": [{"args": [{"hole0": 2, "_type": "Template73"}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "TOTEM"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "BuffUntil"}}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=1)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True, taunt=True)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -0.15571226179599762, 0.0, -0.013376235961914062, -1.71661376953125e-05, -0.000640869140625, -0.0002956390380859375, -1.9073486328125e-06, -0.0001049041748046875, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0009365081787109375, -0.000766754150390625, -3.62396240234375e-05, -4.9591064453125e-05, -0.14905929565429688, -3.4332275390625e-05, 0.0, -0.007150888442993164, 0.0, -0.0003376007080078125, -4.9591064453125e-05, -7.62939453125e-06, -5.960446287645027e-07, -3.576278118089249e-07, -3.814697265625e-06, -3.814697265625e-06, -0.010426044464111328, -1.5377980162156746e-05, -2.278895378112793, -0.0005207061767578125, -1.9073486328125e-05, -0.675945520401001, 0.0, -0.0019063949584960938, -0.0001220703125, -5.125998541188892e-06, 0.0, -0.08755016326904297, -0.000141143798828125, -1.4859366416931152, -1.9073486328125e-06, -0.000507354736328125, -1.52587890625e-05, -8.225440979003906e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "1", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "8", "<EOS>", 291, 79, 271, "windfury", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.067730320825433, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 1}, "hole3": "overload"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 8}], "_type": "Call", "keywords": [{"arg": "windfury", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_minion(self, player):\n        return Minion(2, 5, windfury=True)\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -2.3841830625315197e-06, -0.0003719313535839319, -2.09808349609375e-05, 0.0, 0.0, -0.0017137527465820312, -3.826618194580078e-05, -2.0265579223632812e-06, -6.866455078125e-05, -0.0370635986328125, -0.0003814697265625, -1.5497195136049413e-06, -5.7220458984375e-06, -2.384185791015625e-05, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.015606045722961426, -0.0002957582473754883, -0.1412038803100586, -1.71661376953125e-05, -1.9638971090316772, 0.0, -2.137451171875, -0.0058231353759765625, -6.723134720232338e-05, 0.0, -1.0667352676391602, 0.0, -0.041192054748535156, -5.7220458984375e-06, -0.0018415451049804688, -7.62939453125e-06, -2.765655517578125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Doomhammer", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Doomhammer", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 165, "2", "<EOS>", 109, 200, "2", "<EOS>", "5", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.414134498084991, "model_output": {"_type": "Module", "body": [{"name": "Doomhammer", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Doomhammer", "hole2": "SHAMAN", "_type": "Template12", "hole4": {"_type": "Num", "n": 2}, "hole3": "overload"}, {"hole1": 5, "hole0": 2, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -7.62939453125e-06, -15.909393310546875, -5.813571929931641, -0.8177539706230164], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -22.540766894817352, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-05, -2.09808349609375e-05, -23.3089542388916], "choice_history": [80, 159, 294], "score": -23.30899429321289, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n"}
{"beams": [{"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 0, CHARACTER_CLASS.COMMON,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -4.107451438903809, -0.0020112991333007812, -3.7669560697395355e-05, -3.695487976074219e-05, -1.8477434423402883e-05, -0.0001277923583984375, -1.0420480966567993, -1.33514404296875e-05, -0.2936903238296509, -1.9073486328125e-06, -0.00180816650390625, -0.02680492401123047, -0.0004444122314453125, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.24249267578125e-05, 0.0, -0.006036639213562012, 0.0], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Earth", " ", "Shock", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -5.4822654946364935, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Earth Shock", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        left_minion = Null\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(1, self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.7402448654174805, -0.0001392364501953125, -1.3470558769768104e-05, -1.1444091796875e-05, -6.0796710386057384e-06, -1.9073486328125e-05, -2.2291187633527443e-05, -1.9073486328125e-06, -0.0002613067626953125, 0.0, -0.03458690643310547, -9.72747802734375e-05, -0.0010166168212890625, 0.0, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -1.1801719665527344e-05, -0.039742469787597656, -1.33514404296875e-05, -3.814697265625e-06, -0.0002079010009765625, -1.52587890625e-05, -0.0002899169921875, -2.6702880859375e-05, -6.103515625e-05, -2.09808349609375e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -3.0517578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.057625770568847656, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.0808324813842773, 0.0, -0.2887687683105469, -0.0018777847290039062, -0.000263214111328125, -3.814697265625e-06, -0.002689361572265625, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.552095651626587, 0.0, -0.0029554367065429688, -9.5367431640625e-06, -0.0024929046630859375, -0.0004940032958984375, -0.01126861572265625, 0.0, -0.0001277923583984375, -1.33514404296875e-05, -0.0008916854858398438, -9.5367431640625e-06, -0.04080963134765625, -5.7220458984375e-06, -0.025447845458984375, -0.000102996826171875, -0.0004177093505859375, -1.52587890625e-05, -0.10479450225830078, -2.86102294921875e-05, -0.7502212524414062, 0.0, -9.34600830078125e-05, -0.15095138549804688, -5.91278076171875e-05, -0.14535236358642578, 0.0, -0.00405120849609375, -1.9073486328125e-06, -0.00023651123046875, 0.0, -0.00035953521728515625, -1.9073486328125e-06, -0.000804901123046875, -0.00131988525390625, -1.9073486328125e-06, -0.0011129379272460938, -6.866455078125e-05, -3.0517578125e-05, 0.0, -0.014089584350585938, 0.0, -0.017939090728759766, -1.9073486328125e-06, -0.028687357902526855, -1.52587890625e-05, -9.5367431640625e-06, -0.6744213104248047, -5.53131103515625e-05, -0.10752458870410919, -1.9073486328125e-06, -0.009135246276855469, -9.5367431640625e-06, -0.019039154052734375, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "left_minion", "<EOS>", 20, 162, "Null", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -5.9184446105418544, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "_type": "Template3", "hole2": "SHAMAN"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": "Null", "_type": "NameConstant"}, "targets": [{"_type": "Name", "id": "left_minion"}], "_type": "Assign"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 0, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -4.107451438903809, -0.0020112991333007812, -3.7669560697395355e-05, -3.695487976074219e-05, -1.8477434423402883e-05, -0.0001277923583984375, -1.821877121925354, -0.00180816650390625, -0.0003453493118286133, -9.5367431640625e-06, -0.0021209716796875, -0.029840469360351562, -0.000263214111328125, 0.0, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, 0.0, -0.008701443672180176, 0.0], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Earth", " ", "Shock", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -5.976374409965473, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": "ALL", "hole0": "Earth Shock", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON, False, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -4.4764204025268555, -0.0018358230590820312, -4.0531076592742465e-06, -1.9192693798686378e-05, -1.6569983927183785e-05, -3.814697265625e-06, -0.01136469841003418, 0.0, -0.000194549560546875, 0.0, -0.000133514404296875, -9.5367431640625e-06, -0.03759956359863281, 0.0, -0.0004825592041015625, -7.62939453125e-06, -0.0001811981201171875, 0.0, -0.12421238422393799, -1.9073486328125e-06, -0.06453514099121094, -0.009120941162109375, 0.0, 0.0, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -0.0001163482666015625, -9.72747802734375e-05, 0.0, -1.2678008079528809, 0.0, -1.52587890625e-05, -0.11614513397216797, -1.9073486328125e-06, -4.175969479547348e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 121, 251, "Earth", " ", "Shock", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -6.112014558420896, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Earth Shock", "hole2": "target_func", "_type": "Template7", "hole4": "find_friendly_minion_spell_target", "hole3": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -4.107451438903809, -0.0020112991333007812, -3.7669560697395355e-05, -3.695487976074219e-05, -1.8477434423402883e-05, -0.0001277923583984375, -2.005150318145752, -3.814697265625e-06, -0.000396728515625, -1.52587890625e-05, -0.000789642333984375, -0.016878128051757812, -0.004764556884765625, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, 0.0, -0.009816884994506836, 0.0], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Earth", " ", "Shock", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -6.1492024882354315, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Earth Shock", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -4.107451438903809, -0.0020112991333007812, -3.7669560697395355e-05, -3.695487976074219e-05, -1.8477434423402883e-05, -0.0001277923583984375, -1.9597545862197876, -1.52587890625e-05, -0.011623382568359375, -1.9073486328125e-06, -0.001758575439453125, -0.13723182678222656, -0.00025177001953125, 0.0, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, 0.0, -0.0067795515060424805, 0.0], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Earth", " ", "Shock", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", 116, 224, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "score": -6.228828810028034, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": "PALADIN", "hole0": "Earth Shock", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "bounce", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        left_minion = Null\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(1, self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.1884441375732422, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.0762827396392822, 0.0, -0.28789520263671875, -0.0019359588623046875, -0.0002554655075073242, -3.814697265625e-06, -0.00232696533203125, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.4922311305999756, 0.0, -0.0034170150756835938, -9.5367431640625e-06, -0.002655029296875, -0.00051116943359375, -0.011241912841796875, 0.0, -0.0001220703125, -1.33514404296875e-05, -0.00079345703125, -9.5367431640625e-06, -0.039829254150390625, -5.7220458984375e-06, -0.031147003173828125, -0.000110626220703125, -0.0004405975341796875, -1.33514404296875e-05, -0.11664581298828125, -2.47955322265625e-05, -0.8774595260620117, 0.0, -9.5367431640625e-05, -0.13815879821777344, -6.103515625e-05, -0.1550436019897461, 0.0, -0.0039615631103515625, -1.9073486328125e-06, -0.00025653839111328125, 0.0, -0.0003643035888671875, -1.9073486328125e-06, -0.00087738037109375, -0.001476287841796875, -1.9073486328125e-06, -0.001110076904296875, -6.866455078125e-05, -3.0517578125e-05, 0.0, -0.01389312744140625, 0.0, -0.018297910690307617, -1.9073486328125e-06, -0.02886664867401123, -1.52587890625e-05, -9.5367431640625e-06, -0.6833229064941406, -5.53131103515625e-05, -0.10810936987400055, -1.9073486328125e-06, -0.009075164794921875, -9.5367431640625e-06, -0.01911449432373047, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "left_minion", "<EOS>", 20, 162, "Null", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -6.301598705800728, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": "Null", "_type": "NameConstant"}, "targets": [{"_type": "Name", "id": "left_minion"}], "_type": "Assign"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        right_minion = self.target.calculate_attack()\n        self.target.damage(1, self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.7402448654174805, -0.0001392364501953125, -1.3470558769768104e-05, -1.1444091796875e-05, -6.0796710386057384e-06, -1.9073486328125e-05, -2.2291187633527443e-05, -1.9073486328125e-06, -0.0002613067626953125, 0.0, -0.03458690643310547, -9.72747802734375e-05, -0.0010166168212890625, 0.0, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -1.1801719665527344e-05, -0.039742469787597656, -1.33514404296875e-05, -3.814697265625e-06, -0.0002079010009765625, -1.52587890625e-05, -0.0002899169921875, -2.6702880859375e-05, -6.103515625e-05, -2.09808349609375e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.340576171875e-05, 0.0, -4.00543212890625e-05, -3.0517578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.057625770568847656, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.5274856090545654, 0.0, -0.40195178985595703, -0.49187374114990234, -0.0002040863037109375, 0.0, -3.62396240234375e-05, 0.0, -0.014972686767578125, 0.0, -0.0009992122650146484, -7.62939453125e-06, -0.000213623046875, 0.0, -0.21600341796875, -2.86102294921875e-05, -0.18668174743652344, -1.9073486328125e-06, -0.0002498626708984375, -0.0001316070556640625, -7.62939453125e-06, -1.33514404296875e-05, -0.0003814697265625, 0.0, -0.001964569091796875, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -0.38248348236083984, -7.62939453125e-06, -2.09808349609375e-05, -0.037303924560546875, -3.814697265625e-06, -0.0017668100772425532, -1.9073486328125e-06, -5.14984130859375e-05, -6.103515625e-05, -0.0038846731185913086, -4.172325134277344e-06, -0.2322549819946289, -0.000621795654296875, -0.0050373077392578125, -5.91278076171875e-05, -0.12723350524902344, 0.0, -0.015346527099609375, 0.0, -0.039122819900512695, -1.9073486328125e-06, -0.000263214111328125, 0.0, -2.288818359375e-05, -1.013808250427246, -0.0002574920654296875, -0.005157470703125, 0.0, -0.15374755859375, -1.9073486328125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -0.4834890365600586, 0.0, -0.0013885498046875, -1.1920928244535389e-07, -0.2133999764919281, 0.0, -0.03456878662109375, -0.000457763671875, -1.71661376953125e-05, -0.0026636123657226562, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.0109710693359375, 0.0, -0.07863616943359375, -1.9073486328125e-06, -0.0013427734375, 0.0, -0.17576122283935547, -3.814697265625e-06, -0.0028400421142578125, 0.0, -0.04294200614094734, -4.768370445162873e-07, -0.024212956428527832, -0.0001010894775390625, -2.288818359375e-05, -0.4010744094848633, -0.000217437744140625, -0.0006342288688756526, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.016669750213623047, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 111, 204, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "right_minion", "<EOS>", 14, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.229789967931389, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "_type": "Template3", "hole2": "SHAMAN"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}, "targets": [{"_type": "Name", "id": "right_minion"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        right_minion = self.target.calculate_attack()\n        self.target.damage(1, self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.1884441375732422, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.5190021991729736, 0.0, -0.3998994827270508, -0.49167728424072266, -0.0002040863037109375, 0.0, -3.4332275390625e-05, 0.0, -0.015260696411132812, 0.0, -0.0009725093841552734, -7.62939453125e-06, -0.000213623046875, 0.0, -0.21599102020263672, -2.86102294921875e-05, -0.1591501235961914, -1.9073486328125e-06, -0.0002765655517578125, -0.000148773193359375, -5.7220458984375e-06, -1.1444091796875e-05, -0.00045013427734375, 0.0, -0.0019588470458984375, 0.0, -5.543231964111328e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.3883934020996094, -9.5367431640625e-06, -2.09808349609375e-05, -0.03482532501220703, -3.814697265625e-06, -0.0017685916973277926, -1.9073486328125e-06, -5.14984130859375e-05, -5.91278076171875e-05, -0.0039027929306030273, -4.172325134277344e-06, -0.23130035400390625, -0.0007476806640625, -0.006317138671875, -6.29425048828125e-05, -0.0961141586303711, 0.0, -0.010793685913085938, 0.0, -0.03774762153625488, -1.9073486328125e-06, -0.00028324127197265625, 0.0, -2.47955322265625e-05, -1.0294866561889648, -0.00026702880859375, -0.005421638488769531, 0.0, -0.12840652465820312, -1.9073486328125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -0.5073080062866211, 0.0, -0.001384735107421875, -1.1920928244535389e-07, -0.2146919071674347, 0.0, -0.031314849853515625, -0.0004749298095703125, -1.71661376953125e-05, -0.002655029296875, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.010587692260742188, 0.0, -0.07665061950683594, -1.9073486328125e-06, -0.0013599395751953125, 0.0, -0.16902637481689453, -3.814697265625e-06, -0.0028820037841796875, 0.0, -0.043466050177812576, -4.768370445162873e-07, -0.024106144905090332, -0.0001010894775390625, -2.288818359375e-05, -0.39938831329345703, -0.000217437744140625, -0.0006358988466672599, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.01667165756225586, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "right_minion", "<EOS>", 14, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.458411863581169, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}, "targets": [{"_type": "Name", "id": "right_minion"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.7676687240600586, -9.5367431640625e-06, -0.09521102905273438, -2.09808349609375e-05, -8.96453857421875e-05, -3.814697265625e-06, -0.00057220458984375, 0.0, -0.000701904296875, 0.0, -1.1444091796875e-05, -0.0001049041748046875, -0.0009174346923828125, 0.0, -0.7087068557739258, -1.9073486328125e-06, -0.0027141571044921875, -0.021764755249023438, 0.0, -0.004588127136230469, -5.7220458984375e-06, -0.06689453125, -0.0060634613037109375, -3.814697265625e-06, 0.0, -0.0001327991485595703, 0.0, -0.2662935256958008, -5.7220458984375e-06, -0.143463134765625, 0.0, -0.000827789306640625, -0.022500991821289062, -1.9073486328125e-06, -0.0008487701416015625, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.00640106201171875, 0.0, -0.0019489526748657227, -1.9073486328125e-06, -0.015514492988586426, -5.14984130859375e-05, -3.814697265625e-06, -0.5843477249145508, -0.0004138946533203125, -0.01895003207027912, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.012265324592590332, -1.1444091796875e-05, -0.2834653854370117, -0.0005970001220703125, -0.030584335327148438, -2.6702880859375e-05, -0.16051769256591797, 0.0, -0.012195587158203125, 0.0, -0.028925061225891113, 0.0, -0.000118255615234375, 0.0, -6.67572021484375e-05, -0.7276773452758789, -0.00034332275390625, -0.0028448104858398438, 0.0, -0.13684463500976562, -1.9073486328125e-06, -8.0108642578125e-05, -7.62939453125e-06, -0.5612335205078125, 0.0, -0.00162506103515625, -1.1920928244535389e-07, -0.21917422115802765, 0.0, -0.03198432922363281, -0.0002899169921875, -1.71661376953125e-05, -0.0022554397583007812, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.009927749633789062, 0.0, -0.05487251281738281, -1.9073486328125e-06, -0.0015735626220703125, 0.0, -0.12874126434326172, -3.814697265625e-06, -0.003025054931640625, 0.0, -0.04385765269398689, -4.768370445162873e-07, -0.02342236042022705, -0.0001010894775390625, -2.288818359375e-05, -0.3901090621948242, -0.00023651123046875, -0.0006327927112579346, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.017940998077392578, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 19, 160, "targets", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -7.610922111647561, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"iter": {"_type": "Name", "id": "targets"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        right_minion = self.target.calculate_attack()\n        self.target.damage(1, self)\n        if self.target is self.target.index:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.1884441375732422, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.5190021991729736, 0.0, -0.3998994827270508, -0.49167728424072266, -0.0002040863037109375, 0.0, -3.4332275390625e-05, 0.0, -0.015260696411132812, 0.0, -0.0009725093841552734, -7.62939453125e-06, -0.000213623046875, 0.0, -0.21599102020263672, -2.86102294921875e-05, -0.1591501235961914, -1.9073486328125e-06, -0.0002765655517578125, -0.000148773193359375, -5.7220458984375e-06, -1.1444091796875e-05, -0.00045013427734375, 0.0, -0.0019588470458984375, 0.0, -5.543231964111328e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -0.3883934020996094, -9.5367431640625e-06, -2.09808349609375e-05, -0.03482532501220703, -3.814697265625e-06, -0.0017685916973277926, -1.9073486328125e-06, -5.14984130859375e-05, -5.91278076171875e-05, -0.0039027929306030273, -4.172325134277344e-06, -0.23130035400390625, -0.0007476806640625, -0.006317138671875, -6.29425048828125e-05, -0.0961141586303711, 0.0, -0.010793685913085938, 0.0, -0.03774762153625488, -1.9073486328125e-06, -0.00028324127197265625, 0.0, -2.47955322265625e-05, -1.0254430770874023, -0.00041961669921875, -0.01461029052734375, -1.9073486328125e-06, -0.4482879638671875, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.22381114959716797, -1.71661376953125e-05, -0.005047798156738281, 0.0, -0.5933990478515625, -5.7220458984375e-06, -0.000324249267578125, -0.0003986358642578125, -3.814697265625e-06, -0.0002880096435546875, -4.1961669921875e-05, -1.33514404296875e-05, 0.0, -0.1264486312866211, 0.0, -0.18154525756835938, -5.7220458984375e-06, -0.0012912750244140625, 0.0, -0.4085867404937744, -1.9073486328125e-06, -0.018032073974609375, 0.0, -0.060684483498334885, -7.152555099310121e-07, -0.03376615047454834, -7.05718994140625e-05, -4.9591064453125e-05, -0.28014469146728516, -0.000316619873046875, -0.0005402115057222545, -5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.02132391929626465, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "right_minion", "<EOS>", 14, 134, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.236741325859697, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}}, "targets": [{"_type": "Name", "id": "right_minion"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is self.target.index:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.7676687240600586, -9.5367431640625e-06, -0.09521102905273438, -2.09808349609375e-05, -8.96453857421875e-05, -3.814697265625e-06, -0.00057220458984375, 0.0, -0.000701904296875, 0.0, -1.1444091796875e-05, -0.0001049041748046875, -0.0009174346923828125, 0.0, -0.7087068557739258, -1.9073486328125e-06, -0.0027141571044921875, -0.021764755249023438, 0.0, -0.004588127136230469, -5.7220458984375e-06, -0.06689453125, -0.0060634613037109375, -3.814697265625e-06, 0.0, -0.0001327991485595703, 0.0, -0.2662935256958008, -5.7220458984375e-06, -0.143463134765625, 0.0, -0.000827789306640625, -0.022500991821289062, -1.9073486328125e-06, -0.0008487701416015625, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.00640106201171875, 0.0, -0.0019489526748657227, -1.9073486328125e-06, -0.015514492988586426, -5.14984130859375e-05, -3.814697265625e-06, -0.5843477249145508, -0.0004138946533203125, -0.01895003207027912, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.012265324592590332, -1.1444091796875e-05, -0.2834653854370117, -0.0005970001220703125, -0.030584335327148438, -2.6702880859375e-05, -0.16051769256591797, 0.0, -0.012195587158203125, 0.0, -0.028925061225891113, 0.0, -0.000118255615234375, 0.0, -6.67572021484375e-05, -1.0206880569458008, -0.00112152099609375, -0.012874603271484375, -1.9073486328125e-06, -0.5049343109130859, -7.62939453125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.15305137634277344, -1.1444091796875e-05, -0.0029058456420898438, 0.0, -0.5522732734680176, -5.7220458984375e-06, -0.0003032684326171875, -0.000225067138671875, -1.9073486328125e-06, -0.0002994537353515625, -4.1961669921875e-05, -1.33514404296875e-05, 0.0, -0.08285331726074219, 0.0, -0.1348285675048828, -5.7220458984375e-06, -0.0014476776123046875, 0.0, -0.3979990482330322, -1.9073486328125e-06, -0.018535614013671875, 0.0, -0.06619241833686829, -7.152555099310121e-07, -0.031216979026794434, -7.05718994140625e-05, -4.9591064453125e-05, -0.2696390151977539, -0.0003147125244140625, -0.0005429515149444342, -5.7220458984375e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.02183985710144043, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 19, 160, "targets", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.526402764238668, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"iter": {"_type": "Name", "id": "targets"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -1.7676687240600586, -9.5367431640625e-06, -0.09521102905273438, -2.09808349609375e-05, -8.96453857421875e-05, -3.814697265625e-06, -0.00057220458984375, 0.0, -0.000701904296875, 0.0, -1.1444091796875e-05, -0.0001049041748046875, -0.0009174346923828125, 0.0, -0.7087068557739258, -1.9073486328125e-06, -0.0027141571044921875, -0.021764755249023438, 0.0, -0.004588127136230469, -5.7220458984375e-06, -0.06689453125, -0.0060634613037109375, -3.814697265625e-06, 0.0, -0.0001327991485595703, 0.0, -0.2662935256958008, -5.7220458984375e-06, -0.143463134765625, 0.0, -0.000827789306640625, -0.022500991821289062, -1.9073486328125e-06, -0.0008487701416015625, -1.52587890625e-05, -1.9073486328125e-05, 0.0, -0.00640106201171875, 0.0, -0.0019489526748657227, -1.9073486328125e-06, -0.015514492988586426, -5.14984130859375e-05, -3.814697265625e-06, -0.5843477249145508, -0.0004138946533203125, -0.01895003207027912, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.012265324592590332, -1.1444091796875e-05, -0.2834653854370117, -0.0005970001220703125, -0.030584335327148438, -2.6702880859375e-05, -0.16051769256591797, 0.0, -0.012195587158203125, 0.0, -0.028925061225891113, 0.0, -0.000118255615234375, 0.0, -6.67572021484375e-05, -0.7276773452758789, -0.00034332275390625, -0.0028448104858398438, 0.0, -0.13684463500976562, -1.9073486328125e-06, -8.0108642578125e-05, -7.62939453125e-06, -0.849299430847168, -9.5367431640625e-06, -0.006953239440917969, 0.0, -0.5740165710449219, -5.7220458984375e-06, -0.0003814697265625, -0.0001811981201171875, -1.9073486328125e-06, -0.0002899169921875, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -0.09032058715820312, 0.0, -0.13121795654296875, -3.814697265625e-06, -0.001415252685546875, 0.0, -0.4361422061920166, -1.9073486328125e-06, -0.017786026000976562, 0.0, -0.06516390293836594, -5.960462772236497e-07, -0.03293263912200928, -6.866455078125e-05, -4.76837158203125e-05, -0.27390384674072266, -0.0003108978271484375, -0.0005477261729538441, -5.7220458984375e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.022185087203979492, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 282, 45, 160, "self", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 19, 160, "targets", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.623094758933718, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}}, "_type": "Expr"}, {"iter": {"_type": "Name", "id": "targets"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}]}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        index = self.target.index\n        if minion is not self.target:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not game.other_player.hero:\n            game.other_player.hero.damage(player.effective_spell_damage(1),\n                self)\n", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.179073458653875e-06, -0.0004408587992656976, -2.3841855067985307e-07, -0.0002307891845703125, -1.9073486328125e-06, 0.0, -0.0005646944046020508, -7.62939453125e-06, -1.1444091796875e-05, -0.0001678466796875, -0.8001470565795898, -0.0001316070556640625, -2.50339189733495e-06, -1.3709068298339844e-05, -4.5299530029296875e-06, -6.878376007080078e-05, -1.1920894849026809e-07, -3.814697265625e-06, -0.0003019571304321289, 0.0, -0.01012420654296875, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, 0.0, -0.0004426240921020508, -9.5367431640625e-06, -0.000194549560546875, 0.0, -0.07246029376983643, -1.9073486328125e-06, -0.0005016326904296875, -7.62939453125e-06, -3.635883331298828e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.9604644775390625e-06, -0.09836292266845703, -1.71661376953125e-05, -3.814697265625e-06, -0.00025177001953125, -1.33514404296875e-05, -0.0002155303955078125, -3.0517578125e-05, -5.340576171875e-05, -1.9073486328125e-05, -4.208087921142578e-05, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -3.62396240234375e-05, -3.62396240234375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.1884441375732422, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9727706909179688, 0.0, -0.021971702575683594, -1.9073486328125e-06, -0.0005168914794921875, -0.0001010894775390625, -0.005794525146484375, 0.0, -0.0004291534423828125, -1.52587890625e-05, -0.00047588348388671875, -5.7220458984375e-06, -0.04448127746582031, -3.814697265625e-06, -0.10053634643554688, -0.0001430511474609375, -0.000377655029296875, -1.9073486328125e-05, -0.22110366821289062, -3.24249267578125e-05, -0.9640564918518066, 0.0, -0.000125885009765625, -0.19437313079833984, -5.7220458984375e-05, -0.07305717468261719, 0.0, -0.00482940673828125, -1.9073486328125e-06, -0.00036716461181640625, 0.0, -0.00039768218994140625, -1.9073486328125e-06, -0.0012836456298828125, -0.001544952392578125, -1.9073486328125e-06, -0.0010585784912109375, -6.67572021484375e-05, -3.0517578125e-05, 0.0, -0.014474868774414062, 0.0, -0.019052505493164062, -1.9073486328125e-06, -0.028386831283569336, -1.52587890625e-05, -9.5367431640625e-06, -1.1106605529785156, -0.0012531280517578125, -0.03854357823729515, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.010092854499816895, -9.5367431640625e-06, -0.2366170883178711, -0.0005474090576171875, -0.02972698211669922, -2.47955322265625e-05, -0.18933773040771484, 0.0, -0.007822036743164062, 0.0, -0.02524864673614502, 0.0, -0.00014781951904296875, 0.0, -5.14984130859375e-05, -0.6469736099243164, -0.0003204345703125, -0.003345489501953125, 0.0, -0.14597702026367188, -1.9073486328125e-06, -7.43865966796875e-05, -7.62939453125e-06, -0.5280981063842773, 0.0, -0.0016231536865234375, -1.1920928244535389e-07, -0.23555466532707214, 0.0, -0.032985687255859375, -0.00029754638671875, -1.71661376953125e-05, -0.0022058486938476562, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.010068893432617188, 0.0, -0.06217193603515625, -1.9073486328125e-06, -0.0014629364013671875, 0.0, -0.1400136947631836, -3.814697265625e-06, -0.002902984619140625, 0.0, -0.04339643195271492, -4.768370445162873e-07, -0.02352726459503174, -0.0001010894775390625, -2.288818359375e-05, -0.39816856384277344, -0.0002307891845703125, -0.000635057978797704, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.017708301544189453, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Earth", "Shock", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "index", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 92, 146, 15, 139, 19, 160, "minion", "<EOS>", 279, 7, 282, 37, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>", 92, 146, 15, 139, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", 279, 7, 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 283, 63, 253, "1", "<EOS>", 45, 160, "self", "<EOS>"], "score": -8.793925978983644, "model_output": {"_type": "Module", "body": [{"name": "EarthShock", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Earth Shock", "hole2": "SHAMAN", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}, "targets": [{"_type": "Name", "id": "index"}], "_type": "Assign"}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"_type": "Name", "id": "minion"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}]}}, {"body": [{"value": {"args": [{"hole0": 1, "_type": "Template71"}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "ops": [{"_type": "IsNot"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-5.53131103515625e-05, -3.0517578125e-05, -22.353736877441406], "choice_history": [80, 159, 294], "score": -22.353822708129883, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n"}
{"beams": [{"inferred_code": "class Eye<UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -1.5704054832458496, -3.814697265625e-06, -2.2649765014648438e-06, -0.02599811553955078, -0.06513118743896484, -0.000324249267578125, -5.817244164063595e-05, -5.447864532470703e-05, -0.0005111607606522739, -0.00055694580078125, -8.666512439958751e-05, -1.9073486328125e-06, -4.768367489305092e-06, 0.0, -0.0007976293563842773, -1.9073486328125e-06, -0.005035400390625, 0.0, -0.08541011810302734, -0.0095977783203125, -7.62939453125e-06, 0.0, -0.0002269744873046875, 0.0, -0.04245567321777344, -0.0032939910888671875, -0.004001617431640625, -0.0002841949462890625, -9.5367431640625e-06, -0.6998201608657837, -0.00012409687042236328, -5.7220458984375e-06, -0.23097801208496094, -5.7220458984375e-06, -0.3952159881591797, -1.1920928244535389e-07, -0.3933534622192383, -1.33514404296875e-05, -0.0048868656158447266, -2.6941299438476562e-05, -9.5367431640625e-06, -0.00023651123046875, -4.57763671875e-05, -0.17090106010437012, -2.0265579223632812e-06, -0.014729976654052734, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "1", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -4.18713366268593, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "hole2": "PALADIN", "_type": "Template11", "hole4": {"args": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.5167573690414429, 0.0, -0.0015859603881835938, -0.000240325927734375, -9.5367431640625e-06, -0.23326456546783447, -0.017816543579101562, -0.0002040863037109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005436897277832031, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025726318359375, 0.0, -2.6702880859375e-05, -0.0016736984252929688, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.0024242401123046875, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015430450439453125, -3.814697265625e-05, 0.0, -0.014788627624511719, 0.0, -0.0010124444961547852, 0.0, -0.5127357244491577, 0.0, -0.0015649795532226562, -0.000255584716796875, -9.5367431640625e-06, -0.2401599884033203, -0.0184783935546875, -0.0001983642578125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.005486488342285156, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -4.481955750819452, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.9368127584457397, 0.0, -0.0009479522705078125, -0.000171661376953125, -5.7220458984375e-06, -0.5248585939407349, -0.025424957275390625, -0.000156402587890625, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.005713462829589844, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.025163650512695312, 0.0, -2.288818359375e-05, -0.00173187255859375, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -1.9073486328125e-05, -0.002689361572265625, -5.7220458984375e-06, -6.29425048828125e-05, -0.0016021728515625, -3.814697265625e-05, 0.0, -0.014975547790527344, 0.0, -0.0010257959365844727, 0.0, -0.5118354558944702, 0.0, -0.0015649795532226562, -0.000255584716796875, -9.5367431640625e-06, -0.2405012845993042, -0.018329620361328125, -0.0002002716064453125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.00548553466796875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.200003250476129, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.5167573690414429, 0.0, -0.0015859603881835938, -0.000240325927734375, -9.5367431640625e-06, -0.23326456546783447, -0.017816543579101562, -0.0002040863037109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005436897277832031, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025726318359375, 0.0, -2.6702880859375e-05, -0.0016736984252929688, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.0024242401123046875, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015430450439453125, -3.814697265625e-05, 0.0, -0.014788627624511719, 0.0, -0.0010124444961547852, 0.0, -0.9433997869491577, 0.0, -0.000904083251953125, -0.0001888275146484375, -5.7220458984375e-06, -0.5227007865905762, -0.027635574340820312, -0.000152587890625, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.0058441162109375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.203868611689813, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.unbind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.9708774089813232, 0.0, -0.0017080307006835938, -0.000217437744140625, -5.7220458984375e-06, -0.610507607460022, -0.010568618774414062, -0.000263214111328125, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00022125244140625, -3.814697265625e-06, -0.0060253143310546875, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.025743484497070312, 0.0, -2.288818359375e-05, -0.0014638900756835938, 0.0, -1.33514404296875e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.52587890625e-05, -0.0001983642578125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0017528533935546875, -3.814697265625e-05, 0.0, -0.019730567932128906, 0.0, -0.0003552436828613281, 0.0, -0.5142530202865601, 0.0, -0.0016050338745117188, -0.000240325927734375, -9.5367431640625e-06, -0.23222720623016357, -0.017910003662109375, -0.00020599365234375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016117095947265625, -3.814697265625e-06, -0.005446434020996094, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025716781616210938, 0.0, -2.6702880859375e-05, -0.0016775131225585938, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.002498626708984375, -5.7220458984375e-06, -6.29425048828125e-05, -0.00156402587890625, -3.814697265625e-05, 0.0, -0.014754295349121094, 0.0, -0.0010210275650024414, 0.0, -0.5122054815292358, 0.0, -0.0015697479248046875, -0.000255584716796875, -9.5367431640625e-06, -0.23969173431396484, -0.01851654052734375, -0.0002002716064453125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.005488395690917969, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.316435559626825, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eyefor(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -1.5704768896102905, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.5167573690414429, 0.0, -0.0015859603881835938, -0.000240325927734375, -9.5367431640625e-06, -0.23326456546783447, -0.017816543579101562, -0.0002040863037109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005436897277832031, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025726318359375, 0.0, -2.6702880859375e-05, -0.0016736984252929688, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.0024242401123046875, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015430450439453125, -3.814697265625e-05, 0.0, -0.014788627624511719, 0.0, -0.0010124444961547852, 0.0, -0.5127357244491577, 0.0, -0.0015649795532226562, -0.000255584716796875, -9.5367431640625e-06, -0.2401599884033203, -0.0184783935546875, -0.0001983642578125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.005486488342285156, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "for", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.808905257817514, "model_output": {"_type": "Module", "body": [{"name": "Eyefor", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.9368127584457397, 0.0, -0.0009479522705078125, -0.000171661376953125, -5.7220458984375e-06, -0.5248585939407349, -0.025424957275390625, -0.000156402587890625, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.005713462829589844, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.025163650512695312, 0.0, -2.288818359375e-05, -0.00173187255859375, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -1.9073486328125e-05, -0.002689361572265625, -5.7220458984375e-06, -6.29425048828125e-05, -0.0016021728515625, -3.814697265625e-05, 0.0, -0.014975547790527344, 0.0, -0.0010257959365844727, 0.0, -0.9449352025985718, 0.0, -0.00090789794921875, -0.0001888275146484375, -5.7220458984375e-06, -0.5240961313247681, -0.027784347534179688, -0.0001544952392578125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00014591217041015625, -1.9073486328125e-06, -0.0058383941650390625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.925703390475519, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye Eye Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -1.6612313985824585, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.5167573690414429, 0.0, -0.0015859603881835938, -0.000240325927734375, -9.5367431640625e-06, -0.23326456546783447, -0.017816543579101562, -0.0002040863037109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005436897277832031, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025726318359375, 0.0, -2.6702880859375e-05, -0.0016736984252929688, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.0024242401123046875, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015430450439453125, -3.814697265625e-05, 0.0, -0.014788627624511719, 0.0, -0.0010124444961547852, 0.0, -0.5127357244491577, 0.0, -0.0015649795532226562, -0.000255584716796875, -9.5367431640625e-06, -0.2401599884033203, -0.0184783935546875, -0.0001983642578125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.005486488342285156, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "Eye", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.928372486468561, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye Eye Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('<UNK> for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -1.6915477514266968, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.5167573690414429, 0.0, -0.0015859603881835938, -0.000240325927734375, -9.5367431640625e-06, -0.23326456546783447, -0.017816543579101562, -0.0002040863037109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005436897277832031, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025726318359375, 0.0, -2.6702880859375e-05, -0.0016736984252929688, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.0024242401123046875, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015430450439453125, -3.814697265625e-05, 0.0, -0.014788627624511719, 0.0, -0.0010124444961547852, 0.0, -0.5127357244491577, 0.0, -0.0015649795532226562, -0.000255584716796875, -9.5367431640625e-06, -0.2401599884033203, -0.0184783935546875, -0.0001983642578125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.005486488342285156, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "<UNK>", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -5.948227881428011, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "<UNK> for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.9708774089813232, 0.0, -0.0017080307006835938, -0.000217437744140625, -5.7220458984375e-06, -1.3283611536026, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0005283355712890625, -1.9073486328125e-06, -0.001796722412109375, 0.0, -8.58306884765625e-05, -2.09808349609375e-05, -0.016088485717773438, 0.0, -3.814697265625e-05, -0.0018367767333984375, 0.0, -1.33514404296875e-05, -5.53131103515625e-05, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -2.09808349609375e-05, -9.918212890625e-05, -5.7220458984375e-06, -6.67572021484375e-05, -0.0017242431640625, -3.4332275390625e-05, 0.0, -0.02299785614013672, 0.0, -0.00027239322662353516, 0.0, -0.5173019170761108, 0.0, -0.001567840576171875, -0.0002307891845703125, -9.5367431640625e-06, -0.22839486598968506, -0.016033172607421875, -0.000202178955078125, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.0001621246337890625, -3.814697265625e-06, -0.005415916442871094, 0.0, -5.91278076171875e-05, -4.57763671875e-05, -0.0250701904296875, 0.0, -2.6702880859375e-05, -0.0016641616821289062, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.71661376953125e-05, -0.00104522705078125, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015239715576171875, -3.814697265625e-05, 0.0, -0.01610565185546875, 0.0, -0.0007292032241821289, 0.0, -0.5140060186386108, 0.0, -0.001567840576171875, -0.0002498626708984375, -9.5367431640625e-06, -0.23864328861236572, -0.018268585205078125, -0.0002002716064453125, 0.0, -3.24249267578125e-05, 0.0, -0.0001583099365234375, -3.814697265625e-06, -0.005462646484375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -6.009989722605951, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -1.629334807395935, -4.3987496610498056e-05, -8.58306884765625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.35286450386047363, -9.5367431640625e-06, -4.5299530029296875e-06, -0.02165985107421875, -0.0019283294677734375, -0.000873565673828125, -0.2333046793937683, -0.00013935565948486328, -0.14519059658050537, -0.0017642974853515625, -0.00012421367864590138, 0.0, -1.2993446944165044e-05, 0.0, -0.00218963623046875, 0.0, -9.5367431640625e-05, -2.288818359375e-05, -0.7925206422805786, -1.9073486328125e-06, -0.0001544952392578125, -0.0010833740234375, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.000186920166015625, -1.9073486328125e-05, -0.0004787445068359375, -0.08448028564453125, -2.09808349609375e-05, 0.0, -0.11133289337158203, 0.0, -0.0001742839813232422, 0.0, -0.49785315990448, 0.0, -0.0023708343505859375, -0.0002288818359375, -5.7220458984375e-06, -0.244279146194458, -0.004852294921875, -0.0003871917724609375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00023174285888671875, -3.814697265625e-06, -0.005785942077636719, 0.0, -5.91278076171875e-05, -4.00543212890625e-05, -0.026353836059570312, 0.0, -2.47955322265625e-05, -0.0015048980712890625, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.000171661376953125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015811920166015625, -3.814697265625e-05, 0.0, -0.019761085510253906, 0.0, -0.0003371238708496094, 0.0, -0.517168402671814, 0.0, -0.0015850067138671875, -0.0002384185791015625, -9.5367431640625e-06, -0.23329174518585205, -0.017778396606445312, -0.0002040863037109375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005434989929199219, 0.0, -5.91278076171875e-05, -4.57763671875e-05, -0.02562713623046875, 0.0, -2.47955322265625e-05, -0.0016698837280273438, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.0023212432861328125, -5.7220458984375e-06, -6.29425048828125e-05, -0.0015411376953125, -3.814697265625e-05, 0.0, -0.014865875244140625, 0.0, -0.0009952783584594727, 0.0, -0.5128453969955444, 0.0, -0.0015659332275390625, -0.000255584716796875, -9.5367431640625e-06, -0.2401747703552246, -0.018466949462890625, -0.0001983642578125, 0.0, -3.24249267578125e-05, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.0054836273193359375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "Eye", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -6.03269289407217, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>Eye", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.unbind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.9708774089813232, 0.0, -0.0017080307006835938, -0.000217437744140625, -5.7220458984375e-06, -0.610507607460022, -0.010568618774414062, -0.000263214111328125, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00022125244140625, -3.814697265625e-06, -0.0060253143310546875, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.025743484497070312, 0.0, -2.288818359375e-05, -0.0014638900756835938, 0.0, -1.33514404296875e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.52587890625e-05, -0.0001983642578125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0017528533935546875, -3.814697265625e-05, 0.0, -0.019730567932128906, 0.0, -0.0003552436828613281, 0.0, -0.9408735036849976, 0.0, -0.0009593963623046875, -0.0001735687255859375, -5.7220458984375e-06, -0.5207042694091797, -0.02623748779296875, -0.0001583099365234375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.00014591217041015625, -3.814697265625e-06, -0.005738258361816406, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.025165557861328125, 0.0, -2.288818359375e-05, -0.0017366409301757812, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -1.71661376953125e-05, -0.002773284912109375, -5.7220458984375e-06, -6.29425048828125e-05, -0.0016345977783203125, -3.814697265625e-05, 0.0, -0.014939308166503906, 0.0, -0.0010353326797485352, 0.0, -0.5111364126205444, 0.0, -0.0015697479248046875, -0.000255584716796875, -9.5367431640625e-06, -0.23981499671936035, -0.0183868408203125, -0.0002002716064453125, 0.0, -3.24249267578125e-05, 0.0, -0.00015926361083984375, -1.9073486328125e-06, -0.005488395690917969, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -6.03832350575567, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.unbind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.9708774089813232, 0.0, -0.0017080307006835938, -0.000217437744140625, -5.7220458984375e-06, -0.610507607460022, -0.010568618774414062, -0.000263214111328125, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.00022125244140625, -3.814697265625e-06, -0.0060253143310546875, 0.0, -5.7220458984375e-05, -3.814697265625e-05, -0.025743484497070312, 0.0, -2.288818359375e-05, -0.0014638900756835938, 0.0, -1.33514404296875e-05, -7.2479248046875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.52587890625e-05, -0.0001983642578125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0017528533935546875, -3.814697265625e-05, 0.0, -0.019730567932128906, 0.0, -0.0003552436828613281, 0.0, -0.5142530202865601, 0.0, -0.0016050338745117188, -0.000240325927734375, -9.5367431640625e-06, -0.23222720623016357, -0.017910003662109375, -0.00020599365234375, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.00016117095947265625, -3.814697265625e-06, -0.005446434020996094, 0.0, -5.91278076171875e-05, -4.38690185546875e-05, -0.025716781616210938, 0.0, -2.6702880859375e-05, -0.0016775131225585938, 0.0, -1.1444091796875e-05, -7.2479248046875e-05, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -1.71661376953125e-05, -0.002498626708984375, -5.7220458984375e-06, -6.29425048828125e-05, -0.00156402587890625, -3.814697265625e-05, 0.0, -0.014754295349121094, 0.0, -0.0010210275650024414, 0.0, -0.9442781209945679, 0.0, -0.000904083251953125, -0.0001888275146484375, -5.7220458984375e-06, -0.5215048789978027, -0.027833938598632812, -0.0001544952392578125, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.005850791931152344, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -6.039189561244257, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Eye<UNK>(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('<UNK>', self._reveal)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -5.7220458984375e-06, -0.00028987551922909915, -0.2435273826122284, -0.21860595047473907, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.26511240005493164, -7.62939453125e-06, -4.649161837733118e-06, -0.023303985595703125, -0.0025424957275390625, -0.0008754730224609375, -0.22527562081813812, -0.00012028217315673828, -0.2148146629333496, -0.0043048858642578125, -0.0001707039773464203, 0.0, -1.4543071301886812e-05, 0.0, -0.0020198822021484375, 0.0, -0.0001163482666015625, -2.6702880859375e-05, -0.748062252998352, -1.9073486328125e-06, -0.000141143798828125, -0.001190185546875, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -0.00019073486328125, -2.09808349609375e-05, -0.000461578369140625, -0.03314399719238281, -2.09808349609375e-05, 0.0, -0.08382034301757812, 0.0, -0.0001761913299560547, 0.0, -0.5035607814788818, 0.0, -0.0021047592163085938, -0.000232696533203125, -5.7220458984375e-06, -0.24441373348236084, -0.0044879913330078125, -0.00038909912109375, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.00022792816162109375, -3.814697265625e-06, -0.005710601806640625, 0.0, -5.7220458984375e-05, -4.00543212890625e-05, -0.026470184326171875, 0.0, -2.6702880859375e-05, -0.0015439987182617188, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, -1.71661376953125e-05, -0.0001850128173828125, -5.7220458984375e-06, -6.4849853515625e-05, -0.0015869140625, -3.814697265625e-05, 0.0, -0.019573211669921875, 0.0, -0.0003485679626464844, 0.0, -0.9368127584457397, 0.0, -0.0009479522705078125, -0.000171661376953125, -5.7220458984375e-06, -1.5000725984573364, -7.43865966796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00038909912109375, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.20159912109375e-05, -2.09808349609375e-05, -0.0155181884765625, 0.0, -3.814697265625e-05, -0.0020875930786132812, 0.0, -1.33514404296875e-05, -5.53131103515625e-05, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -2.288818359375e-05, -0.00020599365234375, -3.814697265625e-06, -6.67572021484375e-05, -0.001556396484375, -3.4332275390625e-05, 0.0, -0.02121734619140625, 0.0, -0.00038695335388183594, 0.0, -0.5179322957992554, 0.0, -0.0015401840209960938, -0.0002346038818359375, -9.5367431640625e-06, -0.2327796220779419, -0.016124725341796875, -0.0001964569091796875, 0.0, -2.86102294921875e-05, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.005413055419921875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Eye", "<UNK>", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -6.135743125315912, "model_output": {"_type": "Module", "body": [{"name": "Eye<UNK>", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template15", "hole2": "PALADIN"}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -22.61146354675293], "choice_history": [80, 159, 294], "score": -22.611473083496094, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n"}
{"beams": [{"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -1.325984001159668, 0.0, -0.11209869384765625, -0.000492095947265625, -0.06219315901398659, -0.00011038780212402344, -0.003926277160644531, -1.9073486328125e-06, -1.52587890625e-05, -0.000492095947265625, -8.20159912109375e-05, 0.0, -0.000820159912109375, 0.0, -7.724761962890625e-05, 0.0, -0.014337658882141113, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -1.7541312998832836, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -0.39910030364990234, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.032867431640625, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.04145050048828125, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.045108914375305176, -2.3841855067985307e-07, -0.0008558034896850586, -5.9604644775390625e-06, -0.9523930549621582, -0.0002346038818359375, -0.0001983642578125, -5.14984130859375e-05, -3.814697265625e-06, -1.52587890625e-05, -0.05742073059082031, -0.00011444091796875, 0.0, -5.91278076171875e-05, 0.0, -0.08112716674804688, -1.9073486328125e-06, -0.21372032165527344, -1.9073486328125e-06, -0.0015134811401367188, -1.9073486328125e-06, -9.5367431640625e-06, -0.0057353973388671875, -0.0001506805419921875, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.0005397796630859375, 0.0, -0.00490415096282959, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -2.072276809692511, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}]}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.Stealth:\n            minion.<UNK>()\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -0.39910030364990234, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.032867431640625, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.04145050048828125, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.045108914375305176, -2.3841855067985307e-07, -0.0008558034896850586, -5.9604644775390625e-06, -0.7008308172225952, -0.02979278564453125, -0.010000228881835938, -0.000125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -0.7266769409179688, -0.0001964569091796875, 0.0, -0.0001220703125, 0.0, -0.2263336181640625, 0.0, -0.1710348129272461, 0.0, -0.0029268264770507812, -1.9073486328125e-06, -9.5367431640625e-06, -0.0074558258056640625, -0.000152587890625, 0.0, -8.58306884765625e-05, -1.9073486328125e-06, -0.0004940032958984375, 0.0, -0.004856109619140625, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "Stealth", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -2.6351358680726378, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "Stealth"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}]}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -3.3155088424682617, -0.004904747009277344, -7.442198693752289e-05, -0.0004335641860961914, -0.006737709045410156, 0.0, -1.52587890625e-05, -0.18507957458496094, -0.0001392364501953125, 0.0, -0.0024127960205078125, -1.9073486328125e-06, -0.000179290771484375, 0.0, -0.018201112747192383, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 119, 245, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.767184987172641, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.Stealth:\n            minion.add_buff(Buff(ManaChange(-0)))\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -0.39910030364990234, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.032867431640625, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.04145050048828125, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.045108914375305176, -2.3841855067985307e-07, -0.0008558034896850586, -5.9604644775390625e-06, -0.7008308172225952, -0.02979278564453125, -0.010000228881835938, -0.000125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -0.6637487411499023, -0.00054931640625, 0.0, -0.0012149810791015625, 0.0, -0.6053924560546875, -1.9073486328125e-06, -0.19109535217285156, 0.0, -1.71661376953125e-05, -0.1671123504638672, -0.001209259033203125, -0.001381039503030479, -4.7326087951660156e-05, 0.0, -0.0003814697265625, -0.022089004516601562, -0.0002803802490234375, -0.12708421051502228, -0.0002504586009308696, -0.002208709716796875, 0.0, -3.814697265625e-06, -0.6007261276245117, -0.010777473449707031, -1.9073486328125e-06, -0.009934425354003906, 0.0, -0.004845619201660156, 0.0, -0.00566554069519043, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "Stealth", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "Draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.9108026560602127, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "Stealth"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole1": [{"hole0": 0, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}]}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.bounce()\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -0.39910030364990234, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.032867431640625, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.04145050048828125, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.045108914375305176, -2.3841855067985307e-07, -0.0008558034896850586, -5.9604644775390625e-06, -0.9523930549621582, -0.0002346038818359375, -0.0001983642578125, -5.14984130859375e-05, -3.814697265625e-06, -1.52587890625e-05, -0.05742073059082031, -0.00011444091796875, 0.0, -5.91278076171875e-05, 0.0, -0.08112716674804688, -1.9073486328125e-06, -1.7635602951049805, -1.9073486328125e-06, -0.0032358169555664062, 0.0, -7.62939453125e-06, -0.31959056854248047, -0.0001811981201171875, 0.0, -2.47955322265625e-05, 0.0, -0.0005321502685546875, 0.0, -0.0038330554962158203, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "minion", "<EOS>", "bounce", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.936615565300116, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "bounce"}}, "_type": "Expr"}]}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            card.add_buff(Buff(ManaChange(-0)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -2.3951473236083984, -0.059830665588378906, -0.010683059692382812, -0.056741952896118164, -1.311301275563892e-06, -9.5367431640625e-06, -0.0008220672607421875, 0.0, -0.08636760711669922, -0.00024759769439697266, -2.09808349609375e-05, -0.1858959197998047, -7.62939453125e-06, -7.62939453125e-06, -0.004305839538574219, -1.1444091796875e-05, 0.0, -0.41990184783935547, -9.34600830078125e-05, -0.015263795852661133, -4.57763671875e-05, -0.20572566986083984, -1.9073486328125e-06, -0.00290679931640625, -0.028845787048339844, -0.0002880096435546875, -0.0050028543919324875, -0.00013744828174822032, -7.62939453125e-06, -6.67572021484375e-05, -0.10639381408691406, -0.0002651214599609375, -0.09747098386287689, -0.00031268474413082004, -0.000164031982421875, 0.0, -1.9073486328125e-06, -0.023694992065429688, -0.000812530517578125, -1.9073486328125e-05, -0.000156402587890625, -1.1444091796875e-05, -0.00012397044338285923, -3.814697265625e-06, -0.000835418701171875, -3.0517578125e-05, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000247955322265625, -3.814697265625e-06, -1.1444091796875e-05, -3.254413604736328e-05, -0.024991989135742188, -5.7220458984375e-06, -6.866455078125e-05, -0.000453948974609375, -1.9073486328125e-05, -1.9073486328125e-06, -0.026853561401367188, 0.0, -0.0014672279357910156, 0.0, -0.10124313831329346, 0.0, -0.003429412841796875, -0.0002384185791015625, -0.00048065185546875, -0.018000636249780655, -1.33514404296875e-05, -0.012348175048828125, 0.0, -0.07871580123901367, 0.0, -0.006041526794433594, -1.9073486328125e-06, -4.1961669921875e-05, -0.0004177093505859375, -6.866455078125e-05, 0.0, -0.0002613067626953125, 0.0, -0.002552032470703125, 0.0, -0.0034407377243041992, -7.62939453125e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 91, 143, "reduce_cost", "<EOS>", 269, 275, 268, "card", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "card", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "Draw", "<EOS>", 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.0663752428977205, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"name": "reduce_cost", "_type": "FunctionDef", "body": [{"value": {"args": [{"hole1": [{"hole0": 0, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}], "args": {"args": [{"arg": "card", "_type": "arg"}], "_type": "arguments"}}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.Stealth:\n            minion.add_buff(Buff(ManaChange(-0)))\n        super().use(player, game)\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -0.39910030364990234, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.032867431640625, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.04145050048828125, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.045108914375305176, -2.3841855067985307e-07, -0.0008558034896850586, -5.9604644775390625e-06, -0.7008308172225952, -0.02979278564453125, -0.010000228881835938, -0.000125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -0.6637487411499023, -0.00054931640625, 0.0, -0.0012149810791015625, 0.0, -0.6053924560546875, -1.9073486328125e-06, -0.19109535217285156, 0.0, -1.71661376953125e-05, -0.1671123504638672, -0.001209259033203125, -0.001381039503030479, -4.7326087951660156e-05, 0.0, -0.0003814697265625, -0.022089004516601562, -0.0002803802490234375, -0.12708421051502228, -0.0002504586009308696, -0.002208709716796875, 0.0, -3.814697265625e-06, -0.8014707565307617, -0.0009765625, -1.52587890625e-05, -0.0011997222900390625, -1.9073486328125e-05, -0.00024089387443382293, -7.62939453125e-06, -0.0031070709228515625, -1.71661376953125e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.000240325927734375, -7.62939453125e-06, -1.1444091796875e-05, -3.445148468017578e-05], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "Stealth", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "Draw", "<EOS>", 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>"], "score": -4.08630635873439, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "Stealth"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole1": [{"hole0": 0, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}]}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.Stealth:\n            player.draw()\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -0.39910030364990234, -2.09808349609375e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.032867431640625, -1.9073486328125e-06, -0.0010280609130859375, 0.0, -0.04145050048828125, 0.0, -6.103515625e-05, -7.62939453125e-06, -0.045108914375305176, -2.3841855067985307e-07, -0.0008558034896850586, -5.9604644775390625e-06, -0.7008308172225952, -0.02979278564453125, -0.010000228881835938, -0.000125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -0.7266769409179688, -0.0001964569091796875, 0.0, -0.0001220703125, 0.0, -1.9638538360595703, 0.0, -0.00528109073638916, 0.0, -0.0027875900268554688, -3.814697265625e-06, -5.7220458984375e-06, -0.0017833709716796875, -5.7220458984375e-05, 0.0, -9.72747802734375e-05, 0.0, -0.0013332366943359375, 0.0, -0.003018975257873535, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "Stealth", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.200003126144537, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "Stealth"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}]}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -0.07265949249267578, -1.33514404296875e-05, 0.0, -2.0265579223632812e-06, -2.300739288330078e-05, 0.0, -0.0011874500196427107, -1.1444091796875e-05, -0.0002498626708984375, -3.814697265625e-06, -0.00010311603546142578, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0002919435501098633, -3.933904736186378e-06, -0.156951904296875, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -3.0875205993652344e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.364418029785156e-05, -1.325984001159668, 0.0, -2.3367061614990234, -0.07935428619384766, -1.52587890625e-05, -5.7220458984375e-06, -0.00717926025390625, 0.0, -8.392333984375e-05, 0.0, -0.03820621967315674, 0.0, -0.01840364933013916, -3.576278118089249e-07, -0.09610569477081299, -0.0001678466796875, -0.0004405975341796875, -0.000301361083984375, -1.33514404296875e-05, -0.008559015579521656, -3.0517578125e-05, -0.23575210571289062, -0.002223968505859375, -0.0014401674270629883, -0.0013790130615234375], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Flare", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 282, 47, 165, "2", "<EOS>", 119, 245, "2", "<EOS>"], "score": -4.385849005051057, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template16", "hole2": "HUNTER"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}}, "_type": "Expr"}, {"hole0": 2, "_type": "Template62"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n        player.draw()\n        player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -2.6976757049560547, -3.814697265625e-06, -7.998746150406078e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -0.0004711151123046875, -1.1444091796875e-05, 0.0, -0.00041961669921875, -0.001384735107421875, -2.288818359375e-05, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -3.3378219086444005e-05, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -4.1961669921875e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.4305097693068092e-06, -0.00017630771617405117, -3.814697265625e-06, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.99758529663086e-05, -3.2186455882765586e-06, -0.000613093376159668, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.00037384033203125, -0.0005278587341308594, -0.0880279541015625, -9.655952453613281e-06, -8.58306884765625e-05, -0.8354701995849609, -9.34600830078125e-05, -0.04909205436706543, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -0.0005054473876953125, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.0004330873489379883, -1.1444091796875e-05, -0.000774383544921875, -1.0728830375228426e-06, -0.0008291006088256836, -8.082389831542969e-05, -0.000789642333984375, -1.9073486328125e-06, -8.594989776611328e-05, -3.4332275390625e-05, -7.62939453125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -8.20159912109375e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -3.7550926208496094e-05, -1.1920878932869527e-05, -0.5778532028198242, -0.000156402587890625, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -4.57763671875e-05, -3.814697265625e-06, -2.47955322265625e-05, -3.814697265625e-06, -2.956390380859375e-05, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, -3.62396240234375e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.318092346191406e-05, -0.10838985443115234, -3.814697265625e-06, -0.05334281921386719, -0.02759552001953125, -2.288818359375e-05, 0.0, -0.40125465393066406, 0.0, -0.0054171085357666016, 0.0, -0.13000357151031494, 0.0, -0.0052547454833984375, -0.0012416839599609375, -0.0008106231689453125, -0.014042464084923267, -1.52587890625e-05, -0.0069408416748046875, 0.0, -0.08635520935058594, 0.0, -0.0001735687255859375, -3.814697265625e-06, -9.34600830078125e-05, -0.0008258819580078125, -8.392333984375e-05, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.0039043426513671875, 0.0, -0.001653432846069336, -7.62939453125e-06, -0.000827789306640625, -1.52587890625e-05, -3.4332275390625e-05, -0.00055694580078125, -0.0001678466796875, 0.0, -7.05718994140625e-05, -7.62939453125e-06, -0.010152816772460938, 0.0, -0.001534581184387207, -1.1444091796875e-05, -0.0005779266357421875, -1.52587890625e-05, -1.52587890625e-05, -0.0006809234619140625, -0.00020599365234375, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -0.018401145935058594, 0.0, -0.0017442703247070312, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Flare", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.14164214777162, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Flare"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.<UNK>()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -2.6976757049560547, -3.814697265625e-06, -7.998746150406078e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -0.0004711151123046875, -1.1444091796875e-05, 0.0, -0.00041961669921875, -0.001384735107421875, -2.288818359375e-05, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -3.3378219086444005e-05, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -4.1961669921875e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.4305097693068092e-06, -0.00017630771617405117, -3.814697265625e-06, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.99758529663086e-05, -3.2186455882765586e-06, -0.000613093376159668, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.00037384033203125, -0.0005278587341308594, -0.0880279541015625, -9.655952453613281e-06, -8.58306884765625e-05, -0.5885725021362305, -0.0015926361083984375, -0.1892530918121338, -1.9073486328125e-05, -0.000274658203125, 0.0, -0.00011837482452392578, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0002633333206176758, -5.006785613659304e-06, -0.19641685485839844, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.47955322265625e-05, -8.58306884765625e-05, -3.814697265625e-06, -6.866455078125e-05, -9.5367431640625e-06, -2.1934505639364943e-05, -5.7220458984375e-06, -6.4849853515625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.699562072753906e-05, -0.008722305297851562, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -0.8779604434967041, -1.9073486328125e-06, -0.00554656982421875, 0.0, -0.05069732666015625, 0.0, -0.000263214111328125, -9.5367431640625e-06, -0.0039044618606567383, -1.1920928244535389e-07, -0.0008264780044555664, -7.748603820800781e-06, -0.2518715262413025, -0.000179290771484375, -0.0002899169921875, -6.29425048828125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.05418586730957031, -0.0001239776611328125, 0.0, -0.0001277923583984375, 0.0, -0.042830467224121094, -1.9073486328125e-06, -0.25460052490234375, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Flare", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 78, 261, "2", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>"], "score": -5.321467903581542, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Flare"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"hole0": 2, "_type": "Template78"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, len(player.minions)):\n            player.draw()\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -1.33514404296875e-05, 0.0, -1.6689160474925302e-05, -0.0003645148826763034, -3.0517578125e-05, 0.0, -2.288818359375e-05, -0.0009502172470092773, -2.2649765014648438e-06, -6.675719760096399e-06, -3.24249267578125e-05, -2.6976757049560547, -3.814697265625e-06, -7.998746150406078e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, -0.0004711151123046875, -1.1444091796875e-05, 0.0, -0.00041961669921875, -0.001384735107421875, -2.288818359375e-05, 0.0, -0.0001850128173828125, -1.9073486328125e-06, -3.3378219086444005e-05, -1.9073486328125e-06, -2.682209014892578e-05, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -4.1961669921875e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.4305097693068092e-06, -0.00017630771617405117, -3.814697265625e-06, -1.52587890625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -6.99758529663086e-05, -3.2186455882765586e-06, -0.000613093376159668, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.00037384033203125, -0.0005278587341308594, -0.0880279541015625, -9.655952453613281e-06, -8.58306884765625e-05, -0.5885725021362305, -0.0015926361083984375, -0.1892530918121338, -1.9073486328125e-05, -0.000274658203125, 0.0, -0.00011837482452392578, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -0.0002633333206176758, -5.006785613659304e-06, -0.19641685485839844, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-06, -2.47955322265625e-05, -8.58306884765625e-05, -3.814697265625e-06, -6.866455078125e-05, -9.5367431640625e-06, -2.1934505639364943e-05, -5.7220458984375e-06, -6.4849853515625e-05, -1.1444091796875e-05, -1.1444091796875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, -5.7220458984375e-06, -3.814697265625e-06, -6.699562072753906e-05, -0.008722305297851562, -7.2479248046875e-05, -9.5367431640625e-06, 0.0, -1.0062754154205322, -0.0022764205932617188, -0.0002288818359375, -0.000110626220703125, -3.814697265625e-06, -1.9073486328125e-06, -0.0018033981323242188, -3.0517578125e-05, -0.0008373260498046875, -2.6702880859375e-05, -3.814697265625e-06, -0.001282314769923687, -5.7220458984375e-06, -0.2524538040161133, -0.00273895263671875, -5.7220458984375e-06, 0.0, -0.29469311237335205, -0.0005311965942382812, -2.6702880859375e-05, -0.1343679428100586, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.00029277801513671875, 0.0, -0.05303144454956055, -9.5367431640625e-06, -0.000827789306640625, -0.010540008544921875, -1.33514404296875e-05, -7.62939453125e-06, -0.0019683837890625, -0.000148773193359375, 0.0, -1.33514404296875e-05, 0.0, -0.12975788116455078, 0.0, -0.0012533663539215922, 0.0], "choice_history": [80, 159, 295, 88, 138, "Flare", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Flare", "<EOS>", 47, 165, "2", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 78, 261, "2", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.6735463813171805, "model_output": {"_type": "Module", "body": [{"name": "Flare", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Flare"}, {"_type": "Num", "n": 2}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"hole0": 2, "_type": "Template78"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -4.9591064453125e-05, -13.861540794372559, -4.513803005218506, -0.15061520040035248], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -18.526098236441612, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}, {"inferred_code": "", "score_history": [-9.5367431640625e-06, -8.0108642578125e-05, -22.137853622436523], "choice_history": [80, 159, 294], "score": -22.137943267822266, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n"}
{"beams": [{"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.2905616760253906, -1.9073486328125e-06, -0.5060809850692749, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -1.1717213894944436, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.2905616760253906, -1.9073486328125e-06, -1.1241918802261353, -0.002485438250005245], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "Weapon", "<EOS>"], "score": -1.7923177229013092, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 0}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(7), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.2905616760253906, -1.9073486328125e-06, -2.671581506729126, -5.006785613659304e-06], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "7", "<EOS>"], "score": -3.3372269179399083, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 7}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1 - player.\n            effective_spell_damage()), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -1.8441743850708008, -0.001506805419921875, -0.013535499572753906, -9.72747802734375e-05, -0.00915871188044548, 0.0, -0.17458152770996094, -0.0074596405029296875, -0.02436351776123047, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.033370018005371094, 0.0, -0.8572711944580078, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 38, 131, 21, 165, "1", "<EOS>", 82, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "effective_spell_damage", "<EOS>"], "score": -3.340673597506786, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_spell_damage"}}}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(self.target.<UNK>),\n            self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -2.438727378845215, 0.0, -0.013406753540039062, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.14414989948272705, -2.86102294921875e-05, -0.010303497314453125, -1.728534698486328e-05, -0.6563186645507812, -4.410743713378906e-06], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "score": -3.6380695607285745, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -2.7767276763916016, -0.001415252685546875, -1.1444091796875e-05, 0.0, -0.008756637573242188, 0.0, -0.0020486116409301758, -2.47955322265625e-05, -0.0001239776611328125, 0.0, -0.5160439014434814, -1.9073486328125e-06, -9.5367431640625e-06, -0.006451606750488281, -9.5367431640625e-06, -0.5479240417480469, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 116, 225, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -4.141458084784055, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "change_attack", "hole0": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Template5", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1 - player.<UNK>()\n            ), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -1.8441743850708008, -0.001506805419921875, -0.013535499572753906, -9.72747802734375e-05, -0.00915871188044548, 0.0, -0.17458152770996094, -0.0074596405029296875, -0.02436351776123047, -7.62939453125e-06, 0.0, -7.05718994140625e-05, 0.0, -0.033370018005371094, 0.0, -1.7613515853881836, -2.1457672119140625e-06], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 38, 131, 21, 165, "1", "<EOS>", 82, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -4.244756134204174, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"op": {"_type": "Sub"}, "_type": "BinOp", "left": {"_type": "Num", "n": 1}, "right": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, stealth=True, effects=[Effect(DidDamage(),\n            ActionTag(Kill(), TargetSelector(IsMinion())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -1.8661565780639648, -9.1552734375e-05, -3.576278118089249e-07, -0.0004482269287109375, -0.0003161383792757988, -1.1920928244535389e-07, -0.0055391788482666016, 0.0, -0.0013055801391601562, 0.0, -0.0005283355712890625, -5.14984130859375e-05, -5.7220458984375e-06, -0.0001964569091796875, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, -0.0010776519775390625, -5.53131103515625e-05, -0.000720977783203125, -0.0015087127685546875, -7.62939453125e-06, 0.0, -0.008270263671875, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005006789579056203, -2.2649765014648438e-06, -1.33514404296875e-05, 0.0, -0.5674736499786377, 0.0, -0.4555530548095703, -0.000896453857421875, -1.9073486328125e-06, -0.2598991394042969, -7.2479248046875e-05, -0.000118255615234375, -0.000247955322265625, -2.09808349609375e-05, -1.9073486328125e-06, -0.06394577026367188, -0.5242080688476562, -0.03233670815825462, -0.013934250921010971, -7.867813110351562e-06, -0.02789616398513317, -0.0001035928726196289, -0.0744086503982544, -0.002519607311114669, -1.1444091796875e-05, -1.9073486328125e-05, -0.015847206115722656, -1.9073486328125e-05, -0.16625165939331055, -0.1255093216896057, -5.53131103515625e-05], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 104, 187, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "7", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 71, 207, "Did", "Damage", "<EOS>", "Kill", "<EOS>", "Target", "Selector", "<EOS>", 282, 68, 260, "Is", "Minion", "<EOS>"], "score": -4.245477786906967, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "_type": "Template18", "hole2": "WARRIOR"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole1": "Kill", "hole0": "DidDamage", "_type": "Template31", "hole4": [{"hole0": "IsMinion", "_type": "Template77"}], "hole3": "TargetSelector"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(self.target.health\n            ), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.0101776123046875, -5.7220458984375e-06, -1.52587890625e-05, -2.438727378845215, 0.0, -0.013406753540039062, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.14414989948272705, -2.86102294921875e-05, -0.010303497314453125, -1.728534698486328e-05, -1.2803239822387695, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "score": -4.262072375021482, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.player.damage(player.effective_spell_damage(0), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -0.1794872283935547, -8.96453857421875e-05, -1.9073468138230965e-06, -0.004900455474853516, -0.007692679762840271, -1.1920928244535389e-07, -0.0017604827880859375, 0.0, -0.023550033569335938, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0003204345703125, -3.814697265625e-06, -0.00035858154296875, -5.7220458984375e-06, -0.00022530555725097656, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03620433807373047, -8.976459503173828e-05, -0.08269596099853516, -0.0001468658447265625, -0.0001125335693359375, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -4.626976013183594, 0.0, -9.5367431640625e-06, -0.08111286163330078, -3.814697265625e-06, -0.23543308675289154, -0.0010734677780419588], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "player", "<EOS>", 282, 47, 165, "Weapon", "<EOS>"], "score": -5.3094870086997545, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "player", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 0}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(SpellCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -4.523906707763672, -3.814697265625e-06, -7.748603820800781e-06, -1.9073486328125e-05, -0.10651016235351562, -5.7220458984375e-05, -2.0265558760002023e-06, -0.004730701446533203, -0.00592447817325592, -1.1920928244535389e-07, -0.0016803741455078125, 0.0, -0.0205535888671875, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -0.0003662109375, -3.814697265625e-06, -0.000274658203125, -3.814697265625e-06, -0.00019729137420654297, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03229224681854248, -8.594989776611328e-05, -0.10541152954101562, -0.0001544952392578125, -0.0001201629638671875, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.009026527404785156, -5.7220458984375e-06, -1.52587890625e-05, -0.3058195114135742, -1.9073486328125e-06, -0.5268245339393616, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -5.655485650501525, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class GorehowlDurability(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -4.673071384429932, -2.7537016649148427e-05, -9.5367431640625e-06, 0.0, 0.0, -0.007833361625671387, -1.33514404296875e-05, -3.933906555175781e-06, -4.76837158203125e-05, -0.20023345947265625, -8.392333984375e-05, -2.50339189733495e-06, -0.010113239288330078, -0.007740095257759094, -1.1920928244535389e-07, -0.0014438629150390625, 0.0, -0.036952972412109375, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.000255584716796875, -3.814697265625e-06, -0.000301361083984375, -3.814697265625e-06, -0.0002142190933227539, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.03400683403015137, -8.976459503173828e-05, -0.08024311065673828, -0.00014495849609375, -0.0001087188720703125, 0.0, -9.894371032714844e-06, -3.814697265625e-06, -0.009563446044921875, -5.7220458984375e-06, -1.52587890625e-05, -0.29302978515625, -1.9073486328125e-06, -0.5013697147369385, 0.0], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "Durability", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 99, 182, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "1", "<EOS>"], "score": -5.857058122400751, "model_output": {"_type": "Module", "body": [{"name": "GorehowlDurability", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "hole2": "WARRIOR", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 1}]}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(MinionSummoned(),\n            MinionSelector(MinionHasDurability(), EnemyPlayer()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -1.8661565780639648, -9.1552734375e-05, -3.576278118089249e-07, -0.0004482269287109375, -0.0003161383792757988, -1.1920928244535389e-07, -0.0055391788482666016, 0.0, -0.0013055801391601562, 0.0, -0.0005283355712890625, -5.14984130859375e-05, -5.7220458984375e-06, -0.0001964569091796875, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, -0.0010776519775390625, -5.53131103515625e-05, -0.000720977783203125, -0.0015087127685546875, -7.62939453125e-06, 0.0, -0.008270263671875, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005006789579056203, -2.2649765014648438e-06, -1.33514404296875e-05, 0.0, -0.5674736499786377, 0.0, -1.0108366012573242, -0.0019254684448242188, -3.814697265625e-06, -0.18605518341064453, -3.24249267578125e-05, -0.0001239776611328125, -0.0004425048828125, -0.09458541870117188, -7.43865966796875e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.3939504623413086, -4.57763671875e-05, -0.0005092620849609375, -0.12493133544921875, -0.00025177001953125, -0.05751558765769005, -0.14785289764404297, -9.381771087646484e-05, -0.000125885009765625, -0.04193115234375, 0.0, 0.0, -0.13339519500732422, -0.001285552978515625, -1.1920928244535389e-07, -0.15665054321289062, -0.13224029541015625, -5.91278076171875e-05, -0.49879270792007446, -0.08536352962255478, -0.0033723115921020508, -0.0009343466954305768, -9.5367431640625e-06, -3.814697265625e-06, -0.505717396736145, -2.7298854547552764e-05, -4.52994936495088e-06], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 104, 187, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "7", "<EOS>", 47, 165, "1", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 68, 260, "Minion", "Summoned", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 68, 260, "Minion", "Has", "Durability", "<EOS>", 68, 260, "Enemy", "Player", "<EOS>"], "score": -6.060774061789672, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "_type": "Template18", "hole2": "WARRIOR"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole0": "MinionSummoned", "_type": "Template77"}, {"args": [{"hole0": "MinionHasDurability", "_type": "Template77"}, {"hole0": "EnemyPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 7, effects=[Effect(MinionSummoned(),\n            MinionSelector(MinionHasDurability(), EnemyPlayer()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -6.437280717364047e-06, -0.01136285625398159, -3.814697265625e-06, 0.0, 0.0, -0.015669941902160645, -2.09808349609375e-05, -5.841255187988281e-06, -5.340576171875e-05, -1.8661565780639648, -9.1552734375e-05, -3.576278118089249e-07, -0.0004482269287109375, -0.0003161383792757988, -1.1920928244535389e-07, -0.0055391788482666016, 0.0, -0.0013055801391601562, 0.0, -0.0005283355712890625, -5.14984130859375e-05, -5.7220458984375e-06, -0.0001964569091796875, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, -0.0010776519775390625, -5.53131103515625e-05, -0.000720977783203125, -0.0015087127685546875, -7.62939453125e-06, 0.0, -0.008270263671875, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0005006789579056203, -2.2649765014648438e-06, -1.33514404296875e-05, 0.0, -0.8392669558525085, -2.3841855067985307e-07, -0.8906412124633789, -0.0013065338134765625, -1.9073486328125e-06, -0.015212059020996094, -1.919269561767578e-05, -7.82012939453125e-05, -0.0004024505615234375, -0.09647560119628906, -3.62396240234375e-05, -6.103515625e-05, 0.0, -5.7220458984375e-06, -0.11393356323242188, -3.814697265625e-05, -0.000274658203125, -0.33388328552246094, -0.000362396240234375, -0.07727368921041489, -0.1461811065673828, -7.653236389160156e-05, -0.000118255615234375, -0.07690906524658203, 0.0, 0.0, -0.12053203582763672, -0.013706207275390625, -1.1920928244535389e-07, -0.16845703125, -0.1788196563720703, -6.103515625e-05, -0.4464567303657532, -0.08102495968341827, -0.003707289695739746, -0.0007420672918669879, -7.62939453125e-06, -3.814697265625e-06, -0.5895724296569824, -2.491467421350535e-05, -4.649158654501662e-06], "choice_history": [80, 159, 295, 88, 138, "Gorehowl", "<EOS>", 282, 45, 160, "Weapon", "Card", "<EOS>", 296, 104, 187, "Gorehowl", "<EOS>", "7", "<EOS>", "WARRIOR", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "7", "<EOS>", 47, 165, "7", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 68, 260, "Minion", "Summoned", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 283, 68, 260, "Minion", "Has", "Durability", "<EOS>", 68, 260, "Enemy", "Player", "<EOS>"], "score": -6.109796849569548, "model_output": {"_type": "Module", "body": [{"name": "Gorehowl", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Gorehowl", "_type": "Template18", "hole2": "WARRIOR"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 7}, {"_type": "Num", "n": 7}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole0": "MinionSummoned", "_type": "Template77"}, {"args": [{"hole0": "MinionHasDurability", "_type": "Template77"}, {"hole0": "EnemyPlayer", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "WeaponCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -22.431028366088867], "choice_history": [80, 159, 294], "score": -22.431032180786133, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n"}
{"beams": [{"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -0.006169319152832031, -4.38690185546875e-05, -9.012222290039062e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -0.0014514923095703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.384185791015625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.13324546813964844, -1.71661376953125e-05, -1.71661376953125e-05, -1.3589766240329482e-05, -5.8293338952353224e-05, 0.0, -3.0517578125e-05, -7.23539269529283e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.3470649719238281e-05, -3.576278118089249e-07, -0.0007058382034301758, -1.33514404296875e-05, -4.1961669921875e-05, 0.0, -2.86102294921875e-05, -0.0002193450927734375, -2.288818359375e-05, -2.1457672119140625e-06, -0.010972976684570312, -5.7220458984375e-06, -0.0015106201171875, -0.0004482269287109375, -1.52587890625e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.0002040863037109375, 0.0, -3.814697265625e-06, 0.0, -0.000110626220703125, -9.5367431640625e-06, -0.0002841949462890625, -0.00046837321133352816, -0.04260063171386719, -6.103515625e-05, -1.1920801625819877e-06, 0.0, -1.621726551093161e-05, 0.0, -0.03551125526428223, -3.814697265625e-06, -0.0001926422119140625, -1.71661376953125e-05, -4.00543212890625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Hound", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.2367220717869145, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -0.006169319152832031, -4.38690185546875e-05, -9.012222290039062e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -0.0014514923095703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.384185791015625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.111114501953125, -5.7220458984375e-06, -5.7220458984375e-05, -6.079655122448457e-06, -8.153912494890392e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.001148616778664291, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -3.576278118089249e-07, -0.000965118408203125, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.000202178955078125, -3.826618194580078e-05, -2.2649765014648438e-06, -0.001190185546875, -1.33514404296875e-05, -0.0002346038818359375, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -0.0066738128662109375, -4.9591064453125e-05, -5.7220458984375e-06, -6.675719760096399e-06, -6.4849853515625e-05, -8.58306884765625e-05, 0.0, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -7.62939453125e-06, -0.0002231597900390625, -0.00047349926899187267, -0.08704376220703125, -7.05718994140625e-05, -1.4304896467365324e-06, 0.0, -1.705204340396449e-05, 0.0, -0.03237569332122803, -7.62939453125e-06, -0.0002117156982421875, -1.71661376953125e-05, -7.05718994140625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Hound", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -2.2524935025912214, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, taunt=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -0.006169319152832031, -4.38690185546875e-05, -9.012222290039062e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -0.0014514923095703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.384185791015625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.13324546813964844, -1.71661376953125e-05, -1.71661376953125e-05, -1.3589766240329482e-05, -5.8293338952353224e-05, 0.0, -3.0517578125e-05, -7.23539269529283e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.3470649719238281e-05, -3.576278118089249e-07, -0.0007058382034301758, -1.33514404296875e-05, -4.1961669921875e-05, 0.0, -2.86102294921875e-05, -0.0002193450927734375, -2.288818359375e-05, -2.1457672119140625e-06, -0.010972976684570312, -5.7220458984375e-06, -0.0015106201171875, -0.0004482269287109375, -1.52587890625e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.0002040863037109375, 0.0, -3.814697265625e-06, 0.0, -0.000110626220703125, -9.5367431640625e-06, -0.0002841949462890625, -0.00046837321133352816, -3.182046890258789, -0.000766754150390625, -4.398822784423828e-05, -3.254413604736328e-05, -7.62939453125e-06, -0.0006046295166015625, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -2.6702880859375e-05, -0.04381966590881348, -9.655952453613281e-06, -4.00543212890625e-05, -0.01557159423828125, -0.0014677047729492188, -4.7683170123491436e-07, -1.1920928244535389e-07, -5.8212230214849114e-05, 0.0, -0.3170638084411621, -2.0265579223632812e-06, -0.001407623291015625, -7.62939453125e-05, -8.392333984375e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Hound", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "1", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.721421711984412, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 1, "hole0": 1, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, windfury=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -0.006169319152832031, -4.38690185546875e-05, -9.012222290039062e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -0.0014514923095703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.384185791015625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.13324546813964844, -1.71661376953125e-05, -1.71661376953125e-05, -1.3589766240329482e-05, -5.8293338952353224e-05, 0.0, -3.0517578125e-05, -7.23539269529283e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.3470649719238281e-05, -3.576278118089249e-07, -0.0007058382034301758, -1.33514404296875e-05, -4.1961669921875e-05, 0.0, -2.86102294921875e-05, -0.0002193450927734375, -2.288818359375e-05, -2.1457672119140625e-06, -0.010972976684570312, -5.7220458984375e-06, -0.0015106201171875, -0.0004482269287109375, -1.52587890625e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.0002040863037109375, 0.0, -3.814697265625e-06, 0.0, -0.000110626220703125, -9.5367431640625e-06, -0.0002841949462890625, -0.00046837321133352816, -0.04260063171386719, -6.103515625e-05, -1.1920801625819877e-06, 0.0, -1.621726551093161e-05, 0.0, -3.865478754043579, -5.841255187988281e-06, -0.001827239990234375, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Hound", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.068288047929798, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -0.006169319152832031, -4.38690185546875e-05, -9.012222290039062e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -0.0014514923095703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.384185791015625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.13324546813964844, -1.71661376953125e-05, -1.71661376953125e-05, -1.3589766240329482e-05, -5.8293338952353224e-05, 0.0, -3.0517578125e-05, -7.23539269529283e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.3470649719238281e-05, -3.576278118089249e-07, -0.0007058382034301758, -1.33514404296875e-05, -4.1961669921875e-05, 0.0, -2.86102294921875e-05, -0.0002193450927734375, -2.288818359375e-05, -2.1457672119140625e-06, -4.583744049072266, -0.0004100799560546875, -1.1444091796875e-05, -0.00012969970703125, -2.6702880859375e-05, -2.050399598374497e-05, -1.9073486328125e-05, -0.0002613067626953125, 0.0, -5.7220458984375e-06, 0.0, -0.0001049041748046875, -9.5367431640625e-06, -0.000286102294921875, -0.00042104715248569846, -0.0534210205078125, -7.05718994140625e-05, -1.1920801625819877e-06, 0.0, -1.681329740677029e-05, 0.0, -0.03595757484436035, -3.814697265625e-06, -0.0001888275146484375, -1.52587890625e-05, -4.00543212890625e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Hound", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.819387872848836, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1, taunt=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -0.006169319152832031, -4.38690185546875e-05, -9.012222290039062e-05, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -5.7220458984375e-06, -4.00543212890625e-05, -0.0014514923095703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.384185791015625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.111114501953125, -5.7220458984375e-06, -5.7220458984375e-05, -6.079655122448457e-06, -8.153912494890392e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.001148616778664291, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -3.576278118089249e-07, -0.000965118408203125, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -0.000202178955078125, -3.826618194580078e-05, -2.2649765014648438e-06, -0.001190185546875, -1.33514404296875e-05, -0.0002346038818359375, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -0.0066738128662109375, -4.9591064453125e-05, -5.7220458984375e-06, -6.675719760096399e-06, -6.4849853515625e-05, -8.58306884765625e-05, 0.0, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -7.62939453125e-06, -0.0002231597900390625, -0.00047349926899187267, -2.4871826171875, -0.001308441162109375, -5.352497100830078e-05, -4.398822784423828e-05, -9.5367431640625e-06, -0.0003719329833984375, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.4332275390625e-05, -0.03627049922943115, -1.1682510375976562e-05, -3.814697265625e-05, -0.014641761779785156, -0.001537322998046875, -4.768339749716688e-07, -1.1920928244535389e-07, -5.449567106552422e-05, 0.0, -0.2990063428878784, -2.0265579223632812e-06, -0.0023031234741210938, -6.4849853515625e-05, -0.0001068115234375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Hound", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "1", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -4.975729479295687, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Hound"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 1, "hole0": 1, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -5.316718101501465, -0.0014286041259765625, -1.3947389561508317e-05, -0.0010564324911683798, -0.002913236618041992, -1.9073486328125e-06, -7.867813110351562e-06, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -4.38690185546875e-05, -2.288818359375e-05, -0.0051116943359375, -1.52587890625e-05, -0.4561595916748047, -1.1444091796875e-05, -0.0010326234623789787, 0.0, -6.866278999950737e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Hound", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -5.786412588799976, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Hound", "hole2": "minion_type", "_type": "Template7", "hole4": "BEAST", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -5.316718101501465, -0.0014286041259765625, -1.3947389561508317e-05, -0.0010564324911683798, -0.002913236618041992, -1.9073486328125e-06, -7.867813110351562e-06, -3.814697265625e-06, -4.9591064453125e-05, 0.0, -4.38690185546875e-05, -2.288818359375e-05, -0.0051116943359375, -1.52587890625e-05, -1.0124292373657227, -0.00075531005859375, -2.9798102332279086e-06, 0.0, -4.506295590545051e-05, 0.0, -0.02862107753753662, -9.5367431640625e-06, -0.0004749298095703125, -3.814697265625e-06, -7.43865966796875e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Hound", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.3715585097043, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Hound", "hole2": "minion_type", "_type": "Template7", "hole4": "BEAST", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.COMMON, CARD_RARITY.\n            COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -7.149492263793945, -0.047347068786621094, -0.00820721685886383, -0.12769439816474915, -0.4219632148742676, -0.0014514923095703125, -0.48873376846313477, -2.09808349609375e-05, -0.03941154479980469, -4.38690185546875e-05, -0.0002477123634889722, 0.0, -7.116769120329991e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "Hound", "<EOS>", "COMMON", "<EOS>", "COMMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -8.286437751363337, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Hound", "_type": "Template13", "hole2": "COMMON"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -7.149492263793945, -0.047347068786621094, -0.00820721685886383, -0.12769439816474915, -1.2135062217712402, -0.16604900360107422, -0.002210855484008789, -2.6702880859375e-05, -0.028466224670410156, -6.29425048828125e-05, -0.0001800605677999556, 0.0, -5.3168110753176734e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "Hound", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -8.74504918059938, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": "ALL", "hole0": "Hound", "_type": "Template13", "hole2": "COMMON"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.COMMON, CARD_RARITY.\n            minion_type, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -7.149492263793945, -0.047347068786621094, -0.00820721685886383, -0.12769439816474915, -0.4219632148742676, -0.0014514923095703125, -1.1366581916809082, -0.0003185272216796875, -0.08986473083496094, -9.918212890625e-05, -0.00015156157314777374, 0.0, -0.00012205776874907315, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "Hound", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -8.985122959400542, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Hound", "_type": "Template13", "hole2": "minion_type"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound Hound', 0, CHARACTER_CLASS.COMMON,\n            CARD_RARITY.minion_type, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -7.149492263793945, -0.047347068786621094, -0.00820721685886383, -2.147867441177368, -0.01580798625946045, -0.00634002685546875, -0.015117049217224121, -3.4332275390625e-05, -0.24557530879974365, -0.0006046295166015625, -0.12375068664550781, -9.1552734375e-05, -0.00026133935898542404, 0.0, -0.00013552664313465357, 0.0], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "Hound", " ", "Hound", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -9.762385482326863, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Hound Hound", "_type": "Template13", "hole2": "minion_type"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Hound(MinionCard):\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -4.38690185546875e-05, -0.0004634857177734375, -1.4662635294371285e-05, -0.0009274099720641971, -1.9073486328125e-06, -1.33514404296875e-05, -3.814697265625e-06, -5.5670738220214844e-05, -2.47955322265625e-05, -3.0517578125e-05, -6.4849853515625e-05, -9.341643333435059, -0.12023639678955078, -0.0025273561477661133, -1.1920928244535389e-07, -2.3842630980652757e-07, -3.814697265625e-06, -0.3973226547241211, -0.00612640380859375, -1.0009360266849399e-05, -1.9073486328125e-06, -1.5798505046404898e-05, 0.0, -0.014959335327148438, -1.33514404296875e-05, -0.0002880096435546875, -9.5367431640625e-06, -7.82012939453125e-05, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Hound", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 110, 202, "1", "<EOS>", "1", "<EOS>", 109, 200, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -9.884995242350207, "model_output": {"_type": "Module", "body": [{"name": "Hound", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": 1, "_type": "Template27"}, {"hole1": 1, "hole0": 1, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -14.770463943481445, -5.472336769104004, -0.1046443060040474], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -20.347553737461567, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}, {"inferred_code": "", "score_history": [-1.33514404296875e-05, -4.38690185546875e-05, -20.84260368347168], "choice_history": [80, 159, 294], "score": -20.842660903930664, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}
{"beams": [{"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.1556577682495117, -0.0001289761275984347, -8.70227722771233e-06, -1.347058241663035e-05, -5.7220458984375e-06, -0.0012545508798211813, 0.0, -0.12242317199707031, -1.9073486328125e-06, -0.04993121325969696, 0.0, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.0003629284037742764, -1.9073486328125e-06, -0.10791015625, -3.1828880310058594e-05, 0.0, -0.001369476318359375, -0.001667022705078125, -1.9073486328125e-06, -0.03152883052825928, -1.025196434056852e-05, -3.933906555175781e-06, -8.392333984375e-05, -5.7220458984375e-06, -0.00021158382878638804, -3.2186455882765586e-06, -0.014778971672058105, -0.00017534149810671806], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 198, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>", 282, 68, 260, "Enemy", "Player", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -2.5984036565327955, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "HeroSelector", "hole2": "FREE", "_type": "Template20", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template77"}], "hole4": [{"_type": "Num", "n": 4}], "hole3": "Damage"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.1556577682495117, -0.0001289761275984347, -8.70227722771233e-06, -1.347058241663035e-05, -5.7220458984375e-06, -0.0012545508798211813, 0.0, -2.312601089477539, -0.012928009033203125, -0.016880983486771584, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0005725203081965446, -1.9073486328125e-06, -0.13809490203857422, -3.170967102050781e-05, 0.0, -0.0010814666748046875, -0.001323699951171875, -1.9073486328125e-06, -0.030375123023986816, -1.013275596051244e-05, -3.933906555175781e-06, -8.96453857421875e-05, -5.7220458984375e-06, -0.0002249325771117583, -3.4570634852570947e-06, -0.015291929244995117, -0.0001726001501083374], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 198, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "4", "<EOS>", "Hero", "Selector", "<EOS>", 282, 68, 260, "Enemy", "Player", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -4.79755406906564, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "HeroSelector", "hole2": "RARE", "_type": "Template20", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template77"}], "hole4": [{"_type": "Num", "n": 4}], "hole3": "Damage"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(), Damage()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.8282699584960938, -0.0008684201166033745, -1.621246337890625e-05, -2.622604142743512e-06, -1.9073486328125e-06, -0.0019038915634155273, 0.0, -0.7382470369338989, -0.10156702995300293, -0.2911553382873535, -3.933906555175781e-06, -0.5749969482421875, -1.9073486328125e-06, -0.1631908416748047, -7.62939453125e-06, -1.7881393432617188e-05, -1.1920928244535389e-07, -0.011481761932373047, -3.71926071238704e-05], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 191, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", "Damage", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -4.822548396794424, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "Damage", "hole2": "RARE", "_type": "Template20", "hole3": "Damage"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>(Attribute(\n            '<UNK>', 7)), PlayerSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -1.0786848068237305, -0.31040000915527344, -0.0005474090576171875, -9.918212890625e-05, 0.0, -0.40917062759399414, -0.0006238222122192383, -0.001064300537109375, -0.22749996185302734, -8.20159912109375e-05, -0.001408283831551671, -2.300739288330078e-05, -0.013727188110351562, -2.47955322265625e-05, -0.09278705716133118, -1.1324875231366605e-05, -0.2315446138381958, -1.8715856640483253e-05, -1.9073468138230965e-06, -0.25824546813964844, -0.0015897750854492188, -0.0001392364501953125, -0.028442740440368652, -2.741813204920618e-06, -0.0001583099365234375, -3.24249267578125e-05, -0.27373993396759033, -7.879730401327834e-05, 0.0, -0.0003070831298828125, -5.7220458984375e-06, -0.0010693073272705078, 0.0, -0.019562721252441406, -0.000270843505859375, -0.003566741943359375, -8.916854858398438e-05, 0.0, -0.0002231597900390625, -5.7220458984375e-06, -8.928676834329963e-05, -3.0874729418428615e-05, -0.020287275314331055, -0.00025412190007045865], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 47, 165, "7", "<EOS>", "Player", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -5.071079787790708, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Num", "n": 7}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>('health', True,\n            MINION_TYPE.DRAGON), PlayerSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -0.4459810256958008, -0.4764747619628906, -0.000396728515625, -0.5466595888137817, -9.179114385915454e-06, -0.08939170837402344, -0.05974578857421875, -0.12976360321044922, 0.0, -0.0019426345825195312, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.0007902383804321289, -1.9073486328125e-06, -0.5680360794067383, -7.62939453125e-06, -0.07519768178462982, -0.0002009867603192106, -2.0265579223632812e-06, -0.4304771423339844, -0.0026845932006835938, -0.000385284423828125, -0.03309059143066406, -5.125993993715383e-06, -0.0002727508544921875, -2.6702880859375e-05, -0.2244502305984497, -6.031987504684366e-05, 0.0, -0.0007190704345703125, -1.33514404296875e-05, -0.0009101629257202148, 0.0, -0.024596214294433594, -7.82012939453125e-05, -0.001905679702758789, -0.00014662742614746094, 0.0, -0.000232696533203125, -9.5367431640625e-06, -7.712746446486562e-05, -3.731181277544238e-05, -0.017152905464172363, -0.00021562635083682835], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 284, 48, 169, "health", "<EOS>", 46, 161, "True", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Player", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -5.2273543637067945, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Str", "s": "health"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(4),\n            CharacterSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.1556577682495117, -0.0001289761275984347, -8.70227722771233e-06, -1.347058241663035e-05, -5.7220458984375e-06, -0.0012545508798211813, 0.0, -0.12242317199707031, -1.9073486328125e-06, -0.04993121325969696, 0.0, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.0003629284037742764, -1.9073486328125e-06, -2.9937028884887695, -6.687641143798828e-05, 0.0, -0.0082244873046875, -0.007552146911621094, -7.62939453125e-06, -0.029119491577148438, -1.549711487314198e-05, -3.814697265625e-06, -0.0001678466796875, -9.5367431640625e-06, -0.00014054353232495487, -2.861018856492592e-06, -0.01372373104095459, -0.00015317220822907984], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 198, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "4", "<EOS>", "Character", "Selector", "<EOS>", 282, 68, 260, "Enemy", "Player", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -5.49351201072453, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "CharacterSelector", "hole2": "FREE", "_type": "Template20", "hole6": [{"hole0": "EnemyPlayer", "_type": "Template77"}], "hole4": [{"_type": "Num", "n": 4}], "hole3": "Damage"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>(), MinionSelector(\n            players=EnemyPlayer(), picker=UserPicker(), condition=Null),\n            EnemyPlayer()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.7536773681640625, -0.0022104373201727867, -2.682197191461455e-05, -2.2649765014648438e-06, -7.62939453125e-06, -0.0008186101913452148, -3.814697265625e-06, -0.08452820777893066, -0.24685537815093994, -0.017622748389840126, -0.001202225685119629, -0.8584261536598206, -2.47955322265625e-05, -4.0531158447265625e-06, -0.0856332778930664, -0.000492095947265625, -0.000335693359375, -0.002659916877746582, -1.4305104514278355e-06, -0.0001621246337890625, -3.814697265625e-06, -0.05764031410217285, -8.583047019783407e-06, 0.0, -0.0002460479736328125, -0.000164031982421875, -0.494307279586792, 0.0, -0.0041332244873046875, -2.6702880859375e-05, -0.23593974113464355, -0.00019598001381382346, 0.0, -0.0014600753784179688, -0.0002651214599609375, -0.24043488502502441, -3.4570634852570947e-06, -0.00518035888671875, -0.025603294372558594, -9.548664093017578e-05, 0.0, -0.19518470764160156, -0.03472423553466797, -1.9073486328125e-06, -0.22388947010040283, -1.0728812412708066e-05, -0.00020229816436767578, -5.53131103515625e-05, -7.62939453125e-06, -0.0002623545587994158, -1.537788011773955e-05, -0.026725292205810547, -0.00021324267436284572], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 192, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "<EOS>", "Minion", "Selector", "<EOS>", 292, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 282, 68, 260, "Enemy", "Player", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -5.7124737677282695, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "MinionSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole8": [{"hole0": "EnemyPlayer", "_type": "Template77"}], "hole3": "<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>('health', True,\n            MINION_TYPE.DRAGON), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -0.4459810256958008, -0.4764747619628906, -0.000396728515625, -0.5466595888137817, -9.179114385915454e-06, -0.08939170837402344, -0.05974578857421875, -0.12976360321044922, 0.0, -0.0019426345825195312, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.0007902383804321289, -1.9073486328125e-06, -0.5680360794067383, -7.62939453125e-06, -0.07519768178462982, -0.0002009867603192106, -2.0265579223632812e-06, -1.4273443222045898, -0.0003299713134765625, -1.9073486328125e-05, -0.171708345413208, 0.0, -0.092498779296875, -0.000232696533203125, -0.03231310844421387, -0.0004554982588160783, 0.0, -0.0042400360107421875, -9.5367431640625e-05, -3.933879634132609e-05, -3.6596651625586674e-05, -0.038313984870910645, -0.0003586371021810919], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 284, 48, 169, "health", "<EOS>", 46, 161, "True", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -6.2577928660423225, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Str", "s": "health"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>(Attribute(\n            '<UNK>', 7)), PlayerSelector(players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -1.0786848068237305, -0.31040000915527344, -0.0005474090576171875, -9.918212890625e-05, 0.0, -0.40917062759399414, -0.0006238222122192383, -0.001064300537109375, -0.22749996185302734, -8.20159912109375e-05, -0.001408283831551671, -2.300739288330078e-05, -0.013727188110351562, -2.47955322265625e-05, -0.09278705716133118, -1.1324875231366605e-05, -0.2315446138381958, -1.8715856640483253e-05, -1.9073468138230965e-06, -0.25824546813964844, -0.0015897750854492188, -0.0001392364501953125, -0.028442740440368652, -2.741813204920618e-06, -0.0001583099365234375, -3.24249267578125e-05, -1.4473401308059692, -2.9802276912960224e-06, 0.0, -0.000362396240234375, -9.5367431640625e-06, -0.001263260841369629, 0.0, -0.05240631103515625, -0.000247955322265625, -0.0038356781005859375, -7.164478302001953e-05, 0.0, -0.0002346038818359375, -3.814697265625e-06, -9.357809176435694e-05, -3.135155202471651e-05, -0.02059638500213623, -0.0002554328821133822], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 47, 165, "7", "<EOS>", "Player", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -6.278254088424305, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Num", "n": 7}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>('health', True,\n            MINION_TYPE.DRAGON), PlayerSelector(players=EnemyPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -0.4459810256958008, -0.4764747619628906, -0.000396728515625, -0.5466595888137817, -9.179114385915454e-06, -0.08939170837402344, -0.05974578857421875, -0.12976360321044922, 0.0, -0.0019426345825195312, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.0007902383804321289, -1.9073486328125e-06, -0.5680360794067383, -7.62939453125e-06, -0.07519768178462982, -0.0002009867603192106, -2.0265579223632812e-06, -0.4304771423339844, -0.0026845932006835938, -0.000385284423828125, -0.03309059143066406, -5.125993993715383e-06, -0.0002727508544921875, -2.6702880859375e-05, -1.6319905519485474, -4.172316494077677e-06, 0.0, -0.000659942626953125, -2.86102294921875e-05, -0.0009385347366333008, 0.0, -0.04297065734863281, -6.866455078125e-05, -0.0022928714752197266, -0.00012171267735539004, 0.0, -0.0002422332763671875, -9.5367431640625e-06, -7.903463847469538e-05, -4.184158387943171e-05, -0.017368793487548828, -0.00021252757869660854], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 284, 48, 169, "health", "<EOS>", 46, 161, "True", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Player", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -6.653778986564916, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"_type": "Str", "s": "health"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>(Attribute(\n            '<UNK>', 7)), SelfSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -1.0786848068237305, -0.31040000915527344, -0.0005474090576171875, -9.918212890625e-05, 0.0, -0.40917062759399414, -0.0006238222122192383, -0.001064300537109375, -0.22749996185302734, -8.20159912109375e-05, -0.001408283831551671, -2.300739288330078e-05, -0.013727188110351562, -2.47955322265625e-05, -0.09278705716133118, -1.1324875231366605e-05, -2.0768327713012695, -7.748603820800781e-06, -4.768370445162873e-07, -0.08977413177490234, -0.0017404556274414062, -0.0001049041748046875, -0.017189383506774902, -2.384185791015625e-06, -0.0001583099365234375, -2.86102294921875e-05, -0.19082272052764893, -6.115433643572032e-05, 0.0, -0.000255584716796875, -5.7220458984375e-06, -0.0011016130447387695, 0.0, -0.02008533477783203, -0.00037384033203125, -0.005268096923828125, -8.45193862915039e-05, 0.0, -0.0002422332763671875, -3.814697265625e-06, -9.345899161417037e-05, -2.95634672511369e-05, -0.021353840827941895, -0.00023648326168768108], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 47, 165, "7", "<EOS>", "Self", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -6.657180251175404, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "SelfSelector", "hole7": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Num", "n": 7}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Deal<UNK>(Null,\n            MINION_TYPE.MURLOC, Null), PlayerSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -1.3040533065795898, -2.7656173188006505e-05, -3.9338898204732686e-05, -4.0531158447265625e-06, -9.5367431640625e-06, -0.009341120719909668, -2.0265579223632812e-06, -0.18336212635040283, -0.02545905113220215, -0.3515981137752533, -0.10350823402404785, -0.006986974738538265, -0.4459810256958008, -1.011734962463379, -0.007534980773925781, -0.0002765655517578125, 0.0, -0.42609500885009766, -2.288818359375e-05, -1.52587890625e-05, 0.0, -0.0014476776123046875, -3.814697265625e-06, -0.773468017578125, 0.0, -1.1500730514526367, -0.14478588104248047, -0.00016820430755615234, 0.0, -0.013171670027077198, -7.867813110351562e-06, -1.1920928244535389e-07, -0.21790504455566406, -0.0003185272216796875, -0.000179290771484375, -0.028207063674926758, -2.264974000354414e-06, -0.000141143798828125, -1.9073486328125e-05, -0.3763236999511719, -5.197524296818301e-05, 0.0, -0.0002994537353515625, -1.33514404296875e-05, -0.0010712146759033203, 0.0, -0.012891769409179688, -0.0003871917724609375, -0.008274078369140625, -0.00010919570922851562, 0.0, -0.0002346038818359375, -5.7220458984375e-06, -9.047823550645262e-05, -2.8490614567999728e-05, -0.015612006187438965, -0.00014733182615600526], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Deal", "<UNK>", "<EOS>", 284, 46, 162, "Null", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 46, 162, "Null", "<EOS>", "Player", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -6.732269267754852, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, {"value": "Null", "_type": "NameConstant"}], "hole3": "Deal<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>(), MinionSelector(\n            players=EnemyPlayer(), condition=Null, picker=UserPicker()),\n            ActionTag(Damage(4), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker()))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.7536773681640625, -0.0022104373201727867, -2.682197191461455e-05, -2.2649765014648438e-06, -7.62939453125e-06, -0.0008186101913452148, -3.814697265625e-06, -0.08452820777893066, -0.24685537815093994, -0.017622748389840126, -0.001202225685119629, -0.8584261536598206, -2.47955322265625e-05, -4.0531158447265625e-06, -0.0856332778930664, -0.000492095947265625, -0.000335693359375, -0.002659916877746582, -1.4305104514278355e-06, -0.0001621246337890625, -3.814697265625e-06, -0.05764031410217285, -8.583047019783407e-06, 0.0, -0.0002460479736328125, -0.000164031982421875, -1.0305507183074951, -3.2186455882765586e-06, -0.005888938903808594, -0.0030975341796875, -8.64267349243164e-05, 0.0, -4.9591064453125e-05, -5.53131103515625e-05, -0.006965756416320801, 0.0, -0.0030059814453125, -0.0001373291015625, -0.038997650146484375, -5.9485435485839844e-05, 0.0, -0.002593994140625, -0.07036876678466797, -0.0011920928955078125, -1.1444091796875e-05, 0.0, -0.3723975419998169, -0.0008068084716796875, -1.9073486328125e-06, -3.62396240234375e-05, -0.07233905792236328, -0.0011806488037109375, -0.6692609190940857, -9.572505950927734e-05, -0.004093170166015625, -0.22493362426757812, -3.814697265625e-05, 0.0, -0.03520011901855469, -0.00016224384307861328, 0.0, -0.08209896087646484, -0.0001430511474609375, -3.814697265625e-06, -0.02872467041015625, -5.960462772236497e-07, -0.0001010894775390625, -7.62939453125e-05, -0.0075626373291015625, -5.733966827392578e-05, 0.0, -0.001194000244140625, -1.33514404296875e-05, -0.0006668567657470703, -3.814697265625e-06, -0.3799448013305664, -0.000354766845703125, -0.0039806365966796875, -4.780292510986328e-05, 0.0, -0.000484466552734375, -3.814697265625e-06, -0.00011169627396157011, -0.00011193146929144859, -0.020964384078979492, -0.0003875934926327318], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 192, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "<EOS>", "Minion", "Selector", "<EOS>", 292, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "4", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -7.294184368375838, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "MinionSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole8": [{"args": [{"hole0": 4, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": "<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>(), MinionSelector(\n            players=EnemyPlayer(), condition=Null, picker=UserPicker()),\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker()))))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.025591710582375526, -0.00037698791129514575, -8.940672159951646e-06, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -1.1920928244535389e-07, -2.86102294921875e-05, -1.1920922133867862e-06, -0.000202178955078125, -0.07398128509521484, -6.103515625e-05, -5.316732858773321e-05, -1.1920928244535389e-07, -3.814697265625e-06, -0.0017948150634765625, -5.91278076171875e-05, -1.3470649719238281e-05, 0.0, -1.1444091796875e-05, -0.008515357971191406, -2.7536773681640625, -0.0022104373201727867, -2.682197191461455e-05, -2.2649765014648438e-06, -7.62939453125e-06, -0.0008186101913452148, -3.814697265625e-06, -0.08452820777893066, -0.24685537815093994, -0.017622748389840126, -0.001202225685119629, -0.8584261536598206, -2.47955322265625e-05, -4.0531158447265625e-06, -0.0856332778930664, -0.000492095947265625, -0.000335693359375, -0.002659916877746582, -1.4305104514278355e-06, -0.0001621246337890625, -3.814697265625e-06, -0.05764031410217285, -8.583047019783407e-06, 0.0, -0.0002460479736328125, -0.000164031982421875, -1.0305507183074951, -3.2186455882765586e-06, -0.005888938903808594, -0.0030975341796875, -8.64267349243164e-05, 0.0, -4.9591064453125e-05, -5.53131103515625e-05, -0.006965756416320801, 0.0, -0.0030059814453125, -0.0001373291015625, -0.038997650146484375, -5.9485435485839844e-05, 0.0, -0.002593994140625, -0.07036876678466797, -0.0011920928955078125, -1.1444091796875e-05, 0.0, -0.3723975419998169, -0.0008068084716796875, -1.9073486328125e-06, -3.62396240234375e-05, -0.07233905792236328, -0.0011806488037109375, -0.7525445818901062, -1.52587890625e-05, -0.0002918243408203125, -0.04141044616699219, -2.86102294921875e-05, -1.9073486328125e-06, -0.10069561004638672, -0.00020611286163330078, 0.0, -0.17003154754638672, -0.000331878662109375, -3.814697265625e-06, -0.03387260437011719, -8.344646857949556e-07, -0.000102996826171875, -7.05718994140625e-05, -0.008577346801757812, -6.306171417236328e-05, 0.0, -0.0012073516845703125, -1.33514404296875e-05, -0.0005676746368408203, -3.814697265625e-06, -0.3366098403930664, -0.000354766845703125, -0.004486083984375, -4.780292510986328e-05, 0.0, -0.00049591064453125, -3.814697265625e-06, -0.0001057362460414879, -0.00011491136683616787, -0.021252036094665527, -0.0004037995240651071], "choice_history": [80, 159, 295, 88, 138, "Injured", "Blademaster", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 192, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "<EOS>", "Minion", "Selector", "<EOS>", 292, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "7", "<EOS>"], "score": -7.307277952781973, "model_output": {"_type": "Module", "body": [{"name": "InjuredBlademaster", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Injured Blademaster", "hole5": "MinionSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole8": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": "<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 7, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -22.50298500061035], "choice_history": [80, 159, 294], "score": -22.502994537353516, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}
{"beams": [{"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -0.26323986053466797, -0.001125335693359375, -0.0001983642578125, -0.18933188915252686, -1.3589859008789062e-05, -0.0001125335693359375, -0.0001220703125, -0.02512359619140625, -1.2278556823730469e-05, 0.0, -0.0002288818359375, -3.4332275390625e-05, -0.032845139503479004, -1.9073468138230965e-06, -0.0005035400390625, -0.00012969970703125, -0.0004674196243286133, -0.0001392364501953125, -1.9073486328125e-06, -8.58306884765625e-05, -0.0002307891845703125, -0.008321166038513184, -5.376214176067151e-05, -0.0015687942504882812, -9.5367431640625e-05, -0.00011837482452392578, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 292, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>"], "score": -1.1356573317934746, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(condition=Null, players=EnemyPlayer())))]\n            )\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -1.1489887237548828, -0.00391387939453125, 0.0, -0.29781150817871094, -0.0014057159423828125, -1.52587890625e-05, -0.8973751068115234, -3.707408905029297e-05, -0.00431060791015625, -0.0009593963623046875, -0.0001811981201171875, -1.9073486328125e-06, -0.001163482666015625, -4.1961669921875e-05, -0.13008689880371094, -1.9073486328125e-06, -0.0001220703125, -7.62939453125e-06, -0.07288551330566406, -8.225440979003906e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 291, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>"], "score": -2.777668737080596, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(picker=RandomPicker(), condition=Null)))]\n            )\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -1.1489887237548828, -0.00391387939453125, 0.0, -0.29781150817871094, -0.0014057159423828125, -1.52587890625e-05, -0.7230033874511719, 0.0, -0.030279159545898438, -0.0002288818359375, -0.02178668975830078, -0.00040352344512939453, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -0.593193531036377, -2.3841830625315197e-06, -0.0017480850219726562, -0.000396728515625, -0.000171661376953125, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 291, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>"], "score": -3.0417932497502917, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -1.1489887237548828, -0.00391387939453125, 0.0, -1.4581480026245117, -0.00039768218994140625, -0.0002040863037109375, -0.15235543251037598, -1.1920928955078125e-05, -0.00043487548828125, -0.0001392364501953125, -0.019280552864074707, -1.3828277587890625e-05, 0.0, -0.0002040863037109375, -2.6702880859375e-05, -0.04575645923614502, -1.311301275563892e-06, -0.0008907318115234375, -0.000133514404296875, -0.0007364749908447266, -0.0001068115234375, -1.9073486328125e-06, -2.86102294921875e-05, -0.00020599365234375, -0.01218879222869873, -4.1364844946656376e-05, -0.0009756088256835938, -0.0001239776611328125, -8.404254913330078e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 292, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>"], "score": -3.063747189365124, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(condition=Null, players=\n            EnemyPlayer())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -1.5733203887939453, -0.002849578857421875, -9.5367431640625e-06, -0.4716453552246094, -0.00012350082397460938, -0.1000986099243164, -0.000213623046875, -0.0002689361572265625, -1.9073486328125e-06, -0.006778717041015625, -0.0004596710205078125, -0.2641592025756836, 0.0, -2.86102294921875e-05, -1.9073486328125e-05, -0.08349990844726562, -1.2278556823730469e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>"], "score": -3.115038655903838, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -1.5733203887939453, -0.002849578857421875, -9.5367431640625e-06, -1.1930427551269531, -1.0371208190917969e-05, -5.53131103515625e-05, -0.0002651214599609375, -0.023992538452148438, -1.1682510375976562e-05, 0.0, -4.9591064453125e-05, -3.0517578125e-05, -0.0017096996307373047, -2.3841855067985307e-07, -0.0002574920654296875, -8.392333984375e-05, -0.0005035400390625, -0.0001544952392578125, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -3.4078984486131603, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(picker=RandomPicker(), players=\n            EnemyPlayer())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -1.1489887237548828, -0.00391387939453125, 0.0, -0.29781150817871094, -0.0014057159423828125, -1.52587890625e-05, -0.7230033874511719, 0.0, -0.030279159545898438, -0.0002288818359375, -0.02178668975830078, -0.00040352344512939453, 0.0, -2.09808349609375e-05, -7.05718994140625e-05, -0.9415669441223145, -2.3841855067985307e-07, -0.00022125244140625, -3.814697265625e-06, -0.1365147829055786, -4.649161837733118e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 291, 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>"], "score": -3.524590634014622, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(condition=Null, picker=\n            RandomPicker(), condition=Null)))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -0.26323986053466797, -0.001125335693359375, -0.0001983642578125, -2.002765417098999, -4.9591064453125e-05, -0.215576171875, -0.0001583099365234375, -0.0002384185791015625, -1.9073486328125e-06, -0.0026721954345703125, -0.004421234130859375, -0.7994424104690552, 0.0, -0.0001983642578125, -8.392333984375e-05, -0.001068115234375, -0.00051116943359375, -1.9073486328125e-06, -6.866455078125e-05, -0.0004253387451171875, -0.0135270357131958, -5.3523639508057386e-05, -0.0022382736206054688, -0.0001068115234375, -0.000316619873046875, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 292, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>"], "score": -3.920040628678173, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(players=EnemyPlayer(), picker=\n            RandomPicker())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -1.1489887237548828, -0.00391387939453125, 0.0, -0.29781150817871094, -0.0014057159423828125, -1.52587890625e-05, -2.2740354537963867, -8.225440979003906e-06, -0.0002841949462890625, -0.000274658203125, -0.020761489868164062, -9.775161743164062e-06, 0.0, -5.53131103515625e-05, -3.62396240234375e-05, -0.0023164749145507812, -1.1920928244535389e-07, -0.0003833770751953125, -0.0001010894775390625, -0.0006333589553833008, -0.0001049041748046875, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -3.969492338803306, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(condition=Null, players=\n            EnemyPlayer(), picker=RandomPicker())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -0.26323986053466797, -0.001125335693359375, -0.0001983642578125, -2.002765417098999, -4.9591064453125e-05, -0.215576171875, -0.0001583099365234375, -0.0002384185791015625, -1.9073486328125e-06, -0.0026721954345703125, -0.004421234130859375, -0.9347087144851685, -1.1920928244535389e-07, -2.47955322265625e-05, -5.7220458984375e-06, -0.07554912567138672, -9.059905096364673e-06, 0.0, -0.0003414154052734375, -2.288818359375e-05, -0.023052452132105827, -3.6954811548639555e-06, -0.0005321502685546875, -0.0001583099365234375, -0.0004101991653442383, -0.0002117156982421875, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 292, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.137028834049019, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(condition=Null, picker=\n            RandomPicker())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -1.5733203887939453, -0.002849578857421875, -9.5367431640625e-06, -0.4716453552246094, -0.00012350082397460938, -0.1000986099243164, -0.000213623046875, -0.0002689361572265625, -1.9073486328125e-06, -0.006778717041015625, -0.0004596710205078125, -1.8595590591430664, 0.0, -0.0002269744873046875, -0.0001125335693359375, -0.0029964447021484375, -0.0006971359252929688, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.630913637784026, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), MinionSelector(condition=Null, picker=RandomPicker())))]\n            )\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -1.1489887237548828, -0.00391387939453125, 0.0, -0.29781150817871094, -0.0014057159423828125, -1.52587890625e-05, -0.8973751068115234, -3.707408905029297e-05, -0.00431060791015625, -0.0009593963623046875, -0.0001811981201171875, -1.9073486328125e-06, -0.001163482666015625, -4.1961669921875e-05, -2.1899166107177734, 0.0, -0.0003070831298828125, -4.00543212890625e-05, -0.001476287841796875, -0.000152587890625, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 291, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.766451023724578, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), condition=\n            Null, picker=RandomPicker())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -0.02210712432861328, -0.011778831481933594, -0.0028802156448364258, -3.4570634852570947e-06, -0.00022289689513854682, -3.4570680327306036e-06, -0.019802212715148926, -0.0214841365814209, -7.82012939453125e-05, -0.00038909912109375, -0.0005855560302734375, -3.814697265625e-06, -0.037010908126831055, -0.05804266035556793, -1.2278556823730469e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.0019969940185546875, 0.0, 0.0, -0.005528450012207031, -0.00015854835510253906, -1.1444091796875e-05, -0.012666702270507812, -0.009165763854980469, -0.0005092620849609375, -0.0014496343210339546, -1.1444091796875e-05, -9.34600830078125e-05, -0.00827789306640625, -2.6702880859375e-05, -1.52587890625e-05, -0.3922719955444336, -0.0009270906448364258, 0.0, -0.26323986053466797, -0.001125335693359375, -0.0001983642578125, -0.18933188915252686, -1.3589859008789062e-05, -0.0001125335693359375, -0.0001220703125, -0.02512359619140625, -1.2278556823730469e-05, 0.0, -0.0002288818359375, -3.4332275390625e-05, -3.7265772819519043, -0.00016413803678005934, -0.0016326904296875, -0.0001354217529296875, -0.0001621246337890625, -1.9073486328125e-06, -0.008475303649902344, -0.0003814697265625, -0.030178427696228027, 0.0, -0.0002079010009765625, -5.91278076171875e-05, -0.0003986358642578125, -0.000213623046875, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 97, 180, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 282, 68, 260, "Is", "Spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 66, 257, "1", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 292, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.859682450160101, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole2": "CardUsed", "_type": "Template10", "hole4": [{"args": [{"hole0": 1, "_type": "Template75"}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "IsSpell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(TurnEnded(), ActionTag(Damage(1\n            ), CharacterSelector(players=EnemyPlayer(), picker=RandomPicker\n            ())))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.619726915843785e-05, -0.00015627116954419762, -1.9907789464923553e-05, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.933906555175781e-06, -1.71661376953125e-05, -1.1920928244535389e-07, -5.91278076171875e-05, -0.0033807754516601562, -7.2479248046875e-05, -2.109982233378105e-05, -1.2159347534179688e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.276897430419922e-05, 0.0, -6.341934204101562e-05, -3.814697265625e-06, -4.1680908203125, -0.2753715515136719, -7.140634261304513e-05, -6.222543015610427e-05, -0.0014491290785372257, -8.940656698541716e-06, -0.005251049995422363, -0.0037937164306640625, -3.814697265625e-06, -0.21377575397491455, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.02300717681646347, -4.38690185546875e-05, -0.22093963623046875, -0.00028955936431884766, 0.0, -0.07900333404541016, -6.67572021484375e-05, -1.33514404296875e-05, -0.013178110122680664, -0.0008442401885986328, -0.00481414794921875, -4.57763671875e-05, -0.0020737648010253906, -2.3365020751953125e-05, -3.814697265625e-06, -0.00011444091796875, -8.20159912109375e-05, -0.01697993278503418, -3.3378546504536644e-06, -0.045876502990722656, -0.0001811981201171875, -0.00024640560150146484, -0.0005074739456176758, 0.0], "choice_history": [80, 159, 295, 88, 138, "Knife", "Juggler", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 96, 177, "3", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -5.080233717322692, "model_output": {"_type": "Module", "body": [{"name": "KnifeJuggler", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template16", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "hole5": "CharacterSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 1}], "hole3": "Damage"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -22.677345275878906], "choice_history": [80, 159, 294], "score": -22.677349090576172, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n"}
{"beams": [{"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, spell_damage=1)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -2.4770002365112305, -0.0005626678466796875, -0.07760810852050781, -3.814697265625e-06, -0.04962380975484848, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -2.8090917663393995, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(OneIn(3), PlayerSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.6600955724716187, -0.1333608627319336, -1.9073486328125e-06, -0.0009937286376953125, -0.0001468658447265625, -3.4332275390625e-05, -2.288818359375e-05, 0.0, -0.000118255615234375, -3.814697265625e-05, -0.00296783447265625, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00022125244140625, -4.00543212890625e-05, -3.24249267578125e-05, -0.0002880096435546875, -0.014047622680664062, -0.01578998565673828, -7.62939453125e-06, -1.71661376953125e-05, -0.8776508569717407, -0.02503359317779541, 0.0, -1.9073486328125e-06, -0.0002384185791015625, -5.7220458984375e-06, -0.048850350081920624, -3.814697265625e-06, -0.4899101257324219, -0.0013408660888671875, -0.49189186096191406, -3.814697265625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "One", "In", "<EOS>", 282, 47, 165, "3", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -3.4552939431487104, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "OneIn"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(), ActionTag(Heal(3),\n            HeroSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -2.9023008346557617, -0.5807294845581055, -3.576278118089249e-07, 0.0, -1.0251929779769853e-05, -5.14984130859375e-05, -0.007150516379624605, -0.011767387390136719, -0.0001468658447265625, -0.1063985824584961, -1.71661376953125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.002920722123235464, -1.1444091796875e-05, -0.052033424377441406, -2.5749202904989943e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 96, 176, "0", "<EOS>", "5", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 282, 47, 165, "3", "<EOS>", "Hero", "Selector", "<EOS>"], "score": -3.6750227985430115, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "hole5": "HeroSelector", "hole2": "TurnEnded", "_type": "Template1", "hole4": [{"_type": "Num", "n": 3}], "hole3": "Heal"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(OneIn(3), CharacterSelector(players=BothPlayer(),\n            picker=RandomPicker())))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.6600955724716187, -0.1333608627319336, -1.9073486328125e-06, -0.0009937286376953125, -0.0001468658447265625, -3.4332275390625e-05, -2.288818359375e-05, 0.0, -0.000118255615234375, -3.814697265625e-05, -0.00296783447265625, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00022125244140625, -4.00543212890625e-05, -3.24249267578125e-05, -0.0002880096435546875, -0.014047622680664062, -0.01578998565673828, -7.62939453125e-06, -1.71661376953125e-05, -0.8776508569717407, -0.02503359317779541, 0.0, -1.9073486328125e-06, -0.0002384185791015625, -5.7220458984375e-06, -0.048850350081920624, -3.814697265625e-06, -0.9494771957397461, -0.013081550598144531, -4.9591064453125e-05, -7.62939453125e-06, -0.17447662353515625, -0.0006656646728515625, 0.0, -0.04020881652832031, -0.000125885009765625, -3.814697265625e-06, -0.011064529418945312, 0.0, -4.1961669921875e-05, -3.62396240234375e-05, -0.027132272720336914, -9.5367431640625e-06, -7.62939453125e-06, -6.103515625e-05, -1.1444091796875e-05, -0.09657406806945801, 0.0, -7.62939453125e-05, -3.814697265625e-05, -0.004772186279296875, -0.0009899139404296875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "One", "In", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -3.791059304934599, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "OneIn"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Heal(5), HeroSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.6600955724716187, -0.1333608627319336, -1.9073486328125e-06, -0.0009937286376953125, -0.0001468658447265625, -3.4332275390625e-05, -2.288818359375e-05, 0.0, -0.000118255615234375, -3.814697265625e-05, -0.00296783447265625, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00022125244140625, -4.00543212890625e-05, -3.24249267578125e-05, -0.0002880096435546875, -0.014047622680664062, -0.01578998565673828, -7.62939453125e-06, -1.71661376953125e-05, -2.162179470062256, -0.0028966665267944336, -5.7220458984375e-06, -0.004063606262207031, -3.814697265625e-06, -0.12909458577632904, -7.62939453125e-06, -0.009303092956542969, -0.0003719329833984375, -0.007854580879211426, -3.099440846199286e-06, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "5", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -3.8361487211398, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"_type": "Num", "n": 5}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(OneIn(3), HeroSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.6600955724716187, -0.1333608627319336, -1.9073486328125e-06, -0.0009937286376953125, -0.0001468658447265625, -3.4332275390625e-05, -2.288818359375e-05, 0.0, -0.000118255615234375, -3.814697265625e-05, -0.00296783447265625, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, 0.0, -0.00022125244140625, -4.00543212890625e-05, -3.24249267578125e-05, -0.0002880096435546875, -0.014047622680664062, -0.01578998565673828, -7.62939453125e-06, -1.71661376953125e-05, -0.8776508569717407, -0.02503359317779541, 0.0, -1.9073486328125e-06, -0.0002384185791015625, -5.7220458984375e-06, -0.048850350081920624, -3.814697265625e-06, -0.4899101257324219, -0.0013408660888671875, -0.9542131423950195, -7.987022399902344e-06, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "One", "In", "<EOS>", 282, 47, 165, "3", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -3.917621304255583, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "OneIn"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, windfury=True)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -3.737691879272461, -0.0008357763290405273, -0.029061317443847656, -0.0001850128173828125, -4.601478576660156e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.972113129657366, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, stealth=True, effects=[Effect(TurnStarted(),\n            ActionTag(Heal(5), HeroSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -2.243579864501953, -9.5367431640625e-06, -0.030612945556640625, -1.52587890625e-05, -4.00543212890625e-05, -0.000133514404296875, 0.0, -1.71661376953125e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.0007841587066650391, 0.0, -0.0003299713134765625, -0.000530242919921875, -0.0003452301025390625, -0.00055694580078125, -9.918212890625e-05, -4.76837158203125e-05, 0.0, -0.00020503997802734375, -3.0517578125e-05, -0.00019073486328125, -0.0001659393310546875, -1.33514404296875e-05, -0.001150369644165039, -4.410743713378906e-06, -0.0001430511474609375, -1.33514404296875e-05, -7.629378160345368e-06, -3.695487976074219e-05, -0.011560440063476562, -0.04010200500488281, -3.4332275390625e-05, -0.42232513427734375, -2.47955322265625e-05, -0.0004863739013671875, -0.0001468658447265625, -1.9073486328125e-06, -3.814697265625e-06, -0.5992841720581055, -1.52587890625e-05, -0.005746960639953613, -1.1563301086425781e-05, -0.000598907470703125, -0.00080108642578125, -1.1444091796875e-05, -0.000152587890625, -0.0049724578857421875, -3.814697265625e-06, -9.5367431640625e-06, -0.0005114078521728516, -0.002560138702392578, -0.000213623046875, -0.010808944702148438, -0.0001735687255859375, -0.16336095333099365, -0.013029098510742188, -1.1444091796875e-05, -3.814697265625e-06, -0.0059490203857421875, 0.0, 0.0, -0.0004978179931640625, -4.57763671875e-05, -1.9073486328125e-06, -0.009103775024414062, -0.0023946762084960938, -0.009241104125976562, -5.7220458984375e-06, -4.57763671875e-05, -0.5612138509750366, -0.014600753784179688, -3.814697265625e-06, -0.011320114135742188, -5.7220458984375e-06, -0.5590364336967468, -1.52587890625e-05, -0.00620269775390625, -0.000644683837890625, -0.0040552616119384766, -3.576277322281385e-06, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "5", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 68, 260, "Turn", "Started", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "5", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -4.751917776659411, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"hole0": "TurnStarted", "_type": "Template77"}, {"args": [{"args": [{"_type": "Num", "n": 5}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(OneIn(3), CharacterSelector(players=\n            BothPlayer(), picker=RandomPicker())))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.7429507970809937, -0.044556379318237305, -0.001782536506652832, -1.042860984802246, -0.00038909912109375, -1.71661376953125e-05, -0.017287254333496094, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -0.0040988922119140625, -3.814697265625e-06, -1.71661376953125e-05, -2.288818359375e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002288818359375, -4.76837158203125e-05, -2.86102294921875e-05, -0.000225067138671875, -0.012511253356933594, -0.013032913208007812, -7.62939453125e-06, -1.52587890625e-05, -0.9241107702255249, -0.03946042060852051, 0.0, -1.9073486328125e-06, -0.000621795654296875, -5.7220458984375e-06, -0.0387178510427475, -3.814697265625e-06, -0.787226676940918, -0.012908935546875, -5.340576171875e-05, -7.62939453125e-06, -0.20921897888183594, -0.0006084442138671875, 0.0, -0.038796424865722656, -0.0001239776611328125, -3.814697265625e-06, -0.011877059936523438, 0.0, -4.00543212890625e-05, -3.62396240234375e-05, -0.027078866958618164, -9.5367431640625e-06, -7.62939453125e-06, -6.29425048828125e-05, -1.33514404296875e-05, -0.09878182411193848, 0.0, -7.62939453125e-05, -3.814697265625e-05, -0.0047588348388671875, -0.0009975433349609375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "One", "In", "<EOS>", 282, 47, 165, "3", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>"], "score": -4.767844540041544, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"args": [{"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "OneIn"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(Character<UNK>(player=\n            BothPlayer(), picker=RandomPicker()), ActionTag(<UNK>Attack(2),\n            PlayerSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.7429507970809937, -0.044556379318237305, -0.001782536506652832, -0.4532203674316406, -0.000396728515625, -2.288818359375e-05, -0.41201210021972656, 0.0, -2.86102294921875e-05, -2.6702880859375e-05, -0.00845348834991455, -3.933906555175781e-06, -1.52587890625e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.19377434253692627, 0.0, -5.340576171875e-05, -7.05718994140625e-05, -0.0013333559036254883, -0.001678466796875, 0.0, -0.017484664916992188, -0.0004520416259765625, 0.0, 0.0, -0.001071929931640625, -3.62396240234375e-05, -7.62939453125e-06, -0.000156402587890625, -0.03776359558105469, -0.02527904510498047, -7.62939453125e-06, -1.52587890625e-05, -1.3738292455673218, -0.33864277601242065, -8.20159912109375e-05, -1.33514404296875e-05, -0.0053615570068359375, -3.814697265625e-06, -0.45224156975746155, 0.0, -0.00177001953125, -0.0003414154052734375, -0.1457366943359375, -5.841255187988281e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 291, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "<UNK>", "Attack", "<EOS>", 282, 47, 165, "2", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -4.952795949739077, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "<UNK>Attack"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, buffs=[Buff(CantAttack())])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -2.541867256164551, -1.5974044799804688e-05, -0.0001735687255859375, -4.57763671875e-05, -0.0001468658447265625, -2.652409553527832, -9.5367431640625e-06, -0.0002595186233520508, -0.0014592409133911133, -0.015513915568590164, -0.039143647998571396, -6.866455078125e-05], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "buffs", "<EOS>", 17, 155, 282, 61, 250, "Buff", "<EOS>", "Cant", "Attack", "<EOS>"], "score": -5.455404740732767, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "buffs", "hole3": {"_type": "List", "elts": [{"hole1": "CantAttack", "hole0": "Buff", "_type": "Template69"}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(Character<UNK>(player=\n            BothPlayer(), picker=RandomPicker()), ActionTag(Draw(<UNK>(\n            Count(CardSelector(condition=IsMinion())), value=0)),\n            HeroSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.7429507970809937, -0.044556379318237305, -0.001782536506652832, -0.4532203674316406, -0.000396728515625, -2.288818359375e-05, -0.41201210021972656, 0.0, -2.86102294921875e-05, -2.6702880859375e-05, -0.00845348834991455, -3.933906555175781e-06, -1.52587890625e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.19377434253692627, 0.0, -5.340576171875e-05, -7.05718994140625e-05, -0.0013333559036254883, -0.001678466796875, 0.0, -0.017484664916992188, -0.0004520416259765625, 0.0, 0.0, -0.001071929931640625, -3.62396240234375e-05, -7.62939453125e-06, -0.000156402587890625, -0.03776359558105469, -0.02527904510498047, -7.62939453125e-06, -1.52587890625e-05, -0.657218337059021, -0.07915353775024414, -0.0002288818359375, -8.20159912109375e-05, -0.24451446533203125, -1.33514404296875e-05, 0.0, -0.011160969734191895, -0.08349037170410156, -0.002086639404296875, -0.06051921844482422, -0.000518798828125, -1.9073486328125e-05, -7.62939453125e-06, -0.22098922729492188, -0.00030040740966796875, -0.0002002716064453125, -0.001171112060546875, -0.001628875732421875, -0.000232696533203125, -1.9073486328125e-06, -0.2091226577758789, -0.0006889104843139648, 0.0, -0.01734638214111328, -1.71661376953125e-05, -2.47955322265625e-05, -0.01675701141357422, -1.1920922133867862e-06, -0.21010494232177734, -0.002246856689453125, -0.001615285873413086, -0.24513494968414307, -1.33514404296875e-05, -0.05506420135498047, -1.9073486328125e-05, -5.7220458984375e-06, -0.1707897186279297, -7.11679458618164e-05, -0.0006389617919921875, -1.9073486328125e-05, -0.17927920818328857, 0.0, -0.8396263122558594, -3.814697265625e-05, -0.12191784381866455, -2.777576446533203e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 291, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Is", "Minion", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -6.06887614445008, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"hole0": "IsMinion", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(Character<UNK>(player=\n            BothPlayer(), picker=RandomPicker()), ActionTag(Draw(<UNK>(\n            Count(CardSelector(condition=IsMinion())), value=0)),\n            OpponentMinionCountIsGreaterThan(0)))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -0.1923837661743164, -0.0004367828369140625, -2.1457672119140625e-06, -1.1920928244535389e-07, -9.894320101011544e-06, -9.5367431640625e-06, -0.47673988342285156, -0.0002919435501098633, -6.29425048828125e-05, -1.52587890625e-05, -0.0073719024658203125, -0.0002574920654296875, -7.05718994140625e-05, -5.7220458984375e-06, 0.0, -0.0006450414657592773, -5.7220458984375e-06, -0.0002193450927734375, -5.53131103515625e-05, -0.0019855499267578125, -4.9591064453125e-05, -7.62939453125e-06, -0.7429507970809937, -0.044556379318237305, -0.001782536506652832, -0.4532203674316406, -0.000396728515625, -2.288818359375e-05, -0.41201210021972656, 0.0, -2.86102294921875e-05, -2.6702880859375e-05, -0.00845348834991455, -3.933906555175781e-06, -1.52587890625e-05, -3.24249267578125e-05, -5.7220458984375e-06, -0.19377434253692627, 0.0, -5.340576171875e-05, -7.05718994140625e-05, -0.0013333559036254883, -0.001678466796875, 0.0, -0.017484664916992188, -0.0004520416259765625, 0.0, 0.0, -0.001071929931640625, -3.62396240234375e-05, -7.62939453125e-06, -0.000156402587890625, -0.03776359558105469, -0.02527904510498047, -7.62939453125e-06, -1.52587890625e-05, -0.657218337059021, -0.07915353775024414, -0.0002288818359375, -8.20159912109375e-05, -0.24451446533203125, -1.33514404296875e-05, 0.0, -0.011160969734191895, -0.08349037170410156, -0.002086639404296875, -0.06051921844482422, -0.000518798828125, -1.9073486328125e-05, -7.62939453125e-06, -0.22098922729492188, -0.00030040740966796875, -0.0002002716064453125, -0.001171112060546875, -0.001628875732421875, -0.000232696533203125, -1.9073486328125e-06, -0.2091226577758789, -0.0006889104843139648, 0.0, -0.01734638214111328, -1.71661376953125e-05, -2.47955322265625e-05, -0.01675701141357422, -1.1920922133867862e-06, -0.21010494232177734, -0.002246856689453125, -0.001615285873413086, -0.24513494968414307, -1.33514404296875e-05, -0.05506420135498047, -1.9073486328125e-05, -5.7220458984375e-06, -0.1707897186279297, -7.11679458618164e-05, -0.0006389617919921875, -1.9073486328125e-05, -0.17927920818328857, 0.0, -0.7317962646484375, -0.18869495391845703, 0.0, 0.0, -0.7087535858154297, -0.00039386749267578125, -0.04541969299316406, -0.0010082721710205078, -0.040200233459472656, -0.001667022705078125, -1.9073486328125e-06, -5.7220458984375e-05, -0.0001125335693359375, 0.0, -0.03135044872760773, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 109, 200, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 291, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "Random", "Picker", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 137, 19, 160, "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Is", "Minion", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 40, 136, 19, 160, "Opponent", "Minion", "Count", "Is", "Greater", "Than", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -6.856723976295363, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"hole1": 5, "hole0": 0, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "RandomPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"args": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"hole0": "IsMinion", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "<UNK>"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "OpponentMinionCountIsGreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n    return Minion\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.184158387943171e-05, -0.0003687124408315867, -1.1444091796875e-05, 0.0, 0.0, -0.0002498626708984375, -3.814697265625e-06, -2.86102294921875e-05, -0.0001239776611328125, -0.00982666015625, -1.9073486328125e-05, 0.0, -2.0265579223632812e-06, -5.9604644775390625e-06, 0.0, -0.0005972385406494141, -0.0001621246337890625, -6.544783115386963, -0.20680809020996094, -0.06462287902832031, 0.0, -0.15503215789794922, -0.005962371826171875], "choice_history": [80, 159, 295, 88, 138, "Lightwell", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 102, 185, "Lightwell", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 94, 167, 19, 160, "Minion", "<EOS>"], "score": -6.98865759095861, "model_output": {"_type": "Module", "body": [{"name": "Lightwell", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template16", "hole2": "PRIEST"}, {"value": {"_type": "Name", "id": "Minion"}, "_type": "Return"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -1.9073486328125e-06, -23.022523880004883], "choice_history": [80, 159, 294], "score": -23.022525787353516, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n"}
{"beams": [{"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -0.3738536834716797, -0.0001373291015625, -1.192074705613777e-07, 0.0, -0.0001798790617613122, -3.814697265625e-06, -0.0034618377685546875, -2.6702880859375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0031261444091796875, -8.20159912109375e-05, -0.0017242431640625, -5.7220458984375e-06, 0.0, -0.0023131370544433594, -1.1444091796875e-05, -8.392333984375e-05, -4.9591064453125e-05, -0.013396263122558594, -3.814697265625e-05, 0.0, -0.4370121955871582, -0.013972043991088867, -0.00023853778839111328, -0.001476287841796875, -7.05718994140625e-05, -0.000209808349609375, -5.340576171875e-05, 0.0, -0.000545501708984375, -6.103515625e-05, -0.045757174491882324, -7.164474664023146e-05, -5.7220458984375e-06, -0.0001392364501953125, -5.14984130859375e-05, 0.0, 0.0, -6.29425048828125e-05, -0.000213623046875, -3.814697265625e-06, -6.67572021484375e-05, -0.012633323669433594, -0.0002002716064453125, -0.0004906654357910156, -7.62939453125e-06, -8.797645568847656e-05, -0.0010224580764770508, -2.47955322265625e-05, -0.0007020235061645508, -0.000133514404296875, 0.0, -5.7220458984375e-06, -0.0001475811004638672, -3.087520235567354e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -0.9160983474585009, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionDied(player=BothPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -0.3738536834716797, -0.0001373291015625, -1.192074705613777e-07, 0.0, -0.0001798790617613122, -3.814697265625e-06, -0.0034618377685546875, -2.6702880859375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0031261444091796875, -8.20159912109375e-05, -0.0017242431640625, -5.7220458984375e-06, 0.0, -0.0023131370544433594, -1.1444091796875e-05, -8.392333984375e-05, -4.9591064453125e-05, -0.013396263122558594, -3.814697265625e-05, 0.0, -1.3558510541915894, -0.011075973510742188, -1.33514404296875e-05, -4.1961669921875e-05, -0.0007686614990234375, -0.000698089599609375, -2.6702880859375e-05, 0.0, -0.0004711151123046875, -3.4332275390625e-05, -0.040683746337890625, -6.079670856706798e-05, -5.7220458984375e-06, -0.000209808349609375, -6.29425048828125e-05, 0.0, 0.0, -6.103515625e-05, -0.0002288818359375, -3.814697265625e-06, -6.4849853515625e-05, -0.012804031372070312, -0.000202178955078125, -0.0005145072937011719, -7.62939453125e-06, -8.797645568847656e-05, -0.0010281801223754883, -2.47955322265625e-05, -0.0007134675979614258, -0.0001430511474609375, 0.0, -5.7220458984375e-06, -0.00014960765838623047, -2.896785554185044e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Minion", "Died", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -1.8266726644460505, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionDied"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(MinionHasMana()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -1.6216974258422852, -0.0665578842163086, -4.7683579396107234e-07, 0.0, -0.003488962072879076, -0.00042009333265013993, -0.00418400764465332, -0.2945634126663208, -4.613396231434308e-05, -0.001018524169921875, -0.07520771026611328, -0.0001468658447265625, -0.01107331644743681, -0.04564499482512474, -0.37431004643440247, -0.023630615323781967, -0.0001220703125, -0.00833892822265625, -0.0057010650634765625, -1.9073486328125e-06, 0.0, -0.00157928466796875, -7.069110870361328e-05, -9.72747802734375e-05, -0.0001010894775390625, -0.01723003387451172, -0.000957489013671875, -0.00024008750915527344, -9.5367431640625e-06, -0.0003057718276977539, -0.001028299331665039, -9.5367431640625e-06, -0.0005631443345919251, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.00030243396759033203, -3.4332275390625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 97, 180, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 282, 68, 260, "Minion", "Has", "Mana", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -2.5607662702036578, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole2": "MinionSummoned", "_type": "Template10", "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "MinionHasMana", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -2.3199853897094727, -0.014738082885742188, -1.1920838005607948e-07, -2.3841855067985307e-07, -0.00018226153042633086, -1.811981201171875e-05, -0.11269962787628174, -0.005450725555419922, -4.4465065002441406e-05, -0.24200928211212158, -8.821463779895566e-06, -1.9073486328125e-06, -0.21819305419921875, -0.0008640289306640625, -0.138919398188591, -0.0005953311338089406, -0.023308711126446724, -0.00032329559326171875, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 96, 176, "1", "<EOS>", "3", "<EOS>", "Spell", "Cast", "<EOS>", "Give", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "score": -3.079401126760729, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole5": "TargetSelector", "hole2": "SpellCast", "_type": "Template1", "hole4": [{"hole0": "Frozen", "_type": "Template77"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(MinionHasspell()\n            ), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -1.6216974258422852, -0.0665578842163086, -4.7683579396107234e-07, 0.0, -0.003488962072879076, -0.00042009333265013993, -0.00418400764465332, -0.2945634126663208, -4.613396231434308e-05, -0.001018524169921875, -0.07520771026611328, -0.0001468658447265625, -0.01107331644743681, -0.04564499482512474, -1.5175480842590332, -0.0002087310131173581, -0.0002155303955078125, -0.000392913818359375, -0.000164031982421875, -3.814697265625e-06, 0.0, -0.0034170150756835938, -8.225440979003906e-05, -4.38690185546875e-05, -0.0001049041748046875, -0.02542591094970703, -0.00104522705078125, -0.00019669532775878906, -9.655952453613281e-06, -0.0004621744155883789, -0.0009539127349853516, -9.5367431640625e-06, -0.0005267856176942587, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0003025531768798828, -3.814697265625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 97, 180, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 282, 68, 260, "Minion", "Has", "spell", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -3.6772843796293273, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole2": "MinionSummoned", "_type": "Template10", "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "MinionHasspell", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(TurnStarted(player=BothPlayer()\n            ), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -0.3738536834716797, -0.0001373291015625, -1.192074705613777e-07, 0.0, -0.0001798790617613122, -3.814697265625e-06, -0.0034618377685546875, -2.6702880859375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0031261444091796875, -8.20159912109375e-05, -0.0017242431640625, -5.7220458984375e-06, 0.0, -0.0023131370544433594, -1.1444091796875e-05, -8.392333984375e-05, -4.9591064453125e-05, -0.013396263122558594, -3.814697265625e-05, 0.0, -3.3380398750305176, -0.022859811782836914, -0.000270843505859375, -3.62396240234375e-05, -0.0001888275146484375, -0.0007076263427734375, -3.254413604736328e-05, 0.0, -0.0032978057861328125, -5.53131103515625e-05, -0.0449446439743042, -7.319445285247639e-05, -3.814697265625e-06, -0.00034332275390625, -4.00543212890625e-05, 0.0, 0.0, -5.340576171875e-05, -0.0001964569091796875, -1.9073486328125e-06, -6.4849853515625e-05, -0.013217926025390625, -0.0001964569091796875, -0.0004564523696899414, -7.62939453125e-06, -8.797645568847656e-05, -0.0009289979934692383, -2.47955322265625e-05, -0.000698089599609375, -0.0001373291015625, 0.0, -5.7220458984375e-06, -0.0001475811004638672, -3.099441164522432e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Started", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -3.827750197190653, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -0.3738536834716797, -0.0001373291015625, -1.192074705613777e-07, 0.0, -0.0001798790617613122, -3.814697265625e-06, -0.0034618377685546875, -2.6702880859375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0031261444091796875, -8.20159912109375e-05, -0.0017242431640625, -5.7220458984375e-06, 0.0, -0.0023131370544433594, -1.1444091796875e-05, -8.392333984375e-05, -4.9591064453125e-05, -0.013396263122558594, -3.814697265625e-05, 0.0, -0.4370121955871582, -0.013972043991088867, -0.00023853778839111328, -0.001476287841796875, -7.05718994140625e-05, -0.000209808349609375, -5.340576171875e-05, 0.0, -0.000545501708984375, -6.103515625e-05, -3.177210569381714, -7.581710815429688e-05, -1.9073486328125e-06, -0.000244140625, -3.24249267578125e-05, 0.0, 0.0, -7.82012939453125e-05, -0.000194549560546875, -3.814697265625e-06, -7.05718994140625e-05, -0.01608562469482422, -0.0001888275146484375, -0.00044286251068115234, -7.62939453125e-06, -9.167194366455078e-05, -0.001399993896484375, -2.47955322265625e-05, -0.0007266998291015625, -0.000148773193359375, 0.0, -5.7220458984375e-06, -0.00013828277587890625, -2.896785554185044e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Spell", "Cast", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.0514409454581255, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -0.3738536834716797, -0.0001373291015625, -1.192074705613777e-07, 0.0, -0.0001798790617613122, -3.814697265625e-06, -0.0034618377685546875, -2.6702880859375e-05, -1.9073486328125e-06, -4.57763671875e-05, -0.0031261444091796875, -8.20159912109375e-05, -0.0017242431640625, -5.7220458984375e-06, 0.0, -0.0023131370544433594, -1.1444091796875e-05, -8.392333984375e-05, -4.9591064453125e-05, -0.013396263122558594, -3.814697265625e-05, 0.0, -3.0479178428649902, -0.6421873569488525, -3.9458234823541716e-05, -0.01871967315673828, -0.000988006591796875, -0.000354766845703125, -0.0004930496215820312, 0.0, -0.0002384185791015625, -0.0001010894775390625, -0.01832282543182373, -5.769727795268409e-05, -3.814697265625e-06, -0.000152587890625, -3.814697265625e-05, 0.0, 0.0, -8.96453857421875e-05, -0.00025177001953125, -3.814697265625e-06, -6.67572021484375e-05, -0.011343955993652344, -0.0002040863037109375, -0.0004583597183227539, -7.62939453125e-06, -8.797645568847656e-05, -0.0009614229202270508, -2.6702880859375e-05, -0.000698089599609375, -0.000125885009765625, 0.0, -5.7220458984375e-06, -0.0001436471939086914, -3.099441164522432e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 109, 200, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "Damaged", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.1447209031694, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .BEAST)), ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -1.6216974258422852, -0.0665578842163086, -4.7683579396107234e-07, 0.0, -0.003488962072879076, -0.00042009333265013993, -0.00418400764465332, -1.4343730211257935, -2.2768859707866795e-05, -0.0020904541015625, -0.2433462142944336, -0.0007762908935546875, -5.7220458984375e-06, 0.0, -0.7891108989715576, -0.0003800392150878906, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.0001239776611328125, -5.7220458984375e-06, 0.0, -0.03382301330566406, -1.3470649719238281e-05, -0.043670654296875, -1.9073486328125e-06, -3.814697265625e-06, -0.05825519561767578, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -0.0021015405654907227, -0.00017595291137695312, -5.7220458984375e-06, -0.0001220703125, -0.13490676879882812, -0.000396728515625, -0.0003268718719482422, -3.814697265625e-06, -0.0007364749908447266, -0.004688382148742676, -7.62939453125e-06, -0.0009325743885710835, -1.52587890625e-05, 0.0, -3.814697265625e-06, -0.00020205974578857422, -3.600119816837832e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 97, 180, "1", "<EOS>", "3", "<EOS>", "Minion", "Placed", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.449216666827397, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole2": "MinionPlaced", "_type": "Template10", "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(MinionHasgain()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -1.6216974258422852, -0.0665578842163086, -4.7683579396107234e-07, 0.0, -0.003488962072879076, -0.00042009333265013993, -0.00418400764465332, -0.2945634126663208, -4.613396231434308e-05, -0.001018524169921875, -0.07520771026611328, -0.0001468658447265625, -0.01107331644743681, -0.04564499482512474, -2.4144978523254395, -0.0002087310131173581, -0.0002155303955078125, -0.000392913818359375, -0.000164031982421875, -3.814697265625e-06, 0.0, -0.0034170150756835938, -8.225440979003906e-05, -4.38690185546875e-05, -0.0001049041748046875, -0.02542591094970703, -0.00104522705078125, -0.00019669532775878906, -9.655952453613281e-06, -0.0004621744155883789, -0.0009539127349853516, -9.5367431640625e-06, -0.0005267856176942587, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -0.0003025531768798828, -3.814697265625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 97, 180, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 282, 68, 260, "Minion", "Has", "gain", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -4.5742341476957336, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole2": "MinionSummoned", "_type": "Template10", "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"hole0": "MinionHasgain", "_type": "Template77"}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(Damaged(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -2.3199853897094727, -0.014738082885742188, -1.1920838005607948e-07, -2.3841855067985307e-07, -0.00018226153042633086, -1.811981201171875e-05, -2.3203582763671875, -0.0002204160555265844, -0.021593570709228516, -1.8954275219584815e-05, 0.0, -0.16041946411132812, -0.00179290771484375, -0.10555987060070038, -0.00041258332203142345, -0.02417021431028843, -0.00029158592224121094, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 96, 176, "1", "<EOS>", "3", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "score": -4.971820321556095, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole5": "TargetSelector", "hole2": "Damaged", "_type": "Template1", "hole4": [{"hole0": "Frozen", "_type": "Template77"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.BEAST)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -1.6216974258422852, -0.0665578842163086, -4.7683579396107234e-07, 0.0, -0.003488962072879076, -0.00042009333265013993, -0.00418400764465332, -0.2945634126663208, -4.613396231434308e-05, -0.001018524169921875, -2.629824638366699, -0.002193450927734375, -7.62939453125e-06, -1.9073486328125e-06, -0.25746846199035645, -0.00022780895233154297, -4.38690185546875e-05, -1.1444091796875e-05, -2.47955322265625e-05, -0.0004367828369140625, -7.62939453125e-06, 0.0, -0.0647878646850586, -1.1444091796875e-05, -0.032962799072265625, 0.0, -3.814697265625e-06, -0.058951377868652344, -7.2479248046875e-05, -1.9073486328125e-06, 0.0, -0.002216935157775879, -0.00020074844360351562, -3.814697265625e-06, -0.0001220703125, -0.14704418182373047, -0.0004024505615234375, -0.0003421306610107422, -3.814697265625e-06, -0.0007536411285400391, -0.004221081733703613, -7.62939453125e-06, -0.0009210110874846578, -1.52587890625e-05, 0.0, -3.814697265625e-06, -0.00020968914031982422, -3.588198887882754e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 97, 180, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 59, 248, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -5.197579208107982, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole2": "MinionSummoned", "_type": "Template10", "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template66", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "hole3": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Summon(\n            ManaWyrm()), PlayerSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -2.3199853897094727, -0.014738082885742188, -1.1920838005607948e-07, -2.3841855067985307e-07, -0.00018226153042633086, -1.811981201171875e-05, -0.11269962787628174, -0.005450725555419922, -4.4465065002441406e-05, -1.9416133165359497, -4.160317621426657e-05, -3.814697265625e-06, -0.000194549560546875, -0.000682830810546875, -0.16785390675067902, -0.37497419118881226, -0.00013422698248177767, -0.2741086483001709, -4.780292510986328e-05, -1.311301275563892e-06], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 96, 176, "1", "<EOS>", "3", "<EOS>", "Spell", "Cast", "<EOS>", "Summon", "<EOS>", 282, 68, 260, "Mana", "Wyrm", "<EOS>", "Player", "Selector", "<EOS>"], "score": -5.214833260474705, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "hole5": "PlayerSelector", "hole2": "SpellCast", "_type": "Template1", "hole4": [{"hole0": "ManaWyrm", "_type": "Template77"}], "hole3": "Summon"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(Damaged(), MinionHasMana())])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.6331539882230572e-05, -5.7220440794480965e-06, -2.789483914966695e-05, -7.62939453125e-06, 0.0, 0.0, -4.0531158447265625e-06, -3.814697265625e-06, -4.5299530029296875e-06, -1.71661376953125e-05, -0.0004634857177734375, -0.000102996826171875, -3.0278701160568744e-05, -0.00032949421438388526, -1.263618378288811e-05, -5.7220458984375e-06, -0.0007134675979614258, 0.0, -0.0002613067626953125, -1.71661376953125e-05, -1.6216974258422852, -2.941765785217285, -0.0014113960787653923, -5.960462772236497e-07, -0.011166800744831562, -1.4781926438445225e-05, -0.23829138278961182, -8.249127131421119e-05, -4.00543212890625e-05, -0.21766948699951172, -0.0007600784301757812, -0.1599981188774109, -0.1972038596868515, -0.48242315649986267, -0.0816906988620758], "choice_history": [80, 159, 295, 88, 138, "Mana", "Wyrm", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 97, 179, "1", "<EOS>", "3", "<EOS>", "Damaged", "<EOS>", 282, 68, 260, "Minion", "Has", "Mana", "<EOS>"], "score": -5.956274141778351, "model_output": {"_type": "Module", "body": [{"name": "ManaWyrm", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template15", "hole2": "MAGE"}, {"hole1": 3, "hole0": 1, "_type": "Template10", "hole4": [{"hole0": "MinionHasMana", "_type": "Template77"}], "hole2": "Damaged"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -22.073257446289062], "choice_history": [80, 159, 294], "score": -22.073261260986328, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}
{"beams": [{"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.0078277587890625, -0.0001239776611328125, -9.679794311523438e-05, 0.0, -3.612010914366692e-05, 0.0, -0.0019283294677734375, 0.0, -0.00017547607421875, -5.340576171875e-05, -7.62939453125e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.0166865456576204, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class <UNK>Warden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -5.959359645843506, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.0078277587890625, -0.0001239776611328125, -9.679794311523438e-05, 0.0, -3.612010914366692e-05, 0.0, -0.0019283294677734375, 0.0, -0.00017547607421875, -5.340576171875e-05, -7.62939453125e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "<UNK>", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.973461025367186, "model_output": {"_type": "Module", "body": [{"name": "<UNK>Warden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, effects=[Effect(MinionDied(), ActionTag(Draw(),\n            PlayerSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -5.004359245300293, -1.2902026176452637, -0.001314396969974041, -1.1920928244535389e-07, -1.764294211170636e-05, -3.814697265625e-06, -0.21467232704162598, -0.07019996643066406, -0.00014125356392469257, -0.26504454016685486, -0.0002696514129638672, -0.01322195678949356, -0.001309514045715332, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 96, 173, "1", "<EOS>", "7", "<EOS>", "Minion", "Died", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>"], "score": -6.867194096672357, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "hole5": "PlayerSelector", "hole2": "MinionDied", "_type": "Template1", "hole3": "Draw"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -6.449827194213867, -4.00543212890625e-05, -1.1920922133867862e-06, -9.179114385915454e-06, -2.8967857360839844e-05, -3.814697265625e-06, -0.00024247169494628906, 0.0, -5.14984130859375e-05, 0.0, -0.0006276369094848633, -1.9073486328125e-06, -0.0006885528564453125, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.46683597564697266, -4.0531158447265625e-06, -0.05154991149902344, -2.288818359375e-05, -4.541873204289004e-05, 0.0, -2.3722519472357817e-05, 0.0, -0.0022498369216918945, 0.0, -0.000118255615234375, -3.814697265625e-06, -3.814697265625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.975545035955491, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}, "hole3": "minion_type"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, effects=[Effect(DidDamage(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -5.004359245300293, -0.6626520156860352, -5.96046302234754e-05, -3.576278118089249e-07, -1.3113015484123025e-05, -2.3841855067985307e-07, -0.9511513710021973, -0.013615066185593605, -1.1920928244535389e-07, -0.16825446486473083, -1.633167266845703e-05, -7.62939453125e-06, -0.05602073669433594, -0.0005321502685546875, -0.10939797013998032, -6.902212771819904e-05, -0.022704940289258957, -0.0001233816146850586, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 96, 176, "1", "<EOS>", "7", "<EOS>", "Did", "Damage", "<EOS>", "Give", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "score": -6.995414808598859, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "hole5": "TargetSelector", "hole2": "DidDamage", "_type": "Template1", "hole4": [{"hole0": "Frozen", "_type": "Template77"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, windfury=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.0078277587890625, -0.0001239776611328125, -9.679794311523438e-05, 0.0, -3.612010914366692e-05, 0.0, -7.022080898284912, -2.3841855067985307e-07, -0.0005702972412109375, -2.47955322265625e-05, -7.62939453125e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.03720556383081, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, charge=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -0.0078277587890625, -0.0001239776611328125, -9.679794311523438e-05, 0.0, -3.612010914366692e-05, 0.0, -7.580613613128662, 0.0, -0.00030517578125, -6.29425048828125e-05, -5.7220458984375e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.595509158420072, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -7.366019248962402, -6.67572021484375e-05, -2.6702880859375e-05, -4.5299530029296875e-06, -7.62939453125e-06, -0.0003147125244140625, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.9591064453125e-05, -0.3585472106933594, -1.9073486328125e-06, -4.00543212890625e-05, -0.013045310974121094, -0.004727363586425781, -0.0015026327455416322, -2.2649765014648438e-06, -5.8412162616150454e-05, -1.1920928244535389e-07, -0.00545763922855258, -1.9073486328125e-06, -0.0021772384643554688, -4.1961669921875e-05, -4.76837158203125e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.758589372975585, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 7, "hole0": 1, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -7.492946624755859, -3.814697265625e-06, -8.33272933959961e-05, 0.0, -7.62939453125e-06, -8.392333984375e-05, -4.1961669921875e-05, -1.71661376953125e-05, 0.0, -2.288818359375e-05, -0.012309074401855469, -0.0001354217529296875, -2.6702880859375e-05, -0.14195632934570312, -0.000125885009765625, 0.0, -1.71661376953125e-05, 0.0, -2.098061486321967e-05, 0.0, -3.814697265625e-05, 0.0, -0.1448535919189453, -4.00543212890625e-05, -6.29425048828125e-05, -3.886147169396281e-05, -0.00018548961088526994, -9.298310033045709e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0006795811932533979, -1.9073486328125e-06, -0.00011444091796875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.000232696533203125, 0.0, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -0.0002765655517578125, -1.9073486328125e-06, -9.34600830078125e-05, -9.5367431640625e-06, -0.00010883808135986328, 0.0, -0.017856597900390625, -0.0007190704345703125, -1.52587890625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.020745277404785156, -1.9073486328125e-06, -9.1552734375e-05, -0.008192062377929688, -0.005248069763183594, -0.0010125635890290141, -2.3841855067985307e-07, -5.3763025789521635e-05, -1.1920928244535389e-07, -0.00352740241214633, -1.9073486328125e-06, -0.0012760162353515625, -4.76837158203125e-05, -3.826618194580078e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Mogu'shan", " ", "Warden", "<EOS>", 47, 165, "4", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 120, 247, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.856805994242606, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Mogu'shan Warden"}, {"_type": "Num", "n": 4}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 7, "hole0": 1, "_type": "Template65", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -6.449827194213867, -4.00543212890625e-05, -1.1920922133867862e-06, -9.179114385915454e-06, -2.8967857360839844e-05, -3.814697265625e-06, -0.00024247169494628906, 0.0, -5.14984130859375e-05, 0.0, -0.0006276369094848633, -1.9073486328125e-06, -0.0006885528564453125, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.4207992553710938, 0.0, -0.0056247711181640625, -1.71661376953125e-05, -2.4199413019232452e-05, 0.0, -5.185537156648934e-05, 0.0, -0.0027800798416137695, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.814697265625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.884099112498205, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}, "hole3": "minion_type"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, effects=[Effect(UsedPower(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -5.004359245300293, -0.6626520156860352, -5.96046302234754e-05, -3.576278118089249e-07, -1.3113015484123025e-05, -2.3841855067985307e-07, -1.596585750579834, -0.13096532225608826, 0.0, -0.2212216854095459, -0.00014817711780779064, -7.62939453125e-06, -0.22725391387939453, -0.0012340545654296875, -0.096999391913414, -4.768368671648204e-05, -0.020381445065140724, -0.0001100301742553711, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 96, 176, "1", "<EOS>", "7", "<EOS>", "Used", "Power", "<EOS>", "Give", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "score": -7.96847670917748, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "hole5": "TargetSelector", "hole2": "UsedPower", "_type": "Template1", "hole4": [{"hole0": "Frozen", "_type": "Template77"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, effects=[Effect(Attack(), ActionTag(Give(Frozen\n            ()), TargetSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -5.004359245300293, -0.6626520156860352, -5.96046302234754e-05, -3.576278118089249e-07, -1.3113015484123025e-05, -2.3841855067985307e-07, -1.5503506660461426, -5.161762237548828e-05, -0.5590403079986572, -7.951257430249825e-05, -7.62939453125e-06, -0.1368875503540039, -0.00144195556640625, -0.137490913271904, -5.8412537327967584e-05, -0.021369569003582, -0.00010025501251220703, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 96, 176, "1", "<EOS>", "7", "<EOS>", "Attack", "<EOS>", "Give", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "score": -8.080400014517068, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "hole5": "TargetSelector", "hole2": "Attack", "_type": "Template1", "hole4": [{"hole0": "Frozen", "_type": "Template77"}], "hole3": "Give"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -8.277328491210938, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0026874542236328125, -7.05718994140625e-05, -0.0001291036605834961, 0.0, -4.064999666297808e-05, 0.0, -0.0016269683837890625, 0.0, -0.000194549560546875, -5.91278076171875e-05, -7.62939453125e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 109, 200, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -8.288282381277867, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 7, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template23", "hole2": "taunt", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.00258516613394022, -0.00010048857075162232, -5.3642939747078344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -2.3841855067985307e-07, -0.000324249267578125, -0.0028209686279296875, -6.29425048828125e-05, -1.6569954823353328e-05, -2.9683109460165724e-05, -1.2278556823730469e-05, -5.7220458984375e-06, -0.00025916099548339844, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -9.150264739990234, -3.814697265625e-06, -0.0007390975370071828, 0.0, -3.719329833984375e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Mogu'shan", "Warden", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 110, 202, "1", "<EOS>", "7", "<EOS>"], "score": -9.157481895979771, "model_output": {"_type": "Module", "body": [{"name": "Mogu'shanWarden", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template15", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -5.7220458984375e-06, -23.098949432373047], "choice_history": [80, 159, 294], "score": -23.098955154418945, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}
{"beams": [{"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -1.0511608123779297, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.028177261352539062, -1.71661376953125e-05, -3.6835659557254985e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -3.635883331298828e-05, -5.960462203802308e-06, -0.016196250915527344, -0.00064849853515625, -3.4332275390625e-05, 0.0, -0.011031150817871094, -9.34600830078125e-05, -3.62396240234375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002011895179748535, -5.53131103515625e-05, -0.000232696533203125, -1.52587890625e-05, -1.9073486328125e-06, -0.11726921796798706, -1.9073486328125e-06, -0.002330780029296875, -1.9073486328125e-06, -0.641735851764679, -6.330013275146484e-05, -0.04204082489013672, -0.000354766845703125, -1.71661376953125e-05, -2.86102294921875e-05, -0.0001678466796875, -1.9073486328125e-06, -0.00033354631159454584, -7.534011092502624e-05, -0.2826070785522461, -0.0024929046630859375, -0.5263131856918335, -0.06329233944416046, -0.002162933349609375, -1.1444091796875e-05, -2.288818359375e-05, -0.04170417785644531, -2.86102294921875e-05, 0.0, -0.00386810302734375, 0.0, -0.005443213507533073, -1.5616398741258308e-05, -0.0012733936309814453, 0.0, -0.0006313323974609375, -3.814697265625e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.005344390869140625, -0.0001010894775390625, -8.96453857421875e-05, -2.0265579223632812e-06, -0.004456520080566406, -8.0108642578125e-05, -9.5367431640625e-06, 0.0, -9.357929229736328e-05, -2.384185791015625e-06, -5.7220458984375e-06, -0.0001773834228515625, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.003070706268772483, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "5", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -3.4987859397008947, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -1.0511608123779297, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.028177261352539062, -1.71661376953125e-05, -3.6835659557254985e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -3.635883331298828e-05, -5.960462203802308e-06, -0.016196250915527344, -0.00064849853515625, -3.4332275390625e-05, 0.0, -0.011031150817871094, -9.34600830078125e-05, -3.62396240234375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002011895179748535, -5.53131103515625e-05, -0.000232696533203125, -1.52587890625e-05, -1.9073486328125e-06, -0.11726921796798706, -1.9073486328125e-06, -0.002330780029296875, -1.9073486328125e-06, -0.9720339179039001, -6.73532485961914e-05, -0.10877418518066406, -0.0007352828979492188, -1.52587890625e-05, -3.24249267578125e-05, -0.00034332275390625, -1.9073486328125e-06, -0.00022673264902550727, -8.463849371764809e-05, -0.2433338165283203, -0.0017795562744140625, -0.6482316851615906, -0.06787719577550888, -0.002506256103515625, -9.5367431640625e-06, -2.47955322265625e-05, -0.0434722900390625, -3.24249267578125e-05, 0.0, -0.003826141357421875, 0.0, -0.005727766081690788, -1.5497189451707527e-05, -0.001231551170349121, 0.0, -0.0006160736083984375, -3.814697265625e-06, -2.288818359375e-05, -1.52587890625e-05, 0.0, -0.0055103302001953125, -0.000102996826171875, -9.34600830078125e-05, -2.0265579223632812e-06, -0.004370689392089844, -8.0108642578125e-05, -9.5367431640625e-06, 0.0, -9.357929229736328e-05, -2.503394853192731e-06, -5.7220458984375e-06, -0.00017547607421875, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.003076189896091819, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "3", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -3.9851906024342156, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = hearthbreaker.cards.minions.<UNK>.Nourish()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -1.0511608123779297, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.028177261352539062, -1.71661376953125e-05, -3.6835659557254985e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -3.635883331298828e-05, -5.960462203802308e-06, -0.016196250915527344, -0.00064849853515625, -3.4332275390625e-05, 0.0, -0.011031150817871094, -9.34600830078125e-05, -3.62396240234375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002011895179748535, -5.53131103515625e-05, -0.000232696533203125, -1.52587890625e-05, -1.9073486328125e-06, -0.11726921796798706, -1.9073486328125e-06, -0.002330780029296875, -1.9073486328125e-06, -0.641735851764679, -6.330013275146484e-05, -0.04204082489013672, -0.000354766845703125, -1.71661376953125e-05, -2.86102294921875e-05, -0.0001678466796875, -1.9073486328125e-06, -0.00033354631159454584, -7.534011092502624e-05, -1.4355249404907227, -0.0055027008056640625, -0.0001125335693359375, 0.0, -4.76837158203125e-05, 0.0, -0.0002231597900390625, -1.9073486328125e-06, -0.0203857421875, 0.0, -0.0075054168701171875, -1.9073486328125e-06, -0.013262271881103516, -9.775161743164062e-06, -0.010723352432250977, -6.5565000113565475e-06, -0.027588816359639168, -0.00013768672943115234, -0.017896654084324837, -0.0007310830987989902, -0.04438600689172745, -0.0001782046165317297, -0.04131603240966797, -3.814697265625e-06, -3.4332275390625e-05, -0.00366973876953125, -0.0022945404052734375, -1.9073486328125e-06, -0.0064601898193359375, 0.0, -0.0013909339904785156, -4.5299530029296875e-06, -0.023286104202270508, 0.0, -0.0003376007080078125, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.0019378662109375, -0.0001373291015625, -0.0001430511474609375, -1.1920928244535389e-07, -0.0035381317138671875, -0.000118255615234375, -1.33514404296875e-05, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -7.62939453125e-06, -9.918212890625e-05, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -0.002735132584348321, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "5", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 14, 134, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Nourish", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -4.227364107442803, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"_type": "Call", "func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "Nourish"}}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = 2()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -1.0511608123779297, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.028177261352539062, -1.71661376953125e-05, -3.6835659557254985e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -3.635883331298828e-05, -5.960462203802308e-06, -0.016196250915527344, -0.00064849853515625, -3.4332275390625e-05, 0.0, -0.011031150817871094, -9.34600830078125e-05, -3.62396240234375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002011895179748535, -5.53131103515625e-05, -0.000232696533203125, -1.52587890625e-05, -1.9073486328125e-06, -0.11726921796798706, -1.9073486328125e-06, -0.002330780029296875, -1.9073486328125e-06, -0.641735851764679, -6.330013275146484e-05, -0.04204082489013672, -0.000354766845703125, -1.71661376953125e-05, -2.86102294921875e-05, -0.0001678466796875, -1.9073486328125e-06, -0.00033354631159454584, -7.534011092502624e-05, -0.2826070785522461, -0.0024929046630859375, -1.4334580898284912, -0.13863325119018555, -0.0009555816650390625, -1.33514404296875e-05, -9.5367431640625e-06, -0.1377410888671875, -1.9073486328125e-05, 0.0, -0.00255584716796875, 0.0, -0.002963780891150236, -3.0159908419591375e-05, -0.0023615360260009766, 0.0, -0.000766754150390625, -3.814697265625e-06, -4.00543212890625e-05, -1.1444091796875e-05, 0.0, -0.004138946533203125, -0.0001201629638671875, -0.0001010894775390625, -2.1457672119140625e-06, -0.004222869873046875, -6.866455078125e-05, -9.5367431640625e-06, 0.0, -9.548664093017578e-05, -2.503394853192731e-06, -3.814697265625e-06, -0.0002498626708984375, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.002993101254105568, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "5", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -4.572117103640323, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "2", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK> = hearthbreaker.cards.minions.<UNK>.Nourish()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -1.0511608123779297, -8.96453857421875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.028177261352539062, -1.71661376953125e-05, -3.6835659557254985e-05, -3.814697265625e-06, -4.38690185546875e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, -3.635883331298828e-05, -5.960462203802308e-06, -0.016196250915527344, -0.00064849853515625, -3.4332275390625e-05, 0.0, -0.011031150817871094, -9.34600830078125e-05, -3.62396240234375e-05, -5.14984130859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002011895179748535, -5.53131103515625e-05, -0.000232696533203125, -1.52587890625e-05, -1.9073486328125e-06, -0.11726921796798706, -1.9073486328125e-06, -0.002330780029296875, -1.9073486328125e-06, -0.9720339179039001, -6.73532485961914e-05, -0.10877418518066406, -0.0007352828979492188, -1.52587890625e-05, -3.24249267578125e-05, -0.00034332275390625, -1.9073486328125e-06, -0.00022673264902550727, -8.463849371764809e-05, -1.5633125305175781, -0.008380889892578125, -0.0001087188720703125, 0.0, -4.9591064453125e-05, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.019197463989257812, 0.0, -0.0073795318603515625, -1.9073486328125e-06, -0.00815284252166748, -5.9604644775390625e-06, -0.010979890823364258, -6.198873961693607e-06, -0.028847195208072662, -0.00013196468353271484, -0.017685657367110252, -0.0007161926478147507, -0.044420789927244186, -0.0001898851478472352, -0.06131744384765625, -3.814697265625e-06, -3.4332275390625e-05, -0.00372314453125, -0.0026721954345703125, -1.9073486328125e-06, -0.00557708740234375, 0.0, -0.0013393163681030273, -4.5299530029296875e-06, -0.022136807441711426, 0.0, -0.0003719329833984375, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.00193023681640625, -0.000133514404296875, -0.000141143798828125, -1.1920928244535389e-07, -0.0033626556396484375, -0.0001163482666015625, -1.33514404296875e-05, 0.0, -0.0001125335693359375, -2.3841855067985307e-07, -9.5367431640625e-06, -9.72747802734375e-05, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0028021279722452164, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "3", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 14, 134, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Nourish", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -4.768682990530827, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"_type": "Call", "func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "Nourish"}}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -3.2449092864990234, -8.7738037109375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -4.768370445162873e-07, 0.0, -8.392333984375e-05, 0.0, -0.0001049041748046875, 0.0, -0.0032672882080078125, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -1.9073486328125e-05, -5.936622619628906e-05, -4.529942543740617e-06, -0.25818920135498047, -0.029064178466796875, -1.9073486328125e-06, -1.9073486328125e-06, -3.24249267578125e-05, -2.288818359375e-05, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -1.4781946447328664e-05, -3.814697265625e-06, -4.38690185546875e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.288818359375e-05, -7.62939453125e-06, -2.110004425048828e-05, -5.960462203802308e-06, -0.0043354034423828125, -0.000637054443359375, -4.76837158203125e-05, 0.0, -0.009939193725585938, -0.0001087188720703125, -3.814697265625e-05, -4.76837158203125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0019663572311401367, -5.7220458984375e-05, -0.0002269744873046875, -1.52587890625e-05, -1.9073486328125e-06, -0.11417824774980545, -1.9073486328125e-06, -0.0024547576904296875, -1.9073486328125e-06, -0.6369044184684753, -7.092952728271484e-05, -0.0433807373046875, -0.0003376007080078125, -1.71661376953125e-05, -2.86102294921875e-05, -0.00016021728515625, -1.9073486328125e-06, -0.0003441559965722263, -7.557852222817019e-05, -0.2835350036621094, -0.00247955322265625, -0.5240898132324219, -0.0638299435377121, -0.0021381378173828125, -1.1444091796875e-05, -2.288818359375e-05, -0.04101371765136719, -2.86102294921875e-05, 0.0, -0.003879547119140625, 0.0, -0.005361555144190788, -1.5616398741258308e-05, -0.001272439956665039, 0.0, -0.0006313323974609375, -3.814697265625e-06, -2.288818359375e-05, -1.33514404296875e-05, 0.0, -0.005352020263671875, -0.000102996826171875, -8.96453857421875e-05, -2.0265579223632812e-06, -0.004459381103515625, -8.0108642578125e-05, -9.5367431640625e-06, 0.0, -9.357929229736328e-05, -2.384185791015625e-06, -5.7220458984375e-06, -0.00017547607421875, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0030735672917217016, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 102, 185, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "5", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -5.295863669802081, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template16", "hole2": "DRUID"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 5}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(5, self)\n        player.<UNK> = 0\n        player.draw += player.<UNK>\n        player.<UNK> = True\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -0.40584516525268555, -0.000164031982421875, -0.0001983642578125, -0.003276824951171875, -5.7220458984375e-05, -0.7849708199501038, -3.814697265625e-06, -5.14984130859375e-05, -8.58306884765625e-05, -0.0052301883697509766, -2.0265579223632812e-06, -0.18466854095458984, -7.62939453125e-06, -3.814697265625e-06, -0.0003833770751953125, -2.288818359375e-05, -0.0032663345336914062, -4.9591064453125e-05, -0.3795473575592041, 0.0, -0.040430426597595215, -7.748603820800781e-06, -0.8351421356201172, -3.814697265625e-06, -0.0021768726874142885, 0.0, -0.38495731353759766, -0.0002593994140625, -0.0006885528564453125, 0.0, -0.000148773193359375, 0.0, -0.0004749298095703125, 0.0, -0.26794230937957764, 0.0, -0.25894927978515625, -0.02217864990234375, -7.62939453125e-06, -0.0015316009521484375, 0.0, -9.5367431640625e-06, 0.0, -0.19219839572906494, -1.9073486328125e-06, -0.004712104797363281, -7.62939453125e-06, -5.7220458984375e-06, -0.0004825592041015625, -8.0108642578125e-05, -0.0024957656860351562, -6.866455078125e-05, -0.10400962829589844, 0.0, -0.05592083930969238, -5.841255187988281e-06, -0.6658935546875, -1.71661376953125e-05, -1.4662741705251392e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.119781089715445, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(5, self)\n        player.<UNK> = 0\n        player.draw += player.<UNK>\n        player.<UNK> = 0\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -0.40584516525268555, -0.000164031982421875, -0.0001983642578125, -0.003276824951171875, -5.7220458984375e-05, -0.7849708199501038, -3.814697265625e-06, -5.14984130859375e-05, -8.58306884765625e-05, -0.0052301883697509766, -2.0265579223632812e-06, -0.18466854095458984, -7.62939453125e-06, -3.814697265625e-06, -0.0003833770751953125, -2.288818359375e-05, -0.0032663345336914062, -4.9591064453125e-05, -0.3795473575592041, 0.0, -0.040430426597595215, -7.748603820800781e-06, -0.8351421356201172, -3.814697265625e-06, -0.0021768726874142885, 0.0, -0.38495731353759766, -0.0002593994140625, -0.0006885528564453125, 0.0, -0.000148773193359375, 0.0, -0.0004749298095703125, 0.0, -0.26794230937957764, 0.0, -0.25894927978515625, -0.02217864990234375, -7.62939453125e-06, -0.0015316009521484375, 0.0, -9.5367431640625e-06, 0.0, -0.19219839572906494, -1.9073486328125e-06, -0.004712104797363281, -7.62939453125e-06, -5.7220458984375e-06, -0.0004825592041015625, -8.0108642578125e-05, -0.0024957656860351562, -6.866455078125e-05, -0.10400962829589844, 0.0, -0.05592083930969238, -5.841255187988281e-06, -0.783848762512207, -1.9073486328125e-06, -0.00515340268611908, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>"], "score": -6.242859778695504, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        player.<UNK> = 0\n        player.draw += player.<UNK>\n        player.<UNK> = True\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -0.40584516525268555, -0.000164031982421875, -0.0001983642578125, -0.003276824951171875, -5.7220458984375e-05, -0.8294064402580261, -1.728534698486328e-05, -0.0001811981201171875, -0.000133514404296875, -0.012501001358032227, -2.0265579223632812e-06, -0.5034084320068359, -9.5367431640625e-06, -3.814697265625e-06, -0.000640869140625, -3.4332275390625e-05, -0.0028896331787109375, -5.14984130859375e-05, -0.3554471731185913, 0.0, -0.032543063163757324, -5.841255187988281e-06, -0.8716459274291992, -3.814697265625e-06, -0.0023993172217160463, 0.0, -0.38086509704589844, -0.0002593994140625, -0.00069427490234375, 0.0, -0.0001468658447265625, 0.0, -0.000469207763671875, 0.0, -0.27299654483795166, 0.0, -0.2608366012573242, -0.02104663848876953, -7.62939453125e-06, -0.0015583038330078125, 0.0, -9.5367431640625e-06, 0.0, -0.19485247135162354, -1.9073486328125e-06, -0.004696846008300781, -7.62939453125e-06, -5.7220458984375e-06, -0.0004825592041015625, -8.0108642578125e-05, -0.0024890899658203125, -6.67572021484375e-05, -0.10437917709350586, 0.0, -0.05615639686584473, -5.841255187988281e-06, -0.6651172637939453, -1.71661376953125e-05, -1.4662741705251392e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "3", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.499252272538627, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 3}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n        player.<UNK> = 0\n        player.draw += player.<UNK>\n        player.<UNK> = True\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -1.5444331169128418, 0.0, -0.000164031982421875, -0.0079193115234375, -0.0004978179931640625, -0.0031185150146484375, -7.62939453125e-06, -0.0025043487548828125, 0.0, -0.0001977682113647461, 0.0, -0.11031591147184372, -2.622604142743512e-06, -0.0002269744873046875, -1.9073486328125e-05, -1.1444091796875e-05, -0.5102788805961609, -1.9073486328125e-06, -0.001819610595703125, -3.814697265625e-05, -0.005320549011230469, -1.9073486328125e-06, -0.07569026947021484, -1.9073486328125e-06, -3.814697265625e-06, -0.016431808471679688, -2.09808349609375e-05, -0.02296733856201172, -9.5367431640625e-06, -0.3968498706817627, 0.0, -0.08053421974182129, -4.0531158447265625e-06, -0.36566638946533203, -5.7220458984375e-06, -0.00139557383954525, 0.0, -0.3351907730102539, -0.000244140625, -0.0006084442138671875, 0.0, -0.0001544952392578125, 0.0, -0.0004949569702148438, 0.0, -0.2590203285217285, 0.0, -0.2682991027832031, -0.025300025939941406, -7.62939453125e-06, -0.0017299652099609375, 0.0, -9.5367431640625e-06, 0.0, -0.18720018863677979, -1.9073486328125e-06, -0.004730224609375, -7.62939453125e-06, -5.7220458984375e-06, -0.0004863739013671875, -7.82012939453125e-05, -0.002597808837890625, -6.67572021484375e-05, -0.1083909273147583, 0.0, -0.055426836013793945, -5.841255187988281e-06, -0.6575698852539062, -1.52587890625e-05, -1.668929871811997e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "2", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.565242950339382, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 0, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -6.084620952606201, -0.013167381286621094, -0.05714893341064453, -0.22782957553863525, -0.08007176220417023, -4.0531158447265625e-06, -0.000408172607421875, -4.9591064453125e-05, -0.04146003723144531, -0.030302047729492188, -0.02657604217529297, 0.0, -0.00038433074951171875, 0.0, -0.009532928466796875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 100, 183, "Nourish", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 116, 224, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -6.5740569366607815, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "Nourish", "_type": "Template13", "hole2": "COMMON"}, {"hole1": "draw", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template5"}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n        player.<UNK> = 0\n        player.draw += player.<UNK>\n        player.<UNK> = 0\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -1.5444331169128418, 0.0, -0.000164031982421875, -0.0079193115234375, -0.0004978179931640625, -0.0031185150146484375, -7.62939453125e-06, -0.0025043487548828125, 0.0, -0.0001977682113647461, 0.0, -0.11031591147184372, -2.622604142743512e-06, -0.0002269744873046875, -1.9073486328125e-05, -1.1444091796875e-05, -0.5102788805961609, -1.9073486328125e-06, -0.001819610595703125, -3.814697265625e-05, -0.005320549011230469, -1.9073486328125e-06, -0.07569026947021484, -1.9073486328125e-06, -3.814697265625e-06, -0.016431808471679688, -2.09808349609375e-05, -0.02296733856201172, -9.5367431640625e-06, -0.3968498706817627, 0.0, -0.08053421974182129, -4.0531158447265625e-06, -0.36566638946533203, -5.7220458984375e-06, -0.00139557383954525, 0.0, -0.3351907730102539, -0.000244140625, -0.0006084442138671875, 0.0, -0.0001544952392578125, 0.0, -0.0004949569702148438, 0.0, -0.2590203285217285, 0.0, -0.2682991027832031, -0.025300025939941406, -7.62939453125e-06, -0.0017299652099609375, 0.0, -9.5367431640625e-06, 0.0, -0.18720018863677979, -1.9073486328125e-06, -0.004730224609375, -7.62939453125e-06, -5.7220458984375e-06, -0.0004863739013671875, -7.82012939453125e-05, -0.002597808837890625, -6.67572021484375e-05, -0.1083909273147583, 0.0, -0.055426836013793945, -5.841255187988281e-06, -0.7929668426513672, -1.9073486328125e-06, -0.005133971571922302, 0.0], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 283, 40, 136, 11, 129, 19, 160, "player", "<EOS>", "effective_heal_power", "<EOS>", 282, 47, 165, "2", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>"], "score": -6.705743838569617, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "effective_heal_power"}}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(5, self)\n        player.<UNK> = True\n\n\n        class Wisps5(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID,\n                    CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n                    find_spell_target)\n\n            def use(self, player, game):\n                super().use(player, game)\n                self.target.damage(5, self)\n                player.<UNK> = 0\n                player.draw += player.<UNK>\n                player.<UNK> = 0\n        player.draw += player.<UNK>\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -0.40584516525268555, -0.000164031982421875, -0.0001983642578125, -0.003276824951171875, -5.7220458984375e-05, -0.7849708199501038, -3.814697265625e-06, -5.14984130859375e-05, -8.58306884765625e-05, -0.0052301883697509766, -2.0265579223632812e-06, -0.18466854095458984, -7.62939453125e-06, -3.814697265625e-06, -0.0003833770751953125, -2.288818359375e-05, -0.0032663345336914062, -4.9591064453125e-05, -0.3795473575592041, 0.0, -0.040430426597595215, -7.748603820800781e-06, -0.6166601181030273, -2.47955322265625e-05, -1.3232229321147315e-05, 0.0, -0.1543111801147461, -9.918212890625e-05, -0.18031394481658936, -0.00021791350445710123, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.06456470489501953, -2.86102294921875e-05, -3.075599670410156e-05, -0.8510169982910156, -0.0036287307739257812, -1.9073486328125e-06, -0.0014450550079345703, 0.0, 0.0, -0.001312255859375, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0002803802490234375, -1.71661376953125e-05, 0.0, -0.0003490447998046875, -7.62939453125e-06, -1.382827485940652e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -4.768370445162873e-07, -0.0007386207580566406, -9.5367431640625e-06, -5.7220458984375e-06, -7.152531907195225e-06, -3.540514808264561e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -7.712841033935547e-05, -8.344646857949556e-07, -0.0008640289306640625, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, -6.079673767089844e-06, -3.8742407923564315e-05, -0.0046939849853515625, -3.457069396972656e-05, -2.6702880859375e-05, -0.0015649795532226562, -6.29425048828125e-05, -0.5180938243865967, -1.9073486328125e-06, -4.38690185546875e-05, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001881122589111328, -1.33514404296875e-05, -0.0001316070556640625, -4.768370445162873e-07, -0.006447671912610531, -0.00016033649444580078, -0.00049591064453125, -1.9073486328125e-06, -0.0024224519729614258, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0004405975341796875, -1.9073486328125e-06, 0.0, -7.867813110351562e-06, 0.0, -2.288818359375e-05, -4.529952275333926e-05, -1.0013530300057027e-05, -0.5372190475463867, -0.001537322998046875, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -7.82012939453125e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5272369384765625e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.52587890625e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.28290843963623047, -3.814697265625e-06, -0.000446319580078125, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.0043773651123046875, 0.0, -0.0001010894775390625, 0.0, -0.12852299213409424, -5.7220458984375e-06, -0.00077056884765625, 0.0, -0.40418577194213867, -0.0001659393310546875, -0.0001983642578125, -0.0032901763916015625, -5.7220458984375e-05, -0.7849872708320618, -3.814697265625e-06, -5.14984130859375e-05, -8.7738037109375e-05, -0.0052874088287353516, -2.0265579223632812e-06, -0.17946434020996094, -7.62939453125e-06, -3.814697265625e-06, -0.00037384033203125, -2.288818359375e-05, -0.0032339096069335938, -4.9591064453125e-05, -0.3822740316390991, 0.0, -0.040160417556762695, -7.748603820800781e-06, -0.8329200744628906, -3.814697265625e-06, -0.002178183989599347, 0.0, -0.3941030502319336, -0.0002574920654296875, -0.000690460205078125, 0.0, -0.000148773193359375, 0.0, -0.0004749298095703125, 0.0, -0.2716948986053467, 0.0, -0.2563447952270508, -0.022294998168945312, -7.62939453125e-06, -0.00152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.18971788883209229, -1.9073486328125e-06, -0.0048065185546875, -7.62939453125e-06, -5.7220458984375e-06, -0.000469207763671875, -7.82012939453125e-05, -0.0024843215942382812, -6.866455078125e-05, -0.10555648803710938, 0.0, -0.055423855781555176, -5.841255187988281e-06, -0.7881650924682617, -1.9073486328125e-06, -0.005167827010154724, 0.0, -0.3594026565551758, -0.0002079010009765625, -0.00063323974609375, 0.0, -0.0001277923583984375, 0.0, -0.0005903244018554688, 0.0, -0.23506593704223633, 0.0, -0.31979942321777344, -0.017745018005371094, -5.7220458984375e-06, -0.003681182861328125, 0.0, -1.1444091796875e-05, 0.0, -0.23570919036865234, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>", 88, 138, "Wisps5", "<EOS>", 282, 45, 160, "Choice", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -12.599058742473233, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"name": "Wisps5", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "ChoiceCard"}]}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -23.184850692749023], "choice_history": [80, 159, 294], "score": -23.18485450744629, "model_output": {"_type": "Module", "body": []}}, {"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(5, self)\n        player.<UNK> = True\n\n\n        class Wisps5(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID,\n                    CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n                    find_spell_target)\n\n            def use(self, player, game):\n                super().use(player, game)\n                self.target.damage(5, self)\n                player.<UNK> = 0\n                player.draw += player.<UNK>\n                player.<UNK> = True\n\n\n        class Wisps5(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID,\n                    CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n                    find_spell_target)\n\n            def use(self, player, game):\n                super().use(player, game)\n                self.target.damage(5, self)\n                player.<UNK> = True\n\n\n                class Wisps5(ChoiceCard):\n\n                    def __init__(self):\n                        super().__init__(\n                            '2 Nourish Crystals Crystals Crystals Crystals',\n                            0, CHARACTER_CLASS.DRUID, CARD_RARITY.COMMON, False\n                            )\n\n                    def can_use(self, player, game):\n                        return len(player.minions) < 7\n\n                    def use(self, player, game):\n                        from <UNK> import <UNK>\n                        for i in range(0, 3):\n                            <UNK> = <UNK>()\n                            <UNK>.summon(player, game, len(player.minions))\n                player.draw()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.5258672647178173e-05, -7.223931606858969e-05, -3.0517578125e-05, 0.0, 0.0, -0.002008795738220215, -2.0265579223632812e-06, -6.079673767089844e-06, -0.0003509521484375, -0.06049060821533203, -3.814697265625e-06, -0.0004397872253321111, 0.0, 0.0, -1.71661376953125e-05, -5.7220458984375e-06, -4.57763671875e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -9.918212890625e-05, -0.000118255615234375, -1.52587890625e-05, 0.0, -0.000110626220703125, -1.9073486328125e-06, -1.6808447981020436e-05, -1.1444091796875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006814002990722656, -9.5367431640625e-06, -7.62939453125e-06, -5.602820692729438e-06, -3.6835648643318564e-05, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-05, -9.5367431640625e-06, -7.355213165283203e-05, -8.344646857949556e-07, -0.00064849853515625, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.457022103248164e-05, -0.0042285919189453125, -3.063678741455078e-05, -3.0517578125e-05, -0.001453399658203125, -6.866455078125e-05, -0.5608277320861816, -1.9073486328125e-06, -4.38690185546875e-05, -4.38690185546875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001900196075439453, -1.33514404296875e-05, -0.0001392364501953125, -4.768370445162873e-07, -0.0062828054651618, -0.00016415119171142578, -0.0004444122314453125, -1.9073486328125e-06, -0.0009043216705322266, -2.6702880859375e-05, -9.5367431640625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000194549560546875, -1.9073486328125e-06, 0.0, -5.841255187988281e-06, 0.0, -2.288818359375e-05, -3.7431713280966505e-05, -1.0371154530730564e-05, -0.46633243560791016, -0.00125885009765625, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -8.20159912109375e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5391578674316406e-05, -7.62939453125e-06, -1.9073486328125e-05, -4.00543212890625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.71661376953125e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.27602291107177734, -3.814697265625e-06, -0.0004520416259765625, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.00428009033203125, 0.0, -0.0001010894775390625, 0.0, -0.12037003040313721, -5.7220458984375e-06, -0.0007658004760742188, 0.0, -0.40584516525268555, -0.000164031982421875, -0.0001983642578125, -0.003276824951171875, -5.7220458984375e-05, -0.7849708199501038, -3.814697265625e-06, -5.14984130859375e-05, -8.58306884765625e-05, -0.0052301883697509766, -2.0265579223632812e-06, -0.18466854095458984, -7.62939453125e-06, -3.814697265625e-06, -0.0003833770751953125, -2.288818359375e-05, -0.0032663345336914062, -4.9591064453125e-05, -0.3795473575592041, 0.0, -0.040430426597595215, -7.748603820800781e-06, -0.6166601181030273, -2.47955322265625e-05, -1.3232229321147315e-05, 0.0, -0.1543111801147461, -9.918212890625e-05, -0.18031394481658936, -0.00021791350445710123, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.06456470489501953, -2.86102294921875e-05, -3.075599670410156e-05, -0.8510169982910156, -0.0036287307739257812, -1.9073486328125e-06, -0.0014450550079345703, 0.0, 0.0, -0.001312255859375, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -1.71661376953125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0002803802490234375, -1.71661376953125e-05, 0.0, -0.0003490447998046875, -7.62939453125e-06, -1.382827485940652e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -4.768370445162873e-07, -0.0007386207580566406, -9.5367431640625e-06, -5.7220458984375e-06, -7.152531907195225e-06, -3.540514808264561e-05, -7.62939453125e-06, -9.5367431640625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -7.712841033935547e-05, -8.344646857949556e-07, -0.0008640289306640625, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, -6.079673767089844e-06, -3.8742407923564315e-05, -0.0046939849853515625, -3.457069396972656e-05, -2.6702880859375e-05, -0.0015649795532226562, -6.29425048828125e-05, -0.5180938243865967, -1.9073486328125e-06, -4.38690185546875e-05, -4.1961669921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0001881122589111328, -1.33514404296875e-05, -0.0001316070556640625, -4.768370445162873e-07, -0.006447671912610531, -0.00016033649444580078, -0.00049591064453125, -1.9073486328125e-06, -0.0024224519729614258, -3.24249267578125e-05, -9.5367431640625e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0004405975341796875, -1.9073486328125e-06, 0.0, -7.867813110351562e-06, 0.0, -2.288818359375e-05, -4.529952275333926e-05, -1.0013530300057027e-05, -0.5372190475463867, -0.001537322998046875, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -7.82012939453125e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5272369384765625e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.52587890625e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.28290843963623047, -3.814697265625e-06, -0.000446319580078125, -0.0002155303955078125, -1.1444091796875e-05, 0.0, -0.0043773651123046875, 0.0, -0.0001010894775390625, 0.0, -0.12852299213409424, -5.7220458984375e-06, -0.00077056884765625, 0.0, -0.40418577194213867, -0.0001659393310546875, -0.0001983642578125, -0.0032901763916015625, -5.7220458984375e-05, -0.7849872708320618, -3.814697265625e-06, -5.14984130859375e-05, -8.7738037109375e-05, -0.0052874088287353516, -2.0265579223632812e-06, -0.17946434020996094, -7.62939453125e-06, -3.814697265625e-06, -0.00037384033203125, -2.288818359375e-05, -0.0032339096069335938, -4.9591064453125e-05, -0.3822740316390991, 0.0, -0.040160417556762695, -7.748603820800781e-06, -0.8329200744628906, -3.814697265625e-06, -0.002178183989599347, 0.0, -0.3941030502319336, -0.0002574920654296875, -0.000690460205078125, 0.0, -0.000148773193359375, 0.0, -0.0004749298095703125, 0.0, -0.2716948986053467, 0.0, -0.2563447952270508, -0.022294998168945312, -7.62939453125e-06, -0.00152587890625, 0.0, -9.5367431640625e-06, 0.0, -0.18971788883209229, -1.9073486328125e-06, -0.0048065185546875, -7.62939453125e-06, -5.7220458984375e-06, -0.000469207763671875, -7.82012939453125e-05, -0.0024843215942382812, -6.866455078125e-05, -0.10555648803710938, 0.0, -0.055423855781555176, -5.841255187988281e-06, -0.6619405746459961, -1.71661376953125e-05, -1.4662741705251392e-05, 0.0, -0.2059774398803711, -0.0001373291015625, -0.17808519303798676, -0.0001313684624619782, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.1423025131225586, -0.0006961822509765625, -1.537799835205078e-05, -0.7599277496337891, -0.004000663757324219, -1.9073486328125e-06, -0.0016437768936157227, 0.0, 0.0, -0.001407623291015625, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.000141143798828125, -0.0002346038818359375, -1.71661376953125e-05, 0.0, -0.0003681182861328125, -5.7220458984375e-06, -1.2636180144909304e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.960462772236497e-07, -0.0006985664367675781, -1.1444091796875e-05, -5.7220458984375e-06, -6.318072337307967e-06, -3.409384225960821e-05, -9.5367431640625e-06, -9.5367431640625e-06, -3.814697265625e-05, -1.1444091796875e-05, -8.285045623779297e-05, -8.344646857949556e-07, -0.0008831024169921875, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, -7.987022399902344e-06, -3.6358302168082446e-05, -0.004466056823730469, -3.266334533691406e-05, -2.86102294921875e-05, -0.0015850067138671875, -6.4849853515625e-05, -0.5326037406921387, -1.9073486328125e-06, -4.57763671875e-05, -4.1961669921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001976490020751953, -1.33514404296875e-05, -0.0001373291015625, -4.768370445162873e-07, -0.006242870353162289, -0.00016415119171142578, -0.0005035400390625, -1.9073486328125e-06, -0.0026131868362426758, -3.4332275390625e-05, -9.5367431640625e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0004329681396484375, -1.9073486328125e-06, 0.0, -7.867813110351562e-06, 0.0, -2.288818359375e-05, -4.529952275333926e-05, -1.0013530300057027e-05, -0.5389118194580078, -0.00153350830078125, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -7.62939453125e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.5272369384765625e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.6702880859375e-05, -1.52587890625e-05, -3.635883331298828e-05, -7.629387255292386e-06, -0.28281497955322266, -3.814697265625e-06, -0.0004444122314453125, -0.000217437744140625, -1.1444091796875e-05, 0.0, -0.0043735504150390625, 0.0, -0.0001010894775390625, 0.0, -0.1283961534500122, -5.7220458984375e-06, -0.00077056884765625, 0.0, -0.404111385345459, -0.0001659393310546875, -0.0001983642578125, -0.0032901763916015625, -5.7220458984375e-05, -0.7849984765052795, -3.814697265625e-06, -5.14984130859375e-05, -8.7738037109375e-05, -0.005285501480102539, -2.0265579223632812e-06, -0.17983531951904297, -7.62939453125e-06, -3.814697265625e-06, -0.00037384033203125, -2.288818359375e-05, -0.003231048583984375, -4.9591064453125e-05, -0.3818281888961792, 0.0, -0.040107011795043945, -7.748603820800781e-06, -0.6184902191162109, -2.47955322265625e-05, -1.3232229321147315e-05, 0.0, -0.15860652923583984, -0.0001010894775390625, -0.1796623021364212, -0.0002195824490627274, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.06464862823486328, -2.86102294921875e-05, -3.075599670410156e-05, -0.7658329010009766, -0.508152961730957, -0.009947776794433594, -0.05173179507255554, -0.0012146234512329102, -0.6408383846282959, -0.12766361236572266, -0.5229696035385132, -0.13281118869781494, -0.6994526386260986, -0.3826967477798462, -0.8070176243782043, -0.6170270442962646, -0.796026349067688, -0.6146793365478516, -0.011460065841674805, -7.43865966796875e-05, -0.0029048919677734375, -0.0004024505615234375, -0.00046539306640625, -9.5367431640625e-06, -0.14132404327392578, -5.7220458984375e-06, -1.9073486328125e-06, -0.00025177001953125, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.000202178955078125, 0.0, -2.6702880859375e-05, -0.0002498626708984375, -1.5497195136049413e-06, -0.3139486312866211, -0.0004253387451171875, -7.43865966796875e-05, -0.02661609649658203, -7.82012939453125e-05, -0.25962162017822266, -0.000152587890625, -0.19132137298583984, -9.72747802734375e-05, -0.0070400238037109375, -1.9073486328125e-06, -3.4332275390625e-05, -0.0007343292236328125, 0.0, -0.0003757476806640625, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.07484877109527588, -9.5367431640625e-06, -1.9073486328125e-06, -0.011932373046875, -1.71661376953125e-05, -6.29425048828125e-05, -3.24249267578125e-05, -0.07563650608062744, -1.9073486328125e-06, -0.0011854171752929688, -0.0004978179931640625, -0.011699914932250977, -0.00202178955078125, -2.09808349609375e-05, -7.62939453125e-05, 0.0, -7.05718994140625e-05, -1.71661376953125e-05, 0.0, -7.832050323486328e-05, 0.0, -3.62396240234375e-05, -4.6133995056152344e-05, -1.8835040464182384e-05, -0.005312919616699219, -0.22778701782226562, -0.003566741943359375, -0.0009402955765835941, -6.163119542179629e-05, -0.0015840530395507812, -0.0008296966552734375, -0.010922858491539955, -0.01810169219970703, -0.00023805444652680308, 0.0, -0.0053863525390625, -5.7220458984375e-05, -0.00063323974609375, 0.0, -0.014911055564880371, -3.814697265625e-05, -0.00098419189453125, -0.0004291534423828125, -3.814697265625e-06, -5.7220458984375e-06, -0.0015659332275390625, -2.86102294921875e-05, -0.0008182525634765625, -1.52587890625e-05, -1.9073486328125e-06, -0.008563282899558544, -1.9073486328125e-06, -0.0039081573486328125, -5.7220458984375e-06, -0.6660318374633789, -4.792213439941406e-05, -0.043229103088378906, -0.00081634521484375, -1.1444091796875e-05, -2.288818359375e-05, -0.0001468658447265625, 0.0, -0.00023925057030282915, -9.667862468631938e-05, -0.16663169860839844, -0.0016384124755859375, -0.5687130689620972, -0.060285914689302444, -0.0019397735595703125, -1.1444091796875e-05, -2.47955322265625e-05, -0.028331756591796875, -3.0517578125e-05, 0.0, -0.003444671630859375, 0.0, -0.006074069067835808, -1.573560803080909e-05, -0.001235365867614746, 0.0, -0.0006313323974609375, -3.814697265625e-06, -2.288818359375e-05, -1.52587890625e-05, 0.0, -0.0062408447265625, -9.918212890625e-05, -8.96453857421875e-05, -2.0265579223632812e-06, -0.004230499267578125, -8.392333984375e-05, -9.5367431640625e-06, 0.0, -9.357929229736328e-05, -2.384185791015625e-06, -5.7220458984375e-06, -0.0001697540283203125, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.0031026543583720922, -1.1444091796875e-05, -0.9675045013427734, -4.00543212890625e-05, -3.814697265625e-06, -0.00963592529296875, -6.67572021484375e-05, 0.0, -0.0002002716064453125, 0.0, -0.043609619140625, 0.0, -0.008913630619645119, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Nourish", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>", 88, 138, "Wisps5", "<EOS>", 282, 45, 160, "Choice", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 21, 165, "0", "<EOS>", 86, 130, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 81, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>", 88, 138, "Wisps5", "<EOS>", 282, 45, 160, "Choice", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Nourish", "<EOS>", 47, 165, "5", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 290, 79, 271, "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 299, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "5", "<EOS>", 45, 160, "self", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 20, 161, "True", "<EOS>", 88, 138, "Wisps5", "<EOS>", 282, 45, 160, "Choice", "Card", "<EOS>", 297, 100, 183, "2", " ", "Nourish", " ", "Crystals", " ", "Crystals", " ", "Crystals", " ", "Crystals", "<EOS>", "DRUID", "<EOS>", "COMMON", "<EOS>", 91, 143, "can_use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 94, 167, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 279, 8, 282, 47, 165, "7", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 93, 148, "<UNK>", "<EOS>", 272, 267, "<UNK>", "<EOS>", "0", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "3", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -27.639705229024116, "model_output": {"_type": "Module", "body": [{"name": "Nourish", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"name": "Wisps5", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"_type": "Num", "n": 0}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"op": {"_type": "Add"}, "value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "AugAssign", "target": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "ChoiceCard"}]}, {"name": "Wisps5", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Num", "n": 5}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "RARE"}], "_type": "Call", "keywords": [{"arg": "target_func", "value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}, {"value": {"value": true, "_type": "NameConstant"}, "targets": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}], "_type": "Assign"}, {"name": "Wisps5", "_type": "ClassDef", "body": [{"hole1": "DRUID", "hole0": "2 Nourish Crystals Crystals Crystals Crystals", "_type": "Template13", "hole2": "COMMON"}, {"name": "can_use", "_type": "FunctionDef", "body": [{"value": {"_type": "Compare", "left": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 7}]}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "use", "_type": "FunctionDef", "body": [{"level": 0, "_type": "ImportFrom", "module": "<UNK>", "names": [{"name": "<UNK>", "_type": "alias"}]}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "ChoiceCard"}]}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "ChoiceCard"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}], "gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n"}
{"beams": [{"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(ManaChange(-3)))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.8942623138427734, -1.33514404296875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0001735687255859375, -1.9073486328125e-06, -3.933906555175781e-06, -9.5367431640625e-06, -0.000125885009765625, -2.47955322265625e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001239776611328125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -0.0002193450927734375, -9.739398956298828e-05, -0.763214111328125, -0.000209808349609375, -0.0002918243408203125, -7.62939453125e-06, -0.023575544357299805, -2.288818359375e-05, -0.13382434844970703, 0.0, -0.17927265167236328, 0.0, -0.00018322467803955078, 0.0, -0.001059412956237793, -7.62939453125e-06, -0.0011920928955078125, -0.0001659393310546875, -1.1444091796875e-05, -8.392333984375e-05, -0.0024280548095703125, -0.035289764404296875, 0.0, -0.0001373291015625, -5.7220458984375e-06, -0.08224141597747803, -5.7220458984375e-06, -0.1831197738647461, -3.826618194580078e-05, -2.6702880859375e-05, -0.009899139404296875, -0.0001392364501953125, -0.0017987489700317383, -3.933906555175781e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0009059906005859375, -0.0004100799560546875, -0.008503854274749756, -3.24249267578125e-05], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "3", "<EOS>"], "score": -2.6544526676238718, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole1": [{"hole0": 3, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.<UNK>()\n        player.<UNK>('card_drawn', reduce_cost)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.6189775466918945, -0.2072153091430664, -5.7220458984375e-06, -3.814697265625e-06, -3.24249267578125e-05, -8.20159912109375e-05, -4.1961669921875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.00019073486328125, -7.450580596923828e-05, -0.023941993713378906, -1.9073486328125e-06, -4.9591064453125e-05, -0.0001277923583984375, -0.0001010894775390625, -3.0517578125e-05, -0.15639400482177734, -7.62939453125e-06, -0.005658507347106934, 0.0, -0.018904924392700195, -2.47955322265625e-05, -0.008871078491210938, -0.0003719329833984375, -0.000255584716796875, -0.04428243637084961, -7.43865966796875e-05, -0.010125160217285156, -3.4332275390625e-05, -0.31225061416625977, -1.9073486328125e-06, -0.007182121276855469, 0.0, -6.4849853515625e-05, -0.08028411865234375, -6.866455078125e-05, -1.9073486328125e-06, -0.0010309219360351562, -9.5367431640625e-06, -0.0003490447998046875, 0.0, -0.406846284866333, -4.57763671875e-05, -0.12841320037841797, 0.0, -6.29425048828125e-05, -0.27258872985839844, -2.6702880859375e-05, -1.52587890625e-05, -0.027655601501464844, -7.62939453125e-06, -0.26072871685028076, 0.0, -0.011730551719665527, -5.7220458984375e-06, -0.059678077697753906, -0.000392913818359375, -0.000213623046875, -0.10365748405456543, -7.62939453125e-05, -0.0235137939453125, -5.7220458984375e-05, -0.3379549980163574, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>"], "score": -3.4621105650962534, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.<UNK>()\n        player.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.6189775466918945, -0.2072153091430664, -5.7220458984375e-06, -3.814697265625e-06, -3.24249267578125e-05, -8.20159912109375e-05, -4.1961669921875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.00019073486328125, -7.450580596923828e-05, -0.023941993713378906, -1.9073486328125e-06, -4.9591064453125e-05, -0.0001277923583984375, -0.0001010894775390625, -3.0517578125e-05, -0.15639400482177734, -7.62939453125e-06, -0.005658507347106934, 0.0, -0.018904924392700195, -2.47955322265625e-05, -0.008871078491210938, -0.0003719329833984375, -0.000255584716796875, -0.04428243637084961, -7.43865966796875e-05, -0.010125160217285156, -3.4332275390625e-05, -0.31225061416625977, -1.9073486328125e-06, -0.007182121276855469, 0.0, -6.4849853515625e-05, -0.08028411865234375, -6.866455078125e-05, -1.9073486328125e-06, -0.0010309219360351562, -9.5367431640625e-06, -0.0003490447998046875, 0.0, -0.406846284866333, -4.57763671875e-05, -0.12841320037841797, 0.0, -6.29425048828125e-05, -1.4581432342529297, -5.340576171875e-05, 0.0, -0.000545501708984375, -1.1444091796875e-05, -0.0001068115234375, 0.0, -0.16420376300811768, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -3.986879036814088, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n        player.<UNK>('card_drawn', reduce_cost)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.6189775466918945, -0.2072153091430664, -5.7220458984375e-06, -3.814697265625e-06, -3.24249267578125e-05, -8.20159912109375e-05, -4.1961669921875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.57763671875e-05, -1.33514404296875e-05, -1.1444091796875e-05, -2.09808349609375e-05, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.00019073486328125, -7.450580596923828e-05, -0.023941993713378906, -1.9073486328125e-06, -4.9591064453125e-05, -0.0001277923583984375, -0.0001010894775390625, -3.0517578125e-05, -0.15639400482177734, -7.62939453125e-06, -0.005658507347106934, 0.0, -0.018904924392700195, -2.47955322265625e-05, -0.008871078491210938, -0.0003719329833984375, -0.000255584716796875, -0.04428243637084961, -7.43865966796875e-05, -0.010125160217285156, -3.4332275390625e-05, -0.31225061416625977, -1.9073486328125e-06, -0.007182121276855469, 0.0, -6.4849853515625e-05, -0.08028411865234375, -6.866455078125e-05, -1.9073486328125e-06, -0.0010309219360351562, -9.5367431640625e-06, -0.0003490447998046875, 0.0, -1.1056606769561768, -7.62939453125e-06, -0.10422992706298828, -5.7220458984375e-06, -0.0001850128173828125, -0.4175386428833008, -9.5367431640625e-05, -4.57763671875e-05, -0.005780220031738281, -4.1961669921875e-05, -0.18545186519622803, 0.0, -0.012789130210876465, -3.814697265625e-06, -0.03413581848144531, -0.00029754638671875, -0.0001850128173828125, -0.14761888980865479, -8.392333984375e-05, -0.019626617431640625, -6.103515625e-05, -0.41877079010009766, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>"], "score": -4.281056330591554, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(ManaChange(-3)))\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.8942623138427734, -1.33514404296875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0001735687255859375, -1.9073486328125e-06, -3.933906555175781e-06, -9.5367431640625e-06, -0.000125885009765625, -2.47955322265625e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001239776611328125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -0.0002193450927734375, -9.739398956298828e-05, -0.763214111328125, -0.000209808349609375, -0.0002918243408203125, -7.62939453125e-06, -0.023575544357299805, -2.288818359375e-05, -0.13382434844970703, 0.0, -1.8092041015625, 0.0, -5.53131103515625e-05, -5.7220458984375e-06, -0.014392852783203125, -3.814697265625e-06, -0.0008335113525390625, -1.9073486328125e-06, -0.002913591219112277, -4.76837158203125e-05, -0.0018310546875, -1.33514404296875e-05, -3.814697265625e-06, -0.00012969970703125, -0.0071010589599609375, -0.009063720703125, 0.0, -0.00014495849609375, -1.9073486328125e-06, -0.11942780017852783, -3.814697265625e-06, -0.19753074645996094, -5.352497100830078e-05, -2.09808349609375e-05, -0.011419296264648438, -0.000125885009765625, -0.001672983169555664, -5.125999450683594e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0009088516235351562, -0.000408172607421875, -0.00789642333984375, -3.814697265625e-05], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "minion", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "3", "<EOS>"], "score": -4.332766456348935, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "target": {"_type": "Name", "id": "minion"}, "body": [{"value": {"args": [{"hole1": [{"hole0": 3, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.6189775466918945, -1.6888484954833984, -0.00067138671875, -0.09590291976928711, -2.0265579223632812e-06, -3.4332275390625e-05, -0.017770767211914062, 0.0, -0.03782367706298828, -0.0008449554443359375, -0.000308990478515625, -0.09106636047363281, -2.6702880859375e-05, -0.0001277923583984375, -0.0034580230712890625, -1.1444091796875e-05, -3.814697265625e-06, -0.34287261962890625, -3.24249267578125e-05, -0.005063176155090332, -2.47955322265625e-05, -0.011813163757324219, -6.532669067382812e-05, -0.0006504058837890625, -0.004664421081542969, -0.002254486083984375, -0.0027114152908325195, -0.0007708072662353516, -3.814697265625e-06, -2.47955322265625e-05, -0.0021305084228515625, -0.0008602142333984375, -0.009364277124404907, -0.00014126300811767578, -0.0054779052734375, 0.0, -9.5367431640625e-06, -0.00043487548828125, -0.0003604888916015625, -0.0006122589111328125, -0.000690460205078125, -1.71661376953125e-05, -2.4914712412282825e-05, -2.288818359375e-05, -0.0007801055908203125, -0.00012969970703125, -3.0517578125e-05, -0.0003376007080078125, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.00543212890625e-05, -0.00022125244140625, -0.00016987323760986328, -0.016523361206054688, -1.9073486328125e-06, -3.4332275390625e-05, -0.0003719329833984375, -0.0001697540283203125, -1.33514404296875e-05, -0.24917221069335938, -7.62939453125e-06, -0.0004030466079711914, -3.933906555175781e-06, -0.21105313301086426, -1.52587890625e-05, -0.007488250732421875, -7.43865966796875e-05, -0.0001811981201171875, -0.14693808555603027, -0.0001220703125, -0.039605140686035156, -3.24249267578125e-05, -0.19794559478759766, -1.9073486328125e-06, -0.008127212524414062, 0.0, -5.91278076171875e-05, -0.07977867126464844, -6.866455078125e-05, -1.9073486328125e-06, -0.0009851455688476562, -1.1444091796875e-05, -0.00043392181396484375, 0.0, -0.37060821056365967, -4.57763671875e-05], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 91, 143, "reduce_cost", "<EOS>", 269, 275, 268, "card", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "card", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "3", "<EOS>", 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -4.610084847570278, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"name": "reduce_cost", "_type": "FunctionDef", "body": [{"value": {"args": [{"hole1": [{"hole0": 3, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}], "args": {"args": [{"arg": "card", "_type": "arg"}], "_type": "arguments"}}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -1.4093608856201172, -0.0007953643798828125, -1.0251946150674485e-05, -2.7894973754882812e-05, -7.271765298355604e-06, -2.3841855067985307e-07, -0.001049041748046875, -1.9073486328125e-06, -0.4568214416503906, -5.7220458984375e-06, -0.002841949462890625, -5.7220458984375e-06, -0.012181282043457031, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.00017154216766357422, -3.814697265625e-05, -4.00543212890625e-05, -2.3841855067985307e-07, -2.047194004058838, -0.00011909008026123047, -0.0761260986328125, -0.004078865051269531, -3.62396240234375e-05, 0.0, -0.013666510581970215, -8.392333984375e-05, -0.0029125213623046875, -1.71661376953125e-05, -4.57763671875e-05, -0.6228790283203125, -5.7220458984375e-06, -0.35423004627227783, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -5.019556210671389, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "hole2": "ROGUE", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.6189775466918945, -1.6888484954833984, -0.00067138671875, -0.09590291976928711, -2.0265579223632812e-06, -3.4332275390625e-05, -0.017770767211914062, 0.0, -0.03782367706298828, -0.0008449554443359375, -0.000308990478515625, -0.09106636047363281, -2.6702880859375e-05, -0.0001277923583984375, -0.0034580230712890625, -1.1444091796875e-05, -3.814697265625e-06, -0.34287261962890625, -3.24249267578125e-05, -0.005063176155090332, -2.47955322265625e-05, -0.011813163757324219, -6.532669067382812e-05, -0.0006504058837890625, -0.004664421081542969, -0.002254486083984375, -0.0027114152908325195, -0.0007708072662353516, -3.814697265625e-06, -2.47955322265625e-05, -0.0021305084228515625, -0.0008602142333984375, -0.009364277124404907, -0.00014126300811767578, -0.0054779052734375, 0.0, -9.5367431640625e-06, -0.00043487548828125, -0.0003604888916015625, -0.0006122589111328125, -0.000690460205078125, -1.71661376953125e-05, -2.4914712412282825e-05, -2.288818359375e-05, -0.0007801055908203125, -0.00012969970703125, -3.0517578125e-05, -0.0003376007080078125, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -4.00543212890625e-05, -0.00022125244140625, -0.00016987323760986328, -0.016523361206054688, -1.9073486328125e-06, -3.4332275390625e-05, -0.0003719329833984375, -0.0001697540283203125, -1.33514404296875e-05, -0.24917221069335938, -7.62939453125e-06, -0.0004030466079711914, -3.933906555175781e-06, -0.21105313301086426, -1.52587890625e-05, -0.007488250732421875, -7.43865966796875e-05, -0.0001811981201171875, -0.14693808555603027, -0.0001220703125, -0.039605140686035156, -3.24249267578125e-05, -0.19794559478759766, -1.9073486328125e-06, -0.008127212524414062, 0.0, -5.91278076171875e-05, -0.07977867126464844, -6.866455078125e-05, -1.9073486328125e-06, -0.0009851455688476562, -1.1444091796875e-05, -0.00043392181396484375, 0.0, -1.1834725141525269, -7.62939453125e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 91, 143, "reduce_cost", "<EOS>", 269, 275, 268, "card", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "card", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "3", "<EOS>", 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.4229110041864885, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"name": "reduce_cost", "_type": "FunctionDef", "body": [{"value": {"args": [{"hole1": [{"hole0": 3, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}], "args": {"args": [{"arg": "card", "_type": "arg"}], "_type": "arguments"}}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.<UNK>()\n        player.<UNK>('card_drawn', reduce_cost)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -1.4093608856201172, -0.0007953643798828125, -1.0251946150674485e-05, -2.7894973754882812e-05, -7.271765298355604e-06, -2.3841855067985307e-07, -0.001049041748046875, -1.9073486328125e-06, -0.4568214416503906, -5.7220458984375e-06, -0.002841949462890625, -5.7220458984375e-06, -0.012181282043457031, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.00017154216766357422, -3.814697265625e-05, -4.00543212890625e-05, -2.3841855067985307e-07, -0.5626730918884277, -6.341932021314278e-05, -0.15524959564208984, -0.0001354217529296875, -8.797645568847656e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -5.53131103515625e-05, -8.344650268554688e-06, 0.0, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -7.2479248046875e-05, -0.0001983642578125, -2.0265579223632812e-06, -0.5347156524658203, -0.1211385726928711, -5.7220458984375e-06, -3.814697265625e-06, -6.29425048828125e-05, -0.0001354217529296875, -3.4332275390625e-05, -4.57763671875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -4.38690185546875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.0001049041748046875, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.000171661376953125, -8.022785186767578e-05, -0.011912345886230469, 0.0, -6.67572021484375e-05, -0.00016021728515625, -0.0001087188720703125, -3.814697265625e-05, -0.12457942962646484, -9.5367431640625e-06, -0.005403757095336914, 0.0, -0.01739335060119629, -2.288818359375e-05, -0.009706497192382812, -0.000392913818359375, -0.000263214111328125, -0.04429781436920166, -6.67572021484375e-05, -0.009329795837402344, -3.4332275390625e-05, -0.3207688331604004, -1.9073486328125e-06, -0.00455474853515625, 0.0, -6.29425048828125e-05, -0.08177375793457031, -7.43865966796875e-05, -1.9073486328125e-06, -0.00104522705078125, -9.5367431640625e-06, -0.000396728515625, 0.0, -0.41349291801452637, -4.57763671875e-05, -0.061969757080078125, 0.0, -4.76837158203125e-05, -0.2668170928955078, -2.47955322265625e-05, -1.52587890625e-05, -0.0370635986328125, -5.7220458984375e-06, -0.32562100887298584, 0.0, -0.011386275291442871, -5.7220458984375e-06, -0.059487342834472656, -0.0003833770751953125, -0.0002155303955078125, -0.10563111305236816, -7.62939453125e-05, -0.02416515350341797, -5.340576171875e-05, -0.32759618759155273, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>"], "score": -5.540021346223909, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "hole2": "ROGUE", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -1.4093608856201172, -0.0007953643798828125, -1.0251946150674485e-05, -2.7894973754882812e-05, -7.271765298355604e-06, -2.3841855067985307e-07, -0.001049041748046875, -1.9073486328125e-06, -0.4568214416503906, -5.7220458984375e-06, -0.002841949462890625, -5.7220458984375e-06, -0.012181282043457031, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.00017154216766357422, -3.814697265625e-05, -4.00543212890625e-05, -2.3841855067985307e-07, -0.5626730918884277, -6.341932021314278e-05, -2.616278648376465, -0.0032596588134765625, -6.103515625e-05, -1.9073486328125e-06, -0.01814258098602295, -8.392333984375e-05, -0.00681304931640625, -1.52587890625e-05, -7.05718994140625e-05, -0.3587045669555664, -3.814697265625e-06, -0.42721569538116455, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "3", "<EOS>"], "score": -5.891548441064906, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "hole2": "ROGUE", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 3}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -1.4093608856201172, -0.0007953643798828125, -1.0251946150674485e-05, -2.7894973754882812e-05, -7.271765298355604e-06, -2.3841855067985307e-07, -0.001049041748046875, -1.9073486328125e-06, -0.4568214416503906, -5.7220458984375e-06, -0.002841949462890625, -5.7220458984375e-06, -0.012181282043457031, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.00017154216766357422, -3.814697265625e-05, -4.00543212890625e-05, -2.3841855067985307e-07, -2.047194004058838, -0.00011909008026123047, -0.0761260986328125, -0.004078865051269531, -3.62396240234375e-05, 0.0, -0.013666510581970215, -8.392333984375e-05, -0.0029125213623046875, -1.71661376953125e-05, -4.57763671875e-05, -0.6228790283203125, -5.7220458984375e-06, -1.236858606338501, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 95, 172, 19, 160, "self", "<EOS>", "target", "<EOS>", 282, 47, 165, "0", "<EOS>"], "score": -5.9021847707376125, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "hole2": "ROGUE", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole3": "target_func"}, {"hole1": "target", "hole0": {"_type": "Name", "id": "self"}, "_type": "Template0", "hole2": [{"_type": "Num", "n": 0}]}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.<UNK>()\n        player.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -1.4093608856201172, -0.0007953643798828125, -1.0251946150674485e-05, -2.7894973754882812e-05, -7.271765298355604e-06, -2.3841855067985307e-07, -0.001049041748046875, -1.9073486328125e-06, -0.4568214416503906, -5.7220458984375e-06, -0.002841949462890625, -5.7220458984375e-06, -0.012181282043457031, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.00017154216766357422, -3.814697265625e-05, -4.00543212890625e-05, -2.3841855067985307e-07, -0.5626730918884277, -6.341932021314278e-05, -0.15524959564208984, -0.0001354217529296875, -8.797645568847656e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -5.53131103515625e-05, -8.344650268554688e-06, 0.0, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -7.2479248046875e-05, -0.0001983642578125, -2.0265579223632812e-06, -0.5347156524658203, -0.1211385726928711, -5.7220458984375e-06, -3.814697265625e-06, -6.29425048828125e-05, -0.0001354217529296875, -3.4332275390625e-05, -4.57763671875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -4.38690185546875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.0001049041748046875, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.000171661376953125, -8.022785186767578e-05, -0.011912345886230469, 0.0, -6.67572021484375e-05, -0.00016021728515625, -0.0001087188720703125, -3.814697265625e-05, -0.12457942962646484, -9.5367431640625e-06, -0.005403757095336914, 0.0, -0.01739335060119629, -2.288818359375e-05, -0.009706497192382812, -0.000392913818359375, -0.000263214111328125, -0.04429781436920166, -6.67572021484375e-05, -0.009329795837402344, -3.4332275390625e-05, -0.3207688331604004, -1.9073486328125e-06, -0.00455474853515625, 0.0, -6.29425048828125e-05, -0.08177375793457031, -7.43865966796875e-05, -1.9073486328125e-06, -0.00104522705078125, -9.5367431640625e-06, -0.000396728515625, 0.0, -0.41349291801452637, -4.57763671875e-05, -0.061969757080078125, 0.0, -4.76837158203125e-05, -1.4774837493896484, -5.340576171875e-05, 0.0, -0.0005130767822265625, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -0.16187798976898193, -7.62939453125e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>"], "score": -6.021523759973604, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "hole2": "ROGUE", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n        player.<UNK>('card_drawn', reduce_cost)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -1.4093608856201172, -0.0007953643798828125, -1.0251946150674485e-05, -2.7894973754882812e-05, -7.271765298355604e-06, -2.3841855067985307e-07, -0.001049041748046875, -1.9073486328125e-06, -0.4568214416503906, -5.7220458984375e-06, -0.002841949462890625, -5.7220458984375e-06, -0.012181282043457031, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -0.00017154216766357422, -3.814697265625e-05, -4.00543212890625e-05, -2.3841855067985307e-07, -0.5626730918884277, -6.341932021314278e-05, -0.15524959564208984, -0.0001354217529296875, -8.797645568847656e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -5.53131103515625e-05, -8.344650268554688e-06, 0.0, -1.9073486328125e-06, -1.537799835205078e-05, 0.0, -7.2479248046875e-05, -0.0001983642578125, -2.0265579223632812e-06, -0.5347156524658203, -0.1211385726928711, -5.7220458984375e-06, -3.814697265625e-06, -6.29425048828125e-05, -0.0001354217529296875, -3.4332275390625e-05, -4.57763671875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -9.5367431640625e-06, -4.38690185546875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -1.9073486328125e-05, -0.0001049041748046875, -1.52587890625e-05, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.000171661376953125, -8.022785186767578e-05, -0.011912345886230469, 0.0, -6.67572021484375e-05, -0.00016021728515625, -0.0001087188720703125, -3.814697265625e-05, -0.12457942962646484, -9.5367431640625e-06, -0.005403757095336914, 0.0, -0.01739335060119629, -2.288818359375e-05, -0.009706497192382812, -0.000392913818359375, -0.000263214111328125, -0.04429781436920166, -6.67572021484375e-05, -0.009329795837402344, -3.4332275390625e-05, -0.3207688331604004, -1.9073486328125e-06, -0.00455474853515625, 0.0, -6.29425048828125e-05, -0.08177375793457031, -7.43865966796875e-05, -1.9073486328125e-06, -0.00104522705078125, -9.5367431640625e-06, -0.000396728515625, 0.0, -1.092461347579956, -7.62939453125e-06, -0.07478904724121094, -3.814697265625e-06, -0.000171661376953125, -0.45772266387939453, -8.58306884765625e-05, -3.62396240234375e-05, -0.006083488464355469, -3.24249267578125e-05, -0.2042076587677002, 0.0, -0.012546896934509277, -3.814697265625e-06, -0.03163433074951172, -0.000278472900390625, -0.0001888275146484375, -0.14671540260314941, -8.20159912109375e-05, -0.01944255828857422, -5.340576171875e-05, -0.40891361236572266, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 99, 182, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 298, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "<UNK>", "<EOS>", 283, 48, 169, "card_drawn", "<EOS>", 45, 160, "reduce_cost", "<EOS>"], "score": -6.361380384576876, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "hole2": "ROGUE", "_type": "Template12", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "<UNK>"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if len(player.hand) < 10 and len(player.opponent.minions) < 7:\n            <UNK> = hearthbreaker.cards.minions.<UNK>.WorthlessImp()\n            card.card = len(player.minions)\n            card.add_buff(Buff(ManaChange(-3)))\n            super().use(player, game)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.013511987403035164, -0.000583245768211782, -2.09808349609375e-05, 0.0, -1.71661376953125e-05, -0.000569462776184082, -1.9073486328125e-06, -2.0265579223632812e-06, -3.0517578125e-05, -0.31098270416259766, -0.0039920806884765625, -2.4318398573086597e-05, -1.3709068298339844e-05, -6.675719760096399e-06, -2.3841855067985307e-07, -0.0008126497268676758, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -6.103515625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.4332275390625e-05, -0.0001277923583984375, -5.841255187988281e-06, -0.8942623138427734, -1.33514404296875e-05, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-05, -3.24249267578125e-05, -2.47955322265625e-05, -0.0001735687255859375, -1.9073486328125e-06, -3.933906555175781e-06, -9.5367431640625e-06, -0.000125885009765625, -2.47955322265625e-05, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001239776611328125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -7.62939453125e-06, -0.0002193450927734375, -9.739398956298828e-05, -0.6356744766235352, -0.02233409881591797, -0.6921510696411133, -0.0015926361083984375, -0.00426483154296875, -0.0037755966186523438, -0.1858377456665039, -2.47955322265625e-05, -0.18698787689208984, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0004253387451171875, -2.47955322265625e-05, -1.33514404296875e-05, -1.52587890625e-05, 0.0, -3.24249267578125e-05, -3.0517578125e-05, -1.1444091796875e-05, 0.0, -0.09067428112030029, -3.814697265625e-06, -8.58306884765625e-05, -0.39304161071777344, -5.340576171875e-05, -0.0002460479736328125, -3.814697265625e-06, -0.004254697822034359, -1.9073486328125e-06, -0.0028285980224609375, -0.0006885528564453125, -0.18367671966552734, -0.0003185272216796875, -0.001613616943359375, -9.5367431640625e-06, -0.001544952392578125, 0.0, -0.21615207195281982, -3.814697265625e-06, -1.1444091796875e-05, -0.038661956787109375, -2.288818359375e-05, -0.0007114410400390625, -5.7220458984375e-06, -0.0740431547164917, -5.7220458984375e-06, -0.20157814025878906, -0.0006513595581054688, -3.814697265625e-05, -1.1444091796875e-05, -2.09808349609375e-05, -1.9073486328125e-06, -1.177681565284729, -0.00014126299356576055, -0.0472259521484375, -0.04714679718017578, -0.0009202957153320312, -5.7220458984375e-06, -0.0002460479736328125, 0.0, -0.10041046142578125, 0.0, -0.4287872314453125, 0.0, -0.00377655029296875, -1.9073486328125e-06, -0.05911421775817871, -2.47955322265625e-05, -0.10751533508300781, -9.5367431640625e-06, -0.07459545135498047, -0.0001049041748046875, -0.00802365131676197, -9.417251567356288e-05, -0.5200927257537842, -0.335323303937912, -5.841255187988281e-06, -0.30508899688720703, -0.0019092559814453125, -1.9073486328125e-05, -0.6229839324951172, -0.00042724609375, -0.055289268493652344, -7.2479248046875e-05, -0.32992231845855713, -0.000592350959777832, -0.43779516220092773, -5.53131103515625e-05, -0.5788154602050781, -0.0050144195556640625, -1.52587890625e-05, 0.0, -0.5711127519607544, -1.9073486328125e-06, -7.62939453125e-06, -0.005970001220703125, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.00019168853759765625, 0.0, -0.14922547340393066, -3.814697265625e-06, -0.07756805419921875, -7.62939453125e-06, -5.53131103515625e-05, -0.1550283432006836, -0.0004673004150390625, -2.288818359375e-05, -0.0002689361572265625, -1.52587890625e-05, -1.64474618434906, -0.0014638900756835938, -0.09010791778564453, -0.00010013580322265625, -0.0001163482666015625, -0.02493572235107422, -0.001255035400390625, -0.001451730728149414, -2.7179718017578125e-05, 0.0, -1.1444091796875e-05, -0.0007686614990234375, -0.0003147125244140625, -0.00833478569984436, -4.00543212890625e-05, -0.000225067138671875, -3.814697265625e-06, -7.62939453125e-06, -0.0001125335693359375, -0.0002593994140625, -0.0010013580322265625, -0.01688385009765625, 0.0, -6.949891394469887e-05, -1.1444091796875e-05, -0.0006275177001953125, -0.000164031982421875, -7.43865966796875e-05, -0.0004062652587890625, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-05, -8.20159912109375e-05, -0.0003032684326171875, -0.00020051002502441406], "choice_history": [80, 159, 295, 88, 138, "Preparation", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 92, 146, 13, 132, 0, 283, 41, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "hand", "<EOS>", 279, 8, 282, 47, 165, "10", "<EOS>", 41, 139, 30, 249, 19, 160, "player", "<EOS>", "opponent", "<EOS>", 279, 8, 282, 47, 165, "7", "<EOS>", 298, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 14, 134, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Worthless", "Imp", "<EOS>", 85, 128, 282, 37, 129, 19, 160, "card", "<EOS>", "card", "<EOS>", 14, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "card", "<EOS>", "add_buff", "<EOS>", 282, 62, 252, "Mana", "Change", "<EOS>", 282, 69, 262, "3", "<EOS>", 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>"], "score": -12.173871829081207, "model_output": {"_type": "Module", "body": [{"name": "Preparation", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template18", "hole2": "ROGUE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"body": [{"value": {"_type": "Call", "func": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "cards"}, "_type": "Attribute", "attr": "minions"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Attribute", "attr": "WorthlessImp"}}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "targets": [{"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "card"}], "_type": "Assign"}, {"value": {"args": [{"hole1": [{"hole0": 3, "_type": "Template79"}], "hole0": "ManaChange", "_type": "Template70"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "add_buff"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hand"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 10}]}, {"_type": "Compare", "left": {"hole1": "opponent", "hole0": {"_type": "Name", "id": "player"}, "_type": "Template67"}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 7}]}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, 0.0, -23.460411071777344], "choice_history": [80, 159, 294], "score": -23.460411071777344, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n"}
{"beams": [{"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('minion_died', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.9608821868896484, -2.622600959512056e-06, 0.0, -0.2726008892059326, -0.00011146068572998047, -6.103515625e-05, -0.00241851806640625, -0.0008020401000976562, -0.08324909210205078, -0.00435638427734375, -0.0003986358642578125, -0.011460304260253906, -0.35592079162597656, -0.00055694580078125, -0.0009670257568359375, -0.0001010894775390625, -0.01718902587890625, 0.0, -0.000179290771484375, -0.07894134521484375, -0.000278472900390625, -0.0066127777099609375, -4.57763671875e-05, -0.3971986770629883, -9.5367431640625e-06, -2.86102294921875e-05, -0.0003032684326171875, -4.1961669921875e-05, -0.0001010894775390625, -0.06804084777832031, 0.0, -0.6769576072692871, -1.9073486328125e-06, -0.028326034545898438, -0.0007877349853515625, -0.001758575439453125, -0.0001888275146484375, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.4121302366256714, 0.0, -0.013363003730773926, -1.0728830375228426e-06, -0.04441547393798828, -0.27948760986328125, -0.0034437179565429688, -0.00091552734375, -0.0018291473388671875, -0.00412750244140625, -1.33514404296875e-05, -0.0032501220703125, -6.4849853515625e-05, -0.010461807250976562, -3.62396240234375e-05, -0.2241802215576172, 0.0, -0.8426600694656372, -2.7060192223871127e-05, -0.04969596862792969, -3.576278118089249e-07, -0.22715672850608826, 0.0, -0.010921120643615723, 0.0, -0.1486397236585617, -1.1920928244535389e-07, -0.010240554809570312, -0.00011444091796875, -2.86102294921875e-05, -0.003501717932522297, 0.0, -0.000560760498046875, -9.5367431640625e-06, -3.24249267578125e-05, -0.1886005401611328, -1.33514404296875e-05, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.4901160284352954e-05, -1.71661376953125e-05, -0.0002117156982421875, -1.9073486328125e-06, -0.0015468597412109375, -1.33514404296875e-05, -0.009346246719360352, 0.0, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.004963874816894531, -0.000110626220703125, -1.71661376953125e-05, 0.0, -0.2519512176513672, 0.0, -0.15306949615478516, -0.002155303955078125, -0.000240325927734375, -3.814697265625e-06, -0.0007121562957763672, -1.1920928244535389e-07, -0.0034290552139282227, -1.1920928244535389e-07, -0.011274456977844238, 0.0, -0.5312999486923218, -1.9073486328125e-06, -3.0517578125e-05, -0.0002346038818359375, -6.29425048828125e-05, -0.3473288416862488, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-05, -0.00048065185546875, 0.0, -4.76837158203125e-05, 0.0, -0.06711387634277344, 0.0, -5.7220458984375e-06, -0.0014190673828125, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.7220458984375e-05, -0.000102996826171875, -1.9073486328125e-06, -0.0001621246337890625, -0.000339508056640625, -2.09808349609375e-05, 0.0, -0.8028974533081055, 0.0, -0.005922675132751465, 0.0, -0.5279541015625, 0.0, -0.0001010894775390625, -5.91278076171875e-05, -3.62396240234375e-05, -0.0747913122177124, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.000682830810546875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "attacker", "<EOS>", 268, "target", "<EOS>", 295, 92, 146, 13, 132, 0, 283, 41, 139, 19, 160, "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 296, 86, 130, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.371332545093566, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "attacker"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.9608821868896484, -2.622600959512056e-06, 0.0, -0.2726008892059326, -0.00011146068572998047, -6.103515625e-05, -0.00241851806640625, -0.0008020401000976562, -0.08324909210205078, -0.00435638427734375, -0.0003986358642578125, -0.011460304260253906, -0.35592079162597656, -0.00055694580078125, -0.0009670257568359375, -0.0001010894775390625, -0.01718902587890625, 0.0, -0.000179290771484375, -0.07894134521484375, -0.000278472900390625, -0.0066127777099609375, -4.57763671875e-05, -0.3971986770629883, -9.5367431640625e-06, -2.86102294921875e-05, -0.0003032684326171875, -4.1961669921875e-05, -0.0001010894775390625, -0.06804084777832031, 0.0, -0.6769576072692871, -1.9073486328125e-06, -0.028326034545898438, -0.0007877349853515625, -0.001758575439453125, -0.0001888275146484375, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.4121302366256714, 0.0, -0.013363003730773926, -1.0728830375228426e-06, -0.04441547393798828, -0.27948760986328125, -0.0034437179565429688, -0.00091552734375, -0.0018291473388671875, -0.00412750244140625, -1.33514404296875e-05, -0.0032501220703125, -6.4849853515625e-05, -0.010461807250976562, -3.62396240234375e-05, -0.2241802215576172, 0.0, -0.8426600694656372, -2.7060192223871127e-05, -0.04969596862792969, -3.576278118089249e-07, -0.22715672850608826, 0.0, -0.010921120643615723, 0.0, -0.1486397236585617, -1.1920928244535389e-07, -0.010240554809570312, -0.00011444091796875, -2.86102294921875e-05, -0.003501717932522297, 0.0, -0.000560760498046875, -9.5367431640625e-06, -3.24249267578125e-05, -0.1886005401611328, -1.33514404296875e-05, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.4901160284352954e-05, -1.71661376953125e-05, -0.0002117156982421875, -1.9073486328125e-06, -0.0015468597412109375, -1.33514404296875e-05, -0.009346246719360352, 0.0, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.004963874816894531, -0.000110626220703125, -1.71661376953125e-05, 0.0, -0.2519512176513672, 0.0, -0.15306949615478516, -0.002155303955078125, -0.000240325927734375, -3.814697265625e-06, -0.0007121562957763672, -1.1920928244535389e-07, -0.0034290552139282227, -1.1920928244535389e-07, -0.011274456977844238, 0.0, -0.5312999486923218, -1.9073486328125e-06, -3.0517578125e-05, -0.0002346038818359375, -6.29425048828125e-05, -0.3473288416862488, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-05, -0.00048065185546875, 0.0, -4.76837158203125e-05, 0.0, -0.06711387634277344, 0.0, -5.7220458984375e-06, -0.0014190673828125, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.7220458984375e-05, -0.000102996826171875, -1.9073486328125e-06, -0.0001621246337890625, -0.000339508056640625, -2.09808349609375e-05, 0.0, -0.5967521667480469, 0.0, -0.17049503326416016, -0.0016918182373046875, -0.000225067138671875, -3.814697265625e-06, -0.0012689828872680664, -1.1920928244535389e-07, -0.003021240234375, -1.1920928244535389e-07, -0.01148831844329834, 0.0, -0.5388540029525757, -1.9073486328125e-06, -3.0517578125e-05, -0.0002613067626953125, -5.7220458984375e-05, -0.3699701428413391, -3.814697265625e-06, -9.5367431640625e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -0.0004825592041015625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "attacker", "<EOS>", 268, "target", "<EOS>", 295, 92, 146, 13, 132, 0, 283, 41, 139, 19, 160, "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 296, 86, 130, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.653518755249038, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "attacker"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('minion_died', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.9608821868896484, -2.622600959512056e-06, 0.0, -0.2726008892059326, -0.00011146068572998047, -6.103515625e-05, -0.00241851806640625, -0.0008020401000976562, -0.08324909210205078, -0.00435638427734375, -0.0003986358642578125, -0.011460304260253906, -0.35592079162597656, -0.00055694580078125, -0.0009670257568359375, -0.0001010894775390625, -0.01718902587890625, 0.0, -0.000179290771484375, -0.07894134521484375, -0.000278472900390625, -0.0066127777099609375, -4.57763671875e-05, -0.3971986770629883, -9.5367431640625e-06, -2.86102294921875e-05, -0.0003032684326171875, -4.1961669921875e-05, -0.0001010894775390625, -0.06804084777832031, 0.0, -0.6769576072692871, -1.9073486328125e-06, -0.028326034545898438, -0.0007877349853515625, -0.001758575439453125, -0.0001888275146484375, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.4121302366256714, 0.0, -0.013363003730773926, -1.0728830375228426e-06, -0.04441547393798828, -0.27948760986328125, -0.0034437179565429688, -0.00091552734375, -0.0018291473388671875, -0.00412750244140625, -1.33514404296875e-05, -0.0032501220703125, -6.4849853515625e-05, -0.010461807250976562, -3.62396240234375e-05, -0.2241802215576172, 0.0, -0.8426600694656372, -2.7060192223871127e-05, -0.04969596862792969, -3.576278118089249e-07, -0.22715672850608826, 0.0, -0.010921120643615723, 0.0, -0.1486397236585617, -1.1920928244535389e-07, -0.010240554809570312, -0.00011444091796875, -2.86102294921875e-05, -0.003501717932522297, 0.0, -0.000560760498046875, -9.5367431640625e-06, -3.24249267578125e-05, -0.1886005401611328, -1.33514404296875e-05, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.4901160284352954e-05, -1.71661376953125e-05, -0.0002117156982421875, -1.9073486328125e-06, -0.0015468597412109375, -1.33514404296875e-05, -0.009346246719360352, 0.0, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.004963874816894531, -0.000110626220703125, -1.71661376953125e-05, 0.0, -0.2519512176513672, 0.0, -0.15306949615478516, -0.002155303955078125, -0.000240325927734375, -3.814697265625e-06, -0.0007121562957763672, -1.1920928244535389e-07, -0.0034290552139282227, -1.1920928244535389e-07, -0.011274456977844238, 0.0, -0.8975499868392944, 0.0, -3.24249267578125e-05, -0.0018482208251953125, -6.103515625e-05, -0.2857445180416107, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -4.9591064453125e-05, -0.0004291534423828125, 0.0, -5.14984130859375e-05, 0.0, -0.07101631164550781, 0.0, -5.7220458984375e-06, -0.0014514923095703125, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026607513427734375, 0.0, -5.53131103515625e-05, -0.000102996826171875, -1.9073486328125e-06, -0.000156402587890625, -0.000335693359375, -2.09808349609375e-05, 0.0, -0.7841739654541016, 0.0, -0.005980849266052246, 0.0, -0.5312595367431641, 0.0, -0.000102996826171875, -5.91278076171875e-05, -3.814697265625e-05, -0.07469391822814941, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.0006847381591796875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "attacker", "<EOS>", 268, "target", "<EOS>", 295, 92, 146, 13, 132, 0, 283, 41, 139, 19, 160, "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 296, 86, 130, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.666039873174697, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "attacker"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('minion_died', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.9608821868896484, -2.622600959512056e-06, 0.0, -0.2726008892059326, -0.00011146068572998047, -6.103515625e-05, -0.00241851806640625, -0.0008020401000976562, -0.08324909210205078, -0.00435638427734375, -0.0003986358642578125, -0.011460304260253906, -0.35592079162597656, -0.00055694580078125, -0.0009670257568359375, -0.0001010894775390625, -0.01718902587890625, 0.0, -0.000179290771484375, -0.07894134521484375, -0.000278472900390625, -0.0066127777099609375, -4.57763671875e-05, -0.3971986770629883, -9.5367431640625e-06, -2.86102294921875e-05, -0.0003032684326171875, -4.1961669921875e-05, -0.0001010894775390625, -0.06804084777832031, 0.0, -0.6769576072692871, -1.9073486328125e-06, -0.028326034545898438, -0.0007877349853515625, -0.001758575439453125, -0.0001888275146484375, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.4121302366256714, 0.0, -0.013363003730773926, -1.0728830375228426e-06, -0.04441547393798828, -0.27948760986328125, -0.0034437179565429688, -0.00091552734375, -0.0018291473388671875, -0.00412750244140625, -1.33514404296875e-05, -0.0032501220703125, -6.4849853515625e-05, -0.010461807250976562, -3.62396240234375e-05, -0.2241802215576172, 0.0, -0.8426600694656372, -2.7060192223871127e-05, -0.04969596862792969, -3.576278118089249e-07, -0.22715672850608826, 0.0, -0.010921120643615723, 0.0, -0.1486397236585617, -1.1920928244535389e-07, -0.010240554809570312, -0.00011444091796875, -2.86102294921875e-05, -0.003501717932522297, 0.0, -0.000560760498046875, -9.5367431640625e-06, -3.24249267578125e-05, -0.1886005401611328, -1.33514404296875e-05, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.4901160284352954e-05, -1.71661376953125e-05, -0.0002117156982421875, -1.9073486328125e-06, -0.0015468597412109375, -1.33514404296875e-05, -0.009346246719360352, 0.0, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.004963874816894531, -0.000110626220703125, -1.71661376953125e-05, 0.0, -0.2519512176513672, 0.0, -0.15306949615478516, -0.002155303955078125, -0.000240325927734375, -3.814697265625e-06, -0.0007121562957763672, -1.1920928244535389e-07, -0.0034290552139282227, -1.1920928244535389e-07, -0.011274456977844238, 0.0, -0.5312999486923218, -1.9073486328125e-06, -3.0517578125e-05, -0.0002346038818359375, -6.29425048828125e-05, -0.3473288416862488, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-05, -0.00048065185546875, 0.0, -4.76837158203125e-05, 0.0, -0.06711387634277344, 0.0, -5.7220458984375e-06, -0.0014190673828125, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.7220458984375e-05, -0.000102996826171875, -1.9073486328125e-06, -0.0001621246337890625, -0.000339508056640625, -2.09808349609375e-05, 0.0, -0.8028974533081055, 0.0, -0.005922675132751465, 0.0, -0.9180412292480469, 0.0, -7.2479248046875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.06422770023345947, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0001068115234375, -4.38690185546875e-05, -0.000579833984375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "attacker", "<EOS>", 268, "target", "<EOS>", 295, 92, 146, 13, 132, 0, 283, 41, 139, 19, 160, "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 296, 86, 130, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.750703472904235, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "attacker"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.9608821868896484, -2.622600959512056e-06, 0.0, -0.2726008892059326, -0.00011146068572998047, -6.103515625e-05, -0.00241851806640625, -0.0008020401000976562, -0.08324909210205078, -0.00435638427734375, -0.0003986358642578125, -0.011460304260253906, -0.35592079162597656, -0.00055694580078125, -0.0009670257568359375, -0.0001010894775390625, -0.01718902587890625, 0.0, -0.000179290771484375, -0.07894134521484375, -0.000278472900390625, -0.0066127777099609375, -4.57763671875e-05, -0.3971986770629883, -9.5367431640625e-06, -2.86102294921875e-05, -0.0003032684326171875, -4.1961669921875e-05, -0.0001010894775390625, -0.06804084777832031, 0.0, -0.6769576072692871, -1.9073486328125e-06, -0.028326034545898438, -0.0007877349853515625, -0.001758575439453125, -0.0001888275146484375, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.4121302366256714, 0.0, -0.013363003730773926, -1.0728830375228426e-06, -0.04441547393798828, -0.27948760986328125, -0.0034437179565429688, -0.00091552734375, -0.0018291473388671875, -0.00412750244140625, -1.33514404296875e-05, -0.0032501220703125, -6.4849853515625e-05, -0.010461807250976562, -3.62396240234375e-05, -0.2241802215576172, 0.0, -0.8426600694656372, -2.7060192223871127e-05, -0.04969596862792969, -3.576278118089249e-07, -0.22715672850608826, 0.0, -0.010921120643615723, 0.0, -0.1486397236585617, -1.1920928244535389e-07, -0.010240554809570312, -0.00011444091796875, -2.86102294921875e-05, -0.003501717932522297, 0.0, -0.000560760498046875, -9.5367431640625e-06, -3.24249267578125e-05, -0.1886005401611328, -1.33514404296875e-05, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.4901160284352954e-05, -1.71661376953125e-05, -0.0002117156982421875, -1.9073486328125e-06, -0.0015468597412109375, -1.33514404296875e-05, -0.009346246719360352, 0.0, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.004963874816894531, -0.000110626220703125, -1.71661376953125e-05, 0.0, -0.2519512176513672, 0.0, -0.15306949615478516, -0.002155303955078125, -0.000240325927734375, -3.814697265625e-06, -0.0007121562957763672, -1.1920928244535389e-07, -0.0034290552139282227, -1.1920928244535389e-07, -0.011274456977844238, 0.0, -0.5312999486923218, -1.9073486328125e-06, -3.0517578125e-05, -0.0002346038818359375, -6.29425048828125e-05, -0.3473288416862488, -1.9073486328125e-06, -0.0001068115234375, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-05, -0.00048065185546875, 0.0, -4.76837158203125e-05, 0.0, -0.06711387634277344, 0.0, -5.7220458984375e-06, -0.0014190673828125, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.7220458984375e-05, -0.000102996826171875, -1.9073486328125e-06, -0.0001621246337890625, -0.000339508056640625, -2.09808349609375e-05, 0.0, -0.5967521667480469, 0.0, -0.17049503326416016, -0.0016918182373046875, -0.000225067138671875, -3.814697265625e-06, -0.0012689828872680664, -1.1920928244535389e-07, -0.003021240234375, -1.1920928244535389e-07, -0.01148831844329834, 0.0, -0.8877090215682983, 0.0, -3.0517578125e-05, -0.0018024444580078125, -5.7220458984375e-05, -0.31055212020874023, -7.62939453125e-06, -8.392333984375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.6702880859375e-05, -4.57763671875e-05, -0.000431060791015625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "attacker", "<EOS>", 268, "target", "<EOS>", 295, 92, 146, 13, 132, 0, 283, 41, 139, 19, 160, "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 296, 86, 130, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.944445390514389, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "attacker"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not minion.<UNK>:\n            attacker.player.game.other_player.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.9608821868896484, -2.622600959512056e-06, 0.0, -0.2726008892059326, -0.00011146068572998047, -6.103515625e-05, -0.00241851806640625, -0.0008020401000976562, -0.08324909210205078, -0.00435638427734375, -0.0003986358642578125, -0.011460304260253906, -0.35592079162597656, -0.00055694580078125, -0.0009670257568359375, -0.0001010894775390625, -0.01718902587890625, 0.0, -0.000179290771484375, -0.07894134521484375, -0.000278472900390625, -0.0066127777099609375, -4.57763671875e-05, -0.3971986770629883, -9.5367431640625e-06, -2.86102294921875e-05, -0.0003032684326171875, -4.1961669921875e-05, -0.0001010894775390625, -0.06804084777832031, 0.0, -0.6769576072692871, -1.9073486328125e-06, -0.028326034545898438, -0.0007877349853515625, -0.001758575439453125, -0.0001888275146484375, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.4121302366256714, 0.0, -0.013363003730773926, -1.0728830375228426e-06, -0.04441547393798828, -0.27948760986328125, -0.0034437179565429688, -0.00091552734375, -0.0018291473388671875, -0.00412750244140625, -1.33514404296875e-05, -0.0032501220703125, -6.4849853515625e-05, -0.010461807250976562, -3.62396240234375e-05, -0.2241802215576172, 0.0, -0.8426600694656372, -2.7060192223871127e-05, -0.04969596862792969, -3.576278118089249e-07, -0.22715672850608826, 0.0, -0.010921120643615723, 0.0, -0.1486397236585617, -1.1920928244535389e-07, -0.010240554809570312, -0.00011444091796875, -2.86102294921875e-05, -0.003501717932522297, 0.0, -0.000560760498046875, -9.5367431640625e-06, -3.24249267578125e-05, -0.1886005401611328, -1.33514404296875e-05, -5.7220458984375e-06, -0.000186920166015625, 0.0, -1.4901160284352954e-05, -1.71661376953125e-05, -0.0002117156982421875, -1.9073486328125e-06, -0.0015468597412109375, -1.33514404296875e-05, -0.009346246719360352, 0.0, -7.62939453125e-06, -0.0001087188720703125, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -5.7220458984375e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.004963874816894531, -0.000110626220703125, -1.71661376953125e-05, 0.0, -0.2519512176513672, 0.0, -0.15306949615478516, -0.002155303955078125, -0.000240325927734375, -3.814697265625e-06, -0.0007121562957763672, -1.1920928244535389e-07, -0.0034290552139282227, -1.1920928244535389e-07, -0.011274456977844238, 0.0, -0.8975499868392944, 0.0, -3.24249267578125e-05, -0.0018482208251953125, -6.103515625e-05, -0.2857445180416107, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -4.9591064453125e-05, -0.0004291534423828125, 0.0, -5.14984130859375e-05, 0.0, -0.07101631164550781, 0.0, -5.7220458984375e-06, -0.0014514923095703125, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026607513427734375, 0.0, -5.53131103515625e-05, -0.000102996826171875, -1.9073486328125e-06, -0.000156402587890625, -0.000335693359375, -2.09808349609375e-05, 0.0, -0.6122035980224609, 0.0, -0.17038917541503906, -0.0017223358154296875, -0.0002231597900390625, -3.814697265625e-06, -0.0012519359588623047, -1.1920928244535389e-07, -0.002971649169921875, -1.1920928244535389e-07, -0.011436820030212402, 0.0, -0.5404603481292725, -1.9073486328125e-06, -3.0517578125e-05, -0.0002613067626953125, -5.7220458984375e-05, -0.3692801594734192, -3.814697265625e-06, -9.5367431640625e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -0.0004825592041015625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "attacker", "<EOS>", 268, "target", "<EOS>", 295, 92, 146, 13, 132, 0, 283, 41, 139, 19, 160, "target", "<EOS>", 279, 6, 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 296, 86, 130, 11, 129, 11, 129, 11, 129, 11, 129, 19, 160, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "<UNK>", "<EOS>", 81, 21, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.97985004287149, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"op": {"_type": "Add"}, "value": {"_type": "Num", "n": 1}, "_type": "AugAssign", "target": {"value": {"value": {"value": {"value": {"_type": "Name", "id": "attacker"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "<UNK>"}}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"op": {"_type": "And"}, "values": [{"_type": "Compare", "left": {"_type": "Name", "id": "target"}, "ops": [{"_type": "Is"}], "comparators": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}], "_type": "BoolOp"}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(1)\n            target.increase_health(1)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('minion_died', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -1.9527312517166138, -7.62939453125e-06, -0.20564651489257812, -1.1444091796875e-05, -0.0002765655517578125, -0.033446311950683594, -3.814697265625e-06, -0.028584178537130356, 0.0, -0.000583648681640625, 0.0, -0.00017547607421875, -0.22923660278320312, -0.0001811981201171875, -1.9073486328125e-06, -0.1186971664428711, -3.814697265625e-06, -0.051246996968984604, -2.0265579223632812e-06, -0.41915440559387207, 0.0, -4.76837158203125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.30015110969543457, 0.0, -0.00106048583984375, 0.0, -7.05718994140625e-05, -0.10366058349609375, -3.62396240234375e-05, -3.4332275390625e-05, -0.0002460479736328125, -1.9073486328125e-06, -2.2530381102114916e-05, -1.9073486328125e-06, -0.00028228759765625, -3.933906555175781e-06, -0.000537872314453125, -2.288818359375e-05, -0.009029865264892578, -1.9073486328125e-06, -7.62939453125e-06, -0.0001068115234375, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -8.0108642578125e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.01708221435546875, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -0.2893838882446289, 0.0, -0.1411123275756836, -0.002674102783203125, -0.000244140625, -3.814697265625e-06, -0.0007410049438476562, -1.1920928244535389e-07, -0.0035147666931152344, -1.1920928244535389e-07, -0.012235760688781738, 0.0, -0.5254542827606201, -1.9073486328125e-06, -3.0517578125e-05, -0.000240325927734375, -6.103515625e-05, -0.38929373025894165, -3.814697265625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, -4.00543212890625e-05, -0.0004825592041015625, 0.0, -4.76837158203125e-05, 0.0, -0.06745147705078125, 0.0, -5.7220458984375e-06, -0.0014286041259765625, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.53131103515625e-05, -0.000102996826171875, -1.9073486328125e-06, -0.000164031982421875, -0.00034332275390625, -2.09808349609375e-05, 0.0, -0.8065071105957031, 0.0, -0.005885481834411621, 0.0, -0.5265483856201172, 0.0, -0.0001010894775390625, -5.91278076171875e-05, -3.62396240234375e-05, -0.07516860961914062, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.0006847381591796875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -10.116136269584672, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(1)\n            target.increase_health(1)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -1.9527312517166138, -7.62939453125e-06, -0.20564651489257812, -1.1444091796875e-05, -0.0002765655517578125, -0.033446311950683594, -3.814697265625e-06, -0.028584178537130356, 0.0, -0.000583648681640625, 0.0, -0.00017547607421875, -0.22923660278320312, -0.0001811981201171875, -1.9073486328125e-06, -0.1186971664428711, -3.814697265625e-06, -0.051246996968984604, -2.0265579223632812e-06, -0.41915440559387207, 0.0, -4.76837158203125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.30015110969543457, 0.0, -0.00106048583984375, 0.0, -7.05718994140625e-05, -0.10366058349609375, -3.62396240234375e-05, -3.4332275390625e-05, -0.0002460479736328125, -1.9073486328125e-06, -2.2530381102114916e-05, -1.9073486328125e-06, -0.00028228759765625, -3.933906555175781e-06, -0.000537872314453125, -2.288818359375e-05, -0.009029865264892578, -1.9073486328125e-06, -7.62939453125e-06, -0.0001068115234375, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -8.0108642578125e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.01708221435546875, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -0.2893838882446289, 0.0, -0.1411123275756836, -0.002674102783203125, -0.000244140625, -3.814697265625e-06, -0.0007410049438476562, -1.1920928244535389e-07, -0.0035147666931152344, -1.1920928244535389e-07, -0.012235760688781738, 0.0, -0.5254542827606201, -1.9073486328125e-06, -3.0517578125e-05, -0.000240325927734375, -6.103515625e-05, -0.38929373025894165, -3.814697265625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, -4.00543212890625e-05, -0.0004825592041015625, 0.0, -4.76837158203125e-05, 0.0, -0.06745147705078125, 0.0, -5.7220458984375e-06, -0.0014286041259765625, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.53131103515625e-05, -0.000102996826171875, -1.9073486328125e-06, -0.000164031982421875, -0.00034332275390625, -2.09808349609375e-05, 0.0, -0.5938854217529297, 0.0, -0.16960906982421875, -0.0016994476318359375, -0.000225067138671875, -3.814697265625e-06, -0.0012805461883544922, -1.1920928244535389e-07, -0.0030460357666015625, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -0.5384896993637085, -1.9073486328125e-06, -3.0517578125e-05, -0.0002613067626953125, -5.7220458984375e-05, -0.37651723623275757, -3.814697265625e-06, -9.5367431640625e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -3.62396240234375e-05, -0.000484466552734375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -10.398320214763643, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(1)\n            target.increase_health(1)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('minion_died', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -1.9527312517166138, -7.62939453125e-06, -0.20564651489257812, -1.1444091796875e-05, -0.0002765655517578125, -0.033446311950683594, -3.814697265625e-06, -0.028584178537130356, 0.0, -0.000583648681640625, 0.0, -0.00017547607421875, -0.22923660278320312, -0.0001811981201171875, -1.9073486328125e-06, -0.1186971664428711, -3.814697265625e-06, -0.051246996968984604, -2.0265579223632812e-06, -0.41915440559387207, 0.0, -4.76837158203125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.30015110969543457, 0.0, -0.00106048583984375, 0.0, -7.05718994140625e-05, -0.10366058349609375, -3.62396240234375e-05, -3.4332275390625e-05, -0.0002460479736328125, -1.9073486328125e-06, -2.2530381102114916e-05, -1.9073486328125e-06, -0.00028228759765625, -3.933906555175781e-06, -0.000537872314453125, -2.288818359375e-05, -0.009029865264892578, -1.9073486328125e-06, -7.62939453125e-06, -0.0001068115234375, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -8.0108642578125e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.01708221435546875, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -0.2893838882446289, 0.0, -0.1411123275756836, -0.002674102783203125, -0.000244140625, -3.814697265625e-06, -0.0007410049438476562, -1.1920928244535389e-07, -0.0035147666931152344, -1.1920928244535389e-07, -0.012235760688781738, 0.0, -0.9061295986175537, 0.0, -3.0517578125e-05, -0.00180816650390625, -6.103515625e-05, -0.3112965524196625, -9.5367431640625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -5.14984130859375e-05, -0.0004329681396484375, 0.0, -5.14984130859375e-05, 0.0, -0.07116889953613281, 0.0, -5.7220458984375e-06, -0.00145721435546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026607513427734375, 0.0, -5.53131103515625e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001583099365234375, -0.0003414154052734375, -2.09808349609375e-05, 0.0, -0.7903776168823242, 0.0, -0.005915999412536621, 0.0, -0.5294456481933594, 0.0, -0.000102996826171875, -5.91278076171875e-05, -3.814697265625e-05, -0.07507789134979248, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-05, -4.76837158203125e-05, -0.0006847381591796875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -10.410790072694795, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(1)\n            target.increase_health(1)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -1.9527312517166138, -7.62939453125e-06, -0.20564651489257812, -1.1444091796875e-05, -0.0002765655517578125, -0.033446311950683594, -3.814697265625e-06, -0.028584178537130356, 0.0, -0.000583648681640625, 0.0, -0.00017547607421875, -0.22923660278320312, -0.0001811981201171875, -1.9073486328125e-06, -0.1186971664428711, -3.814697265625e-06, -0.051246996968984604, -2.0265579223632812e-06, -0.41915440559387207, 0.0, -4.76837158203125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.30015110969543457, 0.0, -0.00106048583984375, 0.0, -7.05718994140625e-05, -0.10366058349609375, -3.62396240234375e-05, -3.4332275390625e-05, -0.0002460479736328125, -1.9073486328125e-06, -2.2530381102114916e-05, -1.9073486328125e-06, -0.00028228759765625, -3.933906555175781e-06, -0.000537872314453125, -2.288818359375e-05, -0.009029865264892578, -1.9073486328125e-06, -7.62939453125e-06, -0.0001068115234375, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -8.0108642578125e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.01708221435546875, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -0.2893838882446289, 0.0, -0.1411123275756836, -0.002674102783203125, -0.000244140625, -3.814697265625e-06, -0.0007410049438476562, -1.1920928244535389e-07, -0.0035147666931152344, -1.1920928244535389e-07, -0.012235760688781738, 0.0, -0.5254542827606201, -1.9073486328125e-06, -3.0517578125e-05, -0.000240325927734375, -6.103515625e-05, -0.38929373025894165, -3.814697265625e-06, -0.000110626220703125, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, -4.00543212890625e-05, -0.0004825592041015625, 0.0, -4.76837158203125e-05, 0.0, -0.06745147705078125, 0.0, -5.7220458984375e-06, -0.0014286041259765625, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026226043701171875, 0.0, -5.53131103515625e-05, -0.000102996826171875, -1.9073486328125e-06, -0.000164031982421875, -0.00034332275390625, -2.09808349609375e-05, 0.0, -0.5938854217529297, 0.0, -0.16960906982421875, -0.0016994476318359375, -0.000225067138671875, -3.814697265625e-06, -0.0012805461883544922, -1.1920928244535389e-07, -0.0030460357666015625, -1.1920928244535389e-07, -0.011554121971130371, 0.0, -0.8882230520248413, 0.0, -3.0517578125e-05, -0.001800537109375, -5.7220458984375e-05, -0.31501996517181396, -7.62939453125e-06, -8.392333984375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.6702880859375e-05, -4.57763671875e-05, -0.0004329681396484375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -10.688042120948793, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            target.change_attack(1)\n            target.increase_health(1)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -1.9527312517166138, -7.62939453125e-06, -0.20564651489257812, -1.1444091796875e-05, -0.0002765655517578125, -0.033446311950683594, -3.814697265625e-06, -0.028584178537130356, 0.0, -0.000583648681640625, 0.0, -0.00017547607421875, -0.22923660278320312, -0.0001811981201171875, -1.9073486328125e-06, -0.1186971664428711, -3.814697265625e-06, -0.051246996968984604, -2.0265579223632812e-06, -0.41915440559387207, 0.0, -4.76837158203125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.30015110969543457, 0.0, -0.00106048583984375, 0.0, -7.05718994140625e-05, -0.10366058349609375, -3.62396240234375e-05, -3.4332275390625e-05, -0.0002460479736328125, -1.9073486328125e-06, -2.2530381102114916e-05, -1.9073486328125e-06, -0.00028228759765625, -3.933906555175781e-06, -0.000537872314453125, -2.288818359375e-05, -0.009029865264892578, -1.9073486328125e-06, -7.62939453125e-06, -0.0001068115234375, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -8.0108642578125e-05, 0.0, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.01708221435546875, -0.0001087188720703125, -1.71661376953125e-05, 0.0, -0.2893838882446289, 0.0, -0.1411123275756836, -0.002674102783203125, -0.000244140625, -3.814697265625e-06, -0.0007410049438476562, -1.1920928244535389e-07, -0.0035147666931152344, -1.1920928244535389e-07, -0.012235760688781738, 0.0, -0.9061295986175537, 0.0, -3.0517578125e-05, -0.00180816650390625, -6.103515625e-05, -0.3112965524196625, -9.5367431640625e-06, -9.5367431640625e-05, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.6702880859375e-05, -5.14984130859375e-05, -0.0004329681396484375, 0.0, -5.14984130859375e-05, 0.0, -0.07116889953613281, 0.0, -5.7220458984375e-06, -0.00145721435546875, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.00026607513427734375, 0.0, -5.53131103515625e-05, -0.0001049041748046875, -1.9073486328125e-06, -0.0001583099365234375, -0.0003414154052734375, -2.09808349609375e-05, 0.0, -0.6070890426635742, 0.0, -0.16927719116210938, -0.0017299652099609375, -0.000225067138671875, -3.814697265625e-06, -0.0012614727020263672, -1.1920928244535389e-07, -0.0030040740966796875, -1.1920928244535389e-07, -0.011514067649841309, 0.0, -0.5400187969207764, -1.9073486328125e-06, -3.0517578125e-05, -0.0002613067626953125, -5.7220458984375e-05, -0.3759281039237976, -3.814697265625e-06, -9.5367431640625e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -3.4332275390625e-05, -0.000484466552734375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "change_attack", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "target", "<EOS>", "increase_health", "<EOS>", 282, 47, 165, "1", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -10.720001863256456, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "change_attack"}}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "target"}, "_type": "Attribute", "attr": "increase_health"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            targets.extend(self.player.minions)\n            targets.extend(self.player.minions)\n            targets.extend(self.player)\n\n    def deactivate(self, player):\n        player.bind('minion_died', self._reveal)\n\n    def deactivate(self, player):\n        player.bind('minion_died', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -0.4214731454849243, 0.0, -0.15349292755126953, -5.7220458984375e-06, -2.6702880859375e-05, -0.0004940032958984375, 0.0, -0.6613712310791016, -1.1444091796875e-05, -0.009271621704101562, -1.9073486328125e-06, -0.016427040100097656, -0.0004367828369140625, -0.0038051605224609375, 0.0, -0.04670485481619835, -8.96453857421875e-05, -0.0005645751953125, 0.0, -7.05718994140625e-05, -0.015911102294921875, -7.43865966796875e-05, -1.71661376953125e-05, -0.1372356414794922, -7.62939453125e-06, -0.6332401037216187, 0.0, -0.20874595642089844, -9.5367431640625e-06, -2.47955322265625e-05, -0.00066375732421875, 0.0, -0.8250846862792969, -9.5367431640625e-06, -0.007886886596679688, -1.9073486328125e-06, -0.018693923950195312, -0.0003871917724609375, -0.0041656494140625, 0.0, -0.050647906959056854, -7.05718994140625e-05, -0.0005168914794921875, 0.0, -7.43865966796875e-05, -0.016324996948242188, -6.866455078125e-05, -1.71661376953125e-05, -0.15436172485351562, -7.62939453125e-06, -0.6089624166488647, 0.0, -0.2011404037475586, -9.5367431640625e-06, -2.47955322265625e-05, -0.0006809234619140625, 0.0, -0.5710391998291016, -7.2479248046875e-05, -0.06862461566925049, -0.0005207061767578125, -0.0015392303466796875, 0.0, -0.0022220611572265625, -7.62939453125e-06, -0.03309822082519531, 0.0, -7.62939453125e-06, -0.000392913818359375, 0.0, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.00034618377685546875, 0.0, -0.0001583099365234375, -6.29425048828125e-05, -1.9073486328125e-06, -0.0007162094116210938, -1.9073486328125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.4553050994873047, 0.0, -0.00776064395904541, 0.0, -0.5773824453353882, 0.0, -0.00012969970703125, -5.53131103515625e-05, -3.0517578125e-05, -0.07989156246185303, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.82012939453125e-05, -5.14984130859375e-05, -0.0007266998291015625, 0.0, -7.05718994140625e-05, -3.814697265625e-06, -0.0281982421875, 0.0, -1.9073486328125e-05, -0.0008220672607421875, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.0002079010009765625, 0.0, -8.20159912109375e-05, -8.392333984375e-05, 0.0, -8.0108642578125e-05, -3.62396240234375e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.2256336212158203, 0.0, -0.009885430335998535, 0.0, -0.5902689695358276, 0.0, -0.00011444091796875, -5.7220458984375e-05, -4.00543212890625e-05, -0.07258760929107666, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-05, -5.14984130859375e-05, -0.0006999969482421875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 19, 160, "player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "minion_died", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -10.721392018835914, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "minion_died"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, <UNK>, attacker):\n        if len([minion for minion in self.player.minions if not minion.<UNK>]\n            ) > 0:\n            target = self.player.game.random_choice(self.player.minions)\n            targets.extend(self.player.minions)\n            targets.extend(self.player)\n            super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.000270843505859375, -8.940656698541716e-06, -4.017321771243587e-05, -5.53131103515625e-05, 0.0, 0.0, -0.0105360746383667, -1.71661376953125e-05, -9.536741345073096e-06, -0.04049968719482422, -0.03341102600097656, -0.0007266998291015625, -1.6689286894688848e-06, -0.0066165924072265625, -2.145773578376975e-06, -2.2649765014648438e-06, -0.0028918981552124023, -7.62939453125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0190507173538208, -1.1920928244535389e-07, -9.34600830078125e-05, -0.004403114318847656, 0.0, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.6842951774597168, -5.483612312673358e-06, -1.9073486328125e-06, -0.1560986042022705, -8.833035099087283e-05, -4.57763671875e-05, -0.002788543701171875, -0.0006475448608398438, -0.4632415771484375, -4.00543212890625e-05, -0.1754312515258789, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.06132805347442627, 0.0, -0.000152587890625, -0.17391109466552734, -0.02973651885986328, -9.72747802734375e-05, 0.0, -0.00048732757568359375, 0.0, -0.018395423889160156, -0.0062999725341796875, -0.001461029052734375, 0.0, -0.003856658935546875, 0.0, -0.000164031982421875, 0.0, -0.0003871917724609375, -5.7220458984375e-06, -0.000263214111328125, 0.0, -0.02999591827392578, -1.1444091796875e-05, -0.0014219284057617188, 0.0, -0.045560404658317566, -1.9073486328125e-06, -0.002071380615234375, -0.015336036682128906, -0.0018177032470703125, -0.00167083740234375, -1.33514404296875e-05, -1.9073486328125e-06, -0.000576019287109375, -1.9073486328125e-06, -0.046563148498535156, 0.0, -0.0022592544555664062, -3.576278118089249e-07, -0.000110626220703125, -0.0061702728271484375, -4.00543212890625e-05, -3.814697265625e-05, -3.814697265625e-06, -7.021406054263934e-05, 0.0, -0.18015384674072266, -0.00012969970703125, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -0.32527971267700195, 0.0, -0.013842582702636719, -0.007892608642578125, -2.86102294921875e-05, -3.24249267578125e-05, -0.017023086547851562, 0.0, -0.8803863525390625, -3.4332275390625e-05, -0.0006542205810546875, 0.0, -0.09253227710723877, -0.000774383544921875, -0.03270244598388672, 0.0, -0.0008912074845284224, -2.3841855067985307e-07, -0.005025386810302734, -1.1920928244535389e-07, -0.0016727447509765625, -0.008776664733886719, 0.0, -0.00728607177734375, -5.7220458984375e-06, -0.0028095245361328125, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001735687255859375, -0.026810646057128906, 0.0, -0.02554933726787567, -7.62939453125e-06, -0.0002536773681640625, 0.0, -8.392333984375e-05, -0.009214401245117188, -6.103515625e-05, -4.9591064453125e-05, -0.10026359558105469, -2.47955322265625e-05, -0.4214731454849243, 0.0, -0.15349292755126953, -5.7220458984375e-06, -2.6702880859375e-05, -0.0004940032958984375, 0.0, -0.6613712310791016, -1.1444091796875e-05, -0.009271621704101562, -1.9073486328125e-06, -0.016427040100097656, -0.0004367828369140625, -0.0038051605224609375, 0.0, -0.04670485481619835, -8.96453857421875e-05, -0.0005645751953125, 0.0, -7.05718994140625e-05, -0.015911102294921875, -7.43865966796875e-05, -1.71661376953125e-05, -0.1372356414794922, -7.62939453125e-06, -0.6332401037216187, 0.0, -0.20874595642089844, -9.5367431640625e-06, -2.47955322265625e-05, -0.00066375732421875, 0.0, -0.5767765045166016, -7.05718994140625e-05, -0.06823456287384033, -0.0005130767822265625, -0.0015287399291992188, 0.0, -0.0030460357666015625, 0.0, -9.72747802734375e-05, -0.4504966735839844, -1.71661376953125e-05, 0.0, -1.16363525390625, 0.0, -4.649129550671205e-05, -4.76837158203125e-05, -0.0016756057739257812, -1.1444091796875e-05, -0.0005035400390625, -1.9073486328125e-06, -0.009994745254516602, -1.9073486328125e-06, -1.1444091796875e-05, -0.000125885009765625, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -5.91278076171875e-05, 0.0, -4.57763671875e-05, -3.62396240234375e-05, -7.62939453125e-06, -0.004733085632324219, -0.0001010894775390625, -1.71661376953125e-05, 0.0, -0.23871898651123047, 0.0, -0.15058517456054688, -0.0021190643310546875, -0.0002384185791015625, -3.814697265625e-06, -0.0008742809295654297, -1.1920928244535389e-07, -0.003480672836303711, -1.1920928244535389e-07, -0.0112534761428833, 0.0, -0.5275325775146484, -1.9073486328125e-06, -3.0517578125e-05, -0.0002346038818359375, -6.29425048828125e-05, -0.3843845725059509, -1.9073486328125e-06, -0.000102996826171875, 0.0, -1.52587890625e-05, 0.0, -3.0517578125e-05, -4.00543212890625e-05, -0.000484466552734375, 0.0, -4.76837158203125e-05, 0.0, -0.06680488586425781, 0.0, -5.7220458984375e-06, -0.00142669677734375, 0.0, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -0.000263214111328125, 0.0, -5.53131103515625e-05, -0.000102996826171875, -1.9073486328125e-06, -0.000164031982421875, -0.00034332275390625, -2.09808349609375e-05, 0.0, -0.593632698059082, 0.0, -0.1697559356689453, -0.001697540283203125, -0.000225067138671875, -3.814697265625e-06, -0.0012729167938232422, -1.1920928244535389e-07, -0.00304412841796875, -1.1920928244535389e-07, -0.01154172420501709, 0.0, -0.538683295249939, -1.9073486328125e-06, -3.0517578125e-05, -0.0002613067626953125, -5.7220458984375e-05, -0.3765339255332947, -3.814697265625e-06, -9.5367431640625e-05, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -3.62396240234375e-05, -0.000484466552734375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Repentance", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 298, 101, 184, "Repentance", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 91, 143, "_reveal", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "<UNK>", "<EOS>", 268, "attacker", "<EOS>", 295, 92, 146, 15, 139, 14, 136, 19, 160, "len", "<EOS>", 282, 44, 156, 19, 160, "minion", "<EOS>", 280, 270, 19, 160, "minion", "<EOS>", 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 282, 70, 266, 125, 11, 129, 19, 160, "minion", "<EOS>", "<UNK>", "<EOS>", 279, 3, 282, 47, 165, "0", "<EOS>", 298, 85, 128, 282, 45, 160, "target", "<EOS>", 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "game", "<EOS>", "random_choice", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "targets", "<EOS>", "extend", "<EOS>", 282, 37, 129, 19, 160, "self", "<EOS>", "player", "<EOS>", 89, 141, 14, 134, 11, 129, 33, 260, "super", "<EOS>", "reveal", "<EOS>", 91, 143, "activate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -11.471549799453769, "model_output": {"_type": "Module", "body": [{"name": "Repentance", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template15", "hole2": "PALADIN"}, {"name": "_reveal", "_type": "FunctionDef", "body": [{"body": [{"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "target"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "targets"}, "_type": "Attribute", "attr": "extend"}}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "reveal"}}, "_type": "Expr"}], "_type": "If", "test": {"_type": "Compare", "left": {"args": [{"_type": "ListComp", "elt": {"_type": "Name", "id": "minion"}, "generators": [{"iter": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}, "_type": "comprehension", "target": {"_type": "Name", "id": "minion"}, "ifs": [{"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"_type": "Name", "id": "minion"}, "_type": "Attribute", "attr": "<UNK>"}}]}]}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "ops": [{"_type": "Gt"}], "comparators": [{"_type": "Num", "n": 0}]}}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "<UNK>", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}], "_type": "arguments"}}, {"name": "activate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -21.818281173706055], "choice_history": [80, 159, 294], "score": -21.818361282348633, "model_output": {"_type": "Module", "body": []}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-1.9073486328125e-06, -7.82012939453125e-05, -4.76837158203125e-05, -15.767281532287598, -6.166782379150391, -0.9309195280075073], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -22.865111231803894, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}], "gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}
{"beams": [{"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, charge=True, charge=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -0.8788844347000122, -1.33514404296875e-05, -1.9073486328125e-06, -0.000278472900390625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.00030612945556640625, 0.0, -0.0002689361572265625, -0.0019893646240234375, -1.9073486328125e-05, -0.0033617019653320312, -0.001651763916015625, -2.288818359375e-05, 0.0, -0.0029554367065429688, -1.1444091796875e-05, -0.000171661376953125, -4.00543212890625e-05, -7.62939453125e-06, -0.0001759314618539065, -1.5497207641601562e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.04483669623732567, -1.931190308823716e-05, -0.03586578369140625, -0.000156402587890625, -2.86102294921875e-05, -0.3904533386230469, -0.00115203857421875, -0.0002460479736328125, -8.7738037109375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.04766559600830078, -2.86102294921875e-05, -0.8849292993545532, -0.0004367828369140625, -0.0003719329833984375, -0.0015583038330078125, -0.000125885009765625, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.179719524276152, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, charge=True, taunt=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -0.8788844347000122, -1.33514404296875e-05, -1.9073486328125e-06, -0.000278472900390625, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.00030612945556640625, 0.0, -0.0002689361572265625, -0.0019893646240234375, -1.9073486328125e-05, -0.0033617019653320312, -0.001651763916015625, -2.288818359375e-05, 0.0, -0.0029554367065429688, -1.1444091796875e-05, -0.000171661376953125, -4.00543212890625e-05, -7.62939453125e-06, -0.0001759314618539065, -1.5497207641601562e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.04483669623732567, -1.931190308823716e-05, -0.03586578369140625, -0.000156402587890625, -2.86102294921875e-05, -0.3904533386230469, -0.00115203857421875, -0.0002460479736328125, -8.7738037109375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.04766559600830078, -2.86102294921875e-05, -1.0237928628921509, -1.1444091796875e-05, -0.0001773834228515625, -0.00141143798828125, -8.392333984375e-05, -2.288818359375e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.317782001387968, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, charge=True, charge=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.8765767812728882, -1.9073486328125e-06, -4.780292510986328e-05, -8.0108642578125e-05, -0.03071308135986328, -0.0002613067626953125, -2.1815138097736053e-05, -0.00010561568342382088, -7.080916839186102e-05, -9.5367431640625e-06, -8.344648813363165e-05, 0.0, -0.002577574923634529, 0.0, -0.0011953115463256836, -1.9073486328125e-06, -0.001140594482421875, 0.0, -0.9092638492584229, -1.71661376953125e-05, -3.814697265625e-06, -0.0002422332763671875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00034236907958984375, 0.0, -0.0002651214599609375, -0.0020961761474609375, -1.9073486328125e-05, -0.003566741943359375, -0.001575469970703125, -2.288818359375e-05, 0.0, -0.0030755996704101562, -1.1444091796875e-05, -0.0001773834228515625, -4.00543212890625e-05, -9.5367431640625e-06, -0.00016854226123541594, -1.5497207641601562e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.04404492676258087, -1.931190308823716e-05, -0.03735923767089844, -0.0001583099365234375, -2.86102294921875e-05, -0.3887530565261841, -0.001132965087890625, -0.000247955322265625, -8.7738037109375e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.04752349853515625, -2.86102294921875e-05, -0.8814892768859863, -0.00043487548828125, -0.000370025634765625, -0.001556396484375, -0.000125885009765625, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.508488491297612, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Minion(0, 1, charge=True, charge=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.3460503816604614, -0.0008087158203125, -3.814697265625e-06, -0.0056591033935546875, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.00014781951904296875, 0.0, -0.000469207763671875, -0.003326416015625, -2.09808349609375e-05, -0.0022535324096679688, -0.00220489501953125, -2.288818359375e-05, 0.0, -0.004950523376464844, -9.5367431640625e-06, -0.0002079010009765625, -4.00543212890625e-05, -1.1444091796875e-05, -0.00019440347386989743, -1.7523765563964844e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.05024650692939758, -2.133846101060044e-05, -0.052310943603515625, -0.000152587890625, -3.0517578125e-05, -0.3752615451812744, -0.0011539459228515625, -0.0002536773681640625, -8.96453857421875e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.0489501953125, -2.86102294921875e-05, -0.8725036382675171, -0.0004444122314453125, -0.0003795623779296875, -0.0015468597412109375, -0.0001220703125, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.651490017749893, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, charge=True, taunt=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.8765767812728882, -1.9073486328125e-06, -4.780292510986328e-05, -8.0108642578125e-05, -0.03071308135986328, -0.0002613067626953125, -2.1815138097736053e-05, -0.00010561568342382088, -7.080916839186102e-05, -9.5367431640625e-06, -8.344648813363165e-05, 0.0, -0.002577574923634529, 0.0, -0.0011953115463256836, -1.9073486328125e-06, -0.001140594482421875, 0.0, -0.9092638492584229, -1.71661376953125e-05, -3.814697265625e-06, -0.0002422332763671875, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00034236907958984375, 0.0, -0.0002651214599609375, -0.0020961761474609375, -1.9073486328125e-05, -0.003566741943359375, -0.001575469970703125, -2.288818359375e-05, 0.0, -0.0030755996704101562, -1.1444091796875e-05, -0.0001773834228515625, -4.00543212890625e-05, -9.5367431640625e-06, -0.00016854226123541594, -1.5497207641601562e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.04404492676258087, -1.931190308823716e-05, -0.03735923767089844, -0.0001583099365234375, -2.86102294921875e-05, -0.3887530565261841, -0.001132965087890625, -0.000247955322265625, -8.7738037109375e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.04752349853515625, -2.86102294921875e-05, -1.0264678001403809, -1.1444091796875e-05, -0.0001773834228515625, -0.0014057159423828125, -8.392333984375e-05, -2.288818359375e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.6526659281262255, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Minion(0, 1, charge=True, charge=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.8765767812728882, -1.9073486328125e-06, -4.780292510986328e-05, -8.0108642578125e-05, -0.03071308135986328, -0.0002613067626953125, -2.1815138097736053e-05, -0.00010561568342382088, -7.080916839186102e-05, -9.5367431640625e-06, -8.344648813363165e-05, 0.0, -0.002577574923634529, 0.0, -0.0011953115463256836, -1.9073486328125e-06, -0.001140594482421875, 0.0, -1.2037642002105713, -0.00081634521484375, -1.9073486328125e-06, -0.0050258636474609375, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.0004901885986328125, -0.0035533905029296875, -2.09808349609375e-05, -0.0024442672729492188, -0.0020923614501953125, -2.288818359375e-05, 0.0, -0.005032539367675781, -1.1444091796875e-05, -0.000213623046875, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001854653819464147, -1.7523765563964844e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.04910522326827049, -1.943111237778794e-05, -0.05230426788330078, -0.0001544952392578125, -3.0517578125e-05, -0.3756382465362549, -0.0011310577392578125, -0.0002536773681640625, -8.96453857421875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.049098968505859375, -3.0517578125e-05, -0.8681155443191528, -0.0004425048828125, -0.0003795623779296875, -0.001544952392578125, -0.0001220703125, -1.52587890625e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.806591681382997, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Minion(0, 1, charge=True, taunt=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.3460503816604614, -0.0008087158203125, -3.814697265625e-06, -0.0056591033935546875, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.00014781951904296875, 0.0, -0.000469207763671875, -0.003326416015625, -2.09808349609375e-05, -0.0022535324096679688, -0.00220489501953125, -2.288818359375e-05, 0.0, -0.004950523376464844, -9.5367431640625e-06, -0.0002079010009765625, -4.00543212890625e-05, -1.1444091796875e-05, -0.00019440347386989743, -1.7523765563964844e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.05024650692939758, -2.133846101060044e-05, -0.052310943603515625, -0.000152587890625, -3.0517578125e-05, -0.3752615451812744, -0.0011539459228515625, -0.0002536773681640625, -8.96453857421875e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.0489501953125, -2.86102294921875e-05, -1.0366748571395874, -1.1444091796875e-05, -0.0001811981201171875, -0.00141143798828125, -8.20159912109375e-05, -2.288818359375e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.814862057544815, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Minion(0, 1, charge=True, taunt=True)\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.8765767812728882, -1.9073486328125e-06, -4.780292510986328e-05, -8.0108642578125e-05, -0.03071308135986328, -0.0002613067626953125, -2.1815138097736053e-05, -0.00010561568342382088, -7.080916839186102e-05, -9.5367431640625e-06, -8.344648813363165e-05, 0.0, -0.002577574923634529, 0.0, -0.0011953115463256836, -1.9073486328125e-06, -0.001140594482421875, 0.0, -1.2037642002105713, -0.00081634521484375, -1.9073486328125e-06, -0.0050258636474609375, -9.5367431640625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.0004901885986328125, -0.0035533905029296875, -2.09808349609375e-05, -0.0024442672729492188, -0.0020923614501953125, -2.288818359375e-05, 0.0, -0.005032539367675781, -1.1444091796875e-05, -0.000213623046875, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001854653819464147, -1.7523765563964844e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.04910522326827049, -1.943111237778794e-05, -0.05230426788330078, -0.0001544952392578125, -3.0517578125e-05, -0.3756382465362549, -0.0011310577392578125, -0.0002536773681640625, -8.96453857421875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -0.049098968505859375, -3.0517578125e-05, -1.0410786867141724, -1.1444091796875e-05, -0.0001811981201171875, -0.0014057159423828125, -8.20159912109375e-05, -2.288818359375e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "create_weapon", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "charge", "<EOS>", 20, 161, "True", "<EOS>", 79, 271, "taunt", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.9787537373522355, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "create_weapon", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "charge", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"arg": "taunt", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.2058173418045044, -0.0001049041748046875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -0.0002918243408203125, -1.1920928244535389e-07, -0.07742786407470703, -0.0005397796630859375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.029251431347802e-05, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.000316619873046875, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -0.000335693359375, -1.9073486328125e-06, -0.004756927490234375, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.240067720413208, -2.288818359375e-05, -0.0007266998291015625, -0.0010223388671875, -1.33514404296875e-05, -2.288818359375e-05, -0.001171708106994629, -4.00543212890625e-05, -0.0002536773681640625, -3.814697265625e-05, -1.9073486328125e-06, -0.014196401461958885, -2.288818359375e-05, -0.000934600830078125, -5.7220458984375e-06, -1.045708179473877, -2.47955322265625e-05, -0.14849472045898438, -0.01830005645751953, -9.5367431640625e-06, -0.0010585784912109375, -0.000396728515625, -1.9073486328125e-06, -0.04164016246795654, -0.00015830979100428522, -0.004385948181152344, -0.014652252197265625, -0.7690706253051758, -0.10235494375228882, -0.027643203735351562, -5.7220458984375e-06, -1.52587890625e-05, -0.008579254150390625, -2.09808349609375e-05, -3.814697265625e-06, -0.001148223876953125, -7.62939453125e-06, -0.013624191284179688, -1.7881393432617188e-05, -0.0029047727584838867, -1.9073486328125e-06, -0.020188331604003906, -6.866455078125e-05, -3.814697265625e-06, -0.000240325927734375, -1.9073486328125e-06, -0.021390914916992188, -1.9073486328125e-06, -0.00042724609375, 0.0, -0.0003452301025390625, -0.00023651123046875, -3.62396240234375e-05, -1.9073486328125e-06, -0.0025407075881958008, -3.814697265625e-06, -0.000186920166015625, -1.9073486328125e-06, 0.0, -0.0005950927734375, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -0.0003055333800148219, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -4.676997172095064, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK> = ShadowOf<UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.2058173418045044, -0.0001049041748046875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -0.0002918243408203125, -1.1920928244535389e-07, -0.07742786407470703, -0.0005397796630859375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.029251431347802e-05, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.000316619873046875, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -0.000335693359375, -1.9073486328125e-06, -0.004756927490234375, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.240067720413208, -2.288818359375e-05, -0.0007266998291015625, -0.0010223388671875, -1.33514404296875e-05, -2.288818359375e-05, -0.001171708106994629, -4.00543212890625e-05, -0.0002536773681640625, -3.814697265625e-05, -1.9073486328125e-06, -0.014196401461958885, -2.288818359375e-05, -0.000934600830078125, -5.7220458984375e-06, -1.0853307247161865, -0.00019288063049316406, -0.22794151306152344, -0.014904022216796875, -1.52587890625e-05, -0.0006866455078125, -0.0002346038818359375, -1.9073486328125e-06, -0.03417551517486572, -0.00010335440310882404, -0.003093719482421875, -0.013018608093261719, -0.5091006755828857, -1.0831224918365479, -0.07190070301294327, -0.00854027271270752, -0.10043907165527344, -3.62396240234375e-05, -7.62939453125e-06, -0.009038925170898438, -2.86102294921875e-05, -1.9073486328125e-06, -0.00177001953125, -1.71661376953125e-05, -0.018129467964172363, -1.728534698486328e-05, -0.004216670989990234, 0.0, -0.013926506042480469, -8.392333984375e-05, -7.62939453125e-06, -0.0001888275146484375, -1.9073486328125e-06, -0.021541595458984375, -1.9073486328125e-06, -0.0006885528564453125, 0.0, -0.0004520416259765625, -0.000232696533203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.0027962923049926758, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, 0.0, -0.000568389892578125, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -0.0003085136413574219, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "3", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "Shadow", "Of", "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -5.657286072653726, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "ShadowOf<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = ShadowOf<UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.2058173418045044, -0.0001049041748046875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -0.0002918243408203125, -1.1920928244535389e-07, -0.07742786407470703, -0.0005397796630859375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.029251431347802e-05, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.000316619873046875, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -0.000335693359375, -1.9073486328125e-06, -0.004756927490234375, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.240067720413208, -2.288818359375e-05, -0.0007266998291015625, -0.0010223388671875, -1.33514404296875e-05, -2.288818359375e-05, -0.001171708106994629, -4.00543212890625e-05, -0.0002536773681640625, -3.814697265625e-05, -1.9073486328125e-06, -0.014196401461958885, -2.288818359375e-05, -0.000934600830078125, -5.7220458984375e-06, -1.045708179473877, -2.47955322265625e-05, -0.14849472045898438, -0.01830005645751953, -9.5367431640625e-06, -0.0010585784912109375, -0.000396728515625, -1.9073486328125e-06, -0.04164016246795654, -0.00015830979100428522, -0.004385948181152344, -0.014652252197265625, -0.6596384048461914, -1.0965129137039185, -0.09452793002128601, -0.006467342376708984, -0.10981082916259766, -2.09808349609375e-05, -9.5367431640625e-06, -0.019855499267578125, -3.62396240234375e-05, -1.9073486328125e-06, -0.00135040283203125, -1.71661376953125e-05, -0.025394439697265625, -2.110004425048828e-05, -0.004300594329833984, 0.0, -0.016378402709960938, -8.20159912109375e-05, -7.62939453125e-06, -0.00018310546875, -1.9073486328125e-06, -0.022836685180664062, -1.9073486328125e-06, -0.0006961822509765625, 0.0, -0.000476837158203125, -0.0002346038818359375, -3.24249267578125e-05, -1.9073486328125e-06, -0.0028142929077148438, -3.814697265625e-06, -0.00018310546875, -1.9073486328125e-06, 0.0, -0.0005626678466796875, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.0003083944320678711, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "Shadow", "Of", "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -5.767798679358741, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "ShadowOf<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            <UNK> = ShadowOf<UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.2058173418045044, -0.0001049041748046875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -0.0002918243408203125, -1.1920928244535389e-07, -0.07742786407470703, -0.0005397796630859375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.029251431347802e-05, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.000316619873046875, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -0.000335693359375, -1.9073486328125e-06, -0.004756927490234375, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.240067720413208, -2.288818359375e-05, -0.0007266998291015625, -0.0010223388671875, -1.33514404296875e-05, -2.288818359375e-05, -0.001171708106994629, -4.00543212890625e-05, -0.0002536773681640625, -3.814697265625e-05, -1.9073486328125e-06, -0.014196401461958885, -2.288818359375e-05, -0.000934600830078125, -5.7220458984375e-06, -1.5275371074676514, -1.7642974853515625e-05, -0.06456375122070312, -0.05285167694091797, -1.1444091796875e-05, -0.0010585784912109375, -0.0006084442138671875, -1.9073486328125e-06, -0.023699281737208366, -0.00016796567069832236, -0.005633354187011719, -0.012201309204101562, -0.6292385458946228, -0.9242901802062988, -0.11070355772972107, -0.005949616432189941, -0.1005411148071289, -2.86102294921875e-05, -9.5367431640625e-06, -0.014329910278320312, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014400482177734375, -2.288818359375e-05, -0.021118879318237305, -2.110004425048828e-05, -0.004385471343994141, 0.0, -0.015573501586914062, -8.392333984375e-05, -7.62939453125e-06, -0.0001888275146484375, -1.9073486328125e-06, -0.022777557373046875, -1.9073486328125e-06, -0.0007266998291015625, 0.0, -0.000476837158203125, -0.0002307891845703125, -3.24249267578125e-05, -1.9073486328125e-06, -0.0028105974197387695, -3.814697265625e-06, -0.00018310546875, -1.9073486328125e-06, 0.0, -0.0005664825439453125, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.0003085136413574219, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "2", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "Shadow", "Of", "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -5.974642828443386, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "ShadowOf<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 0):\n            <UNK> = ShadowTreant()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.5567009449005127, 0.0, -4.0531158447265625e-06, -0.0001983642578125, -0.04653358459472656, -0.0002803802490234375, -2.2649621314485557e-05, -0.0001298125716857612, -6.341851985780522e-05, -9.5367431640625e-06, -8.869169687386602e-05, 0.0, -0.002594646066427231, 0.0, -0.0012401342391967773, 0.0, -0.00238800048828125, 0.0, -1.2058173418045044, -0.0001049041748046875, -1.9073486328125e-06, -0.00012969970703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -0.0002918243408203125, -1.1920928244535389e-07, -0.07742786407470703, -0.0005397796630859375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -7.05718994140625e-05, 0.0, -4.029251431347802e-05, -5.7220458984375e-06, -6.4849853515625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.000316619873046875, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -3.24249267578125e-05, -0.000335693359375, -1.9073486328125e-06, -0.004756927490234375, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.240067720413208, -2.288818359375e-05, -0.0007266998291015625, -0.0010223388671875, -1.33514404296875e-05, -2.288818359375e-05, -0.001171708106994629, -4.00543212890625e-05, -0.0002536773681640625, -3.814697265625e-05, -1.9073486328125e-06, -0.014196401461958885, -2.288818359375e-05, -0.000934600830078125, -5.7220458984375e-06, -1.045708179473877, -2.47955322265625e-05, -0.14849472045898438, -0.01830005645751953, -9.5367431640625e-06, -0.0010585784912109375, -0.000396728515625, -1.9073486328125e-06, -0.04164016246795654, -0.00015830979100428522, -0.004385948181152344, -0.014652252197265625, -0.6596384048461914, -1.4948769807815552, -4.589557647705078e-05, -0.00980377197265625, -0.000156402587890625, -5.14984130859375e-05, -0.04244804382324219, -4.00543212890625e-05, -2.09808349609375e-05, -0.0008296966552734375, -7.62939453125e-06, -0.024405479431152344, -2.8967857360839844e-05, -0.0028531551361083984, 0.0, -0.020938873291015625, -7.62939453125e-05, -7.62939453125e-06, -0.0002593994140625, -1.9073486328125e-06, -0.026533126831054688, -1.9073486328125e-06, -0.0003814697265625, 0.0, -0.0003528594970703125, -0.000232696533203125, -3.24249267578125e-05, -1.9073486328125e-06, -0.0023862123489379883, -3.814697265625e-06, -0.0001850128173828125, -1.9073486328125e-06, 0.0, -0.000530242919921875, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.00030136105488054454, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "0", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "Shadow", "Treant", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -5.992440628268007, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "ShadowTreant", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class ShadowOfNothing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 3):\n            <UNK> = ShadowOf<UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -7.43865966796875e-05, -0.0004100799560546875, -7.82012939453125e-05, -4.351044481154531e-05, -0.044845979660749435, -0.22516769170761108, -0.00048805560800246894, -1.1444091796875e-05, 0.0, 0.0, -0.8765767812728882, -1.9073486328125e-06, -4.780292510986328e-05, -8.0108642578125e-05, -0.03071308135986328, -0.0002613067626953125, -2.1815138097736053e-05, -0.00010561568342382088, -7.080916839186102e-05, -9.5367431640625e-06, -8.344648813363165e-05, 0.0, -0.002577574923634529, 0.0, -0.0011953115463256836, -1.9073486328125e-06, -0.001140594482421875, 0.0, -1.3153841495513916, -0.000118255615234375, -1.9073486328125e-06, -0.0001163482666015625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -1.71661376953125e-05, 0.0, -2.6702880859375e-05, -0.000278472900390625, -1.1920928244535389e-07, -0.08866500854492188, -0.0006008148193359375, -3.814697265625e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -7.2479248046875e-05, 0.0, -3.5524200939107686e-05, -5.7220458984375e-06, -6.67572021484375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.00029754638671875, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -3.0517578125e-05, -0.000339508056640625, -1.9073486328125e-06, -0.0044841766357421875, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.23940682411193848, -2.288818359375e-05, -0.0007114410400390625, -0.0009613037109375, -1.33514404296875e-05, -2.288818359375e-05, -0.0011621713638305664, -4.00543212890625e-05, -0.000255584716796875, -4.00543212890625e-05, -1.9073486328125e-06, -0.014186863787472248, -2.288818359375e-05, -0.000919342041015625, -3.814697265625e-06, -1.0906386375427246, -0.00019097328186035156, -0.2237110137939453, -0.014690399169921875, -1.52587890625e-05, -0.0006847381591796875, -0.00023651123046875, -1.9073486328125e-06, -0.03407585620880127, -0.00010335440310882404, -0.0031137466430664062, -0.013029098510742188, -0.5087127685546875, -1.083385705947876, -0.0719379335641861, -0.008510708808898926, -0.0999755859375, -3.62396240234375e-05, -7.62939453125e-06, -0.0090179443359375, -2.86102294921875e-05, -1.9073486328125e-06, -0.0017719268798828125, -1.71661376953125e-05, -0.018068432807922363, -1.728534698486328e-05, -0.004212856292724609, 0.0, -0.013888359069824219, -8.392333984375e-05, -7.62939453125e-06, -0.0001888275146484375, -1.9073486328125e-06, -0.021518707275390625, -1.9073486328125e-06, -0.0006885528564453125, 0.0, -0.0004520416259765625, -0.000232696533203125, -3.4332275390625e-05, -1.9073486328125e-06, -0.0027962923049926758, -3.814697265625e-06, -0.0001811981201171875, -1.9073486328125e-06, 0.0, -0.000568389892578125, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -0.0003085136413574219, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Shadow", "Of", "Nothing", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 104, 187, "Shadow", " ", "of", " ", "Nothing", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 296, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 90, 142, 19, 160, "i", "<EOS>", 14, 136, 19, 160, "range", "<EOS>", 283, 47, 165, "0", "<EOS>", 47, 165, "3", "<EOS>", 296, 85, 128, 282, 45, 160, "<UNK>", "<EOS>", 33, 260, "Shadow", "Of", "<UNK>", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "<UNK>", "<EOS>", "summon", "<EOS>", 284, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 40, 136, 19, 160, "len", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "minions", "<EOS>"], "score": -6.079781690632437, "model_output": {"_type": "Module", "body": [{"name": "ShadowOfNothing", "_type": "ClassDef", "body": [{"hole1": 0, "hole0": "Shadow of Nothing", "_type": "Template18", "hole2": "PRIEST"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"iter": {"args": [{"_type": "Num", "n": 0}, {"_type": "Num", "n": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}, "_type": "For", "target": {"_type": "Name", "id": "i"}, "body": [{"value": {"hole0": "ShadowOf<UNK>", "_type": "Template77"}, "targets": [{"_type": "Name", "id": "<UNK>"}], "_type": "Assign"}, {"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}, {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "<UNK>"}, "_type": "Attribute", "attr": "summon"}}, "_type": "Expr"}]}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "", "score_history": [-6.29425048828125e-05, -5.53131103515625e-05, -19.966712951660156], "choice_history": [80, 159, 294], "score": -19.96683120727539, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}
{"beams": [{"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -1.761561393737793, -0.00011444091796875, -2.622600959512056e-06, -5.841255187988281e-06, -3.576271865313174e-07, 0.0, -0.021690726280212402, 0.0, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-05, -3.4332275390625e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.14984130859375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.004753232002258301, -4.696846008300781e-05, -0.0028591156005859375, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -3.933906555175781e-06, -2.741813204920618e-06, -0.012234687805175781, -2.09808349609375e-05, -9.5367431640625e-06, -4.57763671875e-05, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.457069396972656e-05, -0.42179012298583984, 0.0, -0.05627632141113281, -5.340576171875e-05, -0.1749172806739807, -7.87973403930664e-05, -0.0016689300537109375, -1.9073486328125e-06, -1.9073486328125e-05, -0.033733367919921875, -1.9073486328125e-05, 0.0, -0.0005950927734375, 0.0, -0.001621246337890625, 0.0, -0.0008383989334106445, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -2.496445476480403, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            target_func=hearthbreaker.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -1.6835836172103882, 0.0, -0.042679786682128906, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -0.00077056884765625, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -0.019509315490722656, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, -5.841255187988281e-06, -9.536738616588991e-07, -0.010453224182128906, -2.288818359375e-05, -3.814697265625e-06, -4.38690185546875e-05, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -9.5367431640625e-06, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.445148468017578e-05, -0.52532958984375, 0.0, -0.06269073486328125, -5.340576171875e-05, -0.18421803414821625, -7.49826431274414e-05, -0.001544952392578125, -1.9073486328125e-06, -1.9073486328125e-05, -0.03674125671386719, -1.9073486328125e-05, 0.0, -0.00066375732421875, 0.0, -0.0017185211181640625, 0.0, -0.0008221864700317383, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -3.4035901594975257, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "target_func", "hole2": "WARRIOR", "hole8": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -1.761561393737793, -0.00011444091796875, -2.622600959512056e-06, -5.841255187988281e-06, -3.576271865313174e-07, 0.0, -0.021690726280212402, 0.0, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-05, -3.4332275390625e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.14984130859375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.004753232002258301, -4.696846008300781e-05, -0.0028591156005859375, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -3.933906555175781e-06, -2.741813204920618e-06, -0.012234687805175781, -2.09808349609375e-05, -9.5367431640625e-06, -4.57763671875e-05, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.457069396972656e-05, -0.42179012298583984, 0.0, -0.05627632141113281, -5.340576171875e-05, -1.8957058191299438, -0.17920911312103271, -0.0008716583251953125, -1.9073486328125e-06, -3.24249267578125e-05, -0.04804420471191406, -1.1444091796875e-05, 0.0, -0.0002841949462890625, 0.0, -0.00421142578125, 0.0, -0.0013228654861450195, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.412647365995326, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda minion: card.is_minion() and card.\n            minion_type == MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -0.4256547689437866, 0.0, -0.011792182922363281, -0.000263214111328125, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -0.6054583787918091, -3.6954863844584906e-06, -0.006672859191894531, -3.814697265625e-05, -0.014071464538574219, -0.03567028045654297, -0.6739120483398438, -0.0017452239990234375, -0.000446319580078125, -7.62939453125e-05, -0.0001163482666015625, -0.0002536773681640625, -0.056061744689941406, -1.33514404296875e-05, -0.03343486785888672, -4.76837158203125e-05, -0.026960372924804688, -0.0003337860107421875, -0.0121307373046875, -0.0004100799560546875, -0.0004978179931640625, -0.0001010894775390625, -0.01591956615447998, -3.814697265625e-06, -0.13315582275390625, -1.71661376953125e-05, -2.288818359375e-05, -0.02536773681640625, -3.0517578125e-05, -0.00091552734375, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001186370849609375, -9.5367431640625e-06, -0.6682329177856445, -3.814697265625e-06, -0.01675128936767578, -0.0004329681396484375, -0.014482498168945312, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -4.053113570989808e-06, -0.011829376220703125, -4.38690185546875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.0013580322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.826618194580078e-05, -0.7408065795898438, 0.0, -0.041851043701171875, -5.91278076171875e-05, -0.16769440472126007, -6.341934204101562e-05, -0.0020809173583984375, -1.9073486328125e-06, -1.9073486328125e-05, -0.04017066955566406, -1.52587890625e-05, 0.0, -0.00072479248046875, 0.0, -0.0016841888427734375, 0.0, -0.0008107423782348633, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "minion", "<EOS>", 13, 132, 0, 283, 40, 134, 11, 129, 19, 160, "card", "<EOS>", "is_minion", "<EOS>", 41, 139, 11, 129, 19, 160, "card", "<EOS>", "minion_type", "<EOS>", 279, 2, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -4.623503493148519, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "WARRIOR", "hole8": {"args": {"args": [{"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "is_minion"}}, {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "minion_type"}, "ops": [{"_type": "Eq"}], "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}]}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda character: card.is_minion() and card.\n            minion_type == MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -0.4256547689437866, 0.0, -0.011792182922363281, -0.000263214111328125, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -1.2163807153701782, -2.503394853192731e-06, -0.02956104278564453, -4.57763671875e-05, -0.008270263671875, -0.016236305236816406, -0.4482393264770508, -0.00119781494140625, -0.000507354736328125, -0.000110626220703125, -0.0001201629638671875, -0.00032806396484375, -0.03959381580352783, -1.33514404296875e-05, -0.03379535675048828, -4.9591064453125e-05, -0.021427154541015625, -0.0003814697265625, -0.012074470520019531, -0.0004253387451171875, -0.000255584716796875, -8.7738037109375e-05, -0.01526939868927002, -3.814697265625e-06, -0.18215179443359375, -1.71661376953125e-05, -2.09808349609375e-05, -0.025861740112304688, -3.0517578125e-05, -0.0009908676147460938, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.00119781494140625, -1.1444091796875e-05, -0.6663722991943359, -3.814697265625e-06, -0.016379356384277344, -0.000415802001953125, -0.014410018920898438, 0.0, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -4.053113570989808e-06, -0.0119781494140625, -4.38690185546875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.0013580322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.826618194580078e-05, -0.7397279739379883, 0.0, -0.041347503662109375, -5.91278076171875e-05, -0.16772091388702393, -6.341934204101562e-05, -0.0020847320556640625, -1.9073486328125e-06, -1.9073486328125e-05, -0.04010772705078125, -1.52587890625e-05, 0.0, -0.00072479248046875, 0.0, -0.001682281494140625, 0.0, -0.0008107423782348633, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "character", "<EOS>", 13, 132, 0, 283, 40, 134, 11, 129, 19, 160, "card", "<EOS>", "is_minion", "<EOS>", 41, 139, 11, 129, 19, 160, "card", "<EOS>", "minion_type", "<EOS>", 279, 2, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.029287548740513, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "WARRIOR", "hole8": {"args": {"args": [{"arg": "character", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "is_minion"}}, {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "minion_type"}, "ops": [{"_type": "Eq"}], "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}]}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda character: card.\n            is_minion() and card.minion_type == MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.8272068500518799, -0.0001010894775390625, -0.48812294006347656, 0.0, -0.0201568603515625, -0.0002689361572265625, -0.0017442703247070312, -6.866455078125e-05, -4.1961669921875e-05, -0.9940283298492432, -2.622604142743512e-06, -0.03042125701904297, -5.14984130859375e-05, -0.0068359375, -0.013998031616210938, -0.45334815979003906, -0.001163482666015625, -0.0004940032958984375, -0.0001373291015625, -0.0001125335693359375, -0.0003528594970703125, -0.0339202880859375, -1.52587890625e-05, -0.035010337829589844, -4.57763671875e-05, -0.02279376983642578, -0.000415802001953125, -0.011163711547851562, -0.000476837158203125, -0.0002231597900390625, -7.2479248046875e-05, -0.015762686729431152, -3.814697265625e-06, -0.17496585845947266, -1.71661376953125e-05, -2.09808349609375e-05, -0.02502918243408203, -3.0517578125e-05, -0.001056671142578125, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.0011920928955078125, -1.1444091796875e-05, -0.6683311462402344, -3.814697265625e-06, -0.01642608642578125, -0.0004062652587890625, -0.014434814453125, 0.0, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -4.053113570989808e-06, -0.012057304382324219, -4.57763671875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -3.4332275390625e-05, -3.814697265625e-06, -1.0013580322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.826618194580078e-05, -0.7399368286132812, 0.0, -0.04111003875732422, -5.91278076171875e-05, -0.16778312623500824, -6.341934204101562e-05, -0.0020885467529296875, -1.9073486328125e-06, -1.9073486328125e-05, -0.04004859924316406, -1.52587890625e-05, 0.0, -0.00072479248046875, 0.0, -0.0016803741455078125, 0.0, -0.0008107423782348633, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "character", "<EOS>", 13, 132, 0, 283, 40, 134, 11, 129, 19, 160, "card", "<EOS>", "is_minion", "<EOS>", 41, 139, 11, 129, 19, 160, "card", "<EOS>", "minion_type", "<EOS>", 279, 2, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.090228037913448, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "WARRIOR", "hole8": {"args": {"args": [{"arg": "character", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "is_minion"}}, {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "minion_type"}, "ops": [{"_type": "Eq"}], "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}]}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_minion_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            target_func=hearthbreaker.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -1.6835836172103882, 0.0, -0.042679786682128906, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -0.00077056884765625, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -0.019509315490722656, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, -5.841255187988281e-06, -9.536738616588991e-07, -0.010453224182128906, -2.288818359375e-05, -3.814697265625e-06, -4.38690185546875e-05, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -9.5367431640625e-06, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.445148468017578e-05, -0.52532958984375, 0.0, -0.06269073486328125, -5.340576171875e-05, -1.8494459390640259, -0.1576075255870819, -0.000850677490234375, -1.9073486328125e-06, -3.24249267578125e-05, -0.04856109619140625, -9.5367431640625e-06, 0.0, -0.0002918243408203125, 0.0, -0.004558563232421875, 0.0, -0.0012780427932739258, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "draw", "<EOS>", 89, 141, 14, 134, 11, 129, 19, 160, "player", "<EOS>", "draw", "<EOS>"], "score": -5.240403952083852, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "target_func", "hole2": "WARRIOR", "hole8": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template47"}, "_type": "Expr"}, {"value": {"_type": "Call", "func": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "draw"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        characters = copy.copy(game.other_player.minions)\n        characters.append(player.hero)\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -1.761561393737793, -0.00011444091796875, -2.622600959512056e-06, -5.841255187988281e-06, -3.576271865313174e-07, 0.0, -0.021690726280212402, 0.0, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-05, -3.4332275390625e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.14984130859375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.004753232002258301, -4.696846008300781e-05, -0.0028591156005859375, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -3.933906555175781e-06, -2.741813204920618e-06, -0.012234687805175781, -2.09808349609375e-05, -9.5367431640625e-06, -4.57763671875e-05, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.457069396972656e-05, -1.2632741928100586, -1.9073486328125e-06, -3.24249267578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.6061141490936279, 0.0, -0.00274658203125, -6.4849853515625e-05, -0.0002040863037109375, -1.9073486328125e-06, -0.000286102294921875, 0.0, -0.0031175613403320312, 0.0, -0.000957489013671875, -9.5367431640625e-06, -1.52587890625e-05, -0.010446548461914062, 0.0, -0.0007381439208984375, -3.814697265625e-06, -0.006320953369140625, 0.0, -0.042476654052734375, 0.0, -0.000644683837890625, 0.0, -0.009168210439383984, -1.33514404296875e-05, -0.052634239196777344, -2.47955322265625e-05, -4.1961669921875e-05, -0.0003528594970703125, -2.47955322265625e-05, 0.0, -0.0028018951416015625, 0.0, -0.7897430658340454, -1.9073486328125e-06, -0.2490835189819336, 0.0, -0.00118255615234375, -0.06146240234375, 0.0, -0.5735912322998047, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.043173909187316895, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "characters", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "characters", "<EOS>", "append", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>"], "score": -5.525759758830645, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "characters"}], "_type": "Assign"}, {"value": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "characters"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            target_func=hearthbreaker.targeting)\n\n    def use(self, player, game):\n        super().use(player, game)\n        characters = copy.copy(game.other_player.minions)\n        characters.append(player.hero)\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -1.6835836172103882, 0.0, -0.042679786682128906, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -0.00077056884765625, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -0.019509315490722656, -2.288818359375e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -4.9591064453125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0001277923583984375, -5.841255187988281e-06, -9.536738616588991e-07, -0.010453224182128906, -2.288818359375e-05, -3.814697265625e-06, -4.38690185546875e-05, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -9.5367431640625e-06, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.445148468017578e-05, -1.0641326904296875, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.6186392307281494, 0.0, -0.0030088424682617188, -6.67572021484375e-05, -0.000194549560546875, -1.9073486328125e-06, -0.0002841949462890625, 0.0, -0.0029134750366210938, 0.0, -0.0009613037109375, -1.1444091796875e-05, -1.52587890625e-05, -0.009637832641601562, 0.0, -0.0007419586181640625, -3.814697265625e-06, -0.0063571929931640625, 0.0, -0.04345703125, 0.0, -0.00063323974609375, 0.0, -0.009169506840407848, -1.33514404296875e-05, -0.0493927001953125, -2.47955322265625e-05, -4.00543212890625e-05, -0.0003490447998046875, -2.47955322265625e-05, 0.0, -0.002689361572265625, 0.0, -0.824102520942688, -1.9073486328125e-06, -0.2500019073486328, 0.0, -0.0011806488037109375, -0.06245899200439453, 0.0, -0.5748405456542969, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.043250203132629395, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "characters", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "characters", "<EOS>", "append", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>"], "score": -6.158495922579732, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "target_func", "hole2": "WARRIOR", "hole8": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "characters"}], "_type": "Assign"}, {"value": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "characters"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(2, self)\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -1.761561393737793, -0.00011444091796875, -2.622600959512056e-06, -5.841255187988281e-06, -3.576271865313174e-07, 0.0, -0.021690726280212402, 0.0, -0.0001239776611328125, -7.62939453125e-06, -1.9073486328125e-05, -3.4332275390625e-05, -7.62939453125e-06, -1.33514404296875e-05, -5.14984130859375e-05, 0.0, -0.0003147125244140625, -1.9073486328125e-06, -9.918212890625e-05, 0.0, -0.004753232002258301, -4.696846008300781e-05, -0.0028591156005859375, -1.33514404296875e-05, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -4.00543212890625e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0001583099365234375, -3.933906555175781e-06, -2.741813204920618e-06, -0.012234687805175781, -2.09808349609375e-05, -9.5367431640625e-06, -4.57763671875e-05, -3.814697265625e-05, -1.33514404296875e-05, 0.0, -1.52587890625e-05, -1.1444091796875e-05, -1.1682510375976562e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.457069396972656e-05, -0.42179012298583984, 0.0, -0.05627632141113281, -5.340576171875e-05, -0.1749172806739807, -7.87973403930664e-05, -0.0016689300537109375, -1.9073486328125e-06, -1.9073486328125e-05, -3.4892234802246094, -1.9073486328125e-06, -3.62396240234375e-05, -0.0004177093505859375, 0.0, -0.0011539459228515625, 0.0, -0.024352073669433594, -4.9591064453125e-05, -0.0026149749755859375, 0.0, -0.3155555725097656, -1.9073486328125e-06, -7.05718994140625e-05, -0.30777549743652344, -0.0001544952392578125, -0.0005925791338086128, -1.52587890625e-05, -0.0002460479736328125, -7.62939453125e-06, -0.004844784736633301, -9.5367431640625e-06], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 98, 181, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 129, 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 89, 141, 25, 223, "2", "<EOS>", 89, 141, 14, 136, 11, 129, 11, 129, 19, 160, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 283, 47, 165, "2", "<EOS>", 45, 160, "self", "<EOS>"], "score": -6.6067621004140165, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole2": "WARRIOR", "_type": "Template11", "hole4": {"value": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "hole3": "target_func"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template47"}, "_type": "Expr"}, {"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Name", "id": "self"}], "_type": "Call", "func": {"value": {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda minion: card.is_minion() and card.\n            minion_type == MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        characters = copy.copy(game.other_player.minions)\n        characters.append(player.hero)\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -0.4256547689437866, 0.0, -0.011792182922363281, -0.000263214111328125, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -0.6054583787918091, -3.6954863844584906e-06, -0.006672859191894531, -3.814697265625e-05, -0.014071464538574219, -0.03567028045654297, -0.6739120483398438, -0.0017452239990234375, -0.000446319580078125, -7.62939453125e-05, -0.0001163482666015625, -0.0002536773681640625, -0.056061744689941406, -1.33514404296875e-05, -0.03343486785888672, -4.76837158203125e-05, -0.026960372924804688, -0.0003337860107421875, -0.0121307373046875, -0.0004100799560546875, -0.0004978179931640625, -0.0001010894775390625, -0.01591956615447998, -3.814697265625e-06, -0.13315582275390625, -1.71661376953125e-05, -2.288818359375e-05, -0.02536773681640625, -3.0517578125e-05, -0.00091552734375, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001186370849609375, -9.5367431640625e-06, -0.6682329177856445, -3.814697265625e-06, -0.01675128936767578, -0.0004329681396484375, -0.014482498168945312, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -4.053113570989808e-06, -0.011829376220703125, -4.38690185546875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.0013580322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.826618194580078e-05, -0.9349451065063477, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.5431516170501709, 0.0, -0.0032806396484375, -6.4849853515625e-05, -0.000194549560546875, -1.9073486328125e-06, -0.0002899169921875, 0.0, -0.0029926300048828125, 0.0, -0.0009784698486328125, -1.1444091796875e-05, -1.71661376953125e-05, -0.0096435546875, 0.0, -0.0007648468017578125, -3.814697265625e-06, -0.0064945220947265625, 0.0, -0.042232513427734375, 0.0, -0.0006542205810546875, 0.0, -0.009436946362257004, -1.33514404296875e-05, -0.061206817626953125, -2.6702880859375e-05, -3.814697265625e-05, -0.0003414154052734375, -2.47955322265625e-05, 0.0, -0.003162384033203125, 0.0, -0.7878118753433228, -1.9073486328125e-06, -0.24643611907958984, 0.0, -0.0011577606201171875, -0.0681295394897461, 0.0, -0.5722198486328125, -1.9073486328125e-06, -0.0001659393310546875, 0.0, -0.041175007820129395, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "minion", "<EOS>", 13, 132, 0, 283, 40, 134, 11, 129, 19, 160, "card", "<EOS>", "is_minion", "<EOS>", 41, 139, 11, 129, 19, 160, "card", "<EOS>", "minion_type", "<EOS>", 279, 2, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "characters", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "characters", "<EOS>", "append", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>"], "score": -6.964633656669093, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "WARRIOR", "hole8": {"args": {"args": [{"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "is_minion"}}, {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "minion_type"}, "ops": [{"_type": "Eq"}], "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}]}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "characters"}], "_type": "Assign"}, {"value": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "characters"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda minion: card.is_minion() and card.\n            minion_type == MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        characters = copy.copy(game.other_player.minions)\n        characters.append(game.other_player.hero)\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -0.4256547689437866, 0.0, -0.011792182922363281, -0.000263214111328125, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -0.6054583787918091, -3.6954863844584906e-06, -0.006672859191894531, -3.814697265625e-05, -0.014071464538574219, -0.03567028045654297, -0.6739120483398438, -0.0017452239990234375, -0.000446319580078125, -7.62939453125e-05, -0.0001163482666015625, -0.0002536773681640625, -0.056061744689941406, -1.33514404296875e-05, -0.03343486785888672, -4.76837158203125e-05, -0.026960372924804688, -0.0003337860107421875, -0.0121307373046875, -0.0004100799560546875, -0.0004978179931640625, -0.0001010894775390625, -0.01591956615447998, -3.814697265625e-06, -0.13315582275390625, -1.71661376953125e-05, -2.288818359375e-05, -0.02536773681640625, -3.0517578125e-05, -0.00091552734375, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.001186370849609375, -9.5367431640625e-06, -0.6682329177856445, -3.814697265625e-06, -0.01675128936767578, -0.0004329681396484375, -0.014482498168945312, 0.0, 0.0, -4.9591064453125e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -5.340576171875e-05, -3.814697265625e-06, -4.053113570989808e-06, -0.011829376220703125, -4.38690185546875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.0013580322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.826618194580078e-05, -0.9349451065063477, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.5431516170501709, 0.0, -0.0032806396484375, -6.4849853515625e-05, -0.000194549560546875, -1.9073486328125e-06, -0.0002899169921875, 0.0, -0.0029926300048828125, 0.0, -0.0009784698486328125, -1.1444091796875e-05, -1.71661376953125e-05, -0.0096435546875, 0.0, -0.0007648468017578125, -3.814697265625e-06, -0.0064945220947265625, 0.0, -0.042232513427734375, 0.0, -0.0006542205810546875, 0.0, -0.009436946362257004, -1.33514404296875e-05, -0.061206817626953125, -2.6702880859375e-05, -3.814697265625e-05, -0.0003414154052734375, -2.47955322265625e-05, 0.0, -0.003162384033203125, 0.0, -0.7878118753433228, -1.9073486328125e-06, -0.24643611907958984, 0.0, -0.0011577606201171875, -0.0681295394897461, 0.0, -0.8309764862060547, 0.0, -0.00121307373046875, 0.0, -0.07410240173339844, -1.9073486328125e-06, -0.05293893814086914, 0.0, -0.005237396340817213, -3.576278118089249e-07], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "minion", "<EOS>", 13, 132, 0, 283, 40, 134, 11, 129, 19, 160, "card", "<EOS>", "is_minion", "<EOS>", 41, 139, 11, 129, 19, 160, "card", "<EOS>", "minion_type", "<EOS>", 279, 2, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "characters", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "characters", "<EOS>", "append", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "score": -7.315541514664517, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "WARRIOR", "hole8": {"args": {"args": [{"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "is_minion"}}, {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "minion_type"}, "ops": [{"_type": "Eq"}], "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}]}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "characters"}], "_type": "Assign"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "characters"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            filter_func=lambda character: card.is_minion() and card.\n            minion_type == MINION_TYPE.BEAST)\n\n    def use(self, player, game):\n        super().use(player, game)\n        characters = copy.copy(game.other_player.minions)\n        characters.append(player.hero)\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -1.52587890625e-05, -3.814697265625e-06, -3.194758028257638e-05, -2.4795524950604886e-05, -0.0001239776611328125, 0.0, -3.814697265625e-06, -4.744528996525332e-05, -3.933906555175781e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.21746540069580078, -0.0004138946533203125, -9.643566590966657e-05, -4.6253204345703125e-05, -0.00021276582265272737, 0.0, -0.0019245147705078125, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -0.00035691261291503906, 0.0, -0.0007839202880859375, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.0007038116455078125, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -0.6090719699859619, -1.9073486328125e-06, -0.4256547689437866, 0.0, -0.011792182922363281, -0.000263214111328125, -0.00046539306640625, -8.392333984375e-05, -3.0517578125e-05, -1.2163807153701782, -2.503394853192731e-06, -0.02956104278564453, -4.57763671875e-05, -0.008270263671875, -0.016236305236816406, -0.4482393264770508, -0.00119781494140625, -0.000507354736328125, -0.000110626220703125, -0.0001201629638671875, -0.00032806396484375, -0.03959381580352783, -1.33514404296875e-05, -0.03379535675048828, -4.9591064453125e-05, -0.021427154541015625, -0.0003814697265625, -0.012074470520019531, -0.0004253387451171875, -0.000255584716796875, -8.7738037109375e-05, -0.01526939868927002, -3.814697265625e-06, -0.18215179443359375, -1.71661376953125e-05, -2.09808349609375e-05, -0.025861740112304688, -3.0517578125e-05, -0.0009908676147460938, 0.0, -3.814697265625e-06, -1.52587890625e-05, -0.00119781494140625, -1.1444091796875e-05, -0.6663722991943359, -3.814697265625e-06, -0.016379356384277344, -0.000415802001953125, -0.014410018920898438, 0.0, 0.0, -4.76837158203125e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -5.53131103515625e-05, -3.814697265625e-06, -4.053113570989808e-06, -0.0119781494140625, -4.38690185546875e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.0013580322265625e-05, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, 0.0, -7.62939453125e-06, -3.826618194580078e-05, -0.9377679824829102, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, 0.0, -0.5435135364532471, 0.0, -0.0032758712768554688, -6.4849853515625e-05, -0.000194549560546875, -1.9073486328125e-06, -0.0002899169921875, 0.0, -0.002994537353515625, 0.0, -0.0009784698486328125, -9.5367431640625e-06, -1.71661376953125e-05, -0.0096588134765625, 0.0, -0.0007648468017578125, -3.814697265625e-06, -0.0064945220947265625, 0.0, -0.04222679138183594, 0.0, -0.0006542205810546875, 0.0, -0.00942884013056755, -1.33514404296875e-05, -0.061290740966796875, -2.6702880859375e-05, -3.814697265625e-05, -0.00034332275390625, -2.47955322265625e-05, 0.0, -0.0031757354736328125, 0.0, -0.7872215509414673, -1.9073486328125e-06, -0.2464447021484375, 0.0, -0.0011577606201171875, -0.0681304931640625, 0.0, -0.5721530914306641, -1.9073486328125e-06, -0.0001659393310546875, 0.0, -0.041187405586242676, 0.0], "choice_history": [80, 159, 295, 88, 138, "Slam", "<EOS>", 282, 45, 160, "Spell", "Card", "<EOS>", 296, 124, 264, "Slam", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "target_func", "<EOS>", 11, 129, 19, 160, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "filter_func", "<EOS>", 16, 153, 269, 275, 268, "character", "<EOS>", 13, 132, 0, 283, 40, 134, 11, 129, 19, 160, "card", "<EOS>", "is_minion", "<EOS>", 41, 139, 11, 129, 19, 160, "card", "<EOS>", "minion_type", "<EOS>", 279, 2, 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 297, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 85, 128, 282, 45, 160, "characters", "<EOS>", 14, 136, 11, 129, 19, 160, "copy", "<EOS>", "copy", "<EOS>", 282, 37, 129, 11, 129, 19, 160, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 89, 141, 14, 136, 11, 129, 19, 160, "characters", "<EOS>", "append", "<EOS>", 282, 37, 129, 19, 160, "player", "<EOS>", "hero", "<EOS>"], "score": -7.374679876496202, "model_output": {"_type": "Module", "body": [{"name": "Slam", "_type": "ClassDef", "body": [{"hole1": 2, "hole0": "Slam", "hole5": {"value": {"_type": "Name", "id": "hearthbreaker"}, "_type": "Attribute", "attr": "targeting"}, "hole7": "filter_func", "hole2": "WARRIOR", "hole8": {"args": {"args": [{"arg": "character", "_type": "arg"}], "_type": "arguments"}, "_type": "Lambda", "body": {"op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "is_minion"}}, {"_type": "Compare", "left": {"value": {"_type": "Name", "id": "card"}, "_type": "Attribute", "attr": "minion_type"}, "ops": [{"_type": "Eq"}], "comparators": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}]}], "_type": "BoolOp"}}, "_type": "Template9", "hole6": "find_spell_target", "hole4": "target_func", "hole3": "COMMON"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}, {"value": {"args": [{"value": {"value": {"_type": "Name", "id": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "copy"}, "_type": "Attribute", "attr": "copy"}}, "targets": [{"_type": "Name", "id": "characters"}], "_type": "Assign"}, {"value": {"args": [{"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "hero"}], "_type": "Call", "func": {"value": {"_type": "Name", "id": "characters"}, "_type": "Attribute", "attr": "append"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SpellCard"}]}]}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -3.24249267578125e-05, -14.943248748779297, -6.563023090362549, -0.0005063609569333494], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -21.506827791163232, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}, {"inferred_code": "", "score_history": [-1.33514404296875e-05, -3.814697265625e-06, -22.325016021728516], "choice_history": [80, 159, 294], "score": -22.32503318786621, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n"}
{"beams": [{"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.060256004333496094, -9.72747802734375e-05, -0.001079559326171875, -1.9073486328125e-06, -0.046561241149902344, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000616908073425293, -3.933906555175781e-06, -9.5367431640625e-06, -0.0019121170043945312, -7.05718994140625e-05, -0.006767000537365675, -3.433201345615089e-05, -0.0022983551025390625, -0.0007152557373046875, -0.00034356117248535156, -0.000156402587890625, -3.62396240234375e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0001748651993693784, 0.0, -0.00019096123287454247, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -0.3974979113882, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -1.5412778854370117, -0.000629425048828125, -1.1920928244535389e-07, -2.86102294921875e-05, -0.003724707756191492, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0019016264704987407, 0.0, -0.10082626342773438, -0.0018482208251953125, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002148151397705078, -9.608268737792969e-05, -3.0517578125e-05, -0.06655311584472656, -0.000789642333984375, -0.0015400848351418972, -1.931190308823716e-05, -0.0022869110107421875, -0.0009403228759765625, -0.0009491443634033203, -7.05718994140625e-05, -9.5367431640625e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.00021157327864784747, -1.9073486328125e-06, -0.0001706973707769066, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -1.7247310845723334, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole2": "ALL", "_type": "Template11", "hole4": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(BattleAxe()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.060256004333496094, -9.72747802734375e-05, -0.001079559326171875, -1.9073486328125e-06, -3.108694076538086, -0.0061168670654296875, -0.0008718540193513036, -0.008161067962646484, -0.000110626220703125, -0.00118255615234375, -1.9073486328125e-05, -0.23285581171512604, -0.027297457680106163, -8.34464663057588e-06, -0.0002899169921875, -9.5367431640625e-06, -0.00023541090195067227, -1.9073486328125e-06, -0.00033731828443706036, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 28, 241, "Silence", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -3.7236935509863542, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "Silence", "_type": "Template59"}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -3.3462142944335938, -1.3470647900248878e-05, -0.02077019214630127, 0.0, -0.0659780502319336, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.0005127191543579102, -3.933906555175781e-06, -9.5367431640625e-06, -0.004626274108886719, -0.0001697540283203125, -0.0060877008363604546, -2.396096351731103e-05, -0.0023708343505859375, -0.000675201416015625, -0.0003026723861694336, -0.000148773193359375, -3.4332275390625e-05, -5.14984130859375e-05, -5.7220458984375e-06, -0.00018463851301930845, 0.0, -0.00019751641957554966, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -3.724488109975937, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "<UNK>", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -1.5412778854370117, -0.000629425048828125, -1.1920928244535389e-07, -2.86102294921875e-05, -0.003724707756191492, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0019016264704987407, 0.0, -2.365476608276367, -0.0009145736694335938, -0.027289019897580147, -0.029970407485961914, -3.814697265625e-06, -0.0003910064697265625, -1.33514404296875e-05, -0.24232517182826996, -0.020998049527406693, -5.602834789897315e-06, -0.0004119873046875, -1.1444091796875e-05, -0.00017641537124291062, 0.0, -0.00032433043816126883, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Silence", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -4.236392595705176, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "Silence", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), MinionSelector(picker=UserPicker()))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -1.5412778854370117, -0.000629425048828125, -1.1920928244535389e-07, -2.86102294921875e-05, -0.003724707756191492, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0019016264704987407, 0.0, -0.10082626342773438, -0.0018482208251953125, -2.09808349609375e-05, -1.9073486328125e-06, -0.0002148151397705078, -9.608268737792969e-05, -3.0517578125e-05, -2.9582300186157227, -0.006712913513183594, -0.0008945678127929568, -0.0006071329116821289, -1.33514404296875e-05, -0.011258125305175781, -7.62939453125e-06, -0.0001220703125, -0.003803253173828125, -1.9073486328125e-06, -0.08022952079772949, -1.1444091796875e-05, -0.0051403045654296875, -0.017686843872070312, -7.05718994140625e-05, -1.9073486328125e-06, -0.0006946325302124023, -7.62939453125e-06, -2.384185791015625e-06, -0.0003337860107421875, -0.0003299713134765625, -5.7220458984375e-06, -4.5895572839071974e-05, 0.0, -2.47955322265625e-05, -2.47955322265625e-05, -0.0002728700637817383, -9.548664093017578e-05, 0.0, -0.0001201629638671875, -1.33514404296875e-05, -7.998661021701992e-05, 0.0, -0.00036414069472812116, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -4.7383267731493035, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole2": "ALL", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -4.824466705322266, -2.0265579223632812e-06, -0.0018873214721679688, 0.0, -0.07050132751464844, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005919933319091797, -2.0265579223632812e-06, -7.62939453125e-06, -0.00182342529296875, -8.7738037109375e-05, -0.006344071589410305, -3.290153108537197e-05, -0.0026149749755859375, -0.0007266998291015625, -0.00032842159271240234, -0.00016021728515625, -3.62396240234375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -0.0001731965458020568, 0.0, -0.0001892922882689163, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -5.186157629101217, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "PIRATE", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__(' Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -5.359769344329834, -0.0001397050655214116, -3.814697265625e-06, -0.0015636862954124808, 0.0, -0.00011658668518066406, -4.76837158203125e-05, -0.005924224853515625, -1.9073486328125e-06, -0.004746079444885254, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -0.000141143798828125, -1.9073486328125e-06, -0.057488441467285156, -9.34600830078125e-05, -0.0010528564453125, -1.9073486328125e-06, -0.04791831970214844, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006264448165893555, -3.933906555175781e-06, -9.5367431640625e-06, -0.0018520355224609375, -6.866455078125e-05, -0.006843606475740671, -3.433201345615089e-05, -0.0022907257080078125, -0.000720977783203125, -0.00034558773040771484, -0.0001583099365234375, -3.4332275390625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.00017462683899793774, 0.0, -0.00018976932915393263, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, " ", "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -5.745095868569479, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": " Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.battlecry,\n            battlecry=Battlecry(Silence(), MinionSelector(players=\n            BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -5.708931922912598, 0.0, -0.0003712177276611328, 0.0, -0.3292093276977539, -7.62939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00044333934783935547, -3.933906555175781e-06, -7.62939453125e-06, -0.0015363693237304688, -8.96453857421875e-05, -0.005368231795728207, -3.5881697840522975e-05, -0.003009796142578125, -0.00074005126953125, -0.00035369396209716797, -0.000141143798828125, -3.0517578125e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0001756995334289968, 0.0, -0.0001910807186504826, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "battlecry", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -6.326845698084071, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "battlecry", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -6.195552349090576, 0.0, -0.0006916522979736328, 0.0, -0.041362762451171875, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000512242317199707, -2.0265579223632812e-06, -9.5367431640625e-06, -0.0038709640502929688, -0.00014495849609375, -0.0060279821045696735, -2.9325325158424675e-05, -0.0025882720947265625, -0.0007343292236328125, -0.0003185272216796875, -0.000148773193359375, -3.62396240234375e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.00017951347399502993, 0.0, -0.00019072258146479726, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 55, 227, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -6.528589226600161, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"hole0": "UserPicker", "_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "MECH", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(Silence()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.060256004333496094, -9.72747802734375e-05, -0.001079559326171875, -1.9073486328125e-06, -3.108694076538086, -0.0061168670654296875, -0.0008718540193513036, -0.008161067962646484, -0.000110626220703125, -0.00118255615234375, -1.9073486328125e-05, -3.137505292892456, -0.010082479566335678, -0.0001068115234375, -5.7220458984375e-06, -0.00037210603477433324, -1.9073486328125e-06, -0.00030263347434811294, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 28, 241, "Silence", "<EOS>", 282, 68, 260, "Silence", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -6.611034799560002, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"hole1": [{"hole0": "Silence", "_type": "Template77"}], "hole0": "Silence", "_type": "Template59"}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(<UNK>Spellbreaker(), MinionSelector(picker=UserPicker()))\n            )\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.060256004333496094, -9.72747802734375e-05, -0.001079559326171875, -1.9073486328125e-06, -0.046561241149902344, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000616908073425293, -3.933906555175781e-06, -9.5367431640625e-06, -0.0019121170043945312, -7.05718994140625e-05, -5.3629913330078125, -0.778024435043335, -0.007751211524009705, -0.025315284729003906, -0.0456390380859375, -5.7220458984375e-06, 0.0, -0.00015878677368164062, -2.86102294921875e-05, -2.741813204920618e-06, -0.22560882568359375, -0.000118255615234375, -3.814697265625e-06, -5.817413330078125e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -0.0005178451538085938, -8.606910705566406e-05, 0.0, -7.82012939453125e-05, -5.7220458984375e-06, -0.00011062101111747324, 0.0, -0.00038128907908685505, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "<UNK>", "Spellbreaker", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -6.833621142886386, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "<UNK>Spellbreaker", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -0.2520284652709961, -0.000102996826171875, -0.005903190467506647, -2.86102294921875e-05, -0.0024002965074032545, 0.0, -0.00010716915130615234, -8.7738037109375e-05, -0.0054340362548828125, -1.9073486328125e-06, -0.009316802024841309, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -0.0001544952392578125, -1.9073486328125e-06, -0.060256004333496094, -9.72747802734375e-05, -0.001079559326171875, -1.9073486328125e-06, -0.046561241149902344, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000616908073425293, -3.933906555175781e-06, -9.5367431640625e-06, -0.0019121170043945312, -7.05718994140625e-05, -0.006767000537365675, -3.433201345615089e-05, -6.320135116577148, -0.01972198486328125, -3.814697265625e-06, 0.0, -0.00011956691014347598, -2.86102294921875e-05, -7.152555099310121e-07, -0.3945484161376953, -7.2479248046875e-05, -1.33514404296875e-05, -0.00016307830810546875, 0.0, -7.62939453125e-06, -3.814697265625e-06, -0.0039130449295043945, -9.560585021972656e-05, 0.0, -0.000118255615234375, -3.814697265625e-06, -0.00011324337538098916, 0.0, -0.00032730598468333483, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "Silence", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -7.132912991135299, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"hole0": "Silence", "_type": "Template77"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "BEAST", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Silence(CardSelector(\n            picker=UserPicker())), PlayerSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -3.814697265625e-06, -7.712543447269127e-05, -4.434585207491182e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -0.0002804994583129883, -3.933906555175781e-06, -7.62939453125e-06, -5.035300254821777, -0.0001659393310546875, -1.8477399862604216e-05, 0.0, -1.9073486328125e-06, -8.392333984375e-05, -3.814697265625e-05, -1.6808508007670753e-05, 0.0, -6.103515625e-05, -0.1049184799194336, -0.5688600540161133, -1.9073486328125e-06, -3.814697265625e-06, -0.008185257203876972, 0.0, -0.5949583053588867, -0.00022553974122274667, -0.011044018901884556, -0.0005592107772827148, -0.0077381134033203125, -0.004481315612792969, -0.0043201446533203125, -7.62939453125e-05, 0.0, -0.010496377944946289, -0.16398286819458008, 0.0, -0.003269195556640625, -0.000148773193359375, 0.0, -0.0014461278915405273, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008745193481445312, -6.890296936035156e-05, 0.0, -0.046475205570459366, -3.826618194580078e-05, -1.1920928244535389e-07, -0.8557958602905273, -5.7220458984375e-06, -3.814697265625e-06, -0.004358649253845215, -1.1920928244535389e-07, -2.47955322265625e-05, -1.9073486328125e-06, -0.11508798599243164, -0.00015091896057128906, 0.0, -0.0010766983032226562, -3.4332275390625e-05, -0.00016903872892726213, 0.0, -3.62396240234375e-05, -1.1444091796875e-05, -0.00013005733489990234, -0.00016033649444580078, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.00011348159023327753, 0.0, -0.00039274434675462544, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Spellbreaker", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Spellbreaker", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Silence", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", "Player", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "4", "<EOS>", "3", "<EOS>"], "score": -7.545971943180106, "model_output": {"_type": "Module", "body": [{"name": "Spellbreaker", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 4, "hole0": "Spellbreaker", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "FREE", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "hole3": "Silence"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 4, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -21.988630294799805], "choice_history": [80, 159, 294], "score": -21.98863983154297, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -0.21902823448181152, -1.1920928244535389e-07, -0.0001049041748046875, -0.000141143798828125, -0.12322914600372314, -0.0012983083724975586, -1.1444091796875e-05, -0.0027942657470703125, -1.33514404296875e-05, -7.652907515875995e-05, 0.0, -4.804134005098604e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -1.1855777375558176, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -2.0337369441986084, -9.810461779125035e-05, -0.21516036987304688, -4.76837158203125e-05, -0.01586449146270752, -0.0014548249309882522, -0.02231311798095703, -5.14984130859375e-05, -1.3470556041283999e-05, 0.0, -4.708766573457979e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -3.1276199624444274, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Taunt(SpellDamage(1)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -1.9816066026687622, -0.00031197056523524225, -0.000370025634765625, -0.008559226989746094, -0.0059261322021484375, -3.62396240234375e-05, -5.7220458984375e-06, -0.5689177513122559, -0.1720719337463379, -5.7220458984375e-06, -0.018207550048828125, -0.000308990478515625, -3.24249267578125e-05, -0.017430372536182404, -5.7220458984375e-06, -0.016516923904418945, -0.000286102294921875, -1.0609588571242057e-05, -0.006592750549316406, -5.14984130859375e-05, -1.9073486328125e-06, -0.27738046646118164, -1.1920928244535389e-07, -0.000118255615234375, -0.0001373291015625, -0.12438499927520752, -0.0013030767440795898, -1.1444091796875e-05, -0.0040912628173828125, -1.52587890625e-05, -7.247630855999887e-05, 0.0, -4.804134005098604e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Taunt", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -3.652509391422413, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Taunt"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(picker=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -0.21902823448181152, -1.1920928244535389e-07, -0.0001049041748046875, -0.000141143798828125, -2.6581525802612305, -0.0011570453643798828, -0.006360054016113281, -1.71661376953125e-05, -1.4901035683578812e-05, 0.0, -4.613399141817354e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -3.723854532291611, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(__init__=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -3.8424227237701416, 0.0, -0.15614700317382812, -0.0004367828369140625, -0.0261993408203125, -0.0002521276182960719, -0.003963470458984375, -2.288818359375e-05, -2.0503770429058932e-05, 0.0, -5.364417302189395e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "__init__", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -4.868350734625885, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "__init__", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Taunt(Aura(ChangeAttack(2\n            ), MinionSelector(picker=UserPicker()))), PlayerSelector(picker\n            =UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -1.9816066026687622, -0.00031197056523524225, -0.000370025634765625, -0.008559226989746094, -0.0059261322021484375, -3.62396240234375e-05, -5.7220458984375e-06, -1.0994038581848145, -0.08215832710266113, -0.0025272369384765625, -0.5521917343139648, -0.00707244873046875, -0.009892426431179047, -3.814697265625e-06, -0.2524080276489258, -0.3695220947265625, -3.24249267578125e-05, -1.9073486328125e-06, -0.004397153854370117, -0.0001800060272216797, -9.536738616588991e-07, -2.288818359375e-05, -3.814697265625e-05, -3.814697265625e-06, -0.003977179527282715, 0.0, -0.0001239776611328125, -7.62939453125e-06, -0.07877850532531738, -9.85860824584961e-05, -1.9073486328125e-06, -0.0065294113010168076, -0.00039887428283691406, -2.0265579223632812e-06, -0.002086639404296875, -4.38690185546875e-05, -1.9073486328125e-06, -0.0028895139694213867, 0.0, -0.0002803802490234375, -1.1444091796875e-05, -0.08233284950256348, -0.0014101266860961914, -3.814697265625e-06, -0.00012969970703125, -5.7220458984375e-06, -2.0026845959364437e-05, -1.1920928244535389e-07, -3.743171691894531e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Taunt", "<EOS>", 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.003535428071224, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"hole0": 2, "_type": "Template73"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}], "hole3": "Taunt"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Taunt(SpellDamage(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -1.9816066026687622, -0.00031197056523524225, -0.000370025634765625, -0.008559226989746094, -0.0059261322021484375, -3.62396240234375e-05, -5.7220458984375e-06, -0.5689177513122559, -0.1720719337463379, -5.7220458984375e-06, -0.018207550048828125, -0.000308990478515625, -3.24249267578125e-05, -0.017430372536182404, -5.7220458984375e-06, -0.016516923904418945, -0.000286102294921875, -1.0609588571242057e-05, -0.006592750549316406, -5.14984130859375e-05, -1.9073486328125e-06, -1.7774271965026855, -8.987993351183832e-05, -0.2746543884277344, -4.9591064453125e-05, -0.01551663875579834, -0.001356596825644374, -0.028215408325195312, -5.7220458984375e-05, -1.2516894457803573e-05, 0.0, -5.6385990319540724e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Taunt", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.342382604057079, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Taunt"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Taunt(), Taunt()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -3.800309181213379, -0.0025870685931295156, -1.1920928955078125e-05, -2.384185791015625e-06, -9.5367431640625e-06, -4.553794497041963e-05, -1.9073486328125e-06, -0.0659332275390625, -1.585470999998506e-05, -0.665938138961792, -2.5749202904989943e-05, -0.8528176546096802, -1.4662737157777883e-05, -0.0020236968994140625, -5.7220458984375e-06, -8.583032467868179e-06, 0.0, -5.447864532470703e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 191, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "FREE", "<EOS>", "Taunt", "<EOS>", "Taunt", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.400811876195796, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "Taunt", "hole2": "FREE", "_type": "Template20", "hole3": "Taunt"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Aura(ChangeAttack(2),\n            MinionSelector(picker=UserPicker()))), PlayerSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -3.2875912189483643, -0.17367374897003174, -0.0039539337158203125, -0.5214633941650391, -0.0062923431396484375, -0.008592012338340282, -3.814697265625e-06, -0.4077157974243164, -0.16209983825683594, -1.9073486328125e-05, 0.0, -0.0023103952407836914, -0.00010347366333007812, -2.741813204920618e-06, -2.6702880859375e-05, -3.814697265625e-05, -3.814697265625e-06, -0.0032237768173217773, 0.0, -0.000125885009765625, -7.62939453125e-06, -0.07143521308898926, -9.870529174804688e-05, -1.9073486328125e-06, -0.006687848828732967, -0.00038361549377441406, -2.0265579223632812e-06, -0.0020885467529296875, -4.38690185546875e-05, -1.9073486328125e-06, -0.0028475522994995117, 0.0, -0.0002841949462890625, -1.1444091796875e-05, -0.08116269111633301, -0.0014053583145141602, -3.814697265625e-06, -0.000125885009765625, -5.7220458984375e-06, -2.1338100850698538e-05, -1.1920928244535389e-07, -3.743171691894531e-05, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 64, 255, "2", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.436291066083392, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"hole0": 2, "_type": "Template73"}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -4.156022071838379, -3.814689989667386e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.15334558486938477, -0.00010383128392277285, 0.0, -0.31383800506591797, -0.0007877349853515625, -2.3841830625315197e-06, 0.0, -4.887580871582031e-05, -2.3841855067985307e-07], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.46301340119313, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(Adjacent=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -4.693016052246094, -1.1920928244535389e-07, -0.001293182373046875, -2.6702880859375e-05, -0.016374588012695312, -0.00029265880584716797, -0.009419441223144531, -1.71661376953125e-05, -2.0503766791080125e-05, 0.0, -4.5776359911542386e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "Adjacent", "<EOS>", 33, 260, "Adjacent", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.559338440835731, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "Adjacent", "value": {"hole0": "Adjacent", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give<UNK>(SpellDamage(1)),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -3.882235288619995, -0.001436591031961143, -0.20105934143066406, -0.025304794311523438, -5.7220458984375e-05, -7.62939453125e-05, -3.4332275390625e-05, -0.33390045166015625, -0.1317601203918457, -1.33514404296875e-05, -0.002109527587890625, -0.0005168914794921875, -4.76837158203125e-05, -0.007158187683671713, -5.7220458984375e-06, -0.017089247703552246, -0.0002460479736328125, -1.0013547580456361e-05, -0.008932113647460938, -6.67572021484375e-05, -1.9073486328125e-06, -0.2213984727859497, -1.1920928244535389e-07, -0.000102996826171875, -0.0001468658447265625, -0.1258631944656372, -0.0013440847396850586, -9.5367431640625e-06, -0.002201080322265625, -1.1444091796875e-05, -5.9364247135818005e-05, 0.0, -4.804134005098604e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<UNK>", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.5658982160421, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give<UNK>"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -2.0337369441986084, -9.810461779125035e-05, -2.9049863815307617, -0.0028324127197265625, -0.04649209976196289, 0.0, -0.0068206787109375, -9.5367431640625e-06, -0.00011598381388466805, 0.0, -0.00021791458129882812, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 20, 162, "Null", "<EOS>", 110, 202, "2", "<EOS>", "3", "<EOS>"], "score": -5.834142425707782, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"value": "Null", "_type": "NameConstant"}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(SpellDamage(1)),\n            MinionSelector(condition=IsType(MINION_TYPE.DRAGON))))\n\n    def create_minion(self, player):\n        return Minion(2, 3, deathrattle=Deathrattle(Heal(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n", "score_history": [-0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.0005322470096871257, -1.0847986231965479e-05, -2.8967540856683627e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.1920928244535389e-07, -0.0002557039260864258, -2.145764938177308e-06, -5.53131103515625e-05, -0.005469322204589844, -2.6702880859375e-05, -2.9563900170614943e-05, -2.741813204920618e-06, -9.5367431640625e-06, -0.0003757476806640625, -8.0108642578125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.003894805908203125, -0.4202151298522949, -0.0004481264913920313, -2.4557069991715252e-05, -5.9604644775390625e-06, -9.5367431640625e-06, -9.167194366455078e-05, -1.9073486328125e-06, -0.015721440315246582, -0.00016558161587454379, -0.15496064722537994, -0.06255649030208588, -0.024402618408203125, -0.0024213790893554688, -0.0003185272216796875, -3.62396240234375e-05, -7.62939453125e-06, -0.06563127040863037, -0.04595981538295746, -1.3470649719238281e-05, -0.0012187957763671875, -0.000133514404296875, -9.918212890625e-05, -0.006862530950456858, -7.62939453125e-06, -0.018413782119750977, -0.000255584716796875, -9.179088920063805e-06, -0.007770538330078125, -6.103515625e-05, -1.9073486328125e-06, -2.0337369441986084, -9.810461779125035e-05, -2.140334129333496, -0.0017948150634765625, -1.33514404296875e-05, -1.9073486328125e-06, -0.2021951675415039, -0.008324623107910156, -1.1920928244535389e-07, -0.0003223419189453125, -0.0017547607421875, -1.9073486328125e-06, -0.0017213821411132812, -5.7220458984375e-06, -0.026871681213378906, -2.6464460461284034e-05, -1.252375602722168, -3.814697265625e-06, -0.6705942153930664, -1.52587890625e-05, -1.4304860087577254e-06, -9.536738616588991e-07, -7.176397775765508e-05, -6.318072337307967e-06, -0.6799306869506836, -2.0265579223632812e-06, -3.4332275390625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005037784576416016, 0.0, -0.000110626220703125, -0.4619626998901367, -0.0002880096435546875, -4.00543212890625e-05, -0.0007114410400390625, -1.1379306316375732, -0.0010524425888434052, -2.47955322265625e-05, -0.0187225341796875, -3.814697265625e-06, -0.018654029816389084, -2.622604142743512e-06, -0.008966445922851562, -0.0114593505859375, -1.52587890625e-05, 0.0, -0.09957897663116455, -0.0003952980041503906, 0.0, -0.018232345581054688, -1.1444091796875e-05, -3.814697265625e-06, -0.01936638355255127, -9.536738616588991e-07, -4.57763671875e-05, -4.76837158203125e-05, -0.17328083515167236, -0.0012197494506835938, 0.0, -0.000579833984375, -1.52587890625e-05, -0.00020456306810956448, -1.1920928244535389e-07, -0.0025844573974609375, -2.6702880859375e-05, -0.0017338991165161133, -0.00014710426330566406, 0.0], "choice_history": [80, 159, 295, 88, 138, "Sunfury", "Protector", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 282, 40, 136, 19, 160, "Spell", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Minion", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 109, 200, "2", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -9.837009162141591, "model_output": {"_type": "Module", "body": [{"name": "SunfuryProtector", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 2, "hole0": "Sunfury Protector", "hole5": "MinionSelector", "hole7": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "hole2": "RARE", "_type": "Template20", "hole4": [{"args": [{"_type": "Num", "n": 1}], "_type": "Call", "func": {"_type": "Name", "id": "SpellDamage"}}], "hole3": "Give"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-0.00011444091796875, -3.814697265625e-06, -21.243446350097656], "choice_history": [80, 159, 294], "score": -21.24356460571289, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), Transform(\n            Attribute('<UNK>', WeaponSelector()))))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -3.007230758666992, -7.152555099310121e-07, -2.002714973059483e-05, -4.410743713378906e-06, -5.7220458984375e-06, -1.4425007975660264e-05, 0.0, -0.0020743608474731445, -2.6345227524871007e-05, -0.026051338762044907, -0.00019226924632675946, -0.13429079949855804, -9.107589721679688e-05, -0.33330821990966797, -0.0030641555786132812, -0.0002079010009765625, -7.43865966796875e-05, 0.0, -0.15597856044769287, -0.0001697540283203125, -0.000629425048828125, -0.015745162963867188, -3.0517578125e-05, -0.599942684173584, -0.0017266273498535156, -0.08978843688964844, 0.0, -0.06072961166501045, -0.0017689967062324286, -6.31808916295995e-06, -0.004245758056640625, -2.47955322265625e-05, -1.4066519725020044e-05, -2.384185791015625e-06, -1.2278635040274821e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 193, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Transform", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -4.496118374874833, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "Transform", "hole2": "LEGENDARY", "_type": "Template20", "hole6": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), Transform(\n            Attribute('<UNK>', WeaponSelector()), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -2.748814582824707, -0.00011848701251437888, -3.254412877140567e-05, -5.841255187988281e-06, -1.9073486328125e-06, -3.3379265005351044e-06, 0.0, -0.019974470138549805, -2.2649765014648438e-06, -0.1498047113418579, -0.0015734119806438684, -0.01592910662293434, -1.1324866136419587e-05, -0.000225067138671875, -0.00014495849609375, -0.0069217681884765625, -1.1444091796875e-05, 0.0, -0.9330732822418213, -9.72747802734375e-05, -0.0002803802490234375, -0.047471046447753906, -3.24249267578125e-05, -0.968859851360321, -0.00043201446533203125, -0.109283447265625, 0.0, -0.05924331769347191, -0.0014933370985090733, -3.8146954466355965e-06, -0.0064792633056640625, -2.09808349609375e-05, 0.0, -0.14722681045532227, 0.0, -0.0007724761962890625, 0.0, -0.0017958879470825195, -0.00042700767517089844, 0.0, -0.0003566741943359375, -5.7220458984375e-06, -3.576275275918306e-07, -2.3841855067985307e-07, -2.0270454115234315e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Transform", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 68, 260, "Weapon", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -5.279578950878708, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "Transform", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole6": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"hole0": "WeaponSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.<UNK>, minion=SelfSelector())),\n            PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -1.9434351921081543, -8.940672159951646e-06, -3.850450593745336e-05, -5.9604644775390625e-06, -5.7220458984375e-06, -6.794949968025321e-06, -1.9073486328125e-06, -0.0043947696685791016, -4.2200084862997755e-05, -0.4520624876022339, -0.0062639713287353516, -0.017503738403320312, -0.038550376892089844, -0.1796550750732422, -0.000507354736328125, -1.9073486328125e-06, -0.006726503372192383, -0.08041214197874069, -5.7220458984375e-06, -2.1562986373901367, -0.0002002716064453125, -3.4332275390625e-05, -0.11982965469360352, 0.0, -0.0022859573364257812, -0.0001010894775390625, -0.0001373291015625, 0.0, -0.04774653911590576, -1.4305104514278355e-06, -0.11780357360839844, -2.2649765014648438e-06, -8.58306884765625e-05, -3.814697265625e-06, -0.20081257820129395, 0.0, -0.06507205963134766, -1.9073486328125e-06, -0.1738874912261963, -0.012674331665039062, 0.0, -0.021229729056358337, -7.510183422709815e-06, -1.1920928244535389e-07, -0.02293872833251953, -1.1444091796875e-05, -3.814697265625e-06, -0.0450434684753418, -2.3841855067985307e-07, -0.0002231597900390625, -1.9073486328125e-06, -0.0032237768173217773, -2.3126602172851562e-05, 0.0, -0.0134735107421875, -1.9073486328125e-05, -5.960461066933931e-07, -4.768370445162873e-07, -3.814802767010406e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 79, 271, "minion", "<EOS>", 33, 260, "Self", "Selector", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -5.791458944688017, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "keyword"}, {"arg": "minion", "value": {"hole0": "SelfSelector", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Transform"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -1.9434351921081543, -8.940672159951646e-06, -3.850450593745336e-05, -5.9604644775390625e-06, -5.7220458984375e-06, -6.794949968025321e-06, -1.9073486328125e-06, -0.0043947696685791016, -4.2200084862997755e-05, -0.4520624876022339, -0.0062639713287353516, -0.017503738403320312, -0.038550376892089844, -0.1796550750732422, -0.000507354736328125, -1.9073486328125e-06, -0.006726503372192383, -0.08041214197874069, -5.7220458984375e-06, -0.15834903717041016, -0.01100921630859375, -9.5367431640625e-06, -0.13747940957546234, -2.3841855067985307e-07, -0.02305126190185547, -0.000347137451171875, -0.00429534912109375, -5.340576171875e-05, -0.00504302978515625, -5.7220458984375e-06, -0.000141143798828125, -0.06196073442697525, -0.02347383461892605, -7.748603820800781e-06, -0.0011005401611328125, -0.3141899108886719, -0.0035533905029296875, -7.62939453125e-05, -1.9073486328125e-06, -0.004045962821692228, -0.0001627206802368164, -0.000156402587890625, -1.9073486328125e-05, -5.14984130859375e-05, -0.268508642911911, -1.71661376953125e-05, -0.000202178955078125, 0.0, -0.02722012996673584, -0.0007864236831665039, -2.1457672119140625e-06, -0.39975643157958984, -0.0038003921508789062, -0.024748440831899643, -0.01894119754433632, -3.814697265625e-05, -0.9175477027893066, -0.004601597785949707, 0.0, -0.11035823822021484, -2.288818359375e-05, -1.9073486328125e-06, -0.5112099647521973, -1.6689286894688848e-06, -0.000202178955078125, -1.9073486328125e-06, -0.0006965398788452148, -2.1219253540039062e-05, 0.0, -0.00272369384765625, -5.7220458984375e-06, -1.1920906217710581e-07, -7.152555099310121e-07, -1.549969965708442e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -5.828278773041738, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Transform"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), Transform(\n            Aura(AddCard(CardQuery(conditions=[ManaCost(Attribute('mana',\n            SelfSelector())), IsMinion()])), MinionSelector(picker=\n            UserPicker())), value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -2.748814582824707, -0.00011848701251437888, -3.254412877140567e-05, -5.841255187988281e-06, -1.9073486328125e-06, -3.3379265005351044e-06, 0.0, -0.019974470138549805, -2.2649765014648438e-06, -0.1498047113418579, -0.0015734119806438684, -0.01592910662293434, -1.1324866136419587e-05, -0.000225067138671875, -0.00014495849609375, -0.0069217681884765625, -1.1444091796875e-05, 0.0, -0.7449085712432861, -0.14608299732208252, -0.06423377990722656, -0.10913848876953125, -0.0027065277099609375, -2.6702880859375e-05, -5.14984130859375e-05, -0.6651554107666016, -0.004344898276031017, -0.004988063592463732, -0.022562026977539062, -0.0017423629760742188, -7.2479248046875e-05, -0.0011119842529296875, 0.0, -0.0004903078079223633, -0.01445198617875576, -1.7523765563964844e-05, -0.001190185546875, -8.96453857421875e-05, -7.62939453125e-06, -0.11375665664672852, -2.0265579223632812e-06, -0.019684791564941406, -0.0003833770751953125, -0.0020198822021484375, -0.00020599365234375, -0.0010890960693359375, -4.57763671875e-05, -0.00051116943359375, -0.19577300548553467, -0.02994878962635994, -3.4689903259277344e-05, -0.000820159912109375, -0.3017082214355469, -0.00028228759765625, -0.000202178955078125, -1.9073486328125e-06, -0.0035223960876464844, -0.0001016855239868164, -0.0002346038818359375, -2.09808349609375e-05, -2.6702880859375e-05, -0.2718237638473511, -2.09808349609375e-05, -0.000244140625, 0.0, -0.030327199026942253, -0.0011372566223144531, -2.0265579223632812e-06, -0.21499061584472656, -0.00299835205078125, -0.020326314494013786, -0.01800086535513401, -2.288818359375e-05, -9.5367431640625e-05, -0.0062618255615234375, -1.52587890625e-05, 0.0, -0.0007870197296142578, -0.0001220703125, -8.344646857949556e-07, -0.001270294189453125, -1.52587890625e-05, -1.9073486328125e-06, -0.0003094673156738281, 0.0, -0.0003070831298828125, -5.7220458984375e-06, -0.03134739398956299, -0.00023567676544189453, 0.0, -0.09395217895507812, -7.62939453125e-06, -9.5367431640625e-06, -0.06919348239898682, -5.7220458984375e-05, -0.0008840560913085938, -5.7220458984375e-06, -0.00029503583209589124, 0.0, -0.001163482666015625, -0.0004482269287109375, -0.0024363137781620026, -1.9073486328125e-06, -0.0007949252030812204, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Transform", "<EOS>", 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -6.2258900645161575, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "Transform", "hole7": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole6": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), PlayerSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -1.9434351921081543, -8.940672159951646e-06, -3.850450593745336e-05, -5.9604644775390625e-06, -5.7220458984375e-06, -6.794949968025321e-06, -1.9073486328125e-06, -0.0043947696685791016, -4.2200084862997755e-05, -0.4520624876022339, -0.0062639713287353516, -0.017503738403320312, -0.038550376892089844, -0.1796550750732422, -0.000507354736328125, -1.9073486328125e-06, -0.006726503372192383, -0.08041214197874069, -5.7220458984375e-06, -0.15834903717041016, -0.01100921630859375, -9.5367431640625e-06, -0.13747940957546234, -2.3841855067985307e-07, -0.02305126190185547, -0.000347137451171875, -0.00429534912109375, -5.340576171875e-05, -0.00504302978515625, -5.7220458984375e-06, -0.000141143798828125, -0.06196073442697525, -0.02347383461892605, -7.748603820800781e-06, -0.0011005401611328125, -0.3141899108886719, -0.0035533905029296875, -7.62939453125e-05, -1.9073486328125e-06, -0.004045962821692228, -0.0001627206802368164, -0.000156402587890625, -1.9073486328125e-05, -5.14984130859375e-05, -0.268508642911911, -1.71661376953125e-05, -0.000202178955078125, 0.0, -0.02722012996673584, -0.0007864236831665039, -2.1457672119140625e-06, -0.39975643157958984, -0.0038003921508789062, -0.024748440831899643, -0.01894119754433632, -3.814697265625e-05, -0.9175477027893066, -0.004601597785949707, 0.0, -0.11035823822021484, -2.288818359375e-05, -1.9073486328125e-06, -0.9606595039367676, 0.0, -0.003935813903808594, -3.814697265625e-06, -0.01616525650024414, -0.0011134147644042969, 0.0, -0.0002841949462890625, -3.814697265625e-06, -3.814684532699175e-06, -2.3841855067985307e-07, -1.3119388313498348e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -6.2955846720846225, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "PlayerSelector", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Transform"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), Transform(\n            Aura(Transform(CardQuery(conditions=[ManaCost(Attribute('mana',\n            SelfSelector())), IsMinion()])), MinionSelector(picker=\n            UserPicker())), value=0)))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -2.748814582824707, -0.00011848701251437888, -3.254412877140567e-05, -5.841255187988281e-06, -1.9073486328125e-06, -3.3379265005351044e-06, 0.0, -0.019974470138549805, -2.2649765014648438e-06, -0.1498047113418579, -0.0015734119806438684, -0.01592910662293434, -1.1324866136419587e-05, -0.000225067138671875, -0.00014495849609375, -0.0069217681884765625, -1.1444091796875e-05, 0.0, -0.7449085712432861, -0.14608299732208252, -0.06423377990722656, -0.10913848876953125, -0.0027065277099609375, -2.6702880859375e-05, -5.14984130859375e-05, -0.8645679950714111, -0.0096098268404603, -1.52587890625e-05, -0.001983642578125, -0.04335784912109375, -6.67572021484375e-05, 0.0, -0.002646803855895996, -0.022476643323898315, -1.5735626220703125e-05, -0.010501861572265625, -7.2479248046875e-05, -3.814697265625e-06, -0.045271873474121094, -2.1457672119140625e-06, -0.017981529235839844, -0.000255584716796875, -0.0020580291748046875, -0.000194549560546875, -0.001293182373046875, -5.7220458984375e-05, -0.0004730224609375, -0.13824734091758728, -0.03286682814359665, -4.4226646423339844e-05, -0.0012054443359375, -0.2991657257080078, -0.0003509521484375, -0.0002193450927734375, -1.9073486328125e-06, -0.003271341323852539, -0.0001093149185180664, -0.00022125244140625, -2.09808349609375e-05, -2.6702880859375e-05, -0.26596394181251526, -2.09808349609375e-05, -0.0002346038818359375, 0.0, -0.026234863325953484, -0.0012629032135009766, -3.933906555175781e-06, -0.24631214141845703, -0.003192901611328125, -0.020515184849500656, -0.01891985535621643, -2.288818359375e-05, -0.0001010894775390625, -0.006221771240234375, -1.52587890625e-05, 0.0, -0.0007717609405517578, -0.000125885009765625, -8.344646857949556e-07, -0.00122833251953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0003056526184082031, 0.0, -0.0003108978271484375, -5.7220458984375e-06, -0.03121960163116455, -0.00023281574249267578, 0.0, -0.09366512298583984, -7.62939453125e-06, -9.5367431640625e-06, -0.06913244724273682, -5.7220458984375e-05, -0.0008821487426757812, -5.7220458984375e-06, -0.00029408204136416316, 0.0, -0.0011653900146484375, -0.0004482269287109375, -0.002421284094452858, -1.9073486328125e-06, -0.0007936150650493801, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Transform", "<EOS>", 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -6.360152367988654, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "Transform", "hole7": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole6": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Transform"}}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), (picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -1.9434351921081543, -8.940672159951646e-06, -3.850450593745336e-05, -5.9604644775390625e-06, -5.7220458984375e-06, -6.794949968025321e-06, -1.9073486328125e-06, -0.0043947696685791016, -4.2200084862997755e-05, -0.4520624876022339, -0.0062639713287353516, -0.017503738403320312, -0.038550376892089844, -0.1796550750732422, -0.000507354736328125, -1.9073486328125e-06, -0.006726503372192383, -0.08041214197874069, -5.7220458984375e-06, -0.15834903717041016, -0.01100921630859375, -9.5367431640625e-06, -0.13747940957546234, -2.3841855067985307e-07, -0.02305126190185547, -0.000347137451171875, -0.00429534912109375, -5.340576171875e-05, -0.00504302978515625, -5.7220458984375e-06, -0.000141143798828125, -0.06196073442697525, -0.02347383461892605, -7.748603820800781e-06, -0.0011005401611328125, -0.3141899108886719, -0.0035533905029296875, -7.62939453125e-05, -1.9073486328125e-06, -0.004045962821692228, -0.0001627206802368164, -0.000156402587890625, -1.9073486328125e-05, -5.14984130859375e-05, -0.268508642911911, -1.71661376953125e-05, -0.000202178955078125, 0.0, -0.02722012996673584, -0.0007864236831665039, -2.1457672119140625e-06, -0.39975643157958984, -0.0038003921508789062, -0.024748440831899643, -0.01894119754433632, -3.814697265625e-05, -1.7347912788391113, -0.2664518356323242, -1.71661376953125e-05, -5.7220458984375e-06, -0.12656807899475098, 0.0, -0.00250244140625, -3.814697265625e-06, -0.01819157600402832, -0.0004240274429321289, 0.0, -0.0001506805419921875, -1.9073486328125e-06, -1.4305082913779188e-06, -3.576278118089249e-07, -2.3848515411373228e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -6.429993861347491, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Transform"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            Deathrattle(Summon(TinkmasterOverspark()), PlayerSelector())])),\n            PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -1.9434351921081543, -8.940672159951646e-06, -3.850450593745336e-05, -5.9604644775390625e-06, -5.7220458984375e-06, -6.794949968025321e-06, -1.9073486328125e-06, -0.0043947696685791016, -4.2200084862997755e-05, -0.4520624876022339, -0.0062639713287353516, -0.017503738403320312, -0.038550376892089844, -0.1796550750732422, -0.000507354736328125, -1.9073486328125e-06, -0.006726503372192383, -0.08041214197874069, -5.7220458984375e-06, -0.15834903717041016, -0.01100921630859375, -9.5367431640625e-06, -0.13747940957546234, -2.3841855067985307e-07, -0.02305126190185547, -0.000347137451171875, -0.00429534912109375, -5.340576171875e-05, -0.00504302978515625, -5.7220458984375e-06, -0.000141143798828125, -0.06196073442697525, -0.02347383461892605, -7.748603820800781e-06, -0.0011005401611328125, -0.3141899108886719, -0.0035533905029296875, -7.62939453125e-05, -1.9073486328125e-06, -0.004045962821692228, -0.0001627206802368164, -0.000156402587890625, -1.9073486328125e-05, -5.14984130859375e-05, -0.268508642911911, -1.71661376953125e-05, -0.000202178955078125, 0.0, -0.02722012996673584, -0.0007864236831665039, -2.1457672119140625e-06, -1.334364891052246, -0.0005664825439453125, 0.0, 0.0, -0.36226987838745117, -1.1444091796875e-05, -1.9073486328125e-06, -0.4871044158935547, -3.814697265625e-06, -0.0008255243301391602, -6.6756979322235566e-06, -0.05070082098245621, -0.0425226166844368, -0.10359565913677216, -0.011625289916992188, 0.0, -0.0013484954833984375, -4.196165536995977e-05, 0.0, -0.08778323233127594, -6.0796710386057384e-06, 0.0, -0.006400108337402344, -5.7220458984375e-06, -1.9073486328125e-06, -0.2864922285079956, -3.576278118089249e-07, -0.000133514404296875, -1.9073486328125e-06, -0.0018565654754638672, -3.445148468017578e-05, 0.0, -0.001495361328125, -5.7220458984375e-06, -1.1920900533368695e-07, -7.152555099310121e-07, -1.3115986803313717e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 136, 19, 160, "Deathrattle", "<EOS>", 283, 61, 250, "Summon", "<EOS>", "Tinkmaster", "Overspark", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", "Player", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -6.612805732112342, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "PlayerSelector", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"args": [{"hole1": "TinkmasterOverspark", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Transform"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), player(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -1.9434351921081543, -8.940672159951646e-06, -3.850450593745336e-05, -5.9604644775390625e-06, -5.7220458984375e-06, -6.794949968025321e-06, -1.9073486328125e-06, -0.0043947696685791016, -4.2200084862997755e-05, -0.4520624876022339, -0.0062639713287353516, -0.017503738403320312, -0.038550376892089844, -0.1796550750732422, -0.000507354736328125, -1.9073486328125e-06, -0.006726503372192383, -0.08041214197874069, -5.7220458984375e-06, -0.15834903717041016, -0.01100921630859375, -9.5367431640625e-06, -0.13747940957546234, -2.3841855067985307e-07, -0.02305126190185547, -0.000347137451171875, -0.00429534912109375, -5.340576171875e-05, -0.00504302978515625, -5.7220458984375e-06, -0.000141143798828125, -0.06196073442697525, -0.02347383461892605, -7.748603820800781e-06, -0.0011005401611328125, -0.3141899108886719, -0.0035533905029296875, -7.62939453125e-05, -1.9073486328125e-06, -0.004045962821692228, -0.0001627206802368164, -0.000156402587890625, -1.9073486328125e-05, -5.14984130859375e-05, -0.268508642911911, -1.71661376953125e-05, -0.000202178955078125, 0.0, -0.02722012996673584, -0.0007864236831665039, -2.1457672119140625e-06, -0.39975643157958984, -0.0038003921508789062, -0.024748440831899643, -0.01894119754433632, -3.814697265625e-05, -1.6433873176574707, 0.0, -0.4122581481933594, -3.0517578125e-05, 0.0, -0.2774937152862549, 0.0, -0.001575469970703125, -5.7220458984375e-06, -0.028492093086242676, -0.000760197639465332, 0.0, -0.000209808349609375, -1.9073486328125e-06, -1.0728822417149786e-06, -2.3841855067985307e-07, -1.3118697097525e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 197, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", "player", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -6.645098679595229, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "player", "hole7": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole4": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "hole3": "Transform"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3, effects=[Effect(MinionDied(), [ActionTag(Summon\n            (TinkmasterOverspark()), PlayerSelector(), GreaterThan(\n            Attribute('<UNK>', SelfSelector()), picker=UserPicker()))])])\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -3.094125747680664, -0.004136085510253906, -6.556489552167477e-06, -7.629387982888147e-05, -4.5299530029296875e-06, -3.814697265625e-06, -7.081031071720645e-05, 0.0, -0.0024738311767578125, -1.1920928244535389e-07, -0.08756351470947266, -4.0531158447265625e-06, -0.000270843505859375, -0.0003871917724609375, -1.33514404296875e-05, 0.0, -0.0006576776504516602, 0.0, -0.2766246795654297, -7.152555099310121e-07, -0.07633399963378906, -0.09470176696777344, -0.0015784165589138865, -0.00021062063751742244, -0.0005957473767921329, -2.765635508694686e-05, -0.30024826526641846, -0.44712555408477783, -0.01364147663116455, -5.7220458984375e-06, -0.005373954772949219, -0.0003757476806640625, -0.10408306121826172, -7.62939453125e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.009067177772521973, -0.00017750263214111328, -4.9591064453125e-05, -0.0959625244140625, -0.9953880310058594, -0.001567840576171875, -0.0016713124932721257, -0.0008100642589852214, -0.03339466080069542, -0.15748895704746246, -0.09916315972805023, -0.0005931854248046875, 0.0, -0.015618567354977131, -0.0022326631005853415, 0.0, -8.20159912109375e-05, -0.027181625366210938, -1.9073486328125e-06, 0.0, -0.0070989131927490234, -0.0004233121871948242, -2.1457672119140625e-06, -3.24249267578125e-05, -0.0027923583984375, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.32776880264282227, -7.653236389160156e-05, -0.000568389892578125, -0.000217437744140625, -2.6702880859375e-05, -0.34026190638542175, -0.00909280776977539, -0.3868865966796875, -3.814697265625e-06, -0.6654540300369263, -0.0008320807828567922, -5.9604644775390625e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.23008406162261963, 0.0, -0.00152587890625, -3.814697265625e-06, -0.032468199729919434, -0.00044989585876464844, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 179, "3", "<EOS>", "3", "<EOS>", "Minion", "Died", "<EOS>", 282, 43, 155, 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 284, 61, 250, "Summon", "<EOS>", "Tinkmaster", "Overspark", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "<UNK>", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -7.9660795668134625, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template10", "hole4": [{"_type": "List", "elts": [{"args": [{"hole1": "TinkmasterOverspark", "hole0": "Summon", "_type": "Template69"}, {"hole0": "PlayerSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Str", "s": "<UNK>"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}]}], "hole2": "MinionDied"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3, effects=[Effect(MinionDied(), [ActionTag(\n            Transform(CardQuery(conditions=[ManaCost(Attribute('mana',\n            SelfSelector())), IsMinion()])), MinionSelector(picker=\n            UserPicker()), PlayerSelector())])])\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -3.094125747680664, -0.004136085510253906, -6.556489552167477e-06, -7.629387982888147e-05, -4.5299530029296875e-06, -3.814697265625e-06, -7.081031071720645e-05, 0.0, -0.0024738311767578125, -1.1920928244535389e-07, -0.08756351470947266, -4.0531158447265625e-06, -0.000270843505859375, -0.0003871917724609375, -1.33514404296875e-05, 0.0, -0.0006576776504516602, 0.0, -0.2766246795654297, -7.152555099310121e-07, -0.07633399963378906, -0.09470176696777344, -0.0015784165589138865, -0.00021062063751742244, -0.0005957473767921329, -2.765635508694686e-05, -0.30024826526641846, -0.44712555408477783, -0.01364147663116455, -5.7220458984375e-06, -0.005373954772949219, -0.0003757476806640625, -0.10408306121826172, -7.62939453125e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.009067177772521973, -0.00017750263214111328, -4.9591064453125e-05, -0.0959625244140625, -0.47735595703125, -0.000507354736328125, -2.47955322265625e-05, -2.09808349609375e-05, -0.2728477120399475, -0.5395958423614502, -1.1444091796875e-05, -0.00502777099609375, -0.13873863220214844, -3.4332275390625e-05, 0.0, -0.011585235595703125, -0.005610567983239889, -2.7894973754882812e-05, -0.000946044921875, -7.82012939453125e-05, -2.86102294921875e-05, -0.011211276054382324, -5.245207830739673e-06, -0.05354785919189453, -0.001544952392578125, -0.0018482208251953125, -0.0003566741943359375, -0.0003948211669921875, -6.103515625e-05, -0.000675201416015625, -0.3035336136817932, -0.03046141006052494, -7.653236389160156e-05, -0.0010776519775390625, -0.4963245391845703, -0.0002593994140625, -0.0002727508544921875, -1.9073486328125e-06, -0.0028045177459716797, -0.00011682510375976562, -0.0002040863037109375, -2.288818359375e-05, -2.47955322265625e-05, -0.2639836370944977, -2.47955322265625e-05, -0.0002307891845703125, 0.0, -0.028180597350001335, -0.0012420415878295898, -3.933906555175781e-06, -0.2516136169433594, -0.0031690597534179688, -0.019263850525021553, -0.019693387672305107, -2.09808349609375e-05, -0.0036420822143554688, -0.01053619384765625, -4.38690185546875e-05, -3.814697265625e-06, -0.0024383068084716797, -0.000476837158203125, -4.291525328881107e-06, -0.00083160400390625, -1.52587890625e-05, -1.9073486328125e-06, -0.0005495548248291016, 0.0, -0.0004730224609375, -5.7220458984375e-06, -0.031098484992980957, -0.00033104419708251953, 0.0, -0.03505516052246094, 0.0, -0.7705720663070679, -0.0003015993279404938, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 179, "3", "<EOS>", "3", "<EOS>", "Minion", "Died", "<EOS>", 282, 43, 155, 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 284, 40, 136, 19, 160, "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -8.425789232192258, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template10", "hole4": [{"_type": "List", "elts": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Transform"}}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}]}], "hole2": "MinionDied"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Kill(), Transform(\n            Aura(AddCard(CardQuery(conditions=[ManaCost(Attribute('mana',\n            SelfSelector())), IsMinion()])), MinionSelector(picker=\n            UserPicker())), players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -0.050009727478027344, -2.748814582824707, -0.00011848701251437888, -3.254412877140567e-05, -5.841255187988281e-06, -1.9073486328125e-06, -3.3379265005351044e-06, 0.0, -0.019974470138549805, -2.2649765014648438e-06, -0.1498047113418579, -0.0015734119806438684, -0.01592910662293434, -1.1324866136419587e-05, -0.000225067138671875, -0.00014495849609375, -0.0069217681884765625, -1.1444091796875e-05, 0.0, -0.7449085712432861, -0.14608299732208252, -0.06423377990722656, -0.10913848876953125, -0.0027065277099609375, -2.6702880859375e-05, -5.14984130859375e-05, -0.6651554107666016, -0.004344898276031017, -0.004988063592463732, -0.022562026977539062, -0.0017423629760742188, -7.2479248046875e-05, -0.0011119842529296875, 0.0, -0.0004903078079223633, -0.01445198617875576, -1.7523765563964844e-05, -0.001190185546875, -8.96453857421875e-05, -7.62939453125e-06, -0.11375665664672852, -2.0265579223632812e-06, -0.019684791564941406, -0.0003833770751953125, -0.0020198822021484375, -0.00020599365234375, -0.0010890960693359375, -4.57763671875e-05, -0.00051116943359375, -0.19577300548553467, -0.02994878962635994, -3.4689903259277344e-05, -0.000820159912109375, -0.3017082214355469, -0.00028228759765625, -0.000202178955078125, -1.9073486328125e-06, -0.0035223960876464844, -0.0001016855239868164, -0.0002346038818359375, -2.09808349609375e-05, -2.6702880859375e-05, -0.2718237638473511, -2.09808349609375e-05, -0.000244140625, 0.0, -0.030327199026942253, -0.0011372566223144531, -2.0265579223632812e-06, -0.21499061584472656, -0.00299835205078125, -0.020326314494013786, -0.01800086535513401, -2.288818359375e-05, -9.5367431640625e-05, -0.0062618255615234375, -1.52587890625e-05, 0.0, -0.0007870197296142578, -0.0001220703125, -8.344646857949556e-07, -0.001270294189453125, -1.52587890625e-05, -1.9073486328125e-06, -0.0003094673156738281, 0.0, -0.0003070831298828125, -5.7220458984375e-06, -0.03134739398956299, -0.00023567676544189453, 0.0, -2.450106620788574, -1.71661376953125e-05, -2.288818359375e-05, -0.011400699615478516, 0.0, -0.000431060791015625, -1.9073486328125e-06, -0.0027484893798828125, -3.254413604736328e-05, 0.0, -0.0007686614990234375, -7.43865966796875e-05, -0.0011156797409057617, 0.0, -0.00125885009765625, -9.5367431640625e-06, -0.020505905151367188, -0.0006581544876098633, 0.0, -0.0009326934814453125, -9.5367431640625e-06, -2.145760390703799e-06, -5.960462772236497e-07, -1.7886959540192038e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 107, 195, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Kill", "<EOS>", "Transform", "<EOS>", 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 136, 19, 160, "Add", "Card", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "3", "<EOS>", "3", "<EOS>"], "score": -8.546739658096065, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole5": "Transform", "hole7": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": "LEGENDARY", "_type": "Template20", "hole6": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}], "hole3": "Kill"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3, effects=[Effect(MinionDied(), [ActionTag(\n            Transform(CardQuery(conditions=[ManaCost(Attribute('mana',\n            SelfSelector())), IsMinion()])), MinionSelector(picker=\n            UserPicker()), SelfSelector())])])\n", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -2.09808349609375e-05, 0.0, -0.0008442493272013962, -1.0609570381348021e-05, -0.00012778602831531316, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.1920928244535389e-07, -1.52587890625e-05, -2.3841855067985307e-07, -0.0001125335693359375, -0.007149696350097656, -1.52587890625e-05, -3.0040680940146558e-05, -3.933906555175781e-06, -1.9073486328125e-06, -9.5367431640625e-05, -1.71661376953125e-05, -4.291534423828125e-06, 0.0, -7.82012939453125e-05, -3.094125747680664, -0.004136085510253906, -6.556489552167477e-06, -7.629387982888147e-05, -4.5299530029296875e-06, -3.814697265625e-06, -7.081031071720645e-05, 0.0, -0.0024738311767578125, -1.1920928244535389e-07, -0.08756351470947266, -4.0531158447265625e-06, -0.000270843505859375, -0.0003871917724609375, -1.33514404296875e-05, 0.0, -0.0006576776504516602, 0.0, -0.2766246795654297, -7.152555099310121e-07, -0.07633399963378906, -0.09470176696777344, -0.0015784165589138865, -0.00021062063751742244, -0.0005957473767921329, -2.765635508694686e-05, -0.30024826526641846, -0.44712555408477783, -0.01364147663116455, -5.7220458984375e-06, -0.005373954772949219, -0.0003757476806640625, -0.10408306121826172, -7.62939453125e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.009067177772521973, -0.00017750263214111328, -4.9591064453125e-05, -0.0959625244140625, -0.47735595703125, -0.000507354736328125, -2.47955322265625e-05, -2.09808349609375e-05, -0.2728477120399475, -0.5395958423614502, -1.1444091796875e-05, -0.00502777099609375, -0.13873863220214844, -3.4332275390625e-05, 0.0, -0.011585235595703125, -0.005610567983239889, -2.7894973754882812e-05, -0.000946044921875, -7.82012939453125e-05, -2.86102294921875e-05, -0.011211276054382324, -5.245207830739673e-06, -0.05354785919189453, -0.001544952392578125, -0.0018482208251953125, -0.0003566741943359375, -0.0003948211669921875, -6.103515625e-05, -0.000675201416015625, -0.3035336136817932, -0.03046141006052494, -7.653236389160156e-05, -0.0010776519775390625, -0.4963245391845703, -0.0002593994140625, -0.0002727508544921875, -1.9073486328125e-06, -0.0028045177459716797, -0.00011682510375976562, -0.0002040863037109375, -2.288818359375e-05, -2.47955322265625e-05, -0.2639836370944977, -2.47955322265625e-05, -0.0002307891845703125, 0.0, -0.028180597350001335, -0.0012420415878295898, -3.933906555175781e-06, -0.2516136169433594, -0.0031690597534179688, -0.019263850525021553, -0.019693387672305107, -2.09808349609375e-05, -0.0036420822143554688, -0.01053619384765625, -4.38690185546875e-05, -3.814697265625e-06, -0.0024383068084716797, -0.000476837158203125, -4.291525328881107e-06, -0.00083160400390625, -1.52587890625e-05, -1.9073486328125e-06, -0.0005495548248291016, 0.0, -0.0004730224609375, -5.7220458984375e-06, -0.031098484992980957, -0.00033104419708251953, 0.0, -0.03505516052246094, 0.0, -1.4029477834701538, -0.0001156330035883002, -1.1920928244535389e-07], "choice_history": [80, 159, 295, 88, 138, "Tinkmaster", "Overspark", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 112, 211, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 97, 179, "3", "<EOS>", "3", "<EOS>", "Minion", "Died", "<EOS>", 282, 43, 155, 282, 40, 136, 19, 160, "Action", "Tag", "<EOS>", 284, 40, 136, 19, 160, "Transform", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Mana", "Cost", "<EOS>", 282, 40, 136, 19, 160, "Attribute", "<EOS>", 283, 48, 169, "mana", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 67, 259, "Is", "Minion", "<EOS>", 40, 135, 19, 160, "Minion", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 68, 260, "Self", "Selector", "<EOS>"], "score": -9.057979102240274, "model_output": {"_type": "Module", "body": [{"name": "TinkmasterOverspark", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"hole1": 3, "hole0": "Tinkmaster Overspark", "hole2": "LEGENDARY", "_type": "Template34", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 3, "hole0": 3, "_type": "Template10", "hole4": [{"_type": "List", "elts": [{"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"args": [{"_type": "Str", "s": "mana"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Attribute"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaCost"}}, {"hole0": "IsMinion", "_type": "Template76_expr_seq"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Transform"}}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "MinionSelector"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}]}], "hole2": "MinionDied"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-4.00543212890625e-05, -1.9073486328125e-06, -20.568029403686523], "choice_history": [80, 159, 294], "score": -20.568071365356445, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}
{"beams": [{"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.8268262147903442, -3.814697265625e-06, -2.288818359375e-05, -0.002483367919921875, -1.1444091796875e-05, -0.3176032304763794, 0.0, -0.004107475280761719, 0.0, -0.0012760162353515625, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0019855499267578125, 0.0, -0.013156890869140625, -0.0002574920654296875, -0.26554203033447266, -1.9073486328125e-06, -6.866455078125e-05, -0.0036029815673828125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.000820159912109375, -0.0001659393310546875, -1.71661376953125e-05, -1.9073486328125e-06, -0.032764434814453125, 0.0, -0.030401229858398438, -3.814697265625e-05, -0.029682159423828125, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.002602100372314453, -5.960462772236497e-07, -0.005947589874267578, 0.0, -0.8263818025588989, -3.814697265625e-06, -2.288818359375e-05, -0.0024929046630859375, -1.1444091796875e-05, -0.31727421283721924, 0.0, -0.004134178161621094, 0.0, -0.0012722015380859375, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.001983642578125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.267214643284582, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.5786892175674438, -1.9073486328125e-06, -0.0001239776611328125, -0.0018253326416015625, -1.52587890625e-05, -0.7634638547897339, 0.0, -0.0032548904418945312, 0.0, -0.0007114410400390625, 0.0, -6.198883056640625e-05, -9.5367431640625e-06, -0.0020313262939453125, 0.0, -0.017948150634765625, -0.0002422332763671875, -0.22539615631103516, -1.9073486328125e-06, -6.866455078125e-05, -0.0028591156005859375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0012454986572265625, -0.00041961669921875, -1.52587890625e-05, -1.9073486328125e-06, -0.019843101501464844, 0.0, -0.027669906616210938, -3.814697265625e-05, -0.03543853759765625, 0.0, -0.0009291172027587891, -1.1920928244535389e-07, -0.002626776695251465, -5.960462772236497e-07, -0.006130695343017578, 0.0, -0.825619101524353, -1.9073486328125e-06, -2.47955322265625e-05, -0.0026149749755859375, -1.1444091796875e-05, -0.30366992950439453, 0.0, -0.004391670227050781, 0.0, -0.001247406005859375, 0.0, -6.580352783203125e-05, -9.5367431640625e-06, -0.00197601318359375, 0.0, -0.013096809387207031, -0.0002593994140625, -0.2653694152832031, -1.9073486328125e-06, -7.05718994140625e-05, -0.0036306381225585938, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.000896453857421875, -0.000213623046875, -1.52587890625e-05, -1.9073486328125e-06, -0.0275726318359375, 0.0, -0.029371261596679688, -3.814697265625e-05, -0.03173255920410156, 0.0, -0.0009481906890869141, -1.1920928244535389e-07, -0.0026040077209472656, -5.960462772236497e-07, -0.005991458892822266, 0.0, -0.8264656066894531, -3.814697265625e-06, -2.288818359375e-05, -0.0025310516357421875, -1.1444091796875e-05, -0.31336915493011475, 0.0, -0.004214286804199219, 0.0, -0.0012664794921875, 0.0, -6.389617919921875e-05, -9.5367431640625e-06, -0.001979827880859375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.482228266522192, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.5813266038894653, -1.9073486328125e-06, -0.000110626220703125, -0.00125885009765625, -1.52587890625e-05, -0.8511193990707397, 0.0, -0.00342559814453125, 0.0, -0.0006771087646484375, 0.0, -6.29425048828125e-05, -1.1444091796875e-05, -0.001911163330078125, 0.0, -0.016671180725097656, -0.0002269744873046875, -0.22522735595703125, -1.9073486328125e-06, -6.866455078125e-05, -0.0028715133666992188, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -8.20159912109375e-05, -0.0003414154052734375, 0.0, -0.0013151168823242188, -0.0004558563232421875, -1.52587890625e-05, -1.9073486328125e-06, -0.01898670196533203, 0.0, -0.027338027954101562, -3.814697265625e-05, -0.03676795959472656, 0.0, -0.0009329319000244141, -1.1920928244535389e-07, -0.0026324987411499023, -5.960462772236497e-07, -0.006161212921142578, 0.0, -0.8255361318588257, -1.9073486328125e-06, -2.47955322265625e-05, -0.0026340484619140625, -1.1444091796875e-05, -0.30253100395202637, 0.0, -0.004426002502441406, 0.0, -0.00124359130859375, 0.0, -6.580352783203125e-05, -9.5367431640625e-06, -0.0019741058349609375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.491257535740637, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.8268262147903442, -3.814697265625e-06, -2.288818359375e-05, -0.002483367919921875, -1.1444091796875e-05, -0.3176032304763794, 0.0, -0.004107475280761719, 0.0, -0.0012760162353515625, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0019855499267578125, 0.0, -0.013156890869140625, -0.0002574920654296875, -0.26554203033447266, -1.9073486328125e-06, -6.866455078125e-05, -0.0036029815673828125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.000820159912109375, -0.0001659393310546875, -1.71661376953125e-05, -1.9073486328125e-06, -0.032764434814453125, 0.0, -0.030401229858398438, -3.814697265625e-05, -0.029682159423828125, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.002602100372314453, -5.960462772236497e-07, -0.005947589874267578, 0.0, -0.5817195177078247, -1.9073486328125e-06, -0.000110626220703125, -0.00128936767578125, -1.52587890625e-05, -0.8500221967697144, 0.0, -0.0034360885620117188, 0.0, -0.0006771087646484375, 0.0, -6.29425048828125e-05, -1.1444091796875e-05, -0.0019073486328125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.552818881794714, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.5786892175674438, -1.9073486328125e-06, -0.0001239776611328125, -0.0018253326416015625, -1.52587890625e-05, -0.7634638547897339, 0.0, -0.0032548904418945312, 0.0, -0.0007114410400390625, 0.0, -6.198883056640625e-05, -9.5367431640625e-06, -0.0020313262939453125, 0.0, -0.017948150634765625, -0.0002422332763671875, -0.22539615631103516, -1.9073486328125e-06, -6.866455078125e-05, -0.0028591156005859375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0012454986572265625, -0.00041961669921875, -1.52587890625e-05, -1.9073486328125e-06, -0.019843101501464844, 0.0, -0.027669906616210938, -3.814697265625e-05, -0.03543853759765625, 0.0, -0.0009291172027587891, -1.1920928244535389e-07, -0.002626776695251465, -5.960462772236497e-07, -0.006130695343017578, 0.0, -0.5826543569564819, -1.9073486328125e-06, -0.00011444091796875, -0.0015163421630859375, -1.52587890625e-05, -0.8364273309707642, 0.0, -0.0035190582275390625, 0.0, -0.0006885528564453125, 0.0, -6.389617919921875e-05, -9.5367431640625e-06, -0.0018901824951171875, 0.0, -0.016730308532714844, -0.0002269744873046875, -0.22453880310058594, -1.9073486328125e-06, -6.866455078125e-05, -0.0028676986694335938, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.20159912109375e-05, -0.000339508056640625, 0.0, -0.0014390945434570312, -0.000507354736328125, -1.52587890625e-05, -1.9073486328125e-06, -0.017998695373535156, 0.0, -0.02698516845703125, -3.62396240234375e-05, -0.037990570068359375, 0.0, -0.0009348392486572266, -1.1920928244535389e-07, -0.002642035484313965, -5.960462772236497e-07, -0.006220340728759766, 0.0, -0.8254473209381104, -1.9073486328125e-06, -2.47955322265625e-05, -0.002655029296875, -1.1444091796875e-05, -0.3002985715866089, 0.0, -0.0044727325439453125, 0.0, -0.001239776611328125, 0.0, -6.580352783203125e-05, -9.5367431640625e-06, -0.001972198486328125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.713155018612646, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.8268262147903442, -3.814697265625e-06, -2.288818359375e-05, -0.002483367919921875, -1.1444091796875e-05, -0.3176032304763794, 0.0, -0.004107475280761719, 0.0, -0.0012760162353515625, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0019855499267578125, 0.0, -0.013156890869140625, -0.0002574920654296875, -0.26554203033447266, -1.9073486328125e-06, -6.866455078125e-05, -0.0036029815673828125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.000820159912109375, -0.0001659393310546875, -1.71661376953125e-05, -1.9073486328125e-06, -0.032764434814453125, 0.0, -0.030401229858398438, -3.814697265625e-05, -0.029682159423828125, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.002602100372314453, -5.960462772236497e-07, -0.005947589874267578, 0.0, -0.5817195177078247, -1.9073486328125e-06, -0.000110626220703125, -0.00128936767578125, -1.52587890625e-05, -1.0413569211959839, -1.9073486328125e-06, -0.0008716583251953125, 0.0, -0.000469207763671875, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -0.002353668212890625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.741852390095495, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.5813266038894653, -1.9073486328125e-06, -0.000110626220703125, -0.00125885009765625, -1.52587890625e-05, -1.0403703451156616, -1.9073486328125e-06, -0.0008697509765625, 0.0, -0.0004711151123046875, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -0.00235748291015625, 0.0, -0.02801990509033203, -0.0002841949462890625, -0.26375865936279297, -1.9073486328125e-06, -8.0108642578125e-05, -0.00405120849609375, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0007944107055664062, -0.000148773193359375, -1.71661376953125e-05, -1.9073486328125e-06, -0.03531074523925781, 0.0, -0.0296478271484375, -4.00543212890625e-05, -0.030307769775390625, 0.0, -0.0008966922760009766, -1.1920928244535389e-07, -0.002617359161376953, -5.960462772236497e-07, -0.005882740020751953, 0.0, -0.822649359703064, -3.814697265625e-06, -2.288818359375e-05, -0.002429962158203125, -1.1444091796875e-05, -0.31652891635894775, 0.0, -0.004107475280761719, 0.0, -0.0012722015380859375, 0.0, -6.389617919921875e-05, -9.5367431640625e-06, -0.0019931793212890625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.751002179905676, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.5786892175674438, -1.9073486328125e-06, -0.0001239776611328125, -0.0018253326416015625, -1.52587890625e-05, -0.7634638547897339, 0.0, -0.0032548904418945312, 0.0, -0.0007114410400390625, 0.0, -6.198883056640625e-05, -9.5367431640625e-06, -0.0020313262939453125, 0.0, -0.017948150634765625, -0.0002422332763671875, -0.22539615631103516, -1.9073486328125e-06, -6.866455078125e-05, -0.0028591156005859375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0012454986572265625, -0.00041961669921875, -1.52587890625e-05, -1.9073486328125e-06, -0.019843101501464844, 0.0, -0.027669906616210938, -3.814697265625e-05, -0.03543853759765625, 0.0, -0.0009291172027587891, -1.1920928244535389e-07, -0.002626776695251465, -5.960462772236497e-07, -0.006130695343017578, 0.0, -0.825619101524353, -1.9073486328125e-06, -2.47955322265625e-05, -0.0026149749755859375, -1.1444091796875e-05, -0.30366992950439453, 0.0, -0.004391670227050781, 0.0, -0.001247406005859375, 0.0, -6.580352783203125e-05, -9.5367431640625e-06, -0.00197601318359375, 0.0, -0.013096809387207031, -0.0002593994140625, -0.2653694152832031, -1.9073486328125e-06, -7.05718994140625e-05, -0.0036306381225585938, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.000896453857421875, -0.000213623046875, -1.52587890625e-05, -1.9073486328125e-06, -0.0275726318359375, 0.0, -0.029371261596679688, -3.814697265625e-05, -0.03173255920410156, 0.0, -0.0009481906890869141, -1.1920928244535389e-07, -0.0026040077209472656, -5.960462772236497e-07, -0.005991458892822266, 0.0, -0.5817623138427734, -1.9073486328125e-06, -0.000110626220703125, -0.00135040283203125, -1.52587890625e-05, -0.8465578556060791, 0.0, -0.0034580230712890625, 0.0, -0.00067901611328125, 0.0, -6.389617919921875e-05, -1.1444091796875e-05, -0.00189971923828125, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.768200742527746, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.5813266038894653, -1.9073486328125e-06, -0.000110626220703125, -0.00125885009765625, -1.52587890625e-05, -0.8511193990707397, 0.0, -0.00342559814453125, 0.0, -0.0006771087646484375, 0.0, -6.29425048828125e-05, -1.1444091796875e-05, -0.001911163330078125, 0.0, -0.016671180725097656, -0.0002269744873046875, -0.22522735595703125, -1.9073486328125e-06, -6.866455078125e-05, -0.0028715133666992188, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -8.20159912109375e-05, -0.0003414154052734375, 0.0, -0.0013151168823242188, -0.0004558563232421875, -1.52587890625e-05, -1.9073486328125e-06, -0.01898670196533203, 0.0, -0.027338027954101562, -3.814697265625e-05, -0.03676795959472656, 0.0, -0.0009329319000244141, -1.1920928244535389e-07, -0.0026324987411499023, -5.960462772236497e-07, -0.006161212921142578, 0.0, -0.5827611684799194, -1.9073486328125e-06, -0.00011444091796875, -0.001552581787109375, -1.52587890625e-05, -0.8360673189163208, 0.0, -0.0035295486450195312, 0.0, -0.0006866455078125, 0.0, -6.4849853515625e-05, -9.5367431640625e-06, -0.0018863677978515625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.779488789364599, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.5786892175674438, -1.9073486328125e-06, -0.0001239776611328125, -0.0018253326416015625, -1.52587890625e-05, -0.7634638547897339, 0.0, -0.0032548904418945312, 0.0, -0.0007114410400390625, 0.0, -6.198883056640625e-05, -9.5367431640625e-06, -0.0020313262939453125, 0.0, -0.017948150634765625, -0.0002422332763671875, -0.22539615631103516, -1.9073486328125e-06, -6.866455078125e-05, -0.0028591156005859375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0012454986572265625, -0.00041961669921875, -1.52587890625e-05, -1.9073486328125e-06, -0.019843101501464844, 0.0, -0.027669906616210938, -3.814697265625e-05, -0.03543853759765625, 0.0, -0.0009291172027587891, -1.1920928244535389e-07, -0.002626776695251465, -5.960462772236497e-07, -0.006130695343017578, 0.0, -0.825619101524353, -1.9073486328125e-06, -2.47955322265625e-05, -0.0026149749755859375, -1.1444091796875e-05, -0.30366992950439453, 0.0, -0.004391670227050781, 0.0, -0.001247406005859375, 0.0, -6.580352783203125e-05, -9.5367431640625e-06, -0.00197601318359375, 0.0, -0.013096809387207031, -0.0002593994140625, -0.2653694152832031, -1.9073486328125e-06, -7.05718994140625e-05, -0.0036306381225585938, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.000896453857421875, -0.000213623046875, -1.52587890625e-05, -1.9073486328125e-06, -0.0275726318359375, 0.0, -0.029371261596679688, -3.814697265625e-05, -0.03173255920410156, 0.0, -0.0009481906890869141, -1.1920928244535389e-07, -0.0026040077209472656, -5.960462772236497e-07, -0.005991458892822266, 0.0, -0.5817623138427734, -1.9073486328125e-06, -0.000110626220703125, -0.00135040283203125, -1.52587890625e-05, -1.046755075454712, -1.9073486328125e-06, -0.000881195068359375, 0.0, -0.0004673004150390625, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -0.002346038818359375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -7.966079580113195, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.5786892175674438, -1.9073486328125e-06, -0.0001239776611328125, -0.0018253326416015625, -1.52587890625e-05, -0.7634638547897339, 0.0, -0.0032548904418945312, 0.0, -0.0007114410400390625, 0.0, -6.198883056640625e-05, -9.5367431640625e-06, -0.0020313262939453125, 0.0, -0.017948150634765625, -0.0002422332763671875, -0.22539615631103516, -1.9073486328125e-06, -6.866455078125e-05, -0.0028591156005859375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0012454986572265625, -0.00041961669921875, -1.52587890625e-05, -1.9073486328125e-06, -0.019843101501464844, 0.0, -0.027669906616210938, -3.814697265625e-05, -0.03543853759765625, 0.0, -0.0009291172027587891, -1.1920928244535389e-07, -0.002626776695251465, -5.960462772236497e-07, -0.006130695343017578, 0.0, -0.5826543569564819, -1.9073486328125e-06, -0.00011444091796875, -0.0015163421630859375, -1.52587890625e-05, -0.8364273309707642, 0.0, -0.0035190582275390625, 0.0, -0.0006885528564453125, 0.0, -6.389617919921875e-05, -9.5367431640625e-06, -0.0018901824951171875, 0.0, -0.016730308532714844, -0.0002269744873046875, -0.22453880310058594, -1.9073486328125e-06, -6.866455078125e-05, -0.0028676986694335938, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.20159912109375e-05, -0.000339508056640625, 0.0, -0.0014390945434570312, -0.000507354736328125, -1.52587890625e-05, -1.9073486328125e-06, -0.017998695373535156, 0.0, -0.02698516845703125, -3.62396240234375e-05, -0.037990570068359375, 0.0, -0.0009348392486572266, -1.1920928244535389e-07, -0.002642035484313965, -5.960462772236497e-07, -0.006220340728759766, 0.0, -0.5828821659088135, -1.9073486328125e-06, -0.0001163482666015625, -0.0015888214111328125, -1.52587890625e-05, -0.8349494934082031, 0.0, -0.0035448074340820312, 0.0, -0.0006885528564453125, 0.0, -6.4849853515625e-05, -9.5367431640625e-06, -0.00188446044921875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.00270210437467, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.5786892175674438, -1.9073486328125e-06, -0.0001239776611328125, -0.0018253326416015625, -1.52587890625e-05, -0.7634638547897339, 0.0, -0.0032548904418945312, 0.0, -0.0007114410400390625, 0.0, -6.198883056640625e-05, -9.5367431640625e-06, -0.0020313262939453125, 0.0, -0.017948150634765625, -0.0002422332763671875, -0.22539615631103516, -1.9073486328125e-06, -6.866455078125e-05, -0.0028591156005859375, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0012454986572265625, -0.00041961669921875, -1.52587890625e-05, -1.9073486328125e-06, -0.019843101501464844, 0.0, -0.027669906616210938, -3.814697265625e-05, -0.03543853759765625, 0.0, -0.0009291172027587891, -1.1920928244535389e-07, -0.002626776695251465, -5.960462772236497e-07, -0.006130695343017578, 0.0, -0.5826543569564819, -1.9073486328125e-06, -0.00011444091796875, -0.0015163421630859375, -1.52587890625e-05, -1.0630289316177368, -1.9073486328125e-06, -0.0009021759033203125, 0.0, -0.0004634857177734375, 0.0, -8.678436279296875e-05, -1.1444091796875e-05, -0.002338409423828125, 0.0, -0.028342247009277344, -0.0002841949462890625, -0.26294517517089844, -1.9073486328125e-06, -8.0108642578125e-05, -0.00403594970703125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -8.392333984375e-05, -0.0003337860107421875, 0.0, -0.0008525848388671875, -0.000186920166015625, -1.71661376953125e-05, -1.9073486328125e-06, -0.030248641967773438, 0.0, -0.028715133666992188, -3.814697265625e-05, -0.032135009765625, 0.0, -0.0009005069732666016, -1.1920928244535389e-07, -0.0026192665100097656, -5.960462772236497e-07, -0.005911350250244141, 0.0, -0.8226300477981567, -3.814697265625e-06, -2.288818359375e-05, -0.0024585723876953125, -1.1444091796875e-05, -0.3133906126022339, 0.0, -0.0041751861572265625, 0.0, -0.0012664794921875, 0.0, -6.4849853515625e-05, -9.5367431640625e-06, -0.0019893646240234375, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.005323635861181, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.5813266038894653, -1.9073486328125e-06, -0.000110626220703125, -0.00125885009765625, -1.52587890625e-05, -0.8511193990707397, 0.0, -0.00342559814453125, 0.0, -0.0006771087646484375, 0.0, -6.29425048828125e-05, -1.1444091796875e-05, -0.001911163330078125, 0.0, -0.016671180725097656, -0.0002269744873046875, -0.22522735595703125, -1.9073486328125e-06, -6.866455078125e-05, -0.0028715133666992188, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -8.20159912109375e-05, -0.0003414154052734375, 0.0, -0.0013151168823242188, -0.0004558563232421875, -1.52587890625e-05, -1.9073486328125e-06, -0.01898670196533203, 0.0, -0.027338027954101562, -3.814697265625e-05, -0.03676795959472656, 0.0, -0.0009329319000244141, -1.1920928244535389e-07, -0.0026324987411499023, -5.960462772236497e-07, -0.006161212921142578, 0.0, -0.5827611684799194, -1.9073486328125e-06, -0.00011444091796875, -0.001552581787109375, -1.52587890625e-05, -1.064642071723938, -1.9073486328125e-06, -0.0009059906005859375, 0.0, -0.000461578369140625, 0.0, -8.678436279296875e-05, -1.1444091796875e-05, -0.0023345947265625, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.005688893124365, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('card_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.bind('card_played', self._reveal)\n", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -2.86102294921875e-05, -1.33514404296875e-05, -7.43865966796875e-05, -0.00014184899919200689, -9.059892363438848e-06, -8.58306884765625e-05, 0.0, 0.0, -0.0793311595916748, -9.5367431640625e-06, -7.784366607666016e-05, -0.16431331634521484, -0.017601966857910156, -0.0005245208740234375, -7.021180499577895e-05, -3.814697265625e-06, -9.894321010506246e-06, -1.9073486328125e-06, -0.002643585205078125, -0.00022470951080322266, -0.003177642822265625, -1.52587890625e-05, -0.015115737915039062, 0.0, -2.47955322265625e-05, -6.29425048828125e-05, 0.0, -4.1961669921875e-05, -1.52587890625e-05, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-05, -4.971027374267578e-05, -4.52994936495088e-06, -0.21016693115234375, -0.0015888214111328125, -1.33514404296875e-05, -3.0517578125e-05, -0.0002498626708984375, -4.38690185546875e-05, -3.814697265625e-06, -0.0002269744873046875, -7.62939453125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, -9.918212890625e-05, -1.9073486328125e-06, -0.0001049041748046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.000301361083984e-05, 0.0, -0.00019073486328125, -1.33514404296875e-05, -0.0004138946533203125, -3.0159948437358253e-05, -0.013360977172851562, -2.288818359375e-05, -2.509096145629883, 0.0, -0.000286102294921875, -0.013663291931152344, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -9.1552734375e-05, -0.0003757476806640625, 0.0, -0.00023651123046875, -0.0004787445068359375, -1.33514404296875e-05, -1.9073486328125e-06, -0.015851974487304688, 0.0, -0.03636741638183594, -5.91278076171875e-05, -0.021200180053710938, 0.0, -0.0008927583694458008, -1.1920928244535389e-07, -0.002528071403503418, -5.960462772236497e-07, -0.006992936134338379, 0.0, -0.8301388025283813, -3.814697265625e-06, -2.47955322265625e-05, -0.0034809112548828125, -1.1444091796875e-05, -0.22309482097625732, 0.0, -0.0052947998046875, 0.0, -0.001270294189453125, 0.0, -6.29425048828125e-05, -9.5367431640625e-06, -0.0020751953125, 0.0, -0.013638496398925781, -0.0002689361572265625, -0.26501941680908203, -1.9073486328125e-06, -6.866455078125e-05, -0.0036144256591796875, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -8.0108642578125e-05, -0.0003376007080078125, 0.0, -0.00080108642578125, -0.0001506805419921875, -1.71661376953125e-05, -1.9073486328125e-06, -0.03543853759765625, 0.0, -0.031103134155273438, -4.00543212890625e-05, -0.028270721435546875, 0.0, -0.0009405612945556641, -1.1920928244535389e-07, -0.0025963783264160156, -5.960462772236497e-07, -0.005945682525634766, 0.0, -0.5813266038894653, -1.9073486328125e-06, -0.000110626220703125, -0.00125885009765625, -1.52587890625e-05, -1.0403703451156616, -1.9073486328125e-06, -0.0008697509765625, 0.0, -0.0004711151123046875, 0.0, -8.58306884765625e-05, -1.1444091796875e-05, -0.00235748291015625, 0.0, -0.02801990509033203, -0.0002841949462890625, -0.26375865936279297, -1.9073486328125e-06, -8.0108642578125e-05, -0.00405120849609375, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -8.392333984375e-05, -0.000335693359375, 0.0, -0.0007944107055664062, -0.000148773193359375, -1.71661376953125e-05, -1.9073486328125e-06, -0.03531074523925781, 0.0, -0.0296478271484375, -4.00543212890625e-05, -0.030307769775390625, 0.0, -0.0008966922760009766, -1.1920928244535389e-07, -0.002617359161376953, -5.960462772236497e-07, -0.005882740020751953, 0.0, -0.5845597982406616, -1.9073486328125e-06, -0.0001087188720703125, -0.001255035400390625, -1.52587890625e-05, -0.8458840847015381, 0.0, -0.0033931732177734375, 0.0, -0.0006847381591796875, 0.0, -6.389617919921875e-05, -1.1444091796875e-05, -0.0019207000732421875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Vaporize", "<EOS>", 282, 45, 160, "Secret", "Card", "<EOS>", 299, 102, 185, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 91, 143, "use", "<EOS>", 269, 277, 268, "self", "<EOS>", 268, "player", "<EOS>", 268, "game", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "use", "<EOS>", 283, 45, 160, "player", "<EOS>", 45, 160, "game", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "character_attack", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>", 91, 143, "deactivate", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 11, 129, 11, 129, 19, 160, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 283, 48, 169, "card_played", "<EOS>", 37, 129, 19, 160, "self", "<EOS>", "_reveal", "<EOS>"], "score": -8.039808260723852, "model_output": {"_type": "Module", "body": [{"name": "Vaporize", "_type": "ClassDef", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template16", "hole2": "MAGE"}, {"name": "use", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Name", "id": "player"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "use"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "unbind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "character_attack"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}, {"name": "deactivate", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "card_played"}, {"value": {"_type": "Name", "id": "self"}, "_type": "Attribute", "attr": "_reveal"}], "_type": "Call", "func": {"value": {"value": {"value": {"_type": "Name", "id": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Attribute", "attr": "bind"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "SecretCard"}]}]}}, {"inferred_code": "", "score_history": [-0.0001506805419921875, -2.6702880859375e-05, -21.402982711791992], "choice_history": [80, 159, 294], "score": -21.403160095214844, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n"}
{"beams": [{"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -0.42296886444091797, -0.00023865699768066406, -0.001445770263671875, -0.0001201629638671875, -1.3470649719238281e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 161, "True", "<EOS>"], "score": -0.4293880446384719, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "stealth", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -1.1911001205444336, -3.790855407714844e-05, -0.000354766845703125, -6.67572021484375e-05, -1.3470649719238281e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 20, 161, "True", "<EOS>"], "score": -1.1961741431186965, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "windfury", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -3.7716970443725586, -2.7179718017578125e-05, -0.0002384185791015625, -0.0001220703125, -9.5367431640625e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 161, "True", "<EOS>"], "score": -3.7766953690479568, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "charge", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -5.770986557006836, -7.510185241699219e-05, -0.000225067138671875, -6.67572021484375e-05, -1.33514404296875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 20, 161, "True", "<EOS>"], "score": -5.775967953963118, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "divine_shield", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, spell_damage=1)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -6.073174953460693, -0.00012791156768798828, -0.010644912719726562, -2.09808349609375e-05, -0.01118004322052002, -3.814697265625e-06], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "spell_damage", "<EOS>", 21, 165, "1", "<EOS>"], "score": -6.0997537358234695, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "spell_damage", "hole3": {"_type": "Num", "n": 1}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, spell_targetable=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -6.392995834350586, -1.1920928244535389e-07, -0.024489402770996094, -0.0010223388671875, -0.0010967254638671875, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "spell_targetable", "<EOS>", 20, 161, "True", "<EOS>"], "score": -6.424205539984534, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "spell_targetable", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, Character=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -7.085748672485352, -0.1108407974243164, -0.12067890167236328, -3.814697265625e-05, -5.91278076171875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "Character", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.32196676568492, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "Character", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, ALL=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -7.442585468292236, -8.7738037109375e-05, -0.034915924072265625, -0.0001354217529296875, -3.635883331298828e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.482362030310469, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "ALL", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -6.699579238891602, -4.1961669921875e-05, -1.9073468138230965e-06, -1.20401346066501e-05, -1.1801719665527344e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -6.115436553955078e-05, 0.0, -3.063678741455078e-05, -3.814697265625e-06, -0.0016994476318359375, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.54266357421875, -3.623903467087075e-05, -0.000537872314453125, -0.0001239776611328125, -6.699495133943856e-05, 0.0, -8.70225176186068e-06, 0.0, -0.33820641040802, -0.00036537647247314453, -0.0005397796630859375, -1.52587890625e-05, -7.748603820800781e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.58426165390938, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "hole2": "ALL", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MURLOC"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "stealth", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, enrage=True)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -7.373785972595215, -0.003011465072631836, -0.5154457092285156, -6.4849853515625e-05, -1.1444091796875e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "enrage", "<EOS>", 20, 161, "True", "<EOS>"], "score": -7.89692056016429, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "enrage", "hole3": {"value": true, "_type": "NameConstant"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -8.92092514038086, -3.814697265625e-06, -0.00014948641182854772, 0.0, -7.987022399902344e-06, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score": -8.923706767474869, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, deathrattle=Deathrattle(Damage(IsType(\n            MINION_TYPE.BEAST)), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -6.604913711547852, -8.7738037109375e-05, -0.0005168914794921875, -0.0008792877197265625, -9.5367431640625e-06, 0.0, -0.09994029998779297, 0.0, -0.008941650390625, -0.24096107482910156, -6.4849853515625e-05, -0.0002574920654296875, -9.72747802734375e-05, -0.376091331243515, -8.320462075062096e-05, -0.000152587890625, -0.04987812042236328, -0.0004901885986328125, -8.96453857421875e-05, 0.0, -1.279989242553711, -0.00013279910490382463, 0.0, -0.0007457733154296875, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.000110626220703125, -7.867813110351562e-06, -0.13234519958496094, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.24023878574371338, -4.8278936446877196e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Damage", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -9.041714632512594, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "BEAST"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, deathrattle=Deathrattle(Damage(RandomAmount(2)),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.103515625e-05, -3.814697265625e-06, -2.2411095415009186e-05, -2.098061486321967e-05, -1.8477303456165828e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.384185791015625e-06, -5.7220458984375e-06, -4.172325134277344e-06, -2.86102294921875e-05, -0.0019435882568359375, -6.29425048828125e-05, -7.033323527139146e-06, -1.931190308823716e-05, -7.033347174001392e-06, 0.0, -0.0002772810112219304, 0.0, -0.00010693073272705078, -3.814697265625e-06, -0.0010528564453125, -0.000827789306640625, -8.606812480138615e-05, -1.9073486328125e-06, -1.2159134712419473e-05, 0.0, -6.604913711547852, -8.7738037109375e-05, -0.0005168914794921875, -0.0008792877197265625, -9.5367431640625e-06, 0.0, -0.09994029998779297, 0.0, -0.008941650390625, -0.24096107482910156, -6.4849853515625e-05, -0.0002574920654296875, -9.72747802734375e-05, -0.376091331243515, -8.320462075062096e-05, -0.000152587890625, -0.04987812042236328, -0.0004901885986328125, -8.96453857421875e-05, 0.0, -0.4659395217895508, -0.11579393595457077, 0.0, -0.35956573486328125, -7.82012939453125e-05, -3.814697265625e-06, -0.14201831817626953, 0.0, -0.3049764633178711, -0.6550350189208984, -8.392333984375e-05, 0.0, -0.2266092300415039, -1.3470649719238281e-05, 0.0, -0.000537872314453125, -2.288818359375e-05, -1.9073486328125e-05, -0.0051538944244384766, 0.0, -0.000339508056640625, -5.91278076171875e-05, -0.0061113834381103516, -1.1563301086425781e-05, 0.0, -0.00339508056640625, -0.000850677490234375, -0.0110551118850708, 0.0, -0.005596160888671875, -5.91278076171875e-05, -0.1320650577545166, -0.029980778694152832, 0.0], "choice_history": [80, 159, 295, 88, 138, "Worgen", "Infiltrator", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 101, 184, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "deathrattle", "<EOS>", 14, 136, 19, 160, "Deathrattle", "<EOS>", 283, 40, 136, 19, 160, "Damage", "<EOS>", 282, 40, 136, 19, 160, "Random", "Amount", "<EOS>", 282, 47, 165, "2", "<EOS>", 40, 135, 19, 160, "Character", "Selector", "<EOS>", 291, 79, 271, "players", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -9.853430944061984, "model_output": {"_type": "Module", "body": [{"name": "WorgenInfiltrator", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template15", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "deathrattle", "hole3": {"args": [{"args": [{"args": [{"_type": "Num", "n": 2}], "_type": "Call", "func": {"_type": "Name", "id": "RandomAmount"}}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}, {"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Deathrattle"}}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "self.target.add_buff(Buff(Infiltrator()))\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -13.808061599731445, -7.29585075378418, -0.2992977499961853, -0.0027376017533242702], "choice_history": [80, 159, 295, 117, 226, "Infiltrator", "<EOS>"], "score": -21.40596487140283, "model_output": {"_type": "Module", "body": [{"hole0": "Infiltrator", "_type": "Template50"}]}}, {"inferred_code": "", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -22.423707962036133], "choice_history": [80, 159, 294], "score": -22.42371940612793, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}
{"beams": [{"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -0.34905147552490234, -0.0003337860107421875, -0.35748326778411865, -0.20938213169574738, -2.121920624631457e-05, -0.000293731689453125, -1.9073486328125e-05, -0.000816221465356648, -1.1920928244535389e-07, -7.474263838957995e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -1.7189339024161683, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -1.917435646057129, -0.008734703063964844, -7.62939453125e-06, 0.0, -0.000164031982421875, -3.814697265625e-06, -0.000278472900390625, -0.12372398376464844, -0.002262115478515625, -0.00015151500701904297, -0.0002924203872680664, -1.1444091796875e-05, -0.02318596839904785, -9.5367431640625e-06, -0.00048828125, -0.00312042236328125, -1.9073486328125e-06, -0.13501620292663574, -1.71661376953125e-05, -0.0011920928955078125, -7.62939453125e-06, -0.006031155586242676, -0.0002193450927734375, 0.0, -0.00028228759765625, -0.0025539398193359375, -2.6702880859375e-05, -1.1444091796875e-05, -0.004591941833496094, -0.002567291259765625, -2.0265579223632812e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.0045413970947265625, -5.7220458984375e-06, 0.0, -0.003979682922363281, -2.8490991098806262e-05, -2.47955322265625e-05, -0.000164031982421875, -0.0002651214599609375, -0.00045013427734375, -2.6702880859375e-05, -0.004058837890625, -1.4066696166992188e-05, 0.0, -0.001041412353515625, -2.288818359375e-05, -9.5367431640625e-06, -0.11980032920837402, -3.576278118089249e-07, -0.00018596649169921875, -0.0003986358642578125, -2.09808349609375e-05, 0.0, -0.0009250640869140625, -0.00021195411682128906, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0029926300048828125, -3.4332275390625e-05, -0.010165214538574219, -1.9073486328125e-06, -2.09808349609375e-05, -5.53131103515625e-05, -1.1444091796875e-05, -0.01703178882598877, -2.7298927307128906e-05, -0.0001125335693359375, -9.5367431640625e-06, -0.07390592247247696, 0.0, -0.0009784698486328125, -3.4332275390625e-05, -0.0037103393115103245, 0.0, -6.973724521230906e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 284, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -2.597899096654963, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(IsType(\n            MINION_TYPE.DRAGON)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -1.2530593872070312, -0.0028171539306640625, -5.7220458984375e-06, 0.0, -0.20321357250213623, -0.0008060932159423828, 0.0, -9.34600830078125e-05, -0.0001373291015625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0013217926025390625, -1.9073486328125e-06, -0.012371063232421875, 0.0, -1.0361528396606445, -3.4332275390625e-05, -0.0010418891906738281, -9.536738616588991e-07, -3.147125244140625e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -3.312554730422981, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionSelector(IsType(\n            MINION_TYPE.DRAGON)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -2.15187931060791, -6.914126061019488e-06, -0.0001735687255859375, -0.025895118713378906, -0.00086212158203125, -1.52587890625e-05, 0.0, -0.12403762340545654, -0.0011637210845947266, 0.0, -0.0001659393310546875, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0011911392211914062, -1.9073486328125e-06, -0.013752937316894531, 0.0, -0.9851951599121094, -3.4332275390625e-05, -0.0010470151901245117, -9.536738616588991e-07, -3.135204315185547e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -3.780160695622236, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "MinionSelector", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -2.3744795322418213, 0.0, -0.000225067138671875, -1.9073486328125e-06, -0.0003986358642578125, 0.0, -0.1844339370727539, -0.0036783218383789062, -0.12926585972309113, -0.3104820251464844, -0.01678561046719551, -1.33514404296875e-05, -0.2961769104003906, -0.00030517578125, -0.35318490862846375, -0.19318774342536926, -2.0623165255528875e-05, -0.0002880096435546875, -1.9073486328125e-05, -0.0008224202902056277, -1.1920928244535389e-07, -7.53387066652067e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -3.8855564870709287, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 4, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry('re(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -2.0401175022125244, -0.1367996484041214, -9.5367431640625e-05, -1.098663330078125, -3.814697265625e-05, -0.4915485382080078, -0.24281108379364014, -1.4781891877646558e-05, -0.00029754638671875, -2.47955322265625e-05, -0.0009807342430576682, -2.3841855067985307e-07, -6.687612767564133e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "'re", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -4.304304763069858, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "'re", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(Frozen()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -0.34905147552490234, -0.0003337860107421875, -3.2845144271850586, -0.0026036500930786133, -0.001956939697265625, -1.33514404296875e-05, -0.0006567225209437311, -1.1920928244535389e-07, -8.10609562904574e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 68, 260, "Frozen", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -4.440667758994962, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "Frozen", "_type": "Template77"}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -1.917435646057129, -0.008734703063964844, -7.62939453125e-06, 0.0, -0.000164031982421875, -3.814697265625e-06, -0.000278472900390625, -0.12372398376464844, -0.002262115478515625, -0.00015151500701904297, -0.0002924203872680664, -1.1444091796875e-05, -0.02318596839904785, -9.5367431640625e-06, -0.00048828125, -0.00312042236328125, -1.9073486328125e-06, -2.083665609359741, -2.09808349609375e-05, -0.008634567260742188, -9.5367431640625e-06, -0.0008584260940551758, -0.0005550384521484375, 0.0, -0.0006313323974609375, -0.017624855041503906, -3.24249267578125e-05, -1.33514404296875e-05, -0.0057697296142578125, -0.003143310546875, -1.9073486328125e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.0067348480224609375, -5.7220458984375e-06, 0.0, -0.004153251647949219, -3.0636758310720325e-05, -2.288818359375e-05, -0.0001659393310546875, -0.0002765655517578125, -0.0004749298095703125, -2.47955322265625e-05, -0.0041332244873046875, -1.4066696166992188e-05, 0.0, -0.00110626220703125, -2.288818359375e-05, -9.5367431640625e-06, -0.12252318859100342, -3.576278118089249e-07, -0.00019073486328125, -0.000400543212890625, -2.09808349609375e-05, 0.0, -0.0009136199951171875, -0.00021386146545410156, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0029754638671875, -3.62396240234375e-05, -0.009705543518066406, -1.9073486328125e-06, -2.288818359375e-05, -5.91278076171875e-05, -1.1444091796875e-05, -0.015560269355773926, -2.7298927307128906e-05, -0.0001087188720703125, -9.5367431640625e-06, -0.06427211314439774, 0.0, -0.0011577606201171875, -3.814697265625e-05, -0.0035068541765213013, 0.0, -7.152539910748601e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 284, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "3", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -4.560006730375697, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 3}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(\n            BlackBlackwing()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -0.34905147552490234, -0.0003337860107421875, -3.041090965270996, -0.462528795003891, -8.893002814147621e-05, -0.0002651214599609375, -5.340576171875e-05, -0.0007011616253294051, -1.1920928244535389e-07, -4.386841828818433e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 68, 260, "Black", "Blackwing", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -4.655615762018854, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"hole0": "BlackBlackwing", "_type": "Template77"}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(picker=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -1.917435646057129, -0.008734703063964844, -7.62939453125e-06, 0.0, -0.000164031982421875, -3.814697265625e-06, -0.000278472900390625, -0.12372398376464844, -0.002262115478515625, -0.00015151500701904297, -0.0002924203872680664, -1.1444091796875e-05, -0.02318596839904785, -9.5367431640625e-06, -0.00048828125, -0.00312042236328125, -1.9073486328125e-06, -0.13501620292663574, -1.71661376953125e-05, -0.0011920928955078125, -7.62939453125e-06, -0.006031155586242676, -0.0002193450927734375, 0.0, -0.00028228759765625, -0.0025539398193359375, -2.6702880859375e-05, -1.1444091796875e-05, -0.004591941833496094, -0.002567291259765625, -2.0265579223632812e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.0045413970947265625, -5.7220458984375e-06, 0.0, -0.003979682922363281, -2.8490991098806262e-05, -2.47955322265625e-05, -0.000164031982421875, -0.0002651214599609375, -0.00045013427734375, -2.6702880859375e-05, -0.004058837890625, -1.4066696166992188e-05, 0.0, -0.001041412353515625, -2.288818359375e-05, -9.5367431640625e-06, -2.3364436626434326, 0.0, -0.0064525604248046875, -0.000171661376953125, -4.76837158203125e-05, 0.0, -0.016187667846679688, -0.000775456428527832, 0.0, -2.47955322265625e-05, -4.9591064453125e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0039825439453125, -2.872943878173828e-05, -0.009634971618652344, -1.9073486328125e-06, -2.288818359375e-05, -5.53131103515625e-05, -1.1444091796875e-05, -0.020321011543273926, -2.5391578674316406e-05, -0.0001220703125, -9.5367431640625e-06, -0.0692272037267685, 0.0, -0.0010471343994140625, -4.00543212890625e-05, -0.0036698186304420233, 0.0, -6.794911314500496e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 284, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -4.835573112469284, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "picker", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=5)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -1.917435646057129, -0.008734703063964844, -7.62939453125e-06, 0.0, -0.000164031982421875, -3.814697265625e-06, -0.000278472900390625, -0.12372398376464844, -0.002262115478515625, -0.00015151500701904297, -0.0002924203872680664, -1.1444091796875e-05, -0.02318596839904785, -9.5367431640625e-06, -0.00048828125, -0.00312042236328125, -1.9073486328125e-06, -0.13501620292663574, -1.71661376953125e-05, -0.0011920928955078125, -7.62939453125e-06, -0.006031155586242676, -0.0002193450927734375, 0.0, -0.00028228759765625, -0.0025539398193359375, -2.6702880859375e-05, -1.1444091796875e-05, -0.004591941833496094, -0.002567291259765625, -2.0265579223632812e-06, -1.1444091796875e-05, -1.52587890625e-05, -0.0045413970947265625, -5.7220458984375e-06, 0.0, -0.003979682922363281, -2.8490991098806262e-05, -2.47955322265625e-05, -0.000164031982421875, -0.0002651214599609375, -0.00045013427734375, -2.6702880859375e-05, -0.004058837890625, -1.4066696166992188e-05, 0.0, -0.001041412353515625, -2.288818359375e-05, -9.5367431640625e-06, -0.11980032920837402, -3.576278118089249e-07, -0.00018596649169921875, -0.0003986358642578125, -2.09808349609375e-05, 0.0, -0.0009250640869140625, -0.00021195411682128906, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0029926300048828125, -3.4332275390625e-05, -0.010165214538574219, -1.9073486328125e-06, -2.09808349609375e-05, -5.53131103515625e-05, -1.1444091796875e-05, -0.01703178882598877, -2.7298927307128906e-05, -0.0001125335693359375, -9.5367431640625e-06, -2.8352088928222656, -1.9073486328125e-06, -0.0009555816650390625, -0.0001087188720703125, -0.0030655136797577143, 0.0, -8.118130062939599e-05, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 284, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "5", "<EOS>", 110, 202, "5", "<EOS>", "4", "<EOS>"], "score": -5.358622091190135, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 5}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(IsType(\n            MINION_TYPE.DRAGON)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4, stealth=True, enrage=[Aura(ChangeAttack(4),\n            SelfSelector())])\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -1.2530593872070312, -0.0028171539306640625, -5.7220458984375e-06, 0.0, -0.20321357250213623, -0.0008060932159423828, 0.0, -9.34600830078125e-05, -0.0001373291015625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0013217926025390625, -1.9073486328125e-06, -0.012371063232421875, 0.0, -1.5075798034667969, -6.866455078125e-05, -0.005832672119140625, 0.0, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -8.20159912109375e-05, -2.09808349609375e-05, -0.000943303108215332, -1.1920928244535389e-07, -0.0003108978271484375, -0.17089366912841797, -0.000339508056640625, -0.000152587890625, -0.001064300537109375, -9.5367431640625e-06, 0.0, -0.20251405239105225, -0.0002651214599609375, -9.1552734375e-05, -4.1961669921875e-05, -1.1444091796875e-05, -0.0002652406692504883, -1.1920922133867862e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011777877807617188, 0.0, -0.09127044677734375, -0.006373405456542969, -0.0001220703125, -0.751867413520813, -1.9073486328125e-06, -0.009128570556640625, -0.000232696533203125, -0.000540614128112793, -5.7220458984375e-06, -1.1543912887573242, -0.06400012969970703, -0.10227342694997787, -1.9073486328125e-06], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "5", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 73, 222, "4", "<EOS>"], "score": -6.346284723229658, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole0": 4, "_type": "Template44"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(IsType(\n            MINION_TYPE.DRAGON)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4, stealth=True, effects=[Effect(TurnEnded(),\n            ActionTag(Damage(5), HeroSelector(picker=UserPicker())))])\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -1.2530593872070312, -0.0028171539306640625, -5.7220458984375e-06, 0.0, -0.20321357250213623, -0.0008060932159423828, 0.0, -9.34600830078125e-05, -0.0001373291015625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0013217926025390625, -1.9073486328125e-06, -0.012371063232421875, 0.0, -1.5075798034667969, -6.866455078125e-05, -0.005832672119140625, 0.0, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -8.20159912109375e-05, -2.09808349609375e-05, -0.000943303108215332, -1.1920928244535389e-07, -0.0003108978271484375, -0.17089366912841797, -0.000339508056640625, -0.000152587890625, -0.001064300537109375, -9.5367431640625e-06, 0.0, -0.20251405239105225, -0.0002651214599609375, -9.1552734375e-05, -4.1961669921875e-05, -1.1444091796875e-05, -0.0002652406692504883, -1.1920922133867862e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011777877807617188, 0.0, -0.09127044677734375, -0.006373405456542969, -0.0001220703125, -0.751867413520813, -1.9073486328125e-06, -0.009128570556640625, -0.000232696533203125, -0.000540614128112793, -5.7220458984375e-06, -0.5355901718139648, -0.7840375900268555, -0.0978521928191185, -0.0029751062393188477, -6.914137884450611e-06, -0.0450587272644043, -2.121920624631457e-05, -1.9073486328125e-06, -0.000324249267578125, 0.0, -0.3500877618789673, 0.0, -0.24927997589111328, -4.1484832763671875e-05, 0.0, -0.18546199798583984, -0.0001468658447265625, -1.9073486328125e-06, -0.024582386016845703, 0.0, -0.12517356872558594, -0.001575469970703125, -0.005870819091796875, -0.0006403923034667969, 0.0], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "5", "<EOS>", 47, 165, "4", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 71, 209, "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "5", "<EOS>", "Hero", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -7.434348678488462, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 5}, {"_type": "Num", "n": 4}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole1": "Damage", "hole0": "TurnEnded", "hole5": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": [{"_type": "Num", "n": 5}], "_type": "Template31", "hole3": "HeroSelector"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(IsType(\n            MINION_TYPE.DRAGON)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4, effects=[Aura(TurnStarted(player=CurrentPlayer(\n            )), ActionTag(Draw(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), PlayerSelector()))])\n", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0002337421028641984, -8.4638240878121e-06, -7.104660471668467e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -5.7220458984375e-06, -2.0265579223632812e-06, -3.62396240234375e-05, -0.021086692810058594, -6.67572021484375e-05, -2.3841855067985307e-07, -1.0132789611816406e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.09775412082672119, 0.0, -0.00015079975128173828, 0.0, -0.0004731416702270508, 0.0, -0.16802978515625, -0.004726409912109375, -0.181745707988739, -0.30713367462158203, -0.019715411588549614, -1.71661376953125e-05, -1.2530593872070312, -0.0028171539306640625, -5.7220458984375e-06, 0.0, -0.20321357250213623, -0.0008060932159423828, 0.0, -9.34600830078125e-05, -0.0001373291015625, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.0013217926025390625, -1.9073486328125e-06, -0.012371063232421875, 0.0, -0.8677377700805664, -4.9591064453125e-05, -6.675708846159978e-06, -2.622600959512056e-06, -0.0007951195584610105, 0.0, -0.23385238647460938, -1.9073486328125e-06, -0.0001735687255859375, -0.0003108978271484375, -0.00445556640625, -2.09808349609375e-05, -0.0005054473876953125, -1.9073486328125e-06, 0.0, -0.4393339157104492, -0.0007343292236328125, -0.228851318359375, -0.22455787658691406, -0.2254953384399414, -0.00127410888671875, -6.103515625e-05, -0.015054821968078613, -0.6525309085845947, 0.0, -3.4332275390625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.001775979995727539, 0.0, -0.0011844635009765625, -5.7220458984375e-06, -0.28195083141326904, -6.198883056640625e-06, -7.62939453125e-06, -0.008083343505859375, -0.00862884521484375, 0.0, 0.0, -0.37522315979003906, -0.0002231597900390625, -5.7220458984375e-06, -0.0001544952392578125, -0.012330055236816406, -0.021347999572753906, -2.09808349609375e-05, -5.7220458984375e-05, -0.3777151107788086, -0.0002524852752685547, -0.0003070831298828125, -8.96453857421875e-05, -0.5611820220947266, -2.288818359375e-05, -1.9073486328125e-06, -0.16354656219482422, -0.20327520370483398, 0.0, -2.09808349609375e-05, -1.71661376953125e-05, 0.0, -0.30602848529815674, -3.6954811548639555e-06, -0.04059123992919922, -0.017333030700683594, -3.24249267578125e-05, 0.0, -0.00122833251953125, -0.002407550811767578, 0.0, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -4.38690185546875e-05, 0.0, -0.00098419189453125, -2.09808349609375e-05, -0.09496116638183594, -1.9073486328125e-06, -0.0005931854248046875, -3.814697265625e-06, -0.2509833574295044, -3.921956886188127e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Blackwing", "Corruptor", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 109, 200, "5", "<EOS>", "4", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Aura", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Started", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Current", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 68, 260, "Player", "Selector", "<EOS>"], "score": -7.903888112993819, "model_output": {"_type": "Module", "body": [{"name": "BlackwingCorruptor", "_type": "ClassDef", "body": [{"hole1": 5, "hole0": "Blackwing Corruptor", "hole2": "ALL", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 4, "hole0": 5, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "CurrentPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"hole0": "PlayerSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Aura"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-9.34600830078125e-05, -5.7220458984375e-05, -22.473581314086914], "choice_history": [80, 159, 294], "score": -22.473731994628906, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}
{"beams": [{"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -1.3963813781738281, -1.9073486328125e-06, -0.050034523010253906, -4.52994936495088e-06, 0.0, -0.0002765655517578125, -3.814697265625e-06, -0.00042060110718011856, 0.0, -0.00014240189921110868, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -2.7666210800207267, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), CardSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -0.1642134189605713, -0.3506048917770386, 0.0, -0.001041412353515625, -1.52587890625e-05, 0.0, -0.6415042877197266, -1.7881377516459906e-06, -1.9073486328125e-05, 0.0, -0.019256114959716797, -2.0265579223632812e-06, 0.0, -0.0005588531494140625, -3.814697265625e-06, -9.775113539944869e-06, -1.1920928244535389e-07, -0.00026804511435329914, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -2.792460851467901, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), CardSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -0.1642134189605713, -0.3506048917770386, 0.0, -0.001041412353515625, -1.52587890625e-05, 0.0, -1.290618896484375, 0.0, -0.0001735687255859375, -3.814697265625e-06, -0.03139150142669678, -0.0005372762680053711, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.00012683063687290996, 0.0, -0.0001429625554010272, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -3.453898561318951, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(2))), MinionSelector(IsType(\n            MINION_TYPE.DRAGON))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -1.78667151927948, -9.059865078597795e-06, -0.01137542724609375, -0.6171131134033203, -0.0054912567138671875, -0.21732176840305328, -1.9073486328125e-06, -0.02428436279296875, -0.019269943237304688, -5.7220458984375e-06, 0.0, -0.0072154998779296875, -0.00093841552734375, 0.0, -0.027509689331054688, -0.0014972686767578125, -0.0013751983642578125, -9.34600830078125e-05, -2.47955322265625e-05, -7.069110870361328e-05, -5.3644176659872755e-05, 0.0, -0.0015544891357421875, -5.340576171875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -5.14984130859375e-05, -0.16939830780029297, -1.9073486328125e-05, -0.01768016815185547, -3.814697265625e-06, -7.068861305015162e-05, 0.0, -7.24770943634212e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 58, 244, "2", "<EOS>", 40, 136, 19, 160, "Minion", "Selector", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -3.455150212983419, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"hole0": 2, "_type": "Template61"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"args": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(15(BattleAxe()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -1.0624723434448242, -0.0036802291870117188, -0.20974624156951904, -0.014041447080671787, -0.00012969970703125, -1.6717400550842285, -9.5367431640625e-06, -0.4530981779098511, -0.0413629375398159, -5.960462203802308e-06, -0.000335693359375, -5.7220458984375e-06, -0.0004164305282756686, 0.0, -0.00017530948389321566, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 241, "15", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -3.509815236479419, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "15", "_type": "Template59"}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(Count(CardSelector())))),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -1.78667151927948, -9.059865078597795e-06, -0.01137542724609375, -0.8517484664916992, -0.000118255615234375, -0.00027871131896972656, -0.04115498065948486, -1.9073486328125e-06, -5.7220458984375e-05, -0.24277591705322266, -5.53131103515625e-05, -0.02712726593017578, -0.00028228756855241954, -0.0014461077516898513, -0.001655499218031764, 0.0, -5.53131103515625e-05, 0.0, -0.004415988922119141, -4.291534423828125e-06, 0.0, -0.0002651214599609375, -3.814697265625e-06, -0.0011276798322796822, 0.0, -9.917677380144596e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Give", "<EOS>", 282, 62, 252, "Change", "Health", "<EOS>", 282, 61, 250, "Count", "<EOS>", "Card", "Selector", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -3.516624261832469, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"hole1": [{"hole1": "CardSelector", "hole0": "Count", "_type": "Template69"}], "hole0": "ChangeHealth", "_type": "Template70"}], "_type": "Call", "func": {"_type": "Name", "id": "Give"}}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), CardQuery(source=CARD_SOURCE.LIST,\n            source_list=<UNK>)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -0.1642134189605713, -1.2497614622116089, -0.00188446044921875, -0.5019845962524414, -9.5367431640625e-06, -5.7220458984375e-05, -0.02192234992980957, 0.0, -0.00012969970703125, -0.00018310546875, -8.392333984375e-05, 0.0, -0.008835792541503906, -1.1801719665527344e-05, -0.16823232173919678, -0.000331878662109375, -0.0001926422119140625, -6.103515625e-05, -0.07988083362579346, 0.0, -0.0008144378662109375, 0.0, -0.24012374877929688, -0.0001338719594059512, -0.0002002716064453125, 0.0, -0.00033122775494121015, 0.0, -0.00015920959413051605, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 79, 271, "source_list", "<EOS>", 19, 160, "<UNK>", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -4.054500818180699, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}, {"arg": "source_list", "value": {"_type": "Name", "id": "<UNK>"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(15(AuraUntil(ChangeAttack(2), WeaponSelector(\n            EnemyPlayer()))), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -1.0624723434448242, -0.0036802291870117188, -0.20974624156951904, -0.014041447080671787, -0.00012969970703125, -0.6586599349975586, -0.000217437744140625, -4.1961669921875e-05, 0.0, -0.878075361251831, -0.22696125507354736, -7.62939453125e-06, -0.16419029235839844, -0.2517232894897461, -0.0030384063720703125, -0.0017820345237851143, -1.9073486328125e-06, -0.06837940216064453, -1.71661376953125e-05, -0.4931449890136719, -0.0001223087019752711, -2.3841855067985307e-07, -0.012093032710254192, -0.0009188040858134627, 0.0, -0.001743316650390625, -5.7220458984375e-06, -7.676783570786938e-05, 0.0, -0.00023186660837382078, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 28, 241, "15", "<EOS>", 282, 40, 136, 19, 160, "Aura", "Until", "<EOS>", 283, 64, 255, "2", "<EOS>", 61, 250, "Weapon", "Selector", "<EOS>", "Enemy", "Player", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -4.104098537915853, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"hole1": [{"args": [{"hole0": 2, "_type": "Template73"}, {"hole1": "EnemyPlayer", "hole0": "WeaponSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "AuraUntil"}}], "hole0": "15", "_type": "Template59"}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -2.4184296131134033, -0.0001850128173828125, 0.0, -0.015454292297363281, -1.71661376953125e-05, 0.0, -0.007097721099853516, -1.7881377516459906e-06, -1.33514404296875e-05, 0.0, -0.3719974756240845, -2.0265579223632812e-06, 0.0, -0.0007610321044921875, -1.9073486328125e-06, -9.417489309271332e-06, -1.1920928244535389e-07, -0.00027127540670335293, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Player", "Selector", "<EOS>", 290, 79, 271, "players", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -4.429204170226718, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "players", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "PlayerSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), CardQuery(source=CARD_SOURCE.LIST)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -0.1642134189605713, -1.2497614622116089, -0.00188446044921875, -0.9515504837036133, -7.62939453125e-05, -5.7220458984375e-06, -0.7278512716293335, 0.0, -2.47955322265625e-05, -0.0002155303955078125, -0.0001430511474609375, 0.0, -0.013058662414550781, -1.728534698486328e-05, -0.0910407304763794, -6.103515625e-05, -0.001491546630859375, 0.0, -1.680836794548668e-05, 0.0, -9.267177665606141e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -4.81646720163279, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), CardSelector(condition=IsMinion())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -0.1642134189605713, -0.3506048917770386, 0.0, -0.001041412353515625, -1.52587890625e-05, 0.0, -1.6501235961914062, -1.0013530300057027e-05, -0.9059858322143555, -5.91278076171875e-05, -0.10691726207733154, -0.40327680110931396, -1.71661376953125e-05, -0.00043487548828125, -3.814697265625e-06, -4.029192859889008e-05, 0.0, -0.0002578733256086707, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 33, 260, "Is", "Minion", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -5.197963607830374, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "condition", "value": {"hole0": "IsMinion", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Heal(6), CardQuery(source=CARD_SOURCE.LIST,\n            source_list=spare_part_list)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -0.760774552822113, -0.00017058847879525274, -5.7220458984375e-06, -0.0033206939697265625, -1.1444091796875e-05, -0.009177301079034805, -1.1920928244535389e-07, -0.29045772552490234, -0.005127906799316406, -1.9073486328125e-05, -1.9073486328125e-06, -0.1642134189605713, -1.2497614622116089, -0.00188446044921875, -0.5019845962524414, -9.5367431640625e-06, -5.7220458984375e-05, -0.02192234992980957, 0.0, -0.00012969970703125, -0.00018310546875, -8.392333984375e-05, 0.0, -0.008835792541503906, -1.1801719665527344e-05, -0.16823232173919678, -0.000331878662109375, -0.0001926422119140625, -6.103515625e-05, -0.07988083362579346, 0.0, -0.0008144378662109375, 0.0, -1.6300621032714844, -1.9073486328125e-06, -0.000194549560546875, -3.814697265625e-06, -0.0004843492351938039, 0.0, -0.00012301839888095856, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Heal", "<EOS>", 282, 47, 165, "6", "<EOS>", 40, 135, 19, 160, "Card", "Query", "<EOS>", 291, 79, 271, "source", "<EOS>", 11, 129, 19, 160, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 79, 271, "source_list", "<EOS>", 19, 160, "spare_part_list", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -5.444422230998484, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Num", "n": 6}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "keywords": [{"arg": "source", "value": {"value": {"_type": "Name", "id": "CARD_SOURCE"}, "_type": "Attribute", "attr": "LIST"}, "_type": "keyword"}, {"arg": "source_list", "value": {"_type": "Name", "id": "spare_part_list"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Draw(CardQuery(conditions=[IsType(MINION_TYPE.DRAGON),\n            PlayerSelector()])), Battlecry(15(), SelfSelector())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -0.03660392761230469, -7.43865966796875e-05, -0.00010847456724150106, -1.0371208190917969e-05, -1.1324837942083832e-05, -1.9073486328125e-06, -8.865821291692555e-05, 0.0, -7.069110870361328e-05, -5.7220458984375e-06, -0.0017910003662109375, -7.62939453125e-06, -2.968311309814453e-05, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -0.005572319030761719, -0.000240325927734375, -0.007457852363586426, 0.0, -0.44728755950927734, -0.0001773834228515625, -1.9073486328125e-06, 0.0, -0.0001583099365234375, 0.0, -0.021331787109375, -0.02364826202392578, -0.000507354736328125, -0.0001735687255859375, -1.33514404296875e-05, -2.631991386413574, -0.0001704685273580253, -0.017423629760742188, -0.30286216735839844, -0.04052162170410156, -3.814697265625e-05, 0.0, -0.00013947486877441406, -0.0067747789435088634, -0.0005762577056884766, -0.011350631713867188, -0.0001430511474609375, -6.866455078125e-05, -0.06622326374053955, 0.0, -0.07623481750488281, -0.0001697540283203125, -0.004921913146972656, -0.0029439926147460938, -9.918212890625e-05, -3.24249267578125e-05, -0.0003681182861328125, -0.14004158973693848, -0.228590726852417, 0.0, -0.00028228759765625, -5.7220458984375e-05, 0.0, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -2.47955322265625e-05, -0.44921112060546875, -0.0009593963623046875, -0.23428726196289062, 0.0, -0.26056110858917236, -0.00019943670486100018, 0.0, -0.002681732177734375, -8.96453857421875e-05, 0.0, 0.0, -0.09116458892822266, -5.7220458984375e-06, -3.814697265625e-06, -0.14735984802246094, -4.00543212890625e-05, -0.29045569896698, -0.2877776026725769, -0.12897014617919922, 0.0, -0.07774484157562256, -1.537799835205078e-05, -1.1920928244535389e-07, -0.0001506805419921875, -1.1444091796875e-05, -0.0006744970451109111, 0.0, -0.00015815510414540768, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 124, 264, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 283, 40, 136, 19, 160, "Draw", "<EOS>", 282, 40, 135, 19, 160, "Card", "Query", "<EOS>", 290, 79, 271, "conditions", "<EOS>", 17, 155, 283, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 68, 260, "Player", "Selector", "<EOS>", 40, 136, 19, 160, "Battlecry", "<EOS>", 283, 68, 260, "15", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -6.050492391529573, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "hole5": {"_type": "Name", "id": "MINION_TYPE"}, "hole7": "battlecry", "hole2": "ALL", "hole8": {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "conditions", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, {"hole0": "PlayerSelector", "_type": "Template77"}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardQuery"}}], "_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"args": [{"hole0": "15", "_type": "Template77"}, {"hole0": "SelfSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "_type": "Template9", "hole6": "DRAGON", "hole4": "minion_type", "hole3": "COMMON"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -9.035655966727063e-05, -2.3126376618165523e-05, -1.4662635294371285e-05, -3.814697265625e-06, -1.9073486328125e-05, 0.0, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -0.00022125244140625, -6.7352986335754395, -0.0004291534423828125, -1.4543427823809907e-05, -1.58548318722751e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.8629885744303465e-05, 0.0, -7.450580596923828e-05, -1.9073486328125e-06, -1.6661901473999023, -1.33514404296875e-05, -2.7418097943154862e-06, 0.0, -0.00035667605698108673, 0.0], "choice_history": [80, 159, 295, 88, 138, "Drakonid", "Crusher", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 118, 242, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 110, 202, "6", "<EOS>", "6", "<EOS>"], "score": -8.402830512100756, "model_output": {"_type": "Module", "body": [{"name": "DrakonidCrusher", "_type": "ClassDef", "body": [{"hole1": 6, "hole0": "Drakonid Crusher", "_type": "Template6", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [0.0, -1.9073486328125e-06, -22.503467559814453], "choice_history": [80, 159, 294], "score": -22.503469467163086, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}
{"beams": [{"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -0.011357307434082031, -1.33514404296875e-05, -0.0002422332763671875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.00052642822265625, -1.52587890625e-05, -0.0022411346435546875, -0.0008106231689453125, -0.0020923614501953125, -7.43865966796875e-05, -0.01986473798751831, 0.0, -0.00035737938014790416, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -0.05321686440720441, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "RARE", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(3, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -0.011357307434082031, -1.33514404296875e-05, -0.0002422332763671875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.00052642822265625, -1.52587890625e-05, -0.0022411346435546875, -0.0008106231689453125, -0.0020923614501953125, -7.43865966796875e-05, -3.969080686569214, -2.1457672119140625e-06, -0.0014656968414783478, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "3", "<EOS>", "1", "<EOS>"], "score": -4.003543276217442, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "RARE", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 3, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.WARLOCK,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -4.962862014770508, -3.814697265625e-06, -0.041388511657714844, -3.0517578125e-05, -7.2479248046875e-05, 0.0, -0.00054931640625, -2.288818359375e-05, -0.00205230712890625, -0.00087738037109375, -0.0025920867919921875, -7.2479248046875e-05, -0.018880069255828857, 0.0, -0.0003545649233274162, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "WARLOCK", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -5.045330501213812, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "WARLOCK", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, True)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -4.593549728393555, -6.67572021484375e-05, -0.00011277198791503906, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -6.103515625e-05, -0.3827495574951172, -7.62939453125e-05, 0.0, -3.814697265625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.7172622680664062, -5.7220458984375e-06, -4.57763671875e-05, -5.686121585313231e-05, 0.0, -7.82012939453125e-05, -4.00543212890625e-05, -0.14149905741214752, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -0.0010890960693359375, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.20359039306640625, 0.0, -0.002132415771484375, -0.0001697540283203125, -0.00140380859375, -3.814697265625e-06, -0.015903472900390625, -0.000194549560546875, -6.543993367813528e-05, 0.0, -6.866385228931904e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 286, 48, 169, "Imp", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -6.0619585579852355, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            FREE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -4.593549728393555, -6.67572021484375e-05, -0.00011277198791503906, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -6.103515625e-05, -1.1483144760131836, -6.29425048828125e-05, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, 0.0, -0.0038824081420898438, -0.0001373291015625, -3.0517578125e-05, -4.6967357775429264e-05, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, -0.00212321849539876, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0004062652587890625, 0.0, -1.1444091796875e-05, -2.09808349609375e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.6657304763793945, 0.0, -6.67572021484375e-05, -0.000213623046875, -3.814697265625e-06, -0.0001010894775390625, -1.9073486328125e-06, -0.0002231597900390625, -0.0002574920654296875, -8.0108642578125e-05, 0.0, -0.0008544921875, -7.62939453125e-06, -0.003337860107421875, -1.52587890625e-05, -0.18637943267822266, -2.09808349609375e-05, -0.03150123357772827, 0.0, -0.00031025565112940967, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 137, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 285, 48, 169, "Imp", "<EOS>", 47, 165, "1", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 290, 79, 271, "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -6.639826649557563, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 1}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "FREE"}], "_type": "Call", "keywords": [{"arg": "minion_type", "value": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -4.593549728393555, -6.67572021484375e-05, -0.00011277198791503906, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.103515625e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -6.103515625e-05, -0.3827495574951172, -7.62939453125e-05, 0.0, -3.814697265625e-05, -1.33514404296875e-05, -9.536738616588991e-07, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.0195531845092773, -4.38690185546875e-05, -3.814697265625e-06, -0.00021145492792129517, 0.0, -0.000156402587890625, -1.71661376953125e-05, -0.03952544927597046, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0013885498046875, -1.9073486328125e-06, -7.82012939453125e-05, -7.62939453125e-06, -1.1444091796875e-05, -2.86102294921875e-05, -0.0001049041748046875, -3.814697265625e-06, -0.38190746307373047, 0.0, -0.028039932250976562, -0.0003147125244140625, -0.0014514923095703125, -5.7220458984375e-06, -0.0002307891845703125, 0.0, -7.43865966796875e-05, -9.5367431640625e-06, -0.000377655029296875, -5.7220458984375e-06, -0.01528167724609375, 0.0, -0.3187074661254883, -6.103515625e-05, -0.0010814666748046875, -3.814697265625e-06, -5.14984130859375e-05, -0.0001010894775390625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-05, -0.03069937229156494, -1.9073486328125e-05, -4.76837158203125e-05, -0.20336341857910156, -0.000408172607421875, -8.89282237039879e-05, -6.556507287314162e-06, -0.0029089951422065496, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 91, 143, "__init__", "<EOS>", 269, 275, 268, "self", "<EOS>", 295, 89, 141, 14, 136, 11, 129, 33, 260, "super", "<EOS>", "__init__", "<EOS>", 287, 48, 169, "Imp", "<EOS>", 47, 165, "0", "<EOS>", 37, 129, 19, 160, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 37, 129, 19, 160, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 46, 161, "False", "<EOS>", 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "p", "<EOS>", 295, 122, 254, "1", "<EOS>", "1", "<EOS>"], "score": -7.024748529915996, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"name": "__init__", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 0}, {"value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"_type": "Name", "id": "CARD_RARITY"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}], "_type": "Call", "func": {"value": {"hole0": "super", "_type": "Template77"}, "_type": "Attribute", "attr": "__init__"}}, "_type": "Expr"}], "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"hole1": 1, "hole0": 1, "_type": "Template72"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMONSelector)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -0.011357307434082031, -1.33514404296875e-05, -0.0002422332763671875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.00052642822265625, -1.52587890625e-05, -0.0022411346435546875, -7.171161651611328, 0.0, -0.0028839111328125, -8.58306884765625e-05, -0.0030520260334014893, 0.0, -3.503914922475815e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "Selector", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -7.207235834438961, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "RARE", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMONSelector", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.Choice,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -7.36770486831665, -3.814697265625e-06, -0.01444244384765625, -1.52587890625e-05, -7.82012939453125e-05, 0.0, -0.00054168701171875, -2.09808349609375e-05, -0.002044677734375, -0.0007534027099609375, -0.0022792816162109375, -7.82012939453125e-05, -0.01800638437271118, 0.0, -0.0003718641819432378, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "Choice", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -7.421913137653519, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "Choice", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.minions,\n            False, RARE=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -6.48222541809082, -5.7220458984375e-06, -1.1336326599121094, -0.0004215240478515625, -0.001720428466796875, -7.62939453125e-06, -0.0013179779052734375, -3.24249267578125e-05, -0.0025739669799804688, -0.0019588470458984375, -0.00211334228515625, -9.34600830078125e-05, -0.01809847354888916, 0.0, -0.0003675291081890464, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "minions", "<EOS>", "RARE", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -7.660141474794273, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "minions", "hole0": "Imp", "hole2": "RARE", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS. Imp, CARD_RARITY.COMMON,\n            False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -6.296681880950928, -0.021361351013183594, -0.06297525018453598, -0.0021997690200805664, -0.9738534688949585, -0.08354471623897552, -5.7220458984375e-06, -0.2275676727294922, -0.000278472900390625, -0.0005817413330078125, -0.00018310546875, -0.0038291513919830322, 0.0, -0.00026825338136404753, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 100, 183, "Imp", "<EOS>", " ", "Imp", "<EOS>", "COMMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -7.674788008285304, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": " Imp", "hole0": "Imp", "_type": "Template13", "hole2": "COMMON"}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -0.011357307434082031, -1.33514404296875e-05, -0.0002422332763671875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.00052642822265625, -1.52587890625e-05, -7.633152008056641, -0.00020599365234375, -0.0010776519775390625, -3.814697265625e-05, -0.025853291153907776, 0.0, -0.0008225094061344862, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -7.688925842399385, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "RARE", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DRAGON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -0.011357307434082031, -1.33514404296875e-05, -0.0002422332763671875, -1.9073486328125e-05, -3.0517578125e-05, 0.0, -0.00052642822265625, -1.52587890625e-05, -0.0022411346435546875, -0.0008106231689453125, -0.0020923614501953125, -7.43865966796875e-05, -7.848203659057617, 0.0, -0.0008714439463801682, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score": -7.8820698500435356, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "RARE", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -2.288818359375e-05, -0.00023651123046875, -8.821448318485636e-06, -2.50339189733495e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.0007652044296264648, -7.2479248046875e-05, -2.09808349609375e-05, -0.0002498626708984375, -0.013623237609863281, -0.000476837158203125, -1.2636104656849056e-05, -1.9073486328125e-06, -7.877406120300293, -1.9073486328125e-06, -0.00012969970703125, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.000408172607421875, -4.76837158203125e-05, -0.001949310302734375, -0.0007781982421875, -0.0016918182373046875, -8.392333984375e-05, -0.02017897367477417, 0.0, -0.0003774947836063802, 0.0], "choice_history": [80, 159, 295, 88, 138, "Imp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 121, 251, "Imp", "<EOS>", "COMMON", "<EOS>", "minion_type", "<EOS>", 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 110, 202, "1", "<EOS>", "1", "<EOS>"], "score": -7.918667334882684, "model_output": {"_type": "Module", "body": [{"name": "Imp", "_type": "ClassDef", "body": [{"hole1": "COMMON", "hole0": "Imp", "hole2": "minion_type", "_type": "Template7", "hole4": "DEMON", "hole3": {"_type": "Name", "id": "MINION_TYPE"}}, {"hole1": 1, "hole0": 1, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "self.target.add_buff(Buff(()))\n", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -1.71661376953125e-05, -15.254018783569336, -5.613846778869629, -0.08043061196804047], "choice_history": [80, 159, 295, 117, 226, "<EOS>"], "score": -20.948357209563255, "model_output": {"_type": "Module", "body": [{"hole0": "", "_type": "Template50"}]}}, {"inferred_code": "", "score_history": [-7.62939453125e-06, -3.62396240234375e-05, -21.983436584472656], "choice_history": [80, 159, 294], "score": -21.98348045349121, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(picker=IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -1.429494857788086, 0.0, -0.5820789337158203, -0.007266998291015625, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -9.5367431640625e-06, -0.0002288818359375, -0.018662452697753906, -0.000850677490234375, -0.000820159912109375, -0.0010890960693359375, -5.7220458984375e-06, -0.04620647430419922, -1.33514404296875e-05, -0.0006847381591796875, -0.000988006591796875, -2.6702880859375e-05, -0.19457852840423584, -1.1444091796875e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.000461578369140625, -2.09808349609375e-05, 0.0, -0.00037384033203125, -0.0009899139404296875, -3.24249267578125e-05, -3.814697265625e-06, -0.0018939971923828125, -0.000732421875, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -0.0003204345703125, -5.7220458984375e-06, 0.0, -0.005794525146484375, -4.661083221435547e-05, -2.47955322265625e-05, -7.2479248046875e-05, -0.0006122589111328125, -0.00014495849609375, -1.9073486328125e-06, -0.0027446746826171875, -2.7418136596679688e-05, 0.0, -0.0002651214599609375, -2.09808349609375e-05, -5.7220458984375e-06, -0.45831120014190674, 0.0, -0.10738372802734375, -4.57763671875e-05, -0.000255584716796875, -3.814697265625e-06, -0.007637977600097656, -0.0010271072387695312, -1.9073486328125e-06, -4.00543212890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.0012378692626953125, -0.00012409687042236328, -0.005978584289550781, -9.5367431640625e-06, -3.24249267578125e-05, -4.9591064453125e-05, -3.4332275390625e-05, -0.03983509540557861, -3.8623809814453125e-05, -0.0004405975341796875, -5.7220458984375e-06, -0.001587489154189825, 0.0, -0.000171661376953125, -0.0001163482666015625, -0.007143080234527588, 0.0, -3.4927710657939315e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 284, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score": -3.345381289378331, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "picker", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -1.429494857788086, 0.0, -0.5820789337158203, -0.007266998291015625, -9.5367431640625e-06, 0.0, -9.34600830078125e-05, -9.5367431640625e-06, -0.0002288818359375, -0.018662452697753906, -0.000850677490234375, -0.000820159912109375, -0.0010890960693359375, -5.7220458984375e-06, -0.04620647430419922, -1.33514404296875e-05, -0.0006847381591796875, -0.000988006591796875, -2.6702880859375e-05, -0.19457852840423584, -1.1444091796875e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.000461578369140625, -2.09808349609375e-05, 0.0, -0.00037384033203125, -0.0009899139404296875, -3.24249267578125e-05, -3.814697265625e-06, -0.0018939971923828125, -0.000732421875, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -0.0003204345703125, -5.7220458984375e-06, 0.0, -0.005794525146484375, -4.661083221435547e-05, -2.47955322265625e-05, -7.2479248046875e-05, -0.0006122589111328125, -0.00014495849609375, -1.9073486328125e-06, -0.0027446746826171875, -2.7418136596679688e-05, 0.0, -0.0002651214599609375, -2.09808349609375e-05, -5.7220458984375e-06, -1.0497514009475708, -1.1920928244535389e-07, -0.0001049041748046875, -0.000217437744140625, -5.14984130859375e-05, 0.0, -0.000659942626953125, -0.0003223419189453125, 0.0, -4.38690185546875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00095367431640625, -0.0001125335693359375, -0.0069427490234375, -1.52587890625e-05, -2.86102294921875e-05, -4.57763671875e-05, -4.1961669921875e-05, -0.03991806507110596, -3.6716461181640625e-05, -0.0003948211669921875, -7.62939453125e-06, -0.0014565769815817475, 0.0, -0.0001621246337890625, -0.000102996826171875, -0.006722744088619947, 0.0, -3.480850500636734e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 14, 136, 19, 160, "Battlecry", "<EOS>", 284, 50, 203, "Change", "Attack", "<EOS>", "1", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 68, 260, "Self", "Selector", "<EOS>", 40, 137, 19, 160, "Greater", "Than", "<EOS>", 282, 40, 136, 19, 160, "Count", "<EOS>", 282, 40, 135, 19, 160, "Card", "Selector", "<EOS>", 290, 79, 271, "condition", "<EOS>", 14, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 290, 79, 271, "value", "<EOS>", 21, 165, "0", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score": -3.821936016214508, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"args": [{"hole1": 1, "hole0": "ChangeAttack", "_type": "Template28", "hole2": "ChangeHealth", "hole3": 1}, {"hole0": "SelfSelector", "_type": "Template77"}, {"args": [{"args": [{"_type": "Call", "keywords": [{"arg": "condition", "value": {"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}, "_type": "keyword"}], "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"arg": "value", "value": {"_type": "Num", "n": 0}, "_type": "keyword"}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}}, "hole3": "battlecry"}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(IsType(\n            MINION_TYPE.DRAGON)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -1.429494857788086, 0.0, -0.8286495208740234, -0.004093170166015625, -0.26964935660362244, -0.09270095825195312, -0.0004348746733739972, -3.0517578125e-05, -0.7693147659301758, -0.0002613067626953125, -9.5367431640625e-06, 0.0, -0.1327899694442749, -0.0010886192321777344, 0.0, -4.57763671875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0003986358642578125, -1.9073486328125e-05, -0.008872032165527344, -3.814697265625e-06, -0.17779827117919922, -3.814697265625e-06, -0.0025787344202399254, 0.0, -3.576278118089249e-07, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score": -4.134252984927734, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"hole1": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MinionDied(BattleAxe()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -1.429494857788086, 0.0, -0.8286495208740234, -0.004093170166015625, -0.26964935660362244, -0.09270095825195312, -0.0004348746733739972, -3.0517578125e-05, -0.7239322662353516, -3.24249267578125e-05, -0.19875983893871307, -0.21618707478046417, -8.344650268554688e-06, -0.000263214111328125, -1.52587890625e-05, -0.007153426297008991, 0.0, -1.0132736861123703e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "battlecry", "<EOS>", 28, 241, "Minion", "Died", "<EOS>", 282, 68, 260, "Battle", "Axe", "<EOS>", 110, 202, "2", "<EOS>", "1", "<EOS>"], "score": -4.187382574060159, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"hole1": [{"hole0": "BattleAxe", "_type": "Template77"}], "hole0": "MinionDied", "_type": "Template59"}, "hole3": "battlecry"}, {"hole1": 1, "hole0": 2, "_type": "Template27"}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[IsType(MINION_TYPE.DRAGON)])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.3258705139160156, -7.2479248046875e-05, -0.4929075241088867, -0.000217437744140625, -5.924701690673828e-05, -3.814697265625e-06, -0.00012969970703125, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0008411407470703125, 0.0, -0.000659942626953125, -0.0015430450439453125, -0.0001697540283203125, -0.00018310546875, -0.0001392364501953125, -4.9591064453125e-05, 0.0, -0.510672926902771, -0.011936187744140625, -7.62939453125e-05, -3.0517578125e-05, -2.6702880859375e-05, -9.584426879882812e-05, -2.3841855067985307e-07, -1.52587890625e-05, 0.0, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.7307281494140625, -0.09888553619384766, -5.7220458984375e-06, -0.0190582275390625, -1.9073486328125e-06, -0.00030517578125, -0.0002422332763671875, -0.0282745361328125, -0.0009670257568359375, -0.022565841674804688, -3.0517578125e-05, -5.53131103515625e-05, -0.6877198219299316, -0.0199815034866333, -1.9073486328125e-06, -0.0001697540283203125, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0026998519897460938, -3.814697265625e-06, -0.3652315139770508, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "1", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "score": -5.01789402103482, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Weapon(2, 1, effects=[IsType(MINION_TYPE.DRAGON)])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.3258705139160156, -7.2479248046875e-05, -0.4929075241088867, -0.000217437744140625, -5.924701690673828e-05, -3.814697265625e-06, -0.00012969970703125, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0008411407470703125, 0.0, -0.000659942626953125, -0.0015430450439453125, -0.0001697540283203125, -0.00018310546875, -0.0001392364501953125, -4.9591064453125e-05, 0.0, -0.9449409246444702, -3.62396240234375e-05, -0.0001087188720703125, -0.000110626220703125, -1.52587890625e-05, -0.00011003016697941348, -2.3841855067985307e-07, -7.62939453125e-05, 0.0, -3.933898824470816e-06, -1.1920928244535389e-07, -0.28133296966552734, -0.1585712432861328, -5.7220458984375e-06, -0.022686004638671875, -1.9073486328125e-06, -0.0003757476806640625, -0.000232696533203125, -0.028730392456054688, -0.0010833740234375, -0.02929973602294922, -3.0517578125e-05, -4.57763671875e-05, -0.784798264503479, -0.022467732429504395, -1.9073486328125e-06, -0.00020599365234375, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.00289154052734375, -3.814697265625e-06, -0.3517799377441406, -1.1444091796875e-05], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Weapon", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "1", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "score": -5.148056498516965, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Weapon"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Draw(), PlayerSelector(EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.1031293869018555, -5.7220458984375e-06, -0.009027481079101562, -7.62939453125e-06, -0.0011042349506169558, 0.0, -0.0003203509550075978, 0.0, -0.028914451599121094, -3.814697265625e-06, -6.29425048828125e-05, -8.0108642578125e-05, -0.060955047607421875, -6.866455078125e-05, -0.00031280517578125, 0.0, 0.0, -0.16438651084899902, -5.7220458984375e-06, -2.288818359375e-05, -2.47955322265625e-05, -0.015018463134765625, -1.71661376953125e-05, -1.9073486328125e-06, -0.7605724334716797, -0.47212350368499756, -0.00020039078663103282, -0.0014925003051757812, -0.0023822784423828125, -3.814697265625e-06, -0.0641709566116333, 0.0, -0.0023450851440429688, -1.9073486328125e-06, -0.0897599458694458, -0.00020563602447509766, 0.0, -4.38690185546875e-05, -0.000118255615234375, -1.9073486328125e-06, 0.0, -0.06707382202148438, -0.0001773834228515625, -1.9073486328125e-06, -0.0002765655517578125, -0.3315391540527344, -6.4849853515625e-05, -0.9782304167747498, -9.489053627476096e-05, -0.16209030151367188, -1.9073486328125e-06, -0.36983680725097656, -5.841255187988281e-06, 0.0, -0.03597688674926758, -5.757683902629651e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Draw", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "score": -5.417392457671433, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole1": "EnemyPlayer", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True, effects=[Effect(TurnEnded(),\n            ActionTag(Damage(1), SelfSelector(picker=UserPicker())))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.3258705139160156, -7.2479248046875e-05, -0.4929075241088867, -0.000217437744140625, -5.924701690673828e-05, -3.814697265625e-06, -0.00012969970703125, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0008411407470703125, 0.0, -0.000659942626953125, -0.0015430450439453125, -0.0001697540283203125, -0.00018310546875, -0.0001392364501953125, -4.9591064453125e-05, 0.0, -0.510672926902771, -0.011936187744140625, -7.62939453125e-05, -3.0517578125e-05, -2.6702880859375e-05, -9.584426879882812e-05, -2.3841855067985307e-07, -1.52587890625e-05, 0.0, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.6695165634155273, -0.0004673004150390625, -3.24249267578125e-05, -0.10592186450958252, -3.814697265625e-06, -0.0023193359375, -3.62396240234375e-05, -0.00011467933654785156, -5.7220458984375e-06, -0.16888713836669922, -0.4475069046020508, -0.07455801963806152, -0.0008164644241333008, -2.1457672119140625e-06, -0.30164635181427, -1.1920928244535389e-07, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.015464458614587784, 0.0, -0.6893787384033203, 0.0, 0.0, -0.012625694274902344, -0.0001621246337890625, 0.0, -0.01056361198425293, 0.0, -0.04696941375732422, -0.0026302337646484375, -0.0035772323608398438, -0.0001589059829711914, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "1", "<EOS>", 291, 79, 271, "stealth", "<EOS>", 20, 161, "True", "<EOS>", 71, 209, "Turn", "Ended", "<EOS>", "Damage", "<EOS>", 282, 47, 165, "1", "<EOS>", "Self", "Selector", "<EOS>", 290, 79, 271, "picker", "<EOS>", 33, 260, "User", "Picker", "<EOS>"], "score": -5.594363595158434, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "stealth", "value": {"value": true, "_type": "NameConstant"}, "_type": "keyword"}, {"hole1": "Damage", "hole0": "TurnEnded", "hole5": [{"arg": "picker", "value": {"hole0": "UserPicker", "_type": "Template77"}, "_type": "keyword"}], "hole2": [{"_type": "Num", "n": 1}], "_type": "Template31", "hole3": "SelfSelector"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(TurnStarted(player=EnemyPlayer(\n            )), ActionTag(Draw(), PlayerSelector(EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.1031293869018555, -5.7220458984375e-06, -0.009027481079101562, -7.62939453125e-06, -0.0011042349506169558, 0.0, -0.0003203509550075978, 0.0, -0.028914451599121094, -3.814697265625e-06, -6.29425048828125e-05, -8.0108642578125e-05, -0.060955047607421875, -6.866455078125e-05, -0.00031280517578125, 0.0, 0.0, -0.16438651084899902, -5.7220458984375e-06, -2.288818359375e-05, -2.47955322265625e-05, -0.015018463134765625, -1.71661376953125e-05, -1.9073486328125e-06, -0.6484928131103516, -0.7065963745117188, -0.00038909912109375, -5.14984130859375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.018930435180664062, 0.0, -0.029425621032714844, -9.5367431640625e-06, -0.34966766834259033, -0.00031185150146484375, -1.9073486328125e-06, -3.0517578125e-05, -8.20159912109375e-05, -1.9073486328125e-06, 0.0, -0.05736255645751953, -0.0001811981201171875, -1.9073486328125e-06, -0.0003147125244140625, -0.22152233123779297, -4.76837158203125e-05, -1.0036083459854126, -9.489051444688812e-05, -0.13482284545898438, -1.9073486328125e-06, -0.3678092956542969, -5.841255187988281e-06, 0.0, -0.036911606788635254, -6.806678720749915e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Started", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Draw", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "score": -5.655360484801115, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole1": "EnemyPlayer", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(TurnEnded(player=EnemyPlayer()),\n            ActionTag(Draw(), PlayerSelector(EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.1031293869018555, -5.7220458984375e-06, -0.009027481079101562, -7.62939453125e-06, -0.0011042349506169558, 0.0, -0.0003203509550075978, 0.0, -0.028914451599121094, -3.814697265625e-06, -6.29425048828125e-05, -8.0108642578125e-05, -0.060955047607421875, -6.866455078125e-05, -0.00031280517578125, 0.0, 0.0, -0.16438651084899902, -5.7220458984375e-06, -2.288818359375e-05, -2.47955322265625e-05, -0.015018463134765625, -1.71661376953125e-05, -1.9073486328125e-06, -0.6484928131103516, -0.7653274536132812, -9.5367431640625e-06, -3.0517578125e-05, -0.0001373291015625, -3.814697265625e-06, -0.0021162033081054688, 0.0, -0.09321784973144531, -9.5367431640625e-06, -0.4541693925857544, -4.6372413635253906e-05, -1.9073486328125e-06, -3.814697265625e-05, -0.0002079010009765625, -1.9073486328125e-06, 0.0, -0.09928226470947266, -0.0002536773681640625, -1.9073486328125e-06, -0.000278472900390625, -0.19562339782714844, -4.76837158203125e-05, -1.0077879428863525, -8.940687985159457e-05, -0.10663223266601562, -1.9073486328125e-06, -0.36354732513427734, -5.841255187988281e-06, 0.0, -0.03729557991027832, -7.068923878250644e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Ended", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Draw", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "score": -5.853270674269645, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole1": "EnemyPlayer", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Draw(), PlayerSelector(EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.4587421417236328, -3.814697265625e-06, -0.1290426254272461, -3.814697265625e-06, -0.0012484764447435737, 0.0, -0.00023372526629827917, 0.0, -0.0258331298828125, -1.9073486328125e-06, -7.2479248046875e-05, -9.34600830078125e-05, -0.06610870361328125, -9.34600830078125e-05, -0.00032806396484375, 0.0, 0.0, -0.19505953788757324, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-05, -0.019290924072265625, -2.09808349609375e-05, -1.9073486328125e-06, -0.7831085920333862, -0.43234479427337646, -0.00019240376423113048, -0.0012836456298828125, -0.00200653076171875, -3.814697265625e-06, -0.07186329364776611, 0.0, -0.002323150634765625, -1.9073486328125e-06, -0.08947575092315674, -0.00019991397857666016, 0.0, -4.57763671875e-05, -0.000118255615234375, -1.9073486328125e-06, 0.0, -0.0664072036743164, -0.0001811981201171875, -1.9073486328125e-06, -0.000270843505859375, -0.3326587677001953, -6.4849853515625e-05, -0.9802538752555847, -9.453290840610862e-05, -0.15503501892089844, -1.9073486328125e-06, -0.3693113327026367, -5.841255187988281e-06, 0.0, -0.03605318069458008, -5.793444870505482e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Draw", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "score": -5.914670351244915, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole1": "EnemyPlayer", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(Character<UNK>(player=\n            BothPlayer()), ActionTag(Resurrect<UNK>(), HeroSelector()))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.1031293869018555, -5.7220458984375e-06, -0.009027481079101562, -7.62939453125e-06, -0.0011042349506169558, 0.0, -0.0003203509550075978, 0.0, -0.028914451599121094, -3.814697265625e-06, -6.29425048828125e-05, -8.0108642578125e-05, -0.060955047607421875, -6.866455078125e-05, -0.00031280517578125, 0.0, 0.0, -0.16438651084899902, -5.7220458984375e-06, -2.288818359375e-05, -2.47955322265625e-05, -0.015018463134765625, -1.71661376953125e-05, -1.9073486328125e-06, -0.7605724334716797, -0.47212350368499756, -0.00020039078663103282, -0.0014925003051757812, -0.0023822784423828125, -3.814697265625e-06, -0.0641709566116333, 0.0, -0.0023450851440429688, -1.9073486328125e-06, -0.0897599458694458, -0.00020563602447509766, 0.0, -4.38690185546875e-05, -0.000118255615234375, -1.9073486328125e-06, 0.0, -0.06707382202148438, -0.0001773834228515625, -1.9073486328125e-06, -0.0002765655517578125, -0.3315391540527344, -6.4849853515625e-05, -1.54561185836792, -0.050201416015625, -0.0009165960946120322, -0.11310005187988281, 0.0, -0.5009499788284302, -0.00017213818500749767, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Character", "<UNK>", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Both", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Resurrect", "<UNK>", "<EOS>", 68, 260, "Hero", "Selector", "<EOS>"], "score": -6.0820498687751225, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "BothPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Character<UNK>"}}, {"args": [{"hole0": "Resurrect<UNK>", "_type": "Template77"}, {"hole0": "HeroSelector", "_type": "Template77"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[IsType(MINION_TYPE.MECH)])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.3258705139160156, -7.2479248046875e-05, -0.4929075241088867, -0.000217437744140625, -5.924701690673828e-05, -3.814697265625e-06, -0.00012969970703125, -0.0001316070556640625, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.0008411407470703125, 0.0, -0.000659942626953125, -0.0015430450439453125, -0.0001697540283203125, -0.00018310546875, -0.0001392364501953125, -4.9591064453125e-05, 0.0, -0.510672926902771, -0.011936187744140625, -7.62939453125e-05, -3.0517578125e-05, -2.6702880859375e-05, -9.584426879882812e-05, -2.3841855067985307e-07, -1.52587890625e-05, 0.0, -2.7418097943154862e-06, -1.1920928244535389e-07, -0.7307281494140625, -0.09888553619384766, -5.7220458984375e-06, -0.0190582275390625, -1.9073486328125e-06, -0.00030517578125, -0.0002422332763671875, -0.0282745361328125, -0.0009670257568359375, -0.022565841674804688, -3.0517578125e-05, -5.53131103515625e-05, -0.6877198219299316, -0.0199815034866333, -1.9073486328125e-06, -0.0001697540283203125, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0026998519897460938, -3.814697265625e-06, -1.4528684616088867, -5.7220458984375e-06], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 91, 143, "create_minion", "<EOS>", 269, 276, 268, "self", "<EOS>", 268, "player", "<EOS>", 295, 94, 167, 14, 137, 19, 160, "Minion", "<EOS>", 283, 47, 165, "2", "<EOS>", 47, 165, "1", "<EOS>", 290, 79, 271, "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Is", "Type", "<EOS>", 282, 37, 129, 19, 160, "MINION_TYPE", "<EOS>", "MECH", "<EOS>"], "score": -6.105525246620758, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DEMON"}, "hole3": "minion_type"}, {"name": "create_minion", "_type": "FunctionDef", "body": [{"value": {"args": [{"_type": "Num", "n": 2}, {"_type": "Num", "n": 1}], "_type": "Call", "keywords": [{"arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "MECH"}], "_type": "Call", "func": {"_type": "Name", "id": "IsType"}}]}, "_type": "keyword"}], "func": {"_type": "Name", "id": "Minion"}}, "_type": "Return"}], "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, effects=[Effect(TurnStarted(player=EnemyPlayer(\n            )), ActionTag(Draw(), PlayerSelector(EnemyPlayer())))])\n", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.00013076403411105275, -5.841247457283316e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -7.867813110351562e-06, -5.7220458984375e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.15239334106445312, -0.0001201629638671875, -3.576272320060525e-06, -8.106231689453125e-06, -2.300739288330078e-05, 0.0, -2.2649685433862032e-06, 0.0, -0.26308155059814453, -1.33514404296875e-05, -0.27799224853515625, -1.52587890625e-05, -0.0004711151123046875, -0.0002384185791015625, -5.14984130859375e-05, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -1.4587421417236328, -3.814697265625e-06, -0.1290426254272461, -3.814697265625e-06, -0.0012484764447435737, 0.0, -0.00023372526629827917, 0.0, -0.0258331298828125, -1.9073486328125e-06, -7.2479248046875e-05, -9.34600830078125e-05, -0.06610870361328125, -9.34600830078125e-05, -0.00032806396484375, 0.0, 0.0, -0.19505953788757324, -7.62939453125e-06, -2.47955322265625e-05, -1.9073486328125e-05, -0.019290924072265625, -2.09808349609375e-05, -1.9073486328125e-06, -0.6300781965255737, -0.7337722778320312, -0.0004673004150390625, -5.340576171875e-05, -6.866455078125e-05, -3.814697265625e-06, -0.019512295722961426, 0.0, -0.029811859130859375, -9.5367431640625e-06, -0.3471871614456177, -0.00033664703369140625, -1.9073486328125e-06, -3.0517578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, 0.0, -0.05765247344970703, -0.0001811981201171875, -1.9073486328125e-06, -0.00031280517578125, -0.2241230010986328, -4.9591064453125e-05, -1.0058269500732422, -9.465209586778656e-05, -0.1294231414794922, -1.9073486328125e-06, -0.37009716033935547, -5.841255187988281e-06, 0.0, -0.0369107723236084, -6.842440052423626e-05, 0.0], "choice_history": [80, 159, 295, 88, 138, "Twilight", "Whelp", "<EOS>", 282, 45, 160, "Minion", "Card", "<EOS>", 296, 98, 181, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", "minion_type", "<EOS>", 11, 129, 19, 160, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 109, 200, "2", "<EOS>", "1", "<EOS>", "effects", "<EOS>", 17, 155, 282, 40, 136, 19, 160, "Effect", "<EOS>", 283, 40, 135, 19, 160, "Turn", "Started", "<EOS>", 290, 79, 271, "player", "<EOS>", 33, 260, "Enemy", "Player", "<EOS>", 40, 136, 19, 160, "Action", "Tag", "<EOS>", 283, 68, 260, "Draw", "<EOS>", 61, 250, "Player", "Selector", "<EOS>", "Enemy", "Player", "<EOS>"], "score": -6.177473368879639, "model_output": {"_type": "Module", "body": [{"name": "TwilightWhelp", "_type": "ClassDef", "body": [{"hole1": 1, "hole0": "Twilight Whelp", "hole2": "PRIEST", "_type": "Template11", "hole4": {"value": {"_type": "Name", "id": "MINION_TYPE"}, "_type": "Attribute", "attr": "DRAGON"}, "hole3": "minion_type"}, {"hole1": 1, "hole0": 2, "_type": "Template23", "hole2": "effects", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Call", "keywords": [{"arg": "player", "value": {"hole0": "EnemyPlayer", "_type": "Template77"}, "_type": "keyword"}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"hole0": "Draw", "_type": "Template77"}, {"hole1": "EnemyPlayer", "hole0": "PlayerSelector", "_type": "Template69"}], "_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}}], "_type": "Call", "func": {"_type": "Name", "id": "Effect"}}]}}], "bases": [{"_type": "Name", "id": "MinionCard"}]}]}}, {"inferred_code": "", "score_history": [-1.71661376953125e-05, -1.52587890625e-05, -22.140460968017578], "choice_history": [80, 159, 294], "score": -22.140493392944336, "model_output": {"_type": "Module", "body": []}}], "gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}
