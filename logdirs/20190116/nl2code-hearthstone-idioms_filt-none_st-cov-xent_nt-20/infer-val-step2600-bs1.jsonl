{"beams": [{"inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-9.5367431640625e-06, -9.5367431640625e-06, -4.76837158203125e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0007366801146417856, -0.00012027675984427333, -5.9960588259855285e-05, -1.1444091796875e-05, -4.57763671875e-05, -9.1552734375e-05, -0.001221149112097919, -6.937980651855469e-05, -1.9073486328125e-06, -1.9073486328125e-05, -2.288818359375e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -3.0517578125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -6.29425048828125e-05, -4.57763671875e-05, -0.4448814392089844, -5.53131103515625e-05, -7.62939453125e-06, -0.003346908837556839, -9.775161743164062e-05, -0.001386389136314392, -0.000568389892578125, -0.0800638198852539, -0.0002689361572265625, 0.0, -3.814697265625e-06, -0.000415802001953125, -0.0015965700149536133, -1.5497207641601562e-05, -0.031642913818359375, 0.0, -0.02399444580078125, -0.000431060791015625, -0.000274658203125, -9.34600830078125e-05, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -0.001712799072265625, 0.0, 0.0, -6.4849853515625e-05, 0.0, 0.0, -3.814697265625e-06, -1.537799835205078e-05, 0.0, -0.00467681884765625, -0.0032892227172851562, -1.9073486328125e-06, -0.0012683868408203125, -0.0005817413330078125, -0.0020084381103515625, -1.9073486328125e-06, -0.21114762127399445, -1.633167266845703e-05, -0.0003833770751953125, -0.00063323974609375, -0.41510677337646484, 0.0], "choice_history": [68, 118, 184, 76, 98, "<UNK>", "Blade", "<EOS>", 170, 48, 119, "Weapon", "Card", "<EOS>", 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 174, 51, 128, "<UNK>", " ", "Blade", "<EOS>", 58, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 53, 49, 120, "False", "<EOS>", 79, 103, "create_weapon", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 21, 119, "Weapon", "<EOS>", 171, 66, 57, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Name", "id": "WeaponCard"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "<UNK> Blade"}, {"_type": "Template15"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template1"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template13"}], "func": {"_type": "Name", "id": "Weapon"}}}], "name": "create_weapon"}], "name": "<UNK>Blade"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.2328065405636153}], "gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n"}
{"beams": [{"inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(6, 7, charge=True)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.002506585791707039, -0.0019864405039697886, -4.6491513785440475e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, 0.0, -9.5367431640625e-06, -1.1920928244535389e-07, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.003204345703125, -1.71661376953125e-05, -0.11065292358398438, -1.1444091796875e-05, -3.814697265625e-06, -2.670261892490089e-05, -2.3722626792732626e-05, -3.135204315185547e-05, -3.933906555175781e-06, -0.000141143798828125, -1.9073486328125e-06, -1.0181800462305546e-05, -4.2080762796103954e-05, -6.4849853515625e-05, -0.00106048583984375, 0.0, 0.0, 0.0, -0.0006656646728515625, -7.62939453125e-06, -0.6909122467041016, -5.960462772236497e-07, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0742372726090252e-05, -1.5497195136049413e-06, -5.7220458984375e-06, -5.53131103515625e-05, -1.33514404296875e-05, 0.0, -0.013134002685546875, -1.9073486328125e-05, -7.43865966796875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -2.7775351554737426e-05, -0.0013115336187183857, -0.0003910064697265625, -7.62939453125e-06, -3.814697265625e-06, -0.7000906467437744, -2.7418097943154862e-06, -0.000339508056640625, -0.000316619873046875, -3.62396240234375e-05, -3.576278118089249e-07, 0.0], "choice_history": [68, 118, 184, 76, 98, "Boulderfist", "Ogre", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Boulderfist", " ", "Ogre", "<EOS>", 50, 124, "6", "<EOS>", 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 50, 124, "6", "<EOS>", 60, 178, 159, "charge", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boulderfist Ogre"}, {"_type": "Num", "n": 6}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Template17"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "charge"}]}}], "name": "create_minion"}], "name": "BoulderfistOgre"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.5275123812608555}], "gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n"}
{"beams": [{"inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score_history": [0.0, -7.62939453125e-06, -1.1444091796875e-05, -2.09808349609375e-05, -7.62939453125e-06, -7.748591997369658e-06, -0.0002605590270832181, -2.8013790142722428e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000148773193359375, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0009307861328125, -1.9073486328125e-05, -0.592193603515625, -3.814697265625e-06, -1.9073486328125e-06, -7.033323527139146e-06, -3.349778853589669e-05, -2.7418097943154862e-06, -1.6689286894688848e-06, -0.000179290771484375, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -3.576277322281385e-06, -0.0014868973521515727, -0.5387849807739258, 0.0, -0.0001659393310546875, 0.0, 0.0, 0.0, -0.0001010894775390625, -9.5367431640625e-06, -0.0016231536865234375, -9.489059448242188e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.011800765991210938, -2.6702880859375e-05, -1.7046926586772315e-05, -4.458328112377785e-05, -0.6436586380004883, -0.0006561279296875, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -8.20159912109375e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.9339025533990934e-05, -0.00012087819777661934, -9.918212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -2.706050690903794e-05, -5.483625864144415e-05, -0.6759634017944336, -4.1961669921875e-05, -4.38690185546875e-05, -5.14984130859375e-05, -0.024467457085847855, -1.0609622222546022e-05, -0.0001544952392578125, -2.6702880859375e-05, -0.27559471130371094, -0.02944173850119114, -8.34461570775602e-06, -0.0010986328125, -0.0015125274658203125, -1.33514404296875e-05, -1.9073486328125e-06, -0.000164031982421875, -1.9073486328125e-06, -3.814697265625e-06, -0.009601593017578125, 0.0, -0.005584166385233402, -5.4359305067919195e-05, -0.43977808952331543, -3.4332275390625e-05, 0.0, -0.0012607574462890625, -0.0002040863037109375, -8.20159912109375e-05, -5.7220458984375e-06, -0.0018672943115234375, 0.0, -3.814697265625e-06, -0.000125885009765625, 0.0, -0.007178306579589844, -0.029950547963380814, -2.837150896084495e-05, -0.32707980275154114, -0.0003304481506347656, 0.0, -0.0050373077392578125, 0.0], "choice_history": [68, 118, 184, 76, 98, "Deadly", "Poison", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Deadly", " ", "Poison", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 78, 102, 21, 119, "minion", "<EOS>", 13, 89, 27, "minions", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 21, 119, "minion", "<EOS>", "change_temp_attack", "<EOS>", 170, 63, 77, 101, 16, 96, 13, 89, 13, 89, 27, "hero", "<EOS>", "change_temp_attack", "<EOS>", 170, 63, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deadly Poison"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "minions"}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "change_temp_attack"}}}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "hero"}, "attr": "change_temp_attack"}}}], "name": "use"}], "name": "DeadlyPoison"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.6298898289439876}], "gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n"}
{"beams": [{"inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.00019238528329879045, -0.0019158241339027882, -1.5497195136049413e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.0005035400390625, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, 0.0, -0.0005320225609466434, -2.014636993408203e-05, -1.215934389620088e-05, -3.8146954466355965e-06, -0.000125885009765625, -3.814697265625e-06, -0.00011695083230733871, -4.1246024920837954e-05, -0.002613067626953125, 0.0, -1.1444091796875e-05, 0.0, -1.1682510375976562e-05, -8.463859558105469e-06, -0.7957439422607422, -9.5367431640625e-06, -0.000118255615234375, -0.2982215881347656, 0.0, -0.0004673004150390625, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -5.14984130859375e-05, -6.866455078125e-05, -9.5367431640625e-06, -0.0001010894775390625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0023246067576110363, -0.00010692992509575561, 0.0, -0.001827239990234375, -1.9073486328125e-05, -0.026818275451660156, 0.0, 0.0, -0.29280781745910645, -8.0108642578125e-05, -2.09808349609375e-05, -0.001861572265625, -2.47955322265625e-05, -0.0001010894775390625, 0.0, -0.000408172607421875, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0004944801330566406, -0.00012803077697753906, -3.814697265625e-06, -1.1444091796875e-05, -0.0003452301025390625, 0.0, -8.20159912109375e-05, -1.1444091796875e-05, 0.0, 0.0, -0.0022057155147194862, -0.00014233571710065007, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.103515625e-05, 0.0, -5.7220458984375e-06, -0.0001163482666015625, -0.0001220703125, -6.29425048828125e-05, -9.5367431640625e-06, -9.775161743164062e-06, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.003467559814453125, -1.52587890625e-05, -3.814697265625e-06, -0.0003223419189453125, -5.7220458984375e-06, -2.8967437174287625e-05, -0.003000318305566907, -0.0002994537353515625, -3.814697265625e-06], "choice_history": [68, 118, 184, 76, 98, "Fire", "Elemental", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Fire", " ", "Elemental", "<EOS>", 50, 124, "6", "<EOS>", 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 21, 119, "Damage", "<EOS>", 170, 66, 43, 95, 21, 119, "Character", "Selector", "<EOS>", 179, 159, "players", "<EOS>", 16, 94, 21, 119, "Both", "Player", "<EOS>", 159, "picker", "<EOS>", 16, 94, 21, 119, "User", "Picker", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 50, 124, "6", "<EOS>", 58, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Fire Elemental"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}, "arg": "picker"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Template15"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "FireElemental"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.438589513598913}], "gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n"}
{"beams": [{"inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, 0.0, -0.006936050020158291, -0.0009400099515914917, -2.4914430468925275e-05, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -8.344646857949556e-07, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.000823974609375, -0.0001373291015625, -8.0108642578125e-05, -0.00064849853515625, 0.0, -0.007197563536465168, -8.61881926539354e-05, -5.0424259825376794e-05, 0.0, -0.0045261383056640625, -7.82012939453125e-05, -3.4332275390625e-05, -0.007285118103027344, 0.0, -0.0005216598510742188, 0.0, -1.9073486328125e-06, -8.0108642578125e-05, -0.0004787445068359375, -0.008214950561523438, -6.29425048828125e-05, -0.0058460235595703125, 0.0, 0.0, -0.0062102824449539185, -0.0006702084210701287, -2.47955322265625e-05, -0.007541656494140625, 0.0, 0.0, -0.0011339187622070312, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, 0.0, -0.000225067138671875, -3.814697265625e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.990795135498047e-05, -1.0728830375228426e-06, -7.43865966796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00042724609375, -4.38690185546875e-05, -1.1444091796875e-05, -0.0001506805419921875, -0.0002765655517578125, 0.0], "choice_history": [68, 118, 184, 76, 98, "Gnomish", "Inventor", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Gnomish", " ", "Inventor", "<EOS>", 57, 61, 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 94, 21, 119, "Draw", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 63, 57, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gnomish Inventor"}, {"_type": "Template13"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Draw"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template13"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "GnomishInventor"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.061052137037222565}], "gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}
{"beams": [{"inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n", "score_history": [-1.33514404296875e-05, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -1.788126610335894e-05, -0.00011729711695807055, -5.113947918289341e-05, -3.814697265625e-06, -4.57763671875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.000171661376953125, -5.960462772236497e-07, -2.3841855067985307e-07, -3.814697265625e-06, -0.000156402587890625, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.103515625e-05, -2.6702880859375e-05, -0.000888824462890625, -9.5367431640625e-06, -5.7220458984375e-06, -4.148405059822835e-05, -2.968311309814453e-05, -1.1920896213268861e-05, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -3.62396240234375e-05, 0.0, 0.0, -1.0848039892152883e-05, -1.9192666513845325e-05, -0.7293359041213989, 0.0, -0.000537872314453125, 0.0, 0.0, 0.0, -0.00016021728515625, -3.814697265625e-06, -0.0012149810791015625, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.0014209747314453125, -0.0001659393310546875, -0.00011074542999267578, -5.6028297876764555e-06, -0.4998159408569336, -2.09808349609375e-05, -1.9073486328125e-05, 0.0, -9.5367431640625e-06, -0.000118255615234375, -2.09808349609375e-05, -5.53131103515625e-05, -2.47955322265625e-05, 0.0, 0.0, -5.304755541146733e-05, -5.078315734863281e-05, -0.0001220703125, -1.9073486328125e-06, -1.9073486328125e-06, -2.6702880859375e-05, -0.0002307891845703125, 0.0, -4.0411949157714844e-05, -9.775161743164062e-06, -0.0026988983154296875, -1.9073486328125e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -0.004197120666503906, -0.00477092619985342, -6.79492904964718e-06, -0.12216885387897491, -0.00020968914031982422, 0.0, -0.25336456298828125, -2.09808349609375e-05, -1.33514404296875e-05, -0.000286102294921875, -0.0013217926025390625, 0.0, -0.0002231597900390625, -0.000217437744140625, 0.0, -0.0017032623291015625, -0.008488781750202179, -1.1086449376307428e-05, -0.2555927038192749, -0.00019943714141845703, 0.0, -0.2684440612792969, 0.0], "choice_history": [68, 118, 184, 76, 98, "Heroic", "Strike", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Heroic", " ", "Strike", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 27, "hero", "<EOS>", "change_temp_attack", "<EOS>", 170, 63, 77, 101, 16, 96, 13, 89, 13, 89, 27, "hero", "<EOS>", "change_temp_attack", "<EOS>", 170, 63, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Heroic Strike"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "hero"}, "attr": "change_temp_attack"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "hero"}, "attr": "change_temp_attack"}}}], "name": "use"}], "name": "HeroicStrike"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.159696466032777}], "gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n"}
{"beams": [{"inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.0002689361572265625, -1.1444091796875e-05, -9.72747802734375e-05, -2.6702880859375e-05, 0.0, -0.002681947313249111, -0.009966213256120682, -4.470248313737102e-05, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, -6.103515625e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -0.0002593994140625, -5.340576171875e-05, -0.0011043548583984375, 0.0, 0.0, -2.3007209165371023e-05, -2.5510777049930766e-05, -3.3378546504536644e-06, -2.0265579223632812e-06, -0.000194549560546875, -3.814697265625e-06, -0.008754674345254898, -5.638570655719377e-05, -0.017503738403320312, 0.0, -5.7220458984375e-06, 0.0, -1.1563301086425781e-05, -3.147124152746983e-05, -1.0919733047485352, -5.7220458984375e-06, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.000118255615234375, 0.0, 0.0, -3.4332275390625e-05, 0.0, -1.52587890625e-05, 0.0, -0.00018858900875784457, -3.6954811548639555e-06, -0.0003337860107421875, -1.1444091796875e-05, -6.866455078125e-05, -1.33514404296875e-05, -0.005157470703125, -0.0001735687255859375, -1.9073486328125e-05, -3.0517578125e-05, -1.1444091796875e-05, -5.614683686872013e-05, -8.606632036389783e-05, -7.62939453125e-06, 0.0, -1.408905882271938e-05, -8.356237958651036e-05, -0.0005731582641601562, 0.0, -0.211753249168396, 0.0, -7.05718994140625e-05, -4.57763671875e-05, -2.110004425048828e-05, -4.768370445162873e-07, 0.0], "choice_history": [68, 118, 184, 76, 98, "Ironbark", "Protector", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Ironbark", " ", "Protector", "<EOS>", 50, 124, "8", "<EOS>", 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 50, 124, "8", "<EOS>", 50, 124, "8", "<EOS>", 178, 159, "taunt", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Ironbark Protector"}, {"_type": "Num", "n": 8}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 8}, {"_type": "Num", "n": 8}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "taunt"}]}}], "name": "create_minion"}], "name": "IronbarkProtector"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.352332485781858}], "gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n"}
{"beams": [{"inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n", "score_history": [-5.91278076171875e-05, -9.1552734375e-05, -0.0001430511474609375, -0.002124786376953125, -0.0015659332275390625, -0.00016116566257551312, -0.00014960749831516296, -0.006491315551102161, -0.00019835680723190308, -0.006616355385631323, -3.814697265625e-06, -0.000186920166015625, -0.0066280364990234375, -5.7220458984375e-06, -2.288818359375e-05, -1.3709050108445808e-05, -1.9311904907226562e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.6702880859375e-05, -7.05718994140625e-05, -2.47955322265625e-05, -0.000270843505859375, -2.47955322265625e-05, -0.0001163482666015625, -1.52587890625e-05, -1.71661376953125e-05, -0.0004847066884394735, -0.00018274784088134766, -0.014197072014212608, -0.0015846490859985352, -0.0005777869955636561, -0.006658434867858887, -0.0006909354706294835, -2.7179718017578125e-05, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, 0.0, -0.0026303529739379883, -3.6954863844584906e-06, -0.6070051193237305, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.52587890625e-05, 0.0, -0.0030517578125, -3.576278118089249e-07, -0.043862342834472656, -3.814697265625e-06, -0.01230621337890625, 0.0, -3.814697265625e-06, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0024200675543397665, -1.3709068298339844e-05, 0.0, -8.96453857421875e-05, -9.1552734375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -8.96453857421875e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.0009765625, -0.00010561943054199219, -1.0728830375228426e-06, -0.029109954833984375, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -6.4849853515625e-05, -0.0009059906005859375, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -0.0001609273604117334, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -4.780292510986328e-05, -2.622604142743512e-06, -0.017019271850585938, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001354217529296875, -1.1444091796875e-05, -0.0005340576171875, -2.455709909554571e-05, -1.6569954823353328e-05, -0.24877393245697021, -3.0159924790496007e-05, -1.9073486328125e-06, -0.3959646224975586, -0.0009975433349609375, 0.0, -1.33514404296875e-05, -3.0517578125e-05, -9.5367431640625e-06, -6.67572021484375e-05, -0.0007839202880859375, -3.814697265625e-06, -0.08693313598632812, -7.879733311710879e-05, -1.621236151549965e-05, -0.3665649890899658, -0.0001379251480102539, 0.0, -0.2220020294189453, -3.814697265625e-06], "choice_history": [68, 118, 184, 76, 98, "Mark", "Of", "The", "Wild", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "change_attack", "<EOS>", 170, 66, 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "increase_health", "<EOS>", 170, 57, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mark of the Wild"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "change_attack"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template13"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "increase_health"}}}], "name": "use"}], "name": "MarkOfTheWild"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.0936903308314}], "gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n"}
{"beams": [{"inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 3)), self\n                )\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score_history": [-2.6702880859375e-05, 0.0, -0.0001068115234375, -2.47955322265625e-05, -7.62939453125e-06, -0.0001262346631847322, -2.1457672119140625e-06, -3.814697265625e-06, -0.001003265380859375, -0.0022335052490234375, -1.33514404296875e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002307891845703125, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.000240325927734375, -1.9073486328125e-06, -0.018148422241210938, -3.814697265625e-06, -1.9073486328125e-06, -9.536738616588991e-07, -3.576278118089249e-07, -0.00016021728515625, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -7.712839578744024e-05, -8.916854858398438e-05, -0.5837478637695312, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0, -0.00286865234375, -4.0531158447265625e-06, -5.14984130859375e-05, 0.0, -0.018444061279296875, -3.576278118089249e-07, -3.4332275390625e-05, -8.7738037109375e-05, -5.7220458984375e-06, 0.0, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.00010728836059570312, -9.536697689327411e-06, -0.33620262145996094, -2.09808349609375e-05, -0.0001354217529296875, -1.9073486328125e-06, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001163482666015625, -7.62939453125e-06, -1.9073486328125e-05, 0.0, -0.0004892540746368468, -1.3470647900248878e-05, -0.00015461444854736328, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -1.823902130126953e-05, -3.218649908376392e-06, -0.0001430511474609375, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004100799560546875, -7.62939453125e-06, -0.0015641686040908098, -5.364284152165055e-05, -4.76837158203125e-05, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0001888275146484375, 0.0, -0.0020108125172555447, -0.0004661014536395669, -0.0006983280181884766, -2.205371856689453e-05, -8.0108642578125e-05, -7.05718994140625e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, 0.0, -8.0108642578125e-05, -1.1920928244535389e-07, -0.0008397102355957031, -1.9073486328125e-06, -0.0001201629638671875, -4.649158654501662e-06, -0.0006618499755859375, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.003270387416705489, -1.1682510375976562e-05, -0.0002689361572265625, -9.5367431640625e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0009515280835330486, -0.00020062923431396484, -0.001583099365234375, -9.72747802734375e-05, -9.72747802734375e-05, -0.00043884600745514035, 0.0, -0.019268035888671875, -0.013736724853515625, -0.000247955322265625, -3.814697265625e-06, -7.62939453125e-06, -0.002048492431640625, 0.0, -0.004513001535087824, -0.0004988908185623586, -0.019504547119140625, -0.00022125244140625, -0.00055694580078125, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.05172835662961006, -1.0728830375228426e-06, -0.0035778284072875977, -9.72747802734375e-05, -0.000156402587890625, -0.0014896392822265625, -9.5367431640625e-06, -0.006159843876957893, -0.00033289677230641246, -6.866455078125e-05, -0.0004119873046875, -1.9073486328125e-06, -1.52587890625e-05, -0.0002880096435546875, -1.9073486328125e-06, -0.0001239776611328125, 0.0, -0.00910034030675888, -0.00015555690333712846, -0.011975646018981934, -0.0001220703125, -1.71661376953125e-05, -0.0004787445068359375, 0.0, -0.0022673490457236767, -1.800060272216797e-05, -1.71661376953125e-05, -0.0002079010009765625, -1.9073486328125e-06, -4.00543212890625e-05, -3.0517578125e-05, 0.0, -0.000762939453125, 0.0, -0.3835086226463318, -2.4199349354603328e-05, -0.07730865478515625, -1.52587890625e-05, -0.0004749298095703125, -0.0004119873046875, -0.0001010894775390625, -1.1444091796875e-05, -7.43865966796875e-05, -5.7220458984375e-06, -0.0001702307490631938, -3.814697265625e-06, -1.9073486328125e-06, -0.27470970153808594, -0.1867961883544922, -0.014995574951171875, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.012562154792249203, 0.0, -0.0028228759765625, -1.9073486328125e-06, -0.0035572052001953125, -0.0026264190673828125, -0.08102798461914062, -0.010028839111328125, -0.0011310577392578125, -0.0001201629638671875, -0.0003377199172973633, -5.1140676077920943e-05, -0.0056400299072265625, -0.0005950927734375, -1.1444091796875e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.6716461181640625e-05, -5.960446742392378e-06, -0.00057220458984375, -8.7738037109375e-05, -5.14984130859375e-05, -0.0002536773681640625, -8.7738037109375e-05, -0.0003337860107421875, -2.09808349609375e-05, -8.7738037109375e-05, -3.24249267578125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -4.9591064453125e-05, -0.0001239776611328125, -5.7220458984375e-06, 0.0, -0.00077642040560022, -2.503394853192731e-06, -0.000881195068359375, 0.0, -9.1552734375e-05, -0.000335693359375, -2.6702880859375e-05, 0.0, -0.0030661725904792547, -5.125993993715383e-06, -0.0251312255859375, -4.9591064453125e-05, -0.00018310546875, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.009318065829575062, -2.0265579223632812e-06, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, 0.0, -0.0004750490188598633, -2.3841855067985307e-07, -0.000635981559753418, -3.814697265625e-06, -0.00019168853759765625, -1.9073468138230965e-06, -7.82012939453125e-05, -0.025266647338867188, -3.814697265625e-06, -0.00634002685546875, 0.0], "choice_history": [68, 118, 184, 76, 98, "Multi-Shot", "<EOS>", 170, 54, 185, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Multi-Shot", "<EOS>", 57, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 73, 88, 170, 48, 119, "minions", "<EOS>", 16, 96, 13, 89, 21, 119, "copy", "<EOS>", "copy", "<EOS>", 170, 40, 89, 13, 89, 21, 119, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 78, 102, 21, 119, "i", "<EOS>", 16, 96, 21, 119, "range", "<EOS>", 171, 50, 124, "0", "<EOS>", 63, 185, 73, 88, 170, 48, 119, "minion", "<EOS>", 16, 96, 13, 89, 21, 119, "game", "<EOS>", "random_choice", "<EOS>", 170, 48, 119, "minions", "<EOS>", 77, 101, 16, 96, 13, 89, 21, 119, "minions", "<EOS>", "remove", "<EOS>", 170, 48, 119, "minion", "<EOS>", 77, 101, 16, 96, 13, 89, 21, 119, "minion", "<EOS>", "damage", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_spell_damage", "<EOS>", 170, 43, 96, 13, 89, 21, 119, "game", "<EOS>", "<UNK>", "<EOS>", 171, 63, 66, 55, 79, 103, "can_use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 183, 82, 126, 15, 92, 2, 171, 43, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "can_use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 44, 99, 16, 96, 21, 119, "len", "<EOS>", 170, 40, 89, 13, 89, 21, 119, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 167, 6, 170, 63, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Multi-Shot"}, {"_type": "Template13"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Assign", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}}, "targets": [{"_type": "Name", "id": "minions"}]}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "iter": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template5"}], "func": {"_type": "Name", "id": "range"}}, "body": [{"_type": "Assign", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minions"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}}, "targets": [{"_type": "Name", "id": "minion"}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "minion"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minions"}, "attr": "remove"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template9"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "<UNK>"}}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_spell_damage"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "damage"}}}]}], "name": "use"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "can_use"}}, {"_type": "Compare", "left": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template5"}], "ops": [{"_type": "GtE"}]}], "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Multi-Shot"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.264205252660716}], "gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}
{"beams": [{"inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power <UNK> Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            calculate_attack() <= 1 and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Shield()))\n        self.target.increase_health(4)\n", "score_history": [-9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.215931297338102e-05, -0.0164568442851305, -0.3714659810066223, -9.894321920000948e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-05, -1.9073486328125e-06, -3.62396240234375e-05, -8.344629350176547e-06, -1.919269561767578e-05, -1.52587890625e-05, -0.00017547607421875, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.0517578125e-05, -0.000213623046875, -2.288818359375e-05, -0.0009288787841796875, -0.000148773193359375, 0.0, -0.0005434476770460606, -0.0003840923309326172, -0.5320203304290771, -0.0018051862716674805, -0.014358262531459332, 0.0, -0.0009136199951171875, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0004619359679054469, -0.00019025601795874536, -0.5940138101577759, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0009613037109375, -1.9073486328125e-06, -0.0007429122924804688, -2.3841855067985307e-07, -0.49123382568359375, -2.6702880859375e-05, -0.00040459632873535156, -5.960462772236497e-07, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -7.2479248046875e-05, 0.0, -1.9073486328125e-05, -2.2649765014648438e-06, -0.00745701789855957, -1.1920928244535389e-07, -4.57763671875e-05, -0.01669168472290039, -1.1920928244535389e-07, -0.04165077209472656, -0.0001239776611328125, -9.34600830078125e-05, -7.43865966796875e-05, -0.0014896392822265625, 0.0, -0.003482222557067871, 0.0, -0.8766403198242188, -0.0004520416259765625, -0.0008182525634765625, -0.00069427490234375, -0.0129241943359375, -0.000949859619140625, -0.04954051971435547, -1.33514404296875e-05, -0.011980056762695312, 0.0, -0.00276947021484375, 0.0, -0.01976168341934681, -3.576278118089249e-07, -0.08763539791107178, -5.960462772236497e-07, -0.0001621246337890625, -0.2580099105834961, -4.76837158203125e-05, -1.2192106246948242, -0.03173828125, -0.004119873046875, -0.0003223419189453125, -8.96453857421875e-05, -0.005382537841796875, 0.0, -0.00860738754272461, -2.110004425048828e-05, -0.0018625259399414062, 0.0, 0.0, -7.62939453125e-06, -0.0001239776611328125, 0.0, 0.0, -0.000255584716796875, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -3.0517578125e-05, -0.000354766845703125, -1.3589859008789062e-05, -6.079673767089844e-06, -0.02374744415283203, -0.000759124755859375, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -4.38690185546875e-05, -9.5367431640625e-06, 0.0, 0.0, -0.0002094500814564526, -0.000118255615234375, -1.71661376953125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-05, 0.0, -3.063678741455078e-05, -1.728534698486328e-05, -0.014075279235839844, 0.0, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0004177093505859375, -3.349781036376953e-05, -6.19888032815652e-06, -0.9198200702667236, -1.9073486328125e-06, -8.20159912109375e-05, -0.000690460205078125, -0.001453399658203125, -0.0003376007080078125, 0.0, -0.0033136606216430664, -0.055312514305114746, -0.00025177001953125, -5.53131103515625e-05, -6.67572021484375e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.059934377670288, -0.19824530184268951, -4.76837158203125e-05, 0.0, -3.4332275390625e-05, -0.002338409423828125, -3.814697265625e-06, -1.71661376953125e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.0017728805541992188, -7.319450378417969e-05, -7.152555099310121e-07, -1.0870658159255981, -1.2040138244628906e-05, -1.9073486328125e-06, -0.8898935317993164, -2.09808349609375e-05], "choice_history": [68, 118, 184, 76, 98, "Power", "Word", "Shield", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Power", " ", "<UNK>", " ", "Shield", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 179, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 159, "filter_func", "<EOS>", 18, 113, 157, 163, 1, 156, "target", "<EOS>", 15, 92, 2, 171, 44, 99, 16, 94, 13, 89, 21, 119, "target", "<EOS>", "calculate_attack", "<EOS>", 167, 11, 170, 64, 43, 94, 13, 89, 21, 119, "target", "<EOS>", "spell_targetable", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "add_buff", "<EOS>", 170, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 94, 21, 119, "Shield", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "increase_health", "<EOS>", 170, 57, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Power <UNK> Shield"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}, {"_type": "keyword", "value": {"_type": "Lambda", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}, "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "left": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "calculate_attack"}}, "comparators": [{"_type": "Template7"}], "ops": [{"_type": "LtE"}]}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "spell_targetable"}}], "op": {"_type": "And"}}}, "arg": "filter_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Shield"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "add_buff"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template13"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "increase_health"}}}], "name": "use"}], "name": "PowerWordShield"}, {"_type": "Template6_stmt_seq"}]}, "score": -8.954328803819642}], "gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n"}
{"beams": [{"inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [0.0, -6.4849853515625e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.02947358787059784, -0.007435630075633526, -1.728519782773219e-05, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.0001220703125, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.0001277923583984375, -1.71661376953125e-05, -0.0019397735595703125, -1.1444091796875e-05, -1.9073486328125e-06, -3.671578815556131e-05, -4.184243152849376e-05, -7.390974587906385e-06, -2.2649765014648438e-06, -0.0042743682861328125, -0.03841590881347656, -0.00014495849609375, 0.0, 0.0, 0.0, -0.000102996826171875, 0.0, -0.0014386177062988281, -3.576278118089249e-07, 0.0, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.0001583099365234375, 0.0, -4.00543212890625e-05, -9.5367431640625e-06, -0.00033438130049034953, -2.50339189733495e-06, -0.0006465911865234375, -8.392333984375e-05, -1.52587890625e-05, -7.62939453125e-06, -0.0008144378662109375, -1.1444091796875e-05, -3.24249267578125e-05, -0.0001354217529296875, -0.0001773834228515625, -0.004181861877441406, -2.288818359375e-05, -0.013137221336364746, -1.1920928244535389e-07, -4.00543212890625e-05, -1.1444091796875e-05, -3.4332275390625e-05, -1.4305104514278355e-06, 0.0], "choice_history": [68, 118, 184, 76, 98, "Sen'jin", "Shieldmasta", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Sen'jin", " ", "Shieldmasta", "<EOS>", 57, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 66, 58, 178, 159, "taunt", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sen'jin Shieldmasta"}, {"_type": "Template13"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template15"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "taunt"}]}}], "name": "create_minion"}], "name": "Sen'jinShieldmasta"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.10369848577948204}], "gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n"}
{"beams": [{"inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [-7.62939453125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-05, -1.33514404296875e-05, -9.41749840421835e-06, -0.00029654958052560687, -1.0251946150674485e-05, -3.814697265625e-06, -4.9591064453125e-05, -0.0007343292236328125, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0008792877197265625, -3.814697265625e-06, -0.017740249633789062, -3.814697265625e-06, -1.9073486328125e-06, -4.768360213347478e-06, -3.6716410249937326e-05, -6.6756979322235566e-06, 0.0, -0.0007343292236328125, -2.288818359375e-05, -0.010044097900390625, -1.9073486328125e-06, -1.9073486328125e-06, -0.00020933151245117188, -0.00020265579223632812, -0.6444530487060547, 0.0, -9.5367431640625e-06, 0.0, -9.5367431640625e-06, 0.0, -8.20159912109375e-05, -1.9073486328125e-06, -0.000518798828125, -3.933906555175781e-06, 0.0, 0.0, -1.1444091796875e-05, 0.0, -8.392333984375e-05, -3.814697265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -9.918212890625e-05, -2.6702880859375e-05, -2.491474151611328e-05, -4.88758041683468e-06, -0.020833969116210938, 0.0, 0.0, 0.0, -5.7220458984375e-06, -6.4849853515625e-05, 0.0, -0.0002155303955078125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.8385238440241665e-05, -1.9073486328125e-06, -0.00058746337890625, 0.0, -2.47955322265625e-05, -2.09808349609375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -9.5367431640625e-05, -3.814697265625e-06, -0.0001888275146484375, -1.9073486328125e-06, 0.0, -6.866455078125e-05, 0.0, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.009157180786132812, -5.7220458984375e-06, -5.91278076171875e-05, 0.0, -0.0025482177734375, 0.0, -0.00033915042877197266, -5.7220458984375e-06, -0.04874527454376221, 0.0, -0.0007001161575317383, -3.814697265625e-06, -5.340576171875e-05, -0.0003376007080078125, -5.53131103515625e-05, -9.5367431640625e-06, -4.1961669921875e-05, -2.47955322265625e-05, -0.0005878203082829714, 0.0, -7.62939453125e-06, -0.27352046966552734, -0.000209808349609375, 0.0], "choice_history": [68, 118, 184, 76, 98, "Sinister", "Strike", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Sinister", " ", "Strike", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 184, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 21, 119, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_spell_damage", "<EOS>", 170, 66, 55, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sinister Strike"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_spell_damage"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "hero"}, "attr": "damage"}}}], "name": "use"}], "name": "SinisterStrike"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.0352153336511947}], "gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}
{"beams": [{"inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(SuccubusSuccubus(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3, spell_damage=1)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -2.09808349609375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.004133610054850578, -4.88758041683468e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.576278118089249e-07, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -0.0001354217529296875, -1.1444091796875e-05, -1.1444091796875e-05, -2.6702880859375e-05, -5.7220458984375e-05, 0.0, -0.05663490295410156, -3.814697265625e-05, -1.33514404296875e-05, -2.3841830625315197e-06, 0.0, -2.86102294921875e-05, -0.010824203491210938, 0.0, -5.7220458984375e-06, 0.0, -4.0531158447265625e-06, -6.77104399073869e-05, -1.169662594795227, 0.0, -2.47955322265625e-05, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.3473062515258789, -4.768370445162873e-07, -0.0006923675537109375, -4.1961669921875e-05, -6.115436553955078e-05, -0.0001722425949992612, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -7.832050323486328e-05, -5.4596363042946905e-05, -0.8302450180053711, 0.0, -0.0002956390380859375, -0.0001850128173828125, 0.0, -1.33514404296875e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.04994010925292969, -5.340576171875e-05, -0.0042572021484375, -3.814697265625e-06, 0.0, -0.7076383233070374, -0.5435345768928528, -0.18976785242557526, -8.58306884765625e-05, -0.5019674301147461, -0.000690460205078125, -1.9073486328125e-06, -0.03079986572265625, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -7.6293927122605965e-06, -7.152555099310121e-07, -1.33514404296875e-05, -8.392333984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.17325401306152344, -1.52587890625e-05, -1.52587890625e-05, -0.000148773193359375, -5.7220458984375e-06, -4.57763671875e-05, -7.62939453125e-06, -0.4471038579940796, -2.3841855067985307e-07, -0.023778915405273438, 0.0], "choice_history": [68, 118, 184, 76, 98, "Succubus", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Succubus", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 179, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 94, 21, 119, "Succubus", "Succubus", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 57, 66, 178, 159, "spell_damage", "<EOS>", 35, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Succubus"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "SuccubusSuccubus"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Template9"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template7"}, "arg": "spell_damage"}]}}], "name": "create_minion"}], "name": "Succubus"}, {"_type": "Template6_stmt_seq"}]}, "score": -5.094313289972007}], "gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=True)\n", "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.06135350093245506, -0.004704363644123077, -0.00011205440387129784, -3.814697265625e-06, -3.0517578125e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.000225067138671875, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0003185272216796875, -5.7220458984375e-06, -0.5085124969482422, -1.52587890625e-05, -3.814697265625e-06, -2.0623181626433507e-05, -2.6345227524871007e-05, -4.172316494077677e-06, -4.649161837733118e-06, -0.00078582763671875, -0.0001430511474609375, -9.5367431640625e-05, -0.000629425048828125, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, 0.0, -4.1961669921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1205666851310525e-05, -7.271740287251305e-06, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -0.0006580352783203125, -3.0517578125e-05, -3.0517578125e-05, -0.000156402587890625, -0.000812530517578125, -0.0002765655517578125, -2.47955322265625e-05, -1.0251530408859253, -5.960462772236497e-07, -0.00052642822265625, -7.62939453125e-06, -3.0517578125e-05, -2.2649765014648438e-06, 0.0], "choice_history": [68, 118, 184, 76, 98, "War", "Golem", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "War", " ", "Golem", "<EOS>", 60, 61, 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 60, 60, 178, 159, "charge", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "War Golem"}, {"_type": "Template17"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template17"}, {"_type": "Template17"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "charge"}]}}], "name": "create_minion"}], "name": "WarGolem"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.6048964871095563}], "gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n"}
{"beams": [{"inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Kill(),\n            SelfSelector()))])\n", "score_history": [-2.288818359375e-05, -9.5367431640625e-06, -3.24249267578125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0011932880152016878, -2.9802317840221804e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.22103309631347656, -2.09808349609375e-05, -0.09694957733154297, -5.7220458984375e-06, 0.0, -8.583032467868179e-06, 0.0, -0.3258228302001953, -1.9073486328125e-06, -0.044184911996126175, -2.6106585210072808e-05, -0.10219955444335938, 0.0, -5.340576171875e-05, 0.0, -3.814697265625e-06, -2.324580964341294e-05, -0.1719799041748047, 0.0, -1.71661376953125e-05, 0.0, 0.0, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.6725606918334961, -1.1920928244535389e-07, -0.0031785964965820312, -1.71661376953125e-05, -7.62939453125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00028884410858154297, -1.1920922133867862e-06, -2.6702880859375e-05, 0.0, -4.00543212890625e-05, 0.0, -2.6702880859375e-05, -7.510157047363464e-06, -0.0015716552734375, 0.0, 0.0, 0.0, -1.71661376953125e-05, 0.0, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.0010418768506497145, -3.933898824470816e-06, -6.29425048828125e-05, -5.7220458984375e-05, -1.33514404296875e-05, -2.47955322265625e-05, -0.00025177001953125, -8.392333984375e-05, -5.7220458984375e-06, -0.0001659393310546875, -1.1444091796875e-05, -0.00045013427734375, 0.0, -8.404254913330078e-05, -1.1920928244535389e-07, -0.0001163482666015625, -1.52587890625e-05, -9.1552734375e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -3.62396240234375e-05, -8.106231689453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.10967063903808594, 0.0, -0.00023651123046875, -0.01530076190829277, -0.0007065234240144491, -0.0001659393310546875, -3.24249267578125e-05, -3.814697265625e-06, 0.0, -2.288818359375e-05, -3.0875205993652344e-05, -3.445148468017578e-05, -9.918212890625e-05, -1.71661376953125e-05, -0.04168987274169922, 0.0, -7.62939453125e-06, -0.06268292665481567, -0.003914203494787216, -3.814697265625e-06, -0.015737533569335938, -0.0001087188720703125, 0.0, -0.03357398509979248, -3.814697265625e-06, 0.0, -0.0009403228759765625, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Acidmaw", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 174, 51, 128, "Acidmaw", "<EOS>", 50, 124, "7", "<EOS>", 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 49, 120, "False", "<EOS>", 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 57, 63, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 94, 21, 119, "Damaged", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 94, 21, 119, "Kill", "<EOS>", 43, 94, 21, 119, "Self", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Acidmaw"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Template5"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damaged"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Kill"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "Acidmaw"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.9290582997739278}], "gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n"}
{"beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -9.179073458653875e-06, -1.07287787614041e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, 0.0, 0.0, -0.0111236572265625, -1.71661376953125e-05, -0.06481647491455078, -0.0001583099365234375, 0.0, -1.9073468138230965e-06, -1.1920928244535389e-07, -0.0007915496826171875, -5.7220458984375e-05, -0.1313018798828125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00074005126953125, -2.0265579223632812e-06, -0.2558441162109375, -2.741813204920618e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.007580038160085678, -3.3378546504536644e-06, -2.86102294921875e-05, -9.1552734375e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.00012969970703125, -5.14984130859375e-05, -3.814697265625e-06, -0.0008869171142578125, -5.340576171875e-05, -0.01470947265625, -7.62939453125e-06, -0.00470513291656971, -0.00036542891757562757, -9.34600830078125e-05, -2.6702880859375e-05, -2.133846101060044e-05, -3.8980677345534787e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Boar", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Boar", "<EOS>", 66, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 57, 63, 178, 159, "charge", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template9"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Template5"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "charge"}]}}], "name": "create_minion"}], "name": "Boar"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.493817200306232}], "gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"inferred_code": "class AnodizedCubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(Taunt())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-1.9073486328125e-06, -0.00043487548828125, -2.288818359375e-05, -3.814697265625e-05, -3.814697265625e-06, -0.0030826921574771404, -0.16791531443595886, -0.07818575948476791, -0.00010573324834695086, -1.9073486328125e-06, -1.71661376953125e-05, -2.86102294921875e-05, -1.9073486328125e-06, 0.0, -1.6093124941107817e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -9.5367431640625e-06, -3.814697265625e-05, -3.0517578125e-05, -0.00110626220703125, -9.1552734375e-05, -0.0045623779296875, -0.0001049041748046875, -0.024371612817049026, -0.0008201596792787313, -0.00879794079810381, -0.018378615379333496, -7.5099706009496e-05, -1.1563301086425781e-05, -0.0001659393310546875, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.0006721019744873047, -4.6967445086920634e-05, -0.11386799812316895, 0.0, -4.00543212890625e-05, -0.00905609130859375, 0.0, -0.3072293996810913, 0.0, -1.1444091796875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.002346038818359375, -8.96453857421875e-05, -0.023164749145507812, -0.008075714111328125, -1.33514404296875e-05, -0.4478931427001953, -0.000225067138671875, -0.001216888427734375, -7.62939453125e-06, -0.000202178955078125, -1.9073486328125e-06, 0.0, -0.0010044475784525275, -3.576278118089249e-07, -1.9073486328125e-06, -1.9073486328125e-06, -0.38088226318359375, -6.103515625e-05, 0.0, -0.009071692824363708, -0.13979721069335938, -3.814697265625e-06, -2.47955322265625e-05, -0.09753704071044922, -0.007595062255859375, -0.0010881423950195312, -0.0002155303955078125, 0.0, -0.00027334687183611095, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -0.013265609741210938, -5.7220458984375e-06, -1.9073486328125e-06, -1.0207102298736572, -0.00021660272614099085, -0.001438140869140625, -1.9073486328125e-06, -0.0024662017822265625, -0.0014781951904296875, 0.0, -0.1676497459411621, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00010633468627929688, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.00014804780948907137, -1.7881377516459906e-06, -2.288818359375e-05, -4.1961669921875e-05, -9.5367431640625e-06, -9.5367431640625e-05, -0.5812053680419922, -3.24249267578125e-05, -1.71661376953125e-05, -4.00543212890625e-05, -3.814697265625e-06, 0.0], "choice_history": [68, 118, 184, 76, 98, "Anodized", "Cub", "Cub", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 170, 46, 114, 172, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 64, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 94, 21, 119, "Taunt", "<EOS>", 65, 43, 94, 21, 119, "Self", "Selector", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 63, 63, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Anodized Robo Cub"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template7"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Template8_expr_seq"}]}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template5"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "AnodizedCubCub"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.649242036790554}], "gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}
{"beams": [{"inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2 + player.\n            spell_damage), self)\n        self.target.<UNK> = player\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-05, -6.4849853515625e-05, -3.814697265625e-05, -2.765629324130714e-05, -0.00023421927471645176, -2.038458114839159e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0001392364501953125, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -5.14984130859375e-05, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.018323898315429688, -3.814697265625e-06, -0.39322471618652344, -4.76837158203125e-05, -1.33514404296875e-05, -2.145764938177308e-06, -4.673003058996983e-05, -5.7220440794480965e-06, 0.0, -0.00127410888671875, -1.9073486328125e-06, -0.00013801094610244036, -1.1801710570580326e-05, -0.0004730224609375, 0.0, -5.14984130859375e-05, 0.0, -2.1457672119140625e-06, -3.242486127419397e-05, -0.5833467245101929, 0.0, -0.0036792755126953125, 0.0, -9.5367431640625e-06, 0.0, -8.392333984375e-05, 0.0, -0.009326934814453125, -2.503394853192731e-06, 0.0, -5.7220458984375e-06, -1.52587890625e-05, 0.0, 0.0, -0.000118255615234375, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.00012624263763427734, -6.127356755314395e-05, -0.1461162567138672, -4.9591064453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, 0.0, -5.5908545618876815e-05, -1.9073486328125e-06, -7.2479248046875e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.254413604736328e-05, -0.21025848388671875, 0.0, -9.5367431640625e-06, -0.002849578857421875, 0.0, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.007201194763183594, -0.0001513957977294922, -9.536738616588991e-07, -0.7487543821334839, -2.0265579223632812e-06, -1.9073486328125e-05, -0.12394332885742188, -0.0013427734375, -3.0517578125e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0024442672729492188, 0.0, -3.814697265625e-06, -1.149958610534668, -0.005524635314941406, -0.5467367172241211, -0.017493247985839844, -0.004458427429199219, -1.9073486328125e-06, -0.14251327514648438, -0.2558683753013611, -2.229192978120409e-05, -0.001239776611328125, -0.06715011596679688, -2.288818359375e-05, -9.1552734375e-05, -0.05032825469970703, -1.9073486328125e-06, -0.1951894760131836, -7.62939453125e-06, -0.0040035247802734375, -0.15947294235229492, -2.3841855067985307e-07, -0.5776283740997314, -1.4305104514278355e-06, -0.5384817123413086, -3.4332275390625e-05], "choice_history": [68, 118, 184, 76, 98, "Burrowing", "Mine", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Burrowing", " ", "Mine", "<EOS>", 50, 124, "0", "<EOS>", 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "damage", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_spell_damage", "<EOS>", 170, 41, 91, 34, 69, 13, 89, 27, "spell_damage", "<EOS>", 55, 73, 88, 170, 40, 89, 13, 89, 26, "target", "<EOS>", "<UNK>", "<EOS>", 27, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Burrowing Mine"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "BinOp", "left": {"_type": "Template5"}, "right": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "spell_damage"}, "op": {"_type": "Add"}}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_spell_damage"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "damage"}}}, {"_type": "Assign", "value": {"_type": "Template12"}, "targets": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "<UNK>"}]}], "name": "use"}], "name": "BurrowingMine"}, {"_type": "Template6_stmt_seq"}]}, "score": -5.970873830530394}], "gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n"}
{"beams": [{"inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [-2.09808349609375e-05, -3.814697265625e-06, -1.52587890625e-05, -3.24249267578125e-05, -1.52587890625e-05, -2.3603161025675945e-05, -1.0132789611816406e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0007801055908203125, -7.62939453125e-06, 0.0, -2.1457672119140625e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.53131103515625e-05, -5.7220458984375e-06, -0.0001163482666015625, -5.7220458984375e-06, -1.33514404296875e-05, -8.58306884765625e-05, -0.0001316070556640625, -1.9073486328125e-06, -0.0009250640869140625, -2.288818359375e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -3.4332275390625e-05, -0.0008602142333984375, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.639936327701434e-05, -1.3232186574896332e-05, -0.025164365768432617, 0.0, -0.016344070434570312, -0.0066013336181640625, -9.5367431640625e-06, -0.019028782844543457, -3.576272320060525e-06, -1.1444091796875e-05, -3.814697265625e-06, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, 0.0, -0.001056671142578125, 0.0, -9.34600830078125e-05, -1.9073486328125e-06, -0.0011388063430786133, -9.560585021972656e-05, 0.0, -0.0020848512649536133, -2.491474151611328e-05, -0.0035448074340820312, -3.814697265625e-06, 0.0, -6.866455078125e-05, 0.0, 0.0, -0.0001220703125, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.1920928244535389e-07, -0.00012969970703125, -2.86102294921875e-05, -4.8279762268066406e-05, -3.4450891689630225e-05, -0.001667022705078125, -7.62939453125e-06, -6.866455078125e-05, 0.0, -4.00543212890625e-05, -8.392333984375e-05, 0.0, -8.7738037109375e-05, -1.33514404296875e-05, -4.57763671875e-05, 0.0, -0.0015370527980849147, -3.814697265625e-06, -0.0004520416259765625, 0.0, -1.52587890625e-05, -3.0517578125e-05, -1.52587890625e-05, 0.0, -3.504753112792969e-05, -4.2319297790527344e-05, -0.0049495697021484375, 0.0, -7.62939453125e-06, -0.0004711151123046875, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.0012264251708984375, -0.0006148815155029297, -2.47955322265625e-05, -0.005245208740234375, -2.6702880859375e-05, -5.7220458984375e-05, -0.0002651214599609375, -2.288818359375e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -0.0009455680847167969, -3.933906555175781e-06, -5.7220458984375e-06, -0.0121612548828125, -1.9073486328125e-05, -0.0006021279841661453, -9.655950634623878e-06, -0.0033111572265625, 0.0], "choice_history": [68, 118, 184, 76, 98, "Crackle", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Crackle", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 53, 179, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 159, "overload", "<EOS>", 35, 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 184, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "damage", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_spell_damage", "<EOS>", 170, 50, 124, "6", "<EOS>", 55, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Crackle"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_spell_target"}, "arg": "target_func"}, {"_type": "keyword", "value": {"_type": "Template7"}, "arg": "overload"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Num", "n": 6}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_spell_damage"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "damage"}}}], "name": "use"}], "name": "Crackle"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.11323746913693356}], "gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n"}
{"beams": [{"inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(4), self)\n", "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -3.0755956686334684e-05, -0.0003762764681596309, -3.480850500636734e-05, -3.814697265625e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0003223419189453125, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.6612215042114258, -6.103515625e-05, -0.040045738220214844, -0.0020036697387695312, -7.62939453125e-06, -2.229192978120409e-05, -9.667871927376837e-05, -5.722029527532868e-06, -3.814697265625e-06, -2.288818359375e-05, -0.0001468658447265625, -0.0003299713134765625, -0.0002307891845703125, -3.62396240234375e-05, -2.86102294921875e-05, -3.933906555175781e-06, -1.9073486328125e-06, 0.0, -0.000209808349609375, 0.0, 0.0, -0.0004863739013671875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.000102996826171875, -1.33514404296875e-05, -1.9311904907226562e-05, -7.748573807475623e-06, -0.0046215057373046875, -1.33514404296875e-05, 0.0, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-05, -3.814697265625e-06, 0.0, 0.0, -0.0015631818678230047, -7.081031799316406e-05, -4.00543212890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -5.9604644775390625e-06, -2.6702880859375e-05, -0.00022125244140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.11495685577392578, -1.9073486328125e-06, -7.62939453125e-06, -0.000240325927734375, -7.62939453125e-06, -0.0003185272216796875, -0.00021588800882454962, -2.3841855067985307e-07, -1.2502214908599854, 0.0, -3.0517578125e-05, -0.0001678466796875, -0.0027561187744140625, -0.000514984130859375, -7.62939453125e-06, -3.814697265625e-06, -0.032877542078495026, 0.0, -2.86102294921875e-05, -0.6658754348754883, -0.003635406494140625, -1.71661376953125e-05], "choice_history": [68, 118, 184, 76, 98, "Emergency", "Coolant", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 174, 51, 128, "Emergency", " ", "Coolant", "<EOS>", 64, 61, 53, 49, 120, "False", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 184, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "heal", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_heal_power", "<EOS>", 170, 57, 55, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Emergency Coolant"}, {"_type": "Template7"}, {"_type": "Template2"}, {"_type": "Template1"}, {"_type": "NameConstant", "value": true}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template13"}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_heal_power"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "heal"}}}], "name": "use"}], "name": "EmergencyCoolant"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.784704823542569}], "gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n"}
{"beams": [{"inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, windfury=True)\n", "score_history": [-2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -0.0020229951478540897, -9.464966569794342e-05, -5.8412379075889476e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, 0.0, -3.814697265625e-06, -2.0265579223632812e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -9.72747802734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -0.000202178955078125, -2.09808349609375e-05, -0.0001430511474609375, -0.0001087188720703125, -1.9073486328125e-06, -0.0003972464182879776, -3.278248550486751e-05, -2.145764938177308e-06, 0.0, -0.000125885009765625, -1.52587890625e-05, -6.67572021484375e-05, -0.015920639038085938, -5.7220458984375e-06, -0.11577856540679932, -1.7881377516459906e-06, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, -9.536738616588991e-07, -0.007108807563781738, 0.0, 0.0, 0.0, -9.5367431640625e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -7.832047413103282e-05, -1.311301275563892e-06, -0.001361846923828125, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.000858306884765625, -2.47955322265625e-05, -1.1444091796875e-05, -0.002399444580078125, -0.0002193450927734375, -0.3236246109008789, -1.9073486328125e-06, -0.43308234214782715, -2.861018856492592e-06, -0.00012969970703125, -1.9073486328125e-05, -2.944469451904297e-05, -3.576278118089249e-07, 0.0, -0.10791254043579102, 0.0, -0.000362396240234375, -5.53131103515625e-05, -0.0003037452697753906, -4.768370445162873e-07, 0.0], "choice_history": [68, 118, 184, 76, 98, "Flying", "Machine", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Flying", " ", "Machine", "<EOS>", 66, 61, 53, 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 64, 57, 179, 159, "charge", "<EOS>", 22, 120, "True", "<EOS>", 159, "windfury", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flying Machine"}, {"_type": "Template9"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template13"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "charge"}, {"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "windfury"}]}}], "name": "create_minion"}], "name": "FlyingMachine"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.0128799004147027}], "gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}
{"beams": [{"inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Give(Buff(ChangeAttack(1))), MinionSelector(condition\n            =IsType(MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-5.7220458984375e-06, -8.0108642578125e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.010943278670310974, -0.001302705961279571, -3.099436753473128e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -3.62396240234375e-05, -9.655952453613281e-06, 0.0, -1.1444091796875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -1.33514404296875e-05, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0003490447998046875, -4.9591064453125e-05, -0.000148773193359375, -1.1444091796875e-05, -5.8530047681415454e-05, -4.458427429199219e-05, -8.4638240878121e-06, 0.0, -2.47955322265625e-05, -0.0001583099365234375, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.832019036868587e-05, -3.33785246766638e-05, -0.30697453022003174, -7.62939453125e-06, -0.0001010894775390625, -0.09847068786621094, 0.0, -0.0008612871170043945, -0.00011514954530866817, -3.62396240234375e-05, -0.0001983642578125, -1.9073486328125e-06, 0.0, -0.0002461671829223633, -1.0490395652595907e-05, -0.01654529571533203, -2.3841855067985307e-07, -0.0006427764892578125, -0.0002537965774536133, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -5.91278076171875e-05, -0.00318145751953125, -0.0006885528564453125, -0.01572895050048828, -0.0034160614013671875, -1.1444091796875e-05, -0.000213623046875, -0.029497146606445312, -3.814697265625e-06, -1.9073486328125e-06, -0.35280999541282654, -0.00023758411407470703, -3.62396240234375e-05, -4.76837158203125e-05, -0.051151275634765625, -2.47955322265625e-05, -1.9073486328125e-06, -0.0008417858625762165, -0.013849973678588867, -4.1961669921875e-05, -2.288818359375e-05, -0.0046901702880859375, 0.0, -0.9714107513427734, -0.05007362365722656, -0.5210409164428711, -1.9073486328125e-05, -0.10484826564788818, -1.1920928244535389e-07, -0.000537872314453125, -0.24375629425048828, -0.00016021728515625, 0.0, -0.040670037269592285, -0.011884204111993313, -1.9073486328125e-06, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.0005340576171875, 0.0, -0.0005550384521484375, -4.208087193546817e-05, -0.5908994674682617, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, 0.0, -4.57763671875e-05, -7.62939453125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -2.9444683605106547e-05, -4.410734163684538e-06, -1.33514404296875e-05, -0.00049591064453125, -3.4332275390625e-05, -3.814697265625e-06, -0.0421905517578125, -3.62396240234375e-05, -0.000202178955078125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Goblin", "Auto-Barber", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Goblin", " ", "Auto-Barber", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 53, 179, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 170, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 64, 43, 95, 33, 178, 159, "condition", "<EOS>", 16, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 66, 63, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Goblin Auto-Barber"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template7"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Name", "id": "IsType"}}, "arg": "condition"}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template5"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "GoblinAuto-Barber"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.4942948558284215}], "gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}
{"beams": [{"inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeHealth(2)), SelfSelector()))])\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.002298695733770728, -9.179088920063805e-06, -0.00015186223026830703, 0.0, -7.62939453125e-06, -1.71661376953125e-05, 0.0, 0.0, -2.0265579223632812e-06, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.00028228759765625, -9.34600830078125e-05, -9.34600830078125e-05, -0.000461578369140625, -2.288818359375e-05, -0.0006084974738769233, -4.3868974898941815e-05, -4.0531076592742465e-06, -1.9073486328125e-06, -0.000125885009765625, -0.0004978179931640625, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.215934389620088e-05, -0.8642024993896484, 0.0, -0.00016021728515625, 0.0, -3.814697265625e-06, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -0.0024890899658203125, -2.3841855067985307e-07, -0.000423431396484375, 0.0, -0.0008455514907836914, -3.3378591979271732e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0010051727294921875, -2.1457672119140625e-06, -0.36010074615478516, 0.0, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.00012969970703125, -7.62939453125e-06, -3.874269896186888e-05, -2.3841855067985307e-07, -0.0001068115234375, -0.0001068115234375, -1.1444091796875e-05, -4.00543212890625e-05, -7.62939453125e-05, -0.000553131103515625, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.3785972595214844, -1.9073486328125e-06, -0.0025310516357421875, 0.0, -0.0002422332763671875, -5.7220458984375e-06, -0.00110626220703125, -7.62939453125e-06, -1.9073486328125e-06, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-05, -1.9073486328125e-06, 0.0, -0.4396524429321289, 0.0, -5.7220458984375e-06, -0.00029408925911411643, -0.135062575340271, -2.6702880859375e-05, -0.0006046295166015625, -3.814697265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0004940032958984375, -0.024463653564453125, -3.4332275390625e-05, -0.0010967254638671875, -1.33514404296875e-05, -0.0006732940673828125, -0.0007038116455078125, -6.866455078125e-05, -0.031175613403320312, -0.0074329376220703125, -0.000194549560546875, 0.0, -0.00022268292377702892, -0.1664879322052002, -1.71661376953125e-05, 0.0, -0.00267791748046875, -1.33514404296875e-05, -0.043984413146972656, -6.29425048828125e-05, -7.62939453125e-06, -0.0029687881469726562, -2.288818359375e-05, 0.0, -0.008312225341796875, 0.0], "choice_history": [68, 118, 184, 76, 98, "Iron", "Sensei", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Iron", " ", "Sensei", "<EOS>", 66, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 63, 63, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 94, 21, 119, "Turn", "Ended", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 32, 170, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 63, 43, 94, 21, 119, "Self", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Iron Sensei"}, {"_type": "Template9"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template5"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnEnded"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "IronSensei"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.4848026290900975}], "gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n"}
{"beams": [{"inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 7, effects=[Effect(CharacterAttack(IsHero()),\n            ActionTag(Give(BuffUntil(Immune(), Attack<UNK>())),\n            HeroSelector()))])\n", "score_history": [-5.7220458984375e-06, -5.7220458984375e-06, -0.0001239776611328125, -1.52587890625e-05, 0.0, -0.01400075014680624, -2.527227479731664e-05, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -4.768370445162873e-07, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0033473968505859375, -5.7220458984375e-06, -7.62939453125e-05, -1.1444091796875e-05, 0.0, -6.318092346191406e-06, 0.0, -0.0001239776611328125, -1.9073486328125e-06, -5.498536665982101e-06, -0.00015651127614546567, -0.21854209899902344, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.00057220458984375, -2.09808349609375e-05, -0.0002956390380859375, -1.1920928244535389e-07, -0.06046581268310547, 0.0, -0.00012028217315673828, -1.0728830375228426e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022125244140625, -1.2397762475302443e-05, -0.1288928985595703, -1.1920928244535389e-07, 0.0, 0.0, -0.008760452270507812, 0.0, 0.0, -3.0517578125e-05, 0.0, -7.62939453125e-06, 0.0, -0.0003367662138771266, -5.960462772236497e-07, -0.0001811981201171875, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, -0.0008831024169921875, -0.0003643035888671875, -5.7220458984375e-06, -0.000232696533203125, 0.0, -2.3841852225814364e-07, -0.00018082771566696465, -0.00063323974609375, -0.0002880096435546875, 0.0, -0.426169753074646, -1.1920928244535389e-07, -4.57763671875e-05, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0271453857421875, -1.1563301086425781e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.00293731689453125, -0.0001354217529296875, 0.0, -0.5871479511260986, -0.004823446273803711, -7.62939453125e-06, -1.52587890625e-05, -0.015110969543457031, -0.0026702880859375, -1.52587890625e-05, -0.0001010894775390625, -0.0686238557100296, -0.0441218800842762, -0.0002130270004272461, -7.62939453125e-06, -0.001495361328125, -2.6702880859375e-05, -1.9073486328125e-06, -0.0010089874267578125, -0.00020039081573486328, -2.2649765014648438e-06, -4.57763671875e-05, -5.7220458984375e-06, -0.0059604644775390625, -0.001384735107421875, -0.000339508056640625, -0.16390705108642578, -0.02526092529296875, -1.52587890625e-05, 0.0, -0.16945159435272217, -0.0022717714309692383, -0.0010557174682617188, -0.007633209228515625, -1.9073486328125e-06, -0.00223541259765625, 0.0, -4.1961669921875e-05, -0.09854317456483841, -0.001406308845616877, -7.05718994140625e-05, -0.000545501708984375, -7.62939453125e-06, -0.0004711151123046875, -0.024221176281571388, -0.006268501281738281, -0.0008939765975810587, -0.0001678466796875, -0.000530242919921875, -1.9073486328125e-06, -7.62939453125e-06, -0.3346661329269409, -1.7523765563964844e-05, 0.0, -8.58306884765625e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Mal'Ganis", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Mal'Ganis", "<EOS>", 50, 124, "9", "<EOS>", 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 50, 124, "9", "<EOS>", 60, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 96, 21, 119, "Character", "Attack", "<EOS>", 170, 43, 94, 21, 119, "Is", "Hero", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 32, 170, 43, 96, 21, 119, "Buff", "Until", "<EOS>", 171, 43, 94, 21, 119, "Immune", "<EOS>", 43, 94, 21, 119, "Attack", "<UNK>", "<EOS>", 43, 94, 21, 119, "Hero", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mal'Ganis"}, {"_type": "Num", "n": 9}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 9}, {"_type": "Template17"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsHero"}}], "func": {"_type": "Name", "id": "CharacterAttack"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Immune"}}, {"_type": "Call", "func": {"_type": "Name", "id": "Attack<UNK>"}}], "func": {"_type": "Name", "id": "BuffUntil"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "Mal'Ganis"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.468691316007586}], "gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n"}
{"beams": [{"inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Damage(4),\n            HeroSelector()))])\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00015115548740141094, -0.0005247564404271543, -0.0023383426014333963, -1.311301275563892e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, 0.0, -1.1920928244535389e-07, -3.576278118089249e-07, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -0.001323699951171875, -1.33514404296875e-05, -5.14984130859375e-05, -2.86102294921875e-05, -5.7220458984375e-06, -9.595974552212283e-05, -2.6226029149256647e-05, -5.4717023886041716e-05, -0.0002815722255036235, -3.302048935438506e-05, -4.0531158447265625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -5.9127800341229886e-05, -0.00032551123877055943, -0.5894085168838501, -1.1920928244535389e-07, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -4.76837158203125e-05, -7.62939453125e-06, -0.0003070831298828125, -8.344646857949556e-07, -4.00543212890625e-05, 0.0, -0.0001735684636514634, -9.536738616588991e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -8.880697714630514e-05, -0.014940738677978516, 0.0, 0.0, 0.0, -4.00543212890625e-05, 0.0, 0.0, -4.00543212890625e-05, 0.0, -1.33514404296875e-05, 0.0, -1.001357759378152e-05, -2.622600959512056e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -4.38690185546875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0008373260498046875, -4.9591064453125e-05, -0.0076274871826171875, 0.0, -0.004621148109436035, -3.6954811548639555e-06, -0.0001697540283203125, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -1.728534698486328e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.0482025146484375, 0.0, -0.00012969970703125, -0.03257343918085098, -0.0001550904562463984, -0.0807037353515625, -4.57763671875e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -4.208087921142578e-05, 0.0, -5.7220458984375e-05, -1.1444091796875e-05, -0.000263214111328125, -0.0001430511474609375, -7.62939453125e-06, -0.3308349847793579, -0.0009114019339904189, -1.9073486328125e-06, -0.1881256103515625, -9.5367431640625e-06, -0.0050048828125, 0.0, -9.5367431640625e-06, -0.009777186438441277, -0.0005670784739777446, -4.768370445162873e-07, -0.001209259033203125, 0.0], "choice_history": [68, 118, 184, 76, 98, "Mistress", "Of", "Pain", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Mistress", " ", "of", " ", "Pain", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 64, 57, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 94, 21, 119, "Damaged", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 21, 119, "Damage", "<EOS>", 170, 57, 43, 94, 21, 119, "Hero", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mistress of Pain"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template13"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damaged"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template13"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "MistressOfPain"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.3231207246860066}], "gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n"}
{"beams": [{"inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.MECH))), Aura(ChangeHealth(2),\n            MinionSelector(IsType(MINION_TYPE.MECH))), Effect(TurnEnded(),\n            ActionTag(Give(WeaponHealth()), SelfSelector()))])\n", "score_history": [-3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.002468108432367444, -1.0967249181703664e-05, 0.0, -0.0001659393310546875, -9.5367431640625e-06, -0.000598849612288177, -0.00010609587479848415, -0.002048492431640625, -3.0517578125e-05, -0.000110626220703125, 0.0, 0.0, -3.576278118089249e-07, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0001583099365234375, -5.7220458984375e-06, -0.0008831024169921875, -0.000152587890625, -1.9073486328125e-06, -5.6028297876764555e-06, -7.152555099310121e-07, -0.0002422332763671875, -1.71661376953125e-05, -7.2479248046875e-05, -1.1444091796875e-05, 0.0, -7.629387255292386e-06, -0.0007315872353501618, -0.06464493274688721, 0.0, -5.340576171875e-05, 0.0, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -8.96453857421875e-05, -2.622600959512056e-06, -1.9073486328125e-06, 0.0, -0.049739837646484375, -1.1920928244535389e-07, 0.0, -0.0001850128173828125, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -8.535385131835938e-05, 0.0, -9.5367431640625e-05, -0.000865936279296875, -7.62939453125e-06, -3.4332275390625e-05, -0.00998687744140625, -0.0003299713134765625, -0.004826545715332031, -0.0012250776635482907, -0.001250588335096836, -0.00045299530029296875, -9.5367431640625e-06, -2.288818359375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.08146023750305176, 0.0, -0.000179290771484375, -1.9073486328125e-06, -0.0056781768798828125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -0.019117355346679688, -1.1682510375976562e-05, -0.0059947967529296875, 0.0, -0.0004177093505859375, -0.0001087188720703125, -1.9073486328125e-06, -0.0012074698461219668, -0.36311936378479004, -1.9073486328125e-05, 0.0, -0.0001373291015625, -1.71661376953125e-05, -0.03310394287109375, -0.00110626220703125, -0.0026569366455078125, -0.000156402587890625, -0.013210296630859375, -1.1444091796875e-05, 0.0, -0.00293731689453125, -0.00042974945972673595, 0.0, -7.05718994140625e-05, -0.00017547607421875, 0.0, -0.001834869384765625, 0.0, -2.47955322265625e-05, -4.589557647705078e-05, -0.19309043884277344, 0.0, -0.29328155517578125, -0.029592514038085938, 0.0, 0.0, -0.6885890960693359, -0.0008488893508911133, -0.0001735687255859375, -1.9073486328125e-06, -0.06477165222167969, -0.666259765625, 0.0, -0.006346339825540781, -0.012143492698669434, -1.9073486328125e-05, 0.0, -0.0004634857177734375, -4.00543212890625e-05, -0.00226593017578125, -0.00418853759765625, -0.012409210205078125, -0.00012969970703125, -0.008548736572265625, -1.33514404296875e-05, 0.0, -0.0026092529296875, -0.0002187490026699379, 0.0, -0.0005359649658203125, -1.71661376953125e-05, 0.0, -0.0022430419921875, 0.0, -0.00023651123046875, -3.457069396972656e-05, -0.055777549743652344, 0.0, -0.5404014587402344, -0.11151313781738281, 0.0, 0.0, -0.6021518707275391, -1.33514404296875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.2711219787597656, -1.9073486328125e-06, -7.62939453125e-06, -0.16546213626861572, -0.014042731374502182, -1.6808467989903875e-05, -0.0018405914306640625, -1.52587890625e-05, -0.0014286041259765625, 0.0, -0.0018711090087890625, -1.0371208190917969e-05, -2.622604142743512e-06, -0.000102996826171875, -1.9073486328125e-06, -0.0022258758544921875, -0.0001316070556640625, -1.1444091796875e-05, -0.0068340301513671875, -0.6002893447875977, -1.71661376953125e-05, -1.9073486328125e-06, -0.5565600395202637, -1.106239676475525, -4.291534423828125e-06, -2.09808349609375e-05, -0.02288341522216797, -0.00434112548828125, -9.5367431640625e-06, -0.021918296813964844, -9.775161743164062e-06, 0.0, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Powermace", "<EOS>", 170, 48, 119, "Weapon", "Card", "<EOS>", 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Powermace", "<EOS>", 66, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 79, 103, "create_weapon", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 21, 119, "Weapon", "<EOS>", 171, 66, 63, 178, 159, "auras", "<EOS>", 19, 114, 172, 43, 96, 21, 119, "Aura", "<EOS>", 171, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 63, 43, 96, 33, 170, 43, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 43, 96, 21, 119, "Aura", "<EOS>", 171, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 63, 43, 96, 33, 170, 43, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 94, 21, 119, "Turn", "Ended", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 32, 170, 43, 94, 21, 119, "Weapon", "Health", "<EOS>", 43, 94, 21, 119, "Self", "Selector", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Name", "id": "WeaponCard"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Powermace"}, {"_type": "Template9"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template5"}], "func": {"_type": "Name", "id": "Weapon"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeHealth"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Template19"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeHealth"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Template19"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnEnded"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "WeaponHealth"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}]}, "arg": "auras"}]}}], "name": "create_weapon"}], "name": "Powermace"}, {"_type": "Template6_stmt_seq"}]}, "score": -6.7515153660135}], "gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n"}
{"beams": [{"inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.BEAST))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.001030396786518395, -0.0007925513782538474, -1.2516897186287679e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -7.62939453125e-06, -1.9073486328125e-06, -9.72747802734375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -1.33514404296875e-05, -3.814697265625e-06, -2.86102294921875e-05, -7.62939453125e-05, -8.7738037109375e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.00041321321623399854, -9.93011926766485e-05, -9.894321920000948e-06, -2.0265579223632812e-06, -0.0007038116455078125, -0.0005435943603515625, -0.0001392364501953125, -3.814697265625e-06, -3.814697265625e-06, -0.00021266937255859375, -4.172303670202382e-05, -0.018861889839172363, 0.0, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001068115234375, -4.768370445162873e-07, -0.00176239013671875, -0.0015850067138671875, -0.0003379583067726344, -1.3470632438838948e-05, -3.814697265625e-06, 0.0, 0.0, 0.0, -0.00023651123046875, -8.940672159951646e-06, -0.5400477647781372, -4.0531158447265625e-06, -0.0065402984619140625, -0.0076313018798828125, -1.52587890625e-05, -7.43865966796875e-05, -7.62939453125e-06, -2.288818359375e-05, -0.0028629302978515625, -6.103515625e-05, -0.000247955322265625, -0.001026153564453125, -0.00042724609375, -0.6315317153930664, -1.9073486328125e-06, -0.7059316635131836, -9.1552734375e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007880926132202148, -0.005271196365356445, -1.52587890625e-05, -0.0014743804931640625, -3.62396240234375e-05, -4.76837158203125e-05, -1.9073486328125e-06, -8.213283581426367e-05, -0.6529028415679932, -0.000164031982421875, -3.814697265625e-06, -0.00026702880859375, -0.07934379577636719, -2.09808349609375e-05, -0.0006313323974609375, -3.814697265625e-06, -0.0005340576171875, -6.67572021484375e-05, -5.7220458984375e-06, -0.0010852813720703125, -0.0023860931396484375, -9.5367431640625e-05, 0.0, -7.498232298530638e-05, -0.04254651069641113, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002498626708984375, -0.008272171020507812, -4.00543212890625e-05, -0.08857440948486328, -0.0005474090576171875, -0.00933837890625, -0.0028667449951171875, -0.01956939697265625, -8.7738037109375e-05, 0.0, -0.05064499378204346, -0.0006172657012939453, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, 0.0, -0.005305290222167969, -1.9073486328125e-06, -0.00032806396484375, -5.3882598876953125e-05, -0.5700235366821289, 0.0, 0.0, 0.0, -3.4332275390625e-05, 0.0, -1.9073486328125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.000701904296875, -9.5367431640625e-06, -4.386849468573928e-05, -2.3841830625315197e-06, -8.392333984375e-05, -0.0001811981201171875, -1.33514404296875e-05, -1.9073486328125e-06, -0.00075531005859375, -0.000274658203125, -4.76837158203125e-05, -2.288818359375e-05, -0.0008373260498046875, 0.0], "choice_history": [68, 118, 184, 76, 98, "Screwjank", "Clunker", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Screwjank", " ", "Clunker", "<EOS>", 57, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 179, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 170, 46, 114, 172, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 63, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 63, 65, 43, 96, 33, 170, 43, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 63, 58, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Screwjank Clunker"}, {"_type": "Template13"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Template8_expr_seq"}]}], "func": {"_type": "Template18"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template15"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "ScrewjankClunker"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.471540003970283}], "gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n"}
{"beams": [{"inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(<UNK>(), MinionSelector\n            (players=EnemyPlayer(), picker=RandomPicker())))\n", "score_history": [-3.24249267578125e-05, -3.814697265625e-06, -0.0001277923583984375, -2.47955322265625e-05, 0.0, -0.00384801859036088, -0.026054387912154198, -0.046636804938316345, -0.0001437566097592935, -3.814697265625e-06, -1.9073486328125e-05, -9.918212890625e-05, 0.0, -3.24249267578125e-05, -2.3841855067985307e-07, -9.536738616588991e-07, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.000438690185546875, -0.00026702880859375, -4.57763671875e-05, -7.2479248046875e-05, -4.38690185546875e-05, -0.0017625124892219901, -0.0002859830856323242, -0.012065589427947998, -0.00219118595123291, -0.0001316021371167153, -3.933906555175781e-06, -7.2479248046875e-05, -5.7220458984375e-06, -0.0010989500442519784, -1.2397729733493179e-05, -0.0002536773681640625, -0.0001926422119140625, 0.0, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0003911256790161133, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0005575418472290039, -5.960462772236497e-07, -4.9591064453125e-05, 0.0, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -6.31808916295995e-06, -0.14854168891906738, 0.0, 0.0, 0.0, -6.67572021484375e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.2874602361989673e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.0002651214599609375, -7.62939453125e-06, -5.7220458984375e-06, -0.000148773193359375, -0.00052642822265625, -0.0002841949462890625, -0.0010700225830078125, -0.0013637542724609375, -6.103515625e-05, 0.0, -0.02909684181213379, 0.0, -0.0018672943115234375, -9.72747802734375e-05, -1.33514404296875e-05, 0.0, -0.00024509429931640625, -2.407998726994265e-05, -0.000347137451171875, -7.62939453125e-06, -0.6466703414916992, 0.0, -3.814697265625e-06, -0.5513467788696289, -0.253213107585907, -0.0003986358642578125, -0.0010738372802734375, -0.000415802001953125, -0.019967079162597656, -3.24249267578125e-05, -0.019252777099609375, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -3.814697265625e-06, 0.0, -0.028787612915039062, -3.457069396972656e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.05718994140625e-05, -1.311301275563892e-06, -1.71661376953125e-05, -5.340576171875e-05, -1.33514404296875e-05, 0.0, -0.025928137823939323, -0.000766592682339251, -1.2516963579400908e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "<UNK>", "Old", "Shredder", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", 50, 124, "8", "<EOS>", 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 58, 60, 178, 159, "deathrattle", "<EOS>", 16, 96, 21, 119, "Deathrattle", "<EOS>", 171, 43, 94, 21, 119, "<UNK>", "<EOS>", 43, 95, 33, 179, 159, "players", "<EOS>", 16, 94, 21, 119, "Enemy", "Player", "<EOS>", 159, "picker", "<EOS>", 16, 94, 21, 119, "Random", "Picker", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "<UNK> Old Shredder"}, {"_type": "Num", "n": 8}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template15"}, {"_type": "Template17"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "<UNK>"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, "arg": "picker"}], "func": {"_type": "Template19"}}], "func": {"_type": "Name", "id": "Deathrattle"}}, "arg": "deathrattle"}]}}], "name": "create_minion"}], "name": "<UNK>OldShredder"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.8293263474104364}], "gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n"}
{"beams": [{"inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.009428939782083035, -2.574904283392243e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -5.340576171875e-05, -2.3841855067985307e-07, -3.576278118089249e-07, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0007686614990234375, -5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0015087127685546875, -1.33514404296875e-05, -0.0011749267578125, -1.33514404296875e-05, -5.7220458984375e-06, -6.5565000113565475e-06, 0.0, -0.0004634857177734375, -6.4849853515625e-05, -0.0011532283388078213, -2.5510715204291046e-05, -0.000186920166015625, -0.0002079010009765625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.641315460205078e-05, -2.1457672119140625e-06, -0.00039887428283691406, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0074310302734375, 0.0, -8.0108642578125e-05, -0.000331878662109375, -0.0001506805419921875, -0.0047702789306640625, -1.1444091796875e-05, -0.21539783477783203, -0.000396728515625, -9.5367431640625e-06, -0.02959355339407921, -0.004819166846573353, -4.9948692321777344e-05, -0.06735038757324219, -4.38690185546875e-05, -0.001674652099609375, 0.0, 0.0, -0.00041662913281470537, -0.0007473230361938477, -4.2795938497874886e-05, -0.0030813217163085938, -0.000316619873046875, -0.0034074783325195312, -1.9073486328125e-06, -0.0001735687255859375, 0.0, -0.0003414154052734375, 0.0, -0.002105712890625, -5.245205102255568e-05, -0.018878579139709473, -1.6689286894688848e-06, -4.1961669921875e-05, -0.03126657009124756, -1.3947477782494389e-05, -4.1961669921875e-05, -4.76837158203125e-05, -0.03978419303894043, -8.571144280722365e-05, -0.000194549560546875, -0.00074005126953125, -3.814697265625e-06, 0.0, -0.001354217529296875, -9.655952453613281e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.121924626408145e-05, -1.0728830375228426e-06, -0.0061893463134765625, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001239776611328125, -6.29425048828125e-05, -0.000240325927734375, -0.00037384033203125, -0.00119781494140625, -1.33514404296875e-05], "choice_history": [68, 118, 184, 76, 98, "Toshley", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Toshley", "<EOS>", 50, 124, "6", "<EOS>", 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 21, 119, "Add", "Card", "<EOS>", 170, 43, 95, 21, 119, "Card", "Query", "<EOS>", 179, 159, "source", "<EOS>", 13, 89, 21, 119, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 159, "source_list", "<EOS>", 21, 119, "<UNK>", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 58, 60, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Toshley"}, {"_type": "Num", "n": 6}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_SOURCE"}, "attr": "LIST"}, "arg": "source"}, {"_type": "keyword", "value": {"_type": "Name", "id": "<UNK>"}, "arg": "source_list"}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template15"}, {"_type": "Template17"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "Toshley"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.45931403809279914}], "gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n"}
{"beams": [{"inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(2), WeaponSelector())])\n", "score_history": [-7.62939453125e-06, 0.0, -8.392333984375e-05, -3.814697265625e-06, 0.0, -3.1351610232377425e-05, -1.1205629562027752e-05, 0.0, 0.0, -7.62939453125e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0004596710205078125, -1.71661376953125e-05, -0.0031414031982421875, -5.7220458984375e-06, -2.86102294921875e-05, -3.099436753473128e-06, 0.0, -0.015478134155273438, -0.000308990478515625, 0.0, -1.9073486328125e-06, 0.0, -1.1563271073100623e-05, -0.0026235580444335938, -0.1438390016555786, -1.52587890625e-05, -0.0001506805419921875, -3.0517578125e-05, 0.0, -0.00015842914581298828, -1.6689286894688848e-06, -5.7220458984375e-06, -3.814697265625e-06, 0.0, 0.0, -0.00016021728515625, -1.537788011773955e-05, -0.00403594970703125, 0.0, 0.0, 0.0, -1.1444091796875e-05, 0.0, 0.0, -9.1552734375e-05, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.000631213013548404, -1.5497195136049413e-06, -3.4332275390625e-05, -0.000392913818359375, -7.43865966796875e-05, -1.33514404296875e-05, -7.82012939453125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -0.0004329681396484375, -9.5367431640625e-06, -0.008414268493652344, -0.0002765655517578125, -0.10246358811855316, -1.561634780955501e-05, -0.00152587890625, -4.9591064453125e-05, -0.21006488800048828, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -0.0004845857620239258, -5.1379160140641034e-05, -9.5367431640625e-05, -1.9073486328125e-06, -0.0016632080078125, -7.62939453125e-06, 0.0, -0.001071805483661592, -0.0008713005809113383, -3.814697265625e-06, 0.0, -0.6173257827758789, -1.9073486328125e-06, -0.0019588470458984375, -1.52587890625e-05, -7.62939453125e-06, -0.6464827060699463, -0.0005815029144287109, 0.0, -0.00020599365234375, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Warbot", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Warbot", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 53, 178, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 64, 66, 178, 159, "enrage", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Aura", "<EOS>", 171, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 63, 43, 94, 21, 119, "Weapon", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Warbot"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template9"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Template8_expr_seq"}]}, "arg": "enrage"}]}}], "name": "create_minion"}], "name": "Warbot"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.7662471321062867}], "gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n"}
{"beams": [{"inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, effects=[Effect(TurnEnded(IsMinion(), ActionTag\n            (<UNK>(Hasdeck(IsMinion()), value=0), PlayerSelector())),\n            ActionTag(<UNK>(3, query=CardQuery(conditions=[IsType(\n            MINION_TYPE.MECH), BothPlayer(), IsMinion()])), PlayerSelector()))]\n            )\n", "score_history": [0.0, -7.62939453125e-06, -2.86102294921875e-05, -1.1444091796875e-05, 0.0, -1.1920922133867862e-06, -3.2782365451566875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0021686553955078125, -3.814697265625e-06, -0.00051116943359375, -2.288818359375e-05, -1.9073486328125e-06, -1.5497195136049413e-06, 0.0, -0.005705833435058594, -0.000102996826171875, -0.0004978179931640625, 0.0, 0.0, 0.0, -5.173683166503906e-05, -2.0265579223632812e-06, -0.0019073486328125, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0018023120937868953, -2.264974000354414e-06, -4.00543212890625e-05, -9.918212890625e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.000244140625, -0.0001850128173828125, -3.814697265625e-06, -9.5367431640625e-06, -0.0005779266357421875, -1.9073486328125e-06, -0.00010275332169840112, -0.00011872562754433602, -0.0023174285888671875, -5.7220458984375e-06, -0.09542715549468994, -1.1920928244535389e-07, -4.9591064453125e-05, -1.9073486328125e-06, -0.00531005859375, -7.62939453125e-06, -1.71661376953125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0006275177001953125, -2.3841855067985307e-07, -5.7220458984375e-06, -1.9073486328125e-06, -0.2680215835571289, -2.09808349609375e-05, -2.09808349609375e-05, -0.21625471115112305, -0.010587692260742188, 0.0, -0.1560993194580078, -2.47955322265625e-05, -0.1307077407836914, 0.0, -0.000148773193359375, -0.6724605560302734, -0.9049766659736633, -9.548664093017578e-05, -4.76837158203125e-05, -0.06775665283203125, -0.000102996826171875, 0.0, -0.09315681457519531, -0.00010657309758244082, -2.3841855067985307e-07, -0.000225067138671875, -2.288818359375e-05, -0.110992431640625, -0.0007228851318359375, -1.9073486328125e-06, -0.4311279058456421, -0.007318262476474047, -2.288818359375e-05, -0.3202943801879883, -0.0025653839111328125, -0.000209808349609375, 0.0, -0.6136854887008667, -0.5145506858825684, -1.33514404296875e-05, -0.00119781494140625, -0.7348842620849609, -0.0075397491455078125, 0.0, 0.0, -0.23985646665096283, -0.00959308072924614, -2.7179714379599318e-05, -0.0001125335693359375, 0.0, -0.23400497436523438, -2.1457672119140625e-06, -0.16715621948242188, -3.814697265625e-06, -0.00011444011761341244, 0.0, -0.0038604736328125, -0.021017074584960938, -1.1444091796875e-05, 0.0, -0.06926250457763672, -2.86102294921875e-05, 0.0, -0.0017681121826171875, -3.24249267578125e-05, -9.5367431640625e-06, 0.0, -0.0012826919555664062, -1.9311904907226562e-05, -1.1920928244535389e-07, -0.000782012939453125, -6.67572021484375e-05, -0.11120319366455078, -0.0001220703125, 0.0, -0.2748910188674927, -0.0014003014657646418, -1.52587890625e-05, -0.4479494094848633, -0.0003147125244140625, 0.0, -0.028696060180664062, -0.000186920166015625, -0.006694793701171875, -0.4499645233154297, -2.09808349609375e-05, 0.0, -0.004679560661315918, -0.008434295654296875, -1.71661376953125e-05, -2.6702880859375e-05, -9.72747802734375e-05, -0.03283405303955078, -1.5497195136049413e-06, -0.00016021728515625, -1.9073486328125e-06, -0.06632614135742188, -1.9073486328125e-06, -0.009522438049316406, -1.9073486328125e-06, 0.0, -0.0554659366607666, -0.5058672428131104, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.03705024719238281, 0.0, -0.007747650146484375, -4.887576324108522e-06, -0.6111660003662109, 0.0, -0.03000640869140625, -0.5248641967773438, -1.9073486328125e-05, 0.0, -0.850652813911438, -4.816052023670636e-05, -2.0265579223632812e-06, -0.0960845947265625, -0.12244415283203125, -1.52587890625e-05, 0.0, -0.5379650592803955, -0.016464829444885254, -1.9073486328125e-06, -0.0002880096435546875, -0.012725830078125, -1.9073486328125e-06, 0.0, -0.00353240966796875, -2.1457672119140625e-05, -4.768370445162873e-07, -0.000408172607421875, 0.0], "choice_history": [68, 118, 184, 76, 98, "Deathlord", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Deathlord", "<EOS>", 66, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 63, 50, 124, "8", "<EOS>", 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 96, 21, 119, "Turn", "Ended", "<EOS>", 171, 43, 94, 21, 119, "Is", "Minion", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 97, 21, 119, "<UNK>", "<EOS>", 170, 43, 96, 21, 119, "Has", "deck", "<EOS>", 170, 43, 94, 21, 119, "Is", "Minion", "<EOS>", 178, 159, "value", "<EOS>", 23, 124, "0", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 97, 21, 119, "<UNK>", "<EOS>", 170, 66, 178, 159, "query", "<EOS>", 16, 95, 21, 119, "Card", "Query", "<EOS>", 178, 159, "conditions", "<EOS>", 19, 114, 172, 43, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 43, 94, 21, 119, "Both", "Player", "<EOS>", 43, 94, 21, 119, "Is", "Minion", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Deathlord"}, {"_type": "Template9"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Num", "n": 8}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}], "func": {"_type": "Name", "id": "Hasdeck"}}], "func": {"_type": "Name", "id": "<UNK>"}, "keywords": [{"_type": "keyword", "value": {"_type": "Num", "n": 0}, "arg": "value"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "TurnEnded"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "<UNK>"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MECH"}], "func": {"_type": "Name", "id": "IsType"}}, {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}, {"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}]}, "arg": "conditions"}], "func": {"_type": "Name", "id": "CardQuery"}}, "arg": "query"}]}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "Deathlord"}, {"_type": "Template6_stmt_seq"}]}, "score": -10.989546938534247}], "gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n"}
{"beams": [{"inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(GiveAura(AuraUntil(\n            ManaChange(-3), CardSelector(condition=IsMinion()), IsMinion())\n            ), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n", "score_history": [-3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0018880432471632957, -5.519324986380525e-05, -1.7404405298293568e-05, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.007720947265625, -7.05718994140625e-05, -0.000102996826171875, -0.0004215240478515625, -1.9073486328125e-06, -0.0008783158264122903, -2.9563881980720907e-05, -1.3589766240329482e-05, 0.0, -8.0108642578125e-05, -7.43865966796875e-05, -4.76837158203125e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.23463617265224457, 0.0, -7.05718994140625e-05, -1.52587890625e-05, -4.9591064453125e-05, -5.7220458984375e-06, -3.814697265625e-05, -0.0014209747314453125, -0.0002956390380859375, 0.0, -0.18735843896865845, -0.05391182005405426, -3.302048935438506e-05, -8.0108642578125e-05, -0.008443832397460938, -7.43865966796875e-05, -3.814697265625e-06, 0.0, -0.07560372352600098, -0.3370387554168701, -0.00014162060688249767, -0.03662109375, 0.0, -0.01241302490234375, -1.9073486328125e-06, -1.33514404296875e-05, -0.029306042939424515, -0.00343297328799963, -1.7285345165873878e-05, -3.814697265625e-06, -0.3295412063598633, -5.340576171875e-05, -0.000537872314453125, -0.3519916534423828, -4.38690185546875e-05, -0.00046539306640625, 0.0, -0.0001163482666015625, -0.0008044723654165864, -0.00037384033203125, 0.0, -2.86102294921875e-05, 0.0, -0.0047321319580078125, 0.0, -1.1444091796875e-05, -0.014532089233398438, -1.9073486328125e-06, 0.0, -0.0046617817133665085, -0.18469953536987305, -5.53131103515625e-05, -0.0001850128173828125, -0.00054168701171875, 0.0, -4.57763671875e-05, -0.26209557056427, -0.06627687811851501, -6.520748138427734e-05, -0.010393142700195312, -0.0043487548828125, -3.62396240234375e-05, -3.814697265625e-06, -0.005449771881103516, -1.1682510375976562e-05, -7.152555099310121e-07, -3.814697265625e-06, 0.0, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -4.291534423828125e-06, -3.099440846199286e-06, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00018310546875, -2.6702880859375e-05, -1.1444091796875e-05, -0.000698089599609375, -4.9591064453125e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Nerub'ar", "Weblord", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Nerub'ar", " ", "Weblord", "<EOS>", 63, 61, 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 21, 119, "Give", "Aura", "<EOS>", 170, 43, 96, 21, 119, "Aura", "Until", "<EOS>", 172, 43, 96, 21, 119, "Mana", "Change", "<EOS>", 170, 67, 154, 85, 37, 43, 95, 21, 119, "Card", "Selector", "<EOS>", 178, 159, "condition", "<EOS>", 16, 94, 21, 119, "Is", "Minion", "<EOS>", 43, 94, 21, 119, "Is", "Minion", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 64, 57, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nerub'ar Weblord"}, {"_type": "Template5"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "UnaryOp", "operand": {"_type": "Template9"}, "op": {"_type": "USub"}}], "func": {"_type": "Name", "id": "ManaChange"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}, "arg": "condition"}], "func": {"_type": "Name", "id": "CardSelector"}}, {"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}], "func": {"_type": "Name", "id": "AuraUntil"}}], "func": {"_type": "Name", "id": "GiveAura"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template13"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "Nerub'arWeblord"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.235762736317156}], "gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n"}
{"beams": [{"inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, taunt=True)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.004638507030904293, -0.011258577927947044, -1.3708974620385561e-05, 0.0, 0.0, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.4305104514278355e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, -0.007740020751953125, -1.9073486328125e-06, -0.0135955810546875, -3.814697265625e-06, -3.814697265625e-06, -0.00012397044338285923, -0.0005067586316727102, -0.0036891698837280273, -1.5735626220703125e-05, -0.0001087188720703125, -0.0002918243408203125, -4.38690185546875e-05, -5.7220458984375e-06, -7.62939453125e-06, -4.0650356822879985e-05, -1.1920928244535389e-07, 0.0, -0.000148773193359375, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -3.3020547562045977e-05, -9.536697689327411e-06, -3.62396240234375e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0010528564453125, -1.33514404296875e-05, -3.62396240234375e-05, -0.00089263916015625, -0.0019636154174804688, -5.7220458984375e-06, -0.00015090756642166525, -5.7220440794480965e-06, -0.001689910888671875, -1.33514404296875e-05, -0.11902213096618652, -5.960462772236497e-07, -0.0001659393310546875, -9.5367431640625e-05, -0.14896690845489502, -2.8848648071289062e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Spectral", "Knight", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Spectral", " ", "Knight", "<EOS>", 58, 61, 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 57, 50, 124, "6", "<EOS>", 178, 159, "taunt", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spectral Knight"}, {"_type": "Template15"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Num", "n": 6}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "taunt"}]}}], "name": "create_minion"}], "name": "SpectralKnight"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.3165223899592817}], "gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n"}
{"beams": [{"inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Silence()),\n            MinionSelector(condition=IsMinion())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [0.0, -7.82012939453125e-05, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.02389676868915558, -0.0040167891420423985, -4.6132929128361866e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -4.410743713378906e-06, -3.576278118089249e-07, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001277923583984375, -1.71661376953125e-05, -2.09808349609375e-05, -0.000209808349609375, -1.9073486328125e-06, -0.0010715939570218325, -4.3272957555018365e-05, -9.65590606938349e-06, -1.1920928244535389e-07, -0.0032634735107421875, -0.0057621002197265625, -3.4332275390625e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.0001239776611328125, -1.1920928244535389e-07, -6.866455078125e-05, -1.9073486328125e-06, -0.00012063980102539062, 0.0, -1.33514404296875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -0.18016433715820312, -7.2479248046875e-05, -0.004322052001953125, -0.20198822021484375, -0.18615150451660156, -0.0019989013671875, -0.11534881591796875, -5.7220458984375e-06, 0.0, -0.11273448169231415, -0.003190424991771579, 0.0, -0.0034618377685546875, -0.0001430511474609375, -0.05109214782714844, -1.9073486328125e-06, -0.7841581106185913, -1.1920928244535389e-07, -0.0001430511474609375, -0.0003604888916015625, -1.9073486328125e-06, 0.0, -0.8967671394348145, -0.02478611469268799, -8.404254913330078e-05, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.503394853192731e-06, -1.4305104514278355e-06, -7.62939453125e-06, -5.53131103515625e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.0001430511474609375, -0.0001354217529296875, -5.91278076171875e-05, -1.1444091796875e-05, -0.00014495849609375, -3.814697265625e-06], "choice_history": [68, 118, 184, 76, 98, "Wailing", "Soul", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Wailing", " ", "Soul", "<EOS>", 57, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 170, 43, 94, 21, 119, "Silence", "<EOS>", 43, 95, 33, 178, 159, "condition", "<EOS>", 16, 94, 21, 119, "Is", "Minion", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 66, 58, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Wailing Soul"}, {"_type": "Template13"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Silence"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}, "arg": "condition"}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template15"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "WailingSoul"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.606709678926144}], "gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}
{"beams": [{"inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.006848085671663284, -0.00047472462756559253, -1.0728830375228426e-06, -1.9073486328125e-06, -2.86102294921875e-05, -7.62939453125e-06, 0.0, 0.0, -3.218649908376392e-06, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00017547607421875, -4.38690185546875e-05, -8.0108642578125e-05, -1.9073486328125e-05, -3.814697265625e-06, -2.4556857169955038e-05, -2.717968527576886e-05, -6.079655122448457e-06, 0.0, -4.00543212890625e-05, -0.0005359649658203125, -4.00543212890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -5.233287811279297e-05, -1.1920928244535389e-07, 0.0, -0.00020599365234375, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -3.71932219422888e-05, -8.344646857949556e-07, -0.0002422332763671875, -6.29425048828125e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0001125335693359375, -5.7220458984375e-05, -7.62939453125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.16061687469482422, -1.9073486328125e-06, -0.37710198760032654, -0.0004293005040381104, -0.020511627197265625, -2.47955322265625e-05, -0.017719268798828125, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0008144378662109375, -5.125993993715383e-06, -0.0001811981201171875, -1.9073486328125e-06, -0.000377655029296875, -5.7220458984375e-06, -1.9073486328125e-06, -0.00038383377250283957, -0.0012713654432445765, 0.0, -1.9073486328125e-06, -0.008999824523925781, 0.0, -0.0043697357177734375, -1.52587890625e-05, 0.0, -0.3224791884422302, -1.597404116182588e-05, 0.0, -0.0046482086181640625, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Amani", "Berserker", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Amani", " ", "Berserker", "<EOS>", 63, 61, 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 63, 66, 178, 159, "enrage", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Aura", "<EOS>", 171, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 66, 43, 94, 21, 119, "Self", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Amani Berserker"}, {"_type": "Template5"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template9"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "ChangeAttack"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Template8_expr_seq"}]}, "arg": "enrage"}]}}], "name": "create_minion"}], "name": "AmaniBerserker"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.9292855838261715}], "gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n"}
{"beams": [{"inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(AddCard(CardQuery(conditions=[IsMinion()])),\n            PlayerSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.018473394215106964, -0.00040177456685341895, -8.022463589441031e-05, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.152555099310121e-07, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001983642578125, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.9591064453125e-05, -1.1444091796875e-05, -0.000118255615234375, -2.09808349609375e-05, 0.0, -3.7431636883411556e-05, -3.5762648622039706e-05, -1.3351424058782868e-05, -4.768371127283899e-06, -5.340576171875e-05, -0.0001659393310546875, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.0001599787501618266, -0.0003001315926667303, -0.03243899345397949, -2.0265579223632812e-06, -0.0004482269287109375, 0.0, 0.0, 0.0, -4.00543212890625e-05, 0.0, -0.0003299713134765625, -1.9073486328125e-06, 0.0, 0.0, -4.1961669921875e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, -1.52587890625e-05, 0.0, -1.5258781786542386e-05, -5.960462772236497e-07, -5.14984130859375e-05, -8.0108642578125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.00014495849609375, -0.000232696533203125, -9.1552734375e-05, -0.0003299713134765625, -0.0010852813720703125, -1.9073486328125e-05, 0.0, -0.005416989326477051, -3.576278118089249e-07, -9.5367431640625e-05, -3.814697265625e-06, -0.008129119873046875, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00019848346710205078, -5.1856040954589844e-05, -9.5367431640625e-06, -9.1552734375e-05, -0.10750675201416016, -1.9073486328125e-06, -4.57763671875e-05, -0.001744985580444336, -0.0028368234634399414, -7.62939453125e-06, -0.45270252227783203, -5.7220458984375e-06, -0.004634857177734375, -3.4332275390625e-05, -1.1444091796875e-05, -0.1455671787261963, -0.00772712891921401, -0.0022029876708984375, -2.47955322265625e-05, -0.2841672897338867, -7.43865966796875e-05, -0.0028934478759765625, -0.0001049041748046875, -0.0001773834228515625, -9.5367431640625e-05, -0.00011098384857177734, -7.62939453125e-06, -2.86102294921875e-05, -0.0001049041748046875, -0.00046539306640625, -0.06090068817138672, -5.7220458984375e-06, -0.16963182389736176, -0.00018763175467029214, -0.00034165382385253906, -1.33514404296875e-05, -6.29425048828125e-05, -0.2640810012817383, -1.9073486328125e-06, -7.62939453125e-06, -0.0029959753155708313, -0.001897692563943565, -5.376204353524372e-05, -0.002960205078125, -1.9073486328125e-06, -0.2985267639160156, -1.2040065485052764e-05, -0.00110626220703125, -2.86102294921875e-05, -0.5275106430053711, -4.38690185546875e-05, -0.04894828796386719, -1.9073486328125e-06, 0.0, -0.0005908010643906891, -0.19769084453582764, -7.62939453125e-06, -0.0033512115478515625, -3.814697265625e-06, -5.7220458984375e-06, 0.0, 0.0, -0.0050084590911865234, -0.00040471553802490234, -2.0265579223632812e-06, -0.001735687255859375, 0.0], "choice_history": [68, 118, 184, 76, 98, "Archmage", "Antonidas", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Archmage", " ", "Antonidas", "<EOS>", 60, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 58, 60, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 96, 21, 119, "Spell", "Cast", "<EOS>", 170, 43, 96, 21, 119, "Mana", "Cost", "<EOS>", 170, 64, 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 21, 119, "Add", "Card", "<EOS>", 170, 43, 95, 21, 119, "Card", "Query", "<EOS>", 178, 159, "conditions", "<EOS>", 19, 114, 171, 43, 94, 21, 119, "Is", "Minion", "<EOS>", 65, 43, 94, 21, 119, "Player", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Archmage Antonidas"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "LEGENDARY"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template15"}, {"_type": "Template17"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template7"}], "func": {"_type": "Name", "id": "ManaCost"}}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Name", "id": "IsMinion"}}, {"_type": "Template8_expr_seq"}]}, "arg": "conditions"}], "func": {"_type": "Name", "id": "CardQuery"}}], "func": {"_type": "Name", "id": "AddCard"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "ArchmageAntonidas"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.671041464328482}], "gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n"}
{"beams": [{"inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [0.0, -3.814697265625e-06, -2.47955322265625e-05, -0.0001354217529296875, -7.62939453125e-06, -2.7418120680522406e-06, -2.264974000354414e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0007801055908203125, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -3.4332275390625e-05, -2.86102294921875e-05, -6.67572021484375e-05, -3.0517578125e-05, -1.1444091796875e-05, -5.7220458984375e-06, -0.01975250244140625, -7.62939453125e-06, -0.05405616760253906, -7.62939453125e-06, 0.0, -2.7418097943154862e-06, -4.172325134277344e-06, -8.58306884765625e-05, -0.0018367767333984375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0007662773132324219, -2.205366217822302e-05, -1.063529133796692, 0.0, -0.36563682556152344, -0.0010242462158203125, -7.43865966796875e-05, -0.0016803741455078125, 0.0, -1.9073486328125e-06, 0.0, -6.103515625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002079010009765625, 0.0, -7.62939453125e-05, -1.1801719665527344e-05, -0.0076885223388671875, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -0.0002231597900390625, 0.0, -1.9073486328125e-06, -3.62396240234375e-05, -4.00543212890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.000110626220703125, -0.0001049041748046875, -1.9073486328125e-05, -4.768370445162873e-07, -0.0036792755126953125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.1444091796875e-05, -0.0002193450927734375, 0.0, -0.00014674632984679192, -2.2649765014648438e-06, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -8.344646857949556e-07, -0.0002899169921875, -1.9073486328125e-06, -6.67572021484375e-05, -0.0025882720947265625, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0003814697265625, -0.00023615350073669106, -3.099440846199286e-06, -0.06862545013427734, -0.00014603137969970703, -3.814697265625e-06, -0.5201625823974609, 0.0], "choice_history": [68, 118, 184, 76, 98, "Bananas", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Bananas", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 53, 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 184, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "change_attack", "<EOS>", 170, 64, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Bananas"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template7"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "change_attack"}}}], "name": "use"}], "name": "Bananas"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.1153979296723193}], "gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n"}
{"beams": [{"inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(Null)\n", "score_history": [-0.0002613067626953125, -3.814697265625e-06, -9.34600830078125e-05, -4.1961669921875e-05, -9.72747802734375e-05, -0.00021920185827184469, -0.00046219202340580523, -2.264974000354414e-06, -1.1444091796875e-05, -0.0001201629638671875, -0.0019378662109375, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073468138230965e-06, -2.622604142743512e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -4.57763671875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00145721435546875, -3.814697265625e-06, -0.0001163482666015625, -3.814697265625e-06, -1.71661376953125e-05, -1.5973946574376896e-05, -3.945793287130073e-05, -1.77621805050876e-05, -1.1801719665527344e-05, -0.0001087188720703125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -5.853175753145479e-05, -0.00015091216482687742, -0.455676794052124, -5.960462772236497e-07, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.000179290771484375, -4.768370445162873e-07, -1.33514404296875e-05, -1.9073486328125e-06, -0.0005412101745605469, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00011110305786132812, -2.3841855067985307e-07, -2.6941299438476562e-05, -2.1457672119140625e-06, -0.010242699645459652, -6.139278411865234e-05, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -1.1920928244535389e-07, -9.34600830078125e-05, -3.4332275390625e-05, -3.3020973205566406e-05, -1.5497195136049413e-06, -0.3270883560180664, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.0003679382207337767, -1.0132780516869389e-05, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -2.682209014892578e-05, -2.0265579223632812e-06, -0.008411407470703125, -5.7220458984375e-06, -3.814697265625e-06, -0.002330780029296875, 0.0, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00025177001953125, -0.000184412463568151, -3.3378546504536644e-06, -0.47758734226226807, -5.412101745605469e-05, -0.00020599365234375, -0.15708160400390625, -0.000858306884765625, -0.0015766620635986328, 0.0, -3.814697265625e-06], "choice_history": [68, 118, 184, 76, 98, "Blessed", "Champion", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Blessed", " ", "Champion", "<EOS>", 58, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 184, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "die", "<EOS>", 170, 49, 121, "Null", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blessed Champion"}, {"_type": "Template15"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "die"}}}], "name": "use"}], "name": "BlessedChampion"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.4487175143706352}], "gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n"}
{"beams": [{"inferred_code": "class CabalShadow(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Give(Attack()),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [-3.24249267578125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0035499802324920893, -0.08394183963537216, -1.4305104514278355e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002040863037109375, -8.392333984375e-05, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -0.002054817508906126, -8.952616190072149e-05, -0.0002754925808403641, -3.063678741455078e-05, -8.20159912109375e-05, -3.814697265625e-06, -0.000698327086865902, -1.1920878932869527e-05, -0.00115966796875, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -0.0004105567932128906, -0.9062290191650391, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.000152587890625, 0.0, -0.00027489662170410156, -1.9073486328125e-06, -0.0016574859619140625, 0.0, -0.06721198558807373, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0001049041748046875, -7.62939453125e-06, -0.059841156005859375, -0.13909149169921875, -3.814697265625e-06, -0.04012489318847656, -0.03685951232910156, -3.814697265625e-06, -1.71661376953125e-05, -0.09925632178783417, -0.07853841781616211, -3.814697265625e-06, -0.3893470764160156, -0.16751670837402344, -1.9073486328125e-06, -0.05252349376678467, -1.3709068298339844e-05, 0.0, -3.814697265625e-06, 0.0, -8.7738037109375e-05, 0.0, -4.1961669921875e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -7.152543730626348e-06, -7.033334895822918e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.36452484130859375, -7.62939453125e-06, -3.814697265625e-06, -0.000598907470703125, -0.000255584716796875, 0.0], "choice_history": [68, 118, 184, 76, 98, "Cabal", "Shadow", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Cabal", " ", "Shadow", "<EOS>", 50, 124, "6", "<EOS>", 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 170, 43, 94, 21, 119, "Attack", "<EOS>", 43, 94, 21, 119, "Self", "Selector", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 57, 58, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cabal Shadow"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Attack"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Template15"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "CabalShadow"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.4971517329634025}], "gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}
{"beams": [{"inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.add_buff(Buff(Frozen()))\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -0.00042724609375, -4.1961669921875e-05, -7.2479248046875e-05, -0.00010668672621250153, -0.0006096347351558506, -0.00021050185023341328, -0.00023398135090246797, -3.814697265625e-06, -9.1552734375e-05, -0.0028629302978515625, -5.7220458984375e-06, -3.814697265625e-06, -2.9802317840221804e-06, 0.0, 0.0, -1.9073486328125e-05, 0.0, -0.0004291534423828125, -1.1444091796875e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.047393798828125, 0.0, -0.0002593994140625, -1.1444091796875e-05, -1.9073486328125e-06, -4.207999518257566e-05, -1.5735626220703125e-05, -0.000247955322265625, -0.0003936290740966797, -3.099440846199286e-06, -1.1920928244535389e-07, -0.00103759765625, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -3.933906555175781e-06, -7.975101470947266e-05, -0.012760162353515625, -1.9073486328125e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.000194549560546875, 0.0, -1.9073486328125e-06, 0.0, 0.0, 0.0, 0.0, 0.0, -2.86102294921875e-05, 0.0, -2.6702880859375e-05, -2.0265579223632812e-06, -0.22649550437927246, -2.0265579223632812e-06, 0.0, -4.00543212890625e-05, -6.29425048828125e-05, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, 0.0, -5.7220458984375e-06, -1.3470649719238281e-05, -2.384185791015625e-06, -0.11926078796386719, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0003032684326171875, -7.62939453125e-06, 0.0, 0.0, -5.626668280456215e-05, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -4.410743713378906e-06, -0.0029659271240234375, 0.0, -7.62939453125e-06, -7.43865966796875e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.005588531494140625, -3.9458274841308594e-05, -3.576278118089249e-07, -0.2757667303085327, -2.4318689611391164e-05, -3.4332275390625e-05, -0.007966995239257812, -7.05718994140625e-05, -1.9073486328125e-05, -0.000469207763671875, -7.2479248046875e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0020599365234375, -1.52587890625e-05, -0.035132408142089844, -0.0002205371856689453, -3.576278118089249e-07, -0.33600616455078125, -1.9073486328125e-06, -1.52587890625e-05, -0.000141143798828125, -6.67572021484375e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.000213623046875, -5.7220458984375e-06, -3.0517578125e-05, -1.33514404296875e-05, -0.16708946228027344, -0.0002574920654296875, -3.814697265625e-06, -0.05892916023731232, -0.0011394841130822897, -5.7220458984375e-06], "choice_history": [68, 118, 184, 76, 98, "Cone", "Of", "Cold", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Cone", " ", "of", " ", "Cold", "<EOS>", 57, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 53, 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "die", "<EOS>", 170, 55, 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "add_buff", "<EOS>", 170, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 94, 21, 119, "Frozen", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Cone of Cold"}, {"_type": "Template13"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "die"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Frozen"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "add_buff"}}}], "name": "use"}], "name": "ConeOfCold"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.3086660906670815}], "gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n"}
{"beams": [{"inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-0.000110626220703125, -1.71661376953125e-05, -1.1444091796875e-05, -1.33514404296875e-05, 0.0, -0.00015508364595007151, -0.0010622608242556453, -0.0005661268951371312, -0.00010728480265242979, -1.9073486328125e-06, -1.9073486328125e-06, -0.0006999969482421875, 0.0, 0.0, -2.264974000354414e-06, -3.576278118089249e-07, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.000110626220703125, -3.0517578125e-05, -5.340576171875e-05, -3.0517578125e-05, -5.7220458984375e-06, -0.0003687669523060322, -2.7894973754882812e-05, -0.00018905512115452439, -0.0012794731883332133, -2.90866428258596e-05, -3.933906555175781e-06, -0.00080108642578125, -0.000293731689453125, -8.58306884765625e-05, 0.0, -5.7220458984375e-06, -2.86102294921875e-05, -2.872943878173828e-05, -1.9073486328125e-06, -0.0016351938247680664, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -0.0002840757369995117, -1.9073486328125e-06, -3.4332275390625e-05, -2.6702880859375e-05, -9.1552734375e-05, -0.11980247497558594, -0.0002880096435546875, -0.00141143798828125, -0.001873016357421875, -0.0006694793701171875, -0.0220947265625, -0.0001010894775390625, -0.008892059326171875, -3.814697265625e-06, -4.76837158203125e-05, -2.288818359375e-05, 0.0, -0.0008321361383423209, -2.6106834411621094e-05, -7.62939453125e-06, -7.62939453125e-06, -0.00603485107421875, -2.86102294921875e-05, 0.0, -0.010324507020413876, -0.03577685356140137, -9.5367431640625e-06, -0.000110626220703125, -0.4815816879272461, -0.0055789947509765625, -1.71661376953125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -8.869170414982364e-05, -1.71661376953125e-05, -4.38690185546875e-05, -3.814697265625e-06, -0.019405364990234375, -4.76837158203125e-05, 0.0, -0.0035034390166401863, -0.017951607704162598, -3.814697265625e-06, -9.34600830078125e-05, -0.488922119140625, -0.010700225830078125, -4.76837158203125e-05, -0.7859115600585938, -0.0001430511474609375, -0.011091232299804688, -7.62939453125e-06, -0.19741106033325195, -1.4305104514278355e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, 0.0, -0.02217743545770645, -0.0031207790598273277, -3.731212200364098e-05, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -3.0517578125e-05, -5.7220458984375e-06, -8.82148651726311e-06, -5.602820692729438e-06, -7.62939453125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -1.52587890625e-05, -0.0022296905517578125, -3.814697265625e-06, -1.71661376953125e-05, -0.0002651214599609375, -0.000217437744140625, 0.0], "choice_history": [68, 118, 184, 76, 98, "Defender", "Of", "Argus", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Defender", " ", "of", " ", "Argus", "<EOS>", 57, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 170, 46, 114, 172, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 63, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 63, 65, 43, 95, 33, 178, 159, "picker", "<EOS>", 16, 94, 21, 119, "User", "Picker", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 63, 66, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Defender of Argus"}, {"_type": "Template13"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Template8_expr_seq"}]}], "func": {"_type": "Template18"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}, "arg": "picker"}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template9"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "DefenderOfArgus"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.2676122954285844}], "gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.856866043061018e-05, -1.3589810805569869e-05, 0.0, -0.0054836273193359375, -3.4332275390625e-05, -0.000855087477248162, -0.00011300760525045916, -0.00438237190246582, -0.021709442138671875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0001888275146484375, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.008005142211914062, -5.7220458984375e-06, -0.005702972412109375, -3.814697265625e-06, 0.0, -4.29153169534402e-06, 0.0, -9.72747802734375e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -3.457068669376895e-05, -0.00010395047866040841, -0.01835048198699951, -1.1920928244535389e-07, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, 0.0, -6.67572021484375e-05, 0.0, -0.1206822395324707, -1.549720582261216e-05, -0.000133514404296875, 0.0, -0.005402803421020508, -3.933904736186378e-06, -0.005944252014160156, -2.288818359375e-05, 0.0, -0.12404537200927734, 0.0, 0.0, -0.0059833526611328125, 0.0, 0.0, 0.0, -0.00012290477752685547, -1.1920928244535389e-07, -0.0585174560546875, -0.000614166259765625, 0.0, -5.53131103515625e-05, -0.007913589477539062, -0.000701904296875, -7.62939453125e-06, -0.0002763166557997465, -0.0008770023705437779, -1.9073486328125e-06, -6.103515625e-05, -0.006051063537597656, -1.9073486328125e-06, -0.0004339097358752042, -9.059880540007725e-06, -1.1444091796875e-05], "choice_history": [68, 118, 184, 76, 98, "Doomhammer", "<EOS>", 170, 48, 119, "Weapon", "Card", "<EOS>", 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Doomhammer", "<EOS>", 58, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 178, 159, "overload", "<EOS>", 34, 79, 103, "create_weapon", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 21, 119, "Weapon", "<EOS>", 171, 63, 50, 124, "8", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Name", "id": "WeaponCard"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Doomhammer"}, {"_type": "Template15"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "SHAMAN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template5"}, "arg": "overload"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Num", "n": 8}], "func": {"_type": "Name", "id": "Weapon"}}}], "name": "create_weapon"}], "name": "Doomhammer"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.40320319854070874}], "gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n"}
{"beams": [{"inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(self.target.<UNK>),\n            self)\n        self.target.increase_health(self.target.health)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -1.1205620467080735e-05, -0.0003703160909935832, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001354217529296875, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -7.05718994140625e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -0.0070037841796875, -3.62396240234375e-05, -0.0072021484375, -9.5367431640625e-06, -3.814697265625e-06, -3.576278118089249e-07, -4.255766543792561e-05, -1.7881377516459906e-06, -5.960462772236497e-07, -0.0017223358154296875, -9.5367431640625e-06, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -3.576277322281385e-06, -2.753734224825166e-05, -0.21938729286193848, 0.0, -7.2479248046875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00014495849609375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0002193450927734375, 0.0, -8.976459503173828e-05, 0.0, -3.24249267578125e-05, -7.62939453125e-06, -0.0022089481353759766, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.635883331298828e-05, -6.675719760096399e-06, -0.7603836059570312, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -7.62939453125e-06, -0.000217437744140625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.00015138546586968005, 0.0, -0.0001430511474609375, 0.0, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.340576171875e-05, -5.9604644775390625e-06, -0.0601959228515625, -1.9073486328125e-06, -7.62939453125e-06, -0.000125885009765625, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -7.62939453125e-06, -0.001171112060546875, -3.898143768310547e-05, -2.0265579223632812e-06, -0.5702496767044067, -3.814697265625e-06, -2.288818359375e-05, -0.2316904067993164, -0.000423431396484375, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001468658447265625, -0.00016748905181884766, 0.0, -1.9073486328125e-06, -0.6072559356689453, -1.33514404296875e-05, -0.000545501708984375, 0.0, -0.24277400970458984, -0.0026760101318359375, 0.0, -0.5438189506530762, 0.0, -0.0012502670288085938, -0.12488079071044922, -3.814697265625e-06, -1.33514404296875e-05, -0.00028228759765625, 0.0, 0.0, -0.0002231597900390625, -5.7220458984375e-06, -0.009224891662597656, -8.07046890258789e-05, -5.7220458984375e-06, -0.30139923095703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2338247299194336, -2.47955322265625e-05, -0.024457931518554688, -3.62396240234375e-05, -0.06379127502441406, -0.01524651050567627, 0.0, -0.0821676254272461, -3.814697265625e-06, 0.0], "choice_history": [68, 118, 184, 76, 98, "Earth", "Shock", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Earth", " ", "Shock", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 53, 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "damage", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_spell_damage", "<EOS>", 170, 40, 89, 13, 89, 26, "target", "<EOS>", "<UNK>", "<EOS>", 55, 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "increase_health", "<EOS>", 170, 40, 89, 13, 89, 26, "target", "<EOS>", "health", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Earth Shock"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "<UNK>"}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_spell_damage"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "damage"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "health"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "increase_health"}}}], "name": "use"}], "name": "EarthShock"}, {"_type": "Template6_stmt_seq"}]}, "score": -5.118492287268936}], "gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n"}
{"beams": [{"inferred_code": "class Eyean(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score_history": [0.0, -1.1444091796875e-05, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.0002516191452741623, -0.2729324698448181, -6.472867244156078e-05, -5.7220458984375e-06, -5.340576171875e-05, -7.62939453125e-06, -0.049150221049785614, -8.74992401804775e-05, -2.09808349609375e-05, -0.01886749267578125, -1.33514404296875e-05, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -7.43865966796875e-05, -0.0028533935546875, -0.0069370269775390625, -8.7738037109375e-05, -5.53131103515625e-05, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-05, -0.00276947021484375, -3.814697265625e-06, -1.9073486328125e-06, -0.00041679953574202955, -4.6372413635253906e-05, -0.000975127040874213, -0.0006715059280395508, -0.004882979206740856, -1.9073486328125e-06, -0.00028228759765625, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -7.54594657337293e-05, -0.00010418891906738281, -0.12742841243743896, -1.9073486328125e-06, -0.0001316070556640625, -0.00018310546875, -7.43865966796875e-05, -0.07045459747314453, -3.6954863844584906e-06, -3.814697265625e-06, -9.918212890625e-05, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00020599365234375, -1.52587890625e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -5.340576171875e-05, -5.7220458984375e-06, -0.000133514404296875, 0.0, -0.000255584716796875, -7.62939453125e-06, -0.04597759246826172, -0.00505018187686801, 0.0, -0.07190907001495361, -7.62939453125e-06, -0.18709564208984375, -4.76837158203125e-05, -8.20159912109375e-05, -0.0011386871337890625, -0.0002536773681640625, -0.12072741985321045, -0.00048732757568359375, -0.000102996826171875, -1.9073486328125e-06, -0.000370025634765625, -0.0018339157104492188, -0.0019474029541015625, -1.1444091796875e-05, -9.5367431640625e-06, -0.0030736923217773438, -1.9073486328125e-06, -1.1444091796875e-05, -0.0005931854248046875, -9.1552734375e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.24249267578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -4.1961669921875e-05, -3.0517578125e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-05, -8.7738037109375e-05, -0.0018901824951171875, -3.814697265625e-06, -0.001438140869140625, -0.0001659393310546875, -0.0064601898193359375, -0.0019808998331427574, -3.814697265625e-06, -0.03914928436279297, -1.9073486328125e-05, -0.15566933155059814, -5.7220458984375e-06, -1.1444091796875e-05, -0.000362396240234375, -7.2479248046875e-05, -0.15754175186157227, -0.00037288665771484375, -0.0003261566162109375, -1.9073486328125e-06, -0.0004596710205078125, -0.0021390914916992188, -0.0018520355224609375, -1.1444091796875e-05, -9.5367431640625e-06, -0.0035676956176757812, -1.9073486328125e-06, -1.1444091796875e-05, -0.0005893707275390625, -9.72747802734375e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -0.0001354217529296875, -3.62396240234375e-05, -3.0517578125e-05, 0.0, -9.5367431640625e-06, -3.24249267578125e-05, -6.67572021484375e-05, -0.00223541259765625, -1.9073486328125e-06, -0.00148773193359375, -0.0001544952392578125, -0.0067348480224609375, -0.001964210532605648, -3.814697265625e-06, -0.04009056091308594, -1.9073486328125e-05, -0.1542598009109497, -5.7220458984375e-06, -1.1444091796875e-05, -0.000370025634765625, -7.05718994140625e-05, -0.1564011573791504, -0.000370025634765625, -0.0003147125244140625, -1.9073486328125e-06, -0.0004596710205078125, -0.002105712890625, -0.00185394287109375, -2.47955322265625e-05], "choice_history": [68, 118, 184, 76, 98, "Eye", "an", "<EOS>", 170, 48, 119, "Secret", "Card", "<EOS>", 186, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Eye", " ", "for", " ", "Eye", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 53, 79, 103, "activate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 171, 51, 128, "character_attack", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 79, 103, "deactivate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 171, 51, 128, "character_attack", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 79, 103, "deactivate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 171, 51, 128, "character_attack", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Name", "id": "SecretCard"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Eye for Eye"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "bind"}}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}}}], "name": "deactivate"}], "name": "Eyean"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.7456409761127816}], "gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n"}
{"beams": [{"inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.Stealth:\n            minion.<UNK>(<UNK>)\n        player.hand.<UNK>()\n", "score_history": [-1.9073486328125e-06, 0.0, -1.71661376953125e-05, -0.000110626220703125, -1.9073486328125e-05, -1.5616295058862306e-05, -8.106231689453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.0001049041748046875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -3.933906555175781e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -0.0015869140625, -1.9073486328125e-06, -1.9073486328125e-06, -1.311301275563892e-06, -2.0265579223632812e-06, -8.392333984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0742354536196217e-05, -0.0020034341141581535, -0.5515558123588562, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001888275146484375, -5.960462772236497e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, 0.0, -1.33514404296875e-05, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, 0.0, -1.9073486328125e-06, -2.562999725341797e-05, -1.3351374946068972e-05, -0.14898300170898438, -0.0001010894775390625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.52587890625e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.205370765295811e-05, -0.00034558711922727525, -0.00014495849609375, 0.0, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.537799835205078e-05, -2.7418097943154862e-06, -0.49201202392578125, -3.814697265625e-05, -4.1961669921875e-05, -1.9073486328125e-06, -0.21496689319610596, -2.1457672119140625e-06, -0.02750110626220703, -3.814697265625e-06, -0.03352546691894531, 0.0, -0.0001049041748046875, 0.0, -0.0008726119995117188, -2.3841830625315197e-06, -0.000763654476031661, 0.0, -0.5249470472335815, -2.3841855067985307e-07, -0.0002269744873046875, -7.43865966796875e-05, -3.814697265625e-06, 0.0, -0.0068111419677734375, -1.52587890625e-05, -1.9073486328125e-06, -0.000217437744140625, 0.0, -0.887762188911438, -2.825234696501866e-05, -0.321468710899353, -1.1920928244535389e-07, -1.9073486328125e-06, -0.036319732666015625, -0.000579833984375, -0.21399223804473877, -5.137889820616692e-05, -0.038799285888671875, 0.0, -1.9073486328125e-06, -0.028329849243164062, -5.53131103515625e-05, 0.0, -0.18088912963867188, 0.0, -0.722081184387207, -0.4694094657897949, -0.029974693432450294, -0.5703049302101135, -1.561632234370336e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Flare", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Flare", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 78, 102, 21, 119, "minion", "<EOS>", 13, 89, 13, 89, 21, 119, "game", "<EOS>", "other_player", "<EOS>", "Stealth", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 21, 119, "minion", "<EOS>", "<UNK>", "<EOS>", 170, 48, 119, "<UNK>", "<EOS>", 77, 101, 16, 94, 13, 89, 13, 89, 27, "hand", "<EOS>", "<UNK>", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Flare"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PRIEST"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "other_player"}, "attr": "Stealth"}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "<UNK>"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minion"}, "attr": "<UNK>"}}}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "hand"}, "attr": "<UNK>"}}}], "name": "use"}], "name": "Flare"}, {"_type": "Template6_stmt_seq"}]}, "score": -5.507861967294524}], "gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n"}
{"beams": [{"inferred_code": "class Gorehowl(SpellCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.004820236936211586, -0.0009915824048221111, 0.0, -0.045128822326660156, -0.05378532409667969, -3.814697265625e-06, 0.0, -1.1920928244535389e-07, -3.218649908376392e-06, -4.76837158203125e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -3.24249267578125e-05, -0.23375511169433594, -2.86102294921875e-05, -0.0017948150634765625, -3.814697265625e-06, -1.9073486328125e-06, -2.861022494471399e-06, -4.172325134277344e-06, -0.001728057861328125, -0.000179290771484375, 0.0, -5.7220458984375e-06, 0.0, -0.0013735053362324834, -0.0024934220127761364, -0.0991898775100708, -1.8477439880371094e-05, -3.4332275390625e-05, 0.0, -7.62939453125e-06, 0.0, -0.00013649463653564453, 0.0, -0.00011873245239257812, -2.0265579223632812e-06, -3.814697265625e-05, 0.0, -0.11995911598205566, -5.960462772236497e-07, -2.86102294921875e-05, 0.0, -7.62939453125e-06, 0.0, 0.0, 0.0, -0.0003319978713989258, -9.536738616588991e-07, -0.0002288818359375, -2.1457672119140625e-06, -0.0013985633850097656, -3.254413604736328e-05, 0.0, -3.814697265625e-06, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -0.000152587890625, -9.5367431640625e-06, -4.589557647705078e-05, -7.390948667307384e-06, -0.004363059997558594, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.57763671875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.0020058557856827974, -2.336486431886442e-05, -7.2479248046875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -2.8848648071289062e-05, -3.3378591979271732e-06, -0.0040740966796875, -1.9073486328125e-06, -2.86102294921875e-05, -0.06132221221923828, 0.0, 0.0, -0.0001850128173828125, -9.5367431640625e-06, -0.0004940032958984375, -0.00045788282295688987, -3.576278118089249e-07, -0.7982642650604248, -4.887580871582031e-05, -2.288818359375e-05, -0.38499927520751953, -0.0037813186645507812, -0.0021829605102539062, -0.12021541595458984, -0.004796028137207031, -2.288818359375e-05, -0.02381134033203125, 0.0, -0.019018173217773438, -1.9073486328125e-06, -0.027677536010742188, -0.005403995513916016, -2.884823152271565e-05, -0.05147385597229004, -5.8887653722194955e-05, -1.1444091796875e-05], "choice_history": [68, 118, 184, 76, 98, "Gorehowl", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Gorehowl", "<EOS>", 60, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 184, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "change_attack", "<EOS>", 170, 41, 91, 35, 70, 16, 94, 13, 89, 13, 89, 26, "target", "<EOS>", "calculate_attack", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Gorehowl"}, {"_type": "Template17"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "BinOp", "left": {"_type": "Template7"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "calculate_attack"}}, "op": {"_type": "Sub"}}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "change_attack"}}}], "name": "use"}], "name": "Gorehowl"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.0830923950313576}], "gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n"}
{"beams": [{"inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score_history": [-1.1444091796875e-05, -3.814697265625e-06, -4.57763671875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -6.997340824455023e-05, -1.3589810805569869e-05, -3.814697265625e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -5.53131103515625e-05, 0.0, -1.9073486328125e-06, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, 0.0, 0.0, -0.0027370452880859375, -7.62939453125e-06, -0.28911781311035156, -0.0003948211669921875, -5.7220458984375e-06, -0.00012981049076188356, -3.576278118089249e-07, -0.6068553924560547, -0.018587112426757812, 0.0, -1.1444091796875e-05, 0.0, -0.00018310546875, -8.821475057629868e-05, -0.5327053070068359, 0.0, -0.000698089599609375, 0.0, -1.33514404296875e-05, 0.0, -0.0002288818359375, -1.9073486328125e-06, -0.007077217102050781, -1.5616416931152344e-05, -0.0056285858154296875, -7.62939453125e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -0.00012969970703125, 0.0, -5.7220458984375e-06, -1.311301275563892e-06, -0.46231555938720703, 0.0, 0.0, 0.0, -1.1444091796875e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -0.11619734764099121, -0.00018178820027969778, -2.288818359375e-05, -1.33514404296875e-05, -1.71661376953125e-05, -8.0108642578125e-05, -0.6823816299438477, -6.29425048828125e-05, -3.4332275390625e-05, -0.0002002716064453125, -6.29425048828125e-05, -4.00543212890625e-05], "choice_history": [68, 118, 184, 76, 98, "Hound", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 175, 51, 128, "Hound", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 49, 120, "False", "<EOS>", 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "p", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 64, 64, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Hound"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "FREE"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template7"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "Hound"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.7266213723796113}], "gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}
{"beams": [{"inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.004272500053048134, -0.0002315968304174021, -0.00020311199477873743, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, 0.0, -1.9073486328125e-06, 0.0, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001163482666015625, -0.0001392364501953125, -2.09808349609375e-05, -0.0003719329833984375, 0.0, -0.0011237525613978505, -7.11677857907489e-05, -2.50339189733495e-06, -2.3841855067985307e-07, -0.00014495849609375, -6.866455078125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0033054351806640625, -1.9073486328125e-06, -0.0007535219192504883, 0.0, -1.1444091796875e-05, 0.0, -0.0005990266799926758, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.52587890625e-05, -0.008411407470703125, -4.00543212890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, 0.0, -0.0066268229857087135, -0.00024888257030397654, -1.9073486328125e-06, -0.007963180541992188, -5.7220458984375e-06, -0.008420944213867188, -8.58306884765625e-05, -0.05320930480957031, -0.2439117431640625, -0.00173187255859375, -0.0002480745315551758, -3.814697265625e-06, -0.0002593994140625, -0.000240325927734375, 0.0, -1.9073486328125e-06, -0.0006847381591796875, -0.0003167390823364258, -1.9073486328125e-06, -6.67572021484375e-05, -0.00011444091796875, -5.7220458984375e-06, 0.0, -0.043027397245168686, -0.0009213890880346298, -6.699447112623602e-05, -3.814697265625e-06, 0.0, -9.72747802734375e-05, 0.0, -3.814697265625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.933904736186378e-06, -1.3947486877441406e-05, -3.0517578125e-05, -1.9073486328125e-05, -2.47955322265625e-05, -5.53131103515625e-05, -0.00032806396484375, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001888275146484375, -0.003673553466796875, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Injured", "Blademaster", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Injured", " ", "Blademaster", "<EOS>", 66, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 21, 119, "Damage", "<EOS>", 170, 57, 43, 96, 33, 172, 49, 121, "Null", "<EOS>", 43, 94, 21, 119, "Enemy", "Player", "<EOS>", 43, 94, 21, 119, "Random", "Picker", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 57, 60, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Injured Blademaster"}, {"_type": "Template9"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template13"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "args": [{"_type": "NameConstant", "value": "Null"}, {"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}, {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Template17"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "InjuredBlademaster"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.39288012719267584}], "gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n"}
{"beams": [{"inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "score_history": [0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, 0.0, -0.006107950583100319, -0.00010418368765385821, -0.0006243472453206778, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -5.960462772236497e-07, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -2.86102294921875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0002880096435546875, -3.814697265625e-06, -0.000217437744140625, -9.5367431640625e-06, -3.814697265625e-06, -0.0004486039688345045, -6.651873991359025e-05, -1.6569954823353328e-05, 0.0, -8.20159912109375e-05, -0.0001392364501953125, -2.09808349609375e-05, 0.0, -3.814697265625e-06, 0.0, -0.0009672641754150391, -5.364416665543104e-06, -0.006172060966491699, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, -4.9591064453125e-05, -2.145757753169164e-05, -4.768370445162873e-07, -1.33514404296875e-05, -0.000118255615234375, -8.7738037109375e-05, -6.103515625e-05, -0.0002002716064453125, -1.1444091796875e-05, -1.1444091796875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0013793706893920898, -2.3841855067985307e-07, -0.0001277923583984375, -3.4332275390625e-05, -0.0001888275146484375, -3.814697265625e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.623382568359375, -1.9073486328125e-06, -3.814697265625e-06, -0.5984894037246704, -0.4158449172973633, -5.829334259033203e-05, -1.1444091796875e-05, -0.0001926422119140625, -0.000644683837890625, -3.814697265625e-06, -1.9073486328125e-06, -0.1851816177368164, -0.003367781639099121, 0.0, -0.000995635986328125, -0.0009136199951171875, 0.0, -0.0072383880615234375, -1.9073486328125e-06, -0.0002803802490234375, -8.344650268554688e-06, -0.04988670349121094, -1.9073486328125e-06, -1.33514404296875e-05, -5.14984130859375e-05, -1.9073486328125e-06, 0.0, -7.2479248046875e-05, -5.841255187988281e-06, -6.4849853515625e-05, -0.0001277923583984375, -1.1444091796875e-05, -0.0002384185791015625, -0.000244140625, -1.9073486328125e-06, -0.014632344245910645, -0.00024673418374732137, 0.0, -0.0021209716796875, -0.000194549560546875, -0.012876510620117188, -0.09030723571777344, -5.7220458984375e-06, -0.0010832546977326274, -2.6345247533754446e-05, -2.09808349609375e-05, -0.6437826156616211, -3.62396240234375e-05, -0.0031585693359375, 0.0, -0.0003376007080078125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.01933884620666504, -5.340576171875e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.019970059394836426, -7.152555099310121e-07, -0.000270843505859375, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.007395386230200529, -0.0010629198513925076, -5.543088627746329e-05, -2.09808349609375e-05, -0.036339759826660156, 0.0, -0.009090423583984375, -0.0012874603271484375, -1.919269561767578e-05, 0.0, -0.01226043701171875, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Knife", "Juggler", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Knife", " ", "Juggler", "<EOS>", 63, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 66, 63, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 96, 21, 119, "Minion", "Summoned", "<EOS>", 170, 43, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 21, 119, "Damage", "<EOS>", 170, 64, 43, 95, 21, 119, "Character", "Selector", "<EOS>", 180, 159, "players", "<EOS>", 16, 94, 21, 119, "Enemy", "Player", "<EOS>", 159, "picker", "<EOS>", 16, 94, 21, 119, "Random", "Picker", "<EOS>", 159, "condition", "<EOS>", 22, 121, "Null", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Knife Juggler"}, {"_type": "Template5"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template5"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "PIRATE"}], "func": {"_type": "Name", "id": "IsType"}}], "func": {"_type": "Name", "id": "MinionSummoned"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template7"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}, "arg": "picker"}, {"_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}, "arg": "condition"}], "func": {"_type": "Name", "id": "CharacterSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "KnifeJuggler"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.7812529660967797}], "gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n"}
{"beams": [{"inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), HeroSelector()))])\n", "score_history": [0.0, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.0020943412091583014, -0.013711689971387386, 0.0, -9.72747802734375e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -1.1920928244535389e-07, 0.0, -2.288818359375e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0027370452880859375, -5.7220458984375e-06, -0.000324249267578125, -3.814697265625e-06, 0.0, -4.768370445162873e-07, 0.0, -3.0517578125e-05, -0.0001087188720703125, -3.814697265625e-06, -2.288818359375e-05, 0.0, -8.451929170405492e-05, -4.3630454456433654e-05, -1.2955392599105835, 0.0, -4.76837158203125e-05, 0.0, -1.33514404296875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0007495880126953125, -1.1920928244535389e-07, 0.0, 0.0, -0.000125885009765625, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -6.29425048828125e-05, 0.0, -0.00020432470773812383, -2.3841855067985307e-07, -4.00543212890625e-05, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -4.57763671875e-05, -7.2479248046875e-05, -7.62939453125e-06, -0.0010356903076171875, -3.814697265625e-06, -3.24249267578125e-05, -0.0006127967499196529, -0.0006542205810546875, -0.00011444091796875, 0.0, -0.000682830810546875, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, -0.0002593994140625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -1.33514404296875e-05, -8.58306884765625e-05, -1.71661376953125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0013007563538849354, -0.019301772117614746, -1.71661376953125e-05, -0.002231597900390625, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -8.213520050048828e-05, -1.9073486328125e-06, -0.25119876861572266, -1.9073486328125e-06, -0.0052433013916015625, -9.72747802734375e-05, -1.52587890625e-05, -0.028839943930506706, -0.00040352344512939453, 0.0, -0.08313465118408203, -0.000583648681640625, -0.28433895111083984, -0.000133514404296875, 0.0, -0.3199816942214966, -5.829334259033203e-05, -1.1920928244535389e-07, -0.0004520416259765625, -1.9073486328125e-06], "choice_history": [68, 118, 184, 76, 98, "Lightwell", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Lightwell", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 50, 124, "0", "<EOS>", 58, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 94, 21, 119, "Turn", "Started", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 21, 119, "Heal", "<EOS>", 170, 66, 43, 94, 21, 119, "Hero", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Lightwell"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "ROGUE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template15"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "Lightwell"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.3174269948866026}], "gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n"}
{"beams": [{"inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0002224197960458696, -0.00020956285879947245, -1.3112935448589269e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, 0.0, 0.0, 0.0, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-05, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -8.0108642578125e-05, -3.0517578125e-05, -7.62939453125e-05, -3.814697265625e-06, -3.814697265625e-06, -3.3378546504536644e-06, -9.357796079711989e-05, -3.576272320060525e-06, 0.0, -0.0003910064697265625, -0.6245403289794922, -3.62396240234375e-05, -9.1552734375e-05, 0.0, -0.000164031982421875, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -1.752373282215558e-05, -2.0265558760002023e-06, -3.24249267578125e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.000881195068359375, -1.33514404296875e-05, -1.71661376953125e-05, -0.0002765655517578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0016273260116577148, -2.3841855067985307e-07, -3.4332275390625e-05, -1.1444091796875e-05, -0.0009326934814453125, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1563299267436378e-05, -1.7523765563964844e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.08216094970703125, -3.814697265625e-06, 0.0, -0.040764905512332916, -0.003019571304321289, 0.0, -0.000209808349609375, 0.0, -0.0005016326904296875, -1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, 0.0, -0.5274050235748291, -3.814697265625e-05, -3.814697265625e-06, -3.814697265625e-05, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -1.919269561767578e-05, -7.05718994140625e-05, -1.52587890625e-05, -0.0002422332763671875, -0.0027446746826171875, -3.0517578125e-05, -0.002262115478515625, -0.001689910888671875, -0.00057220458984375, 0.0, -0.0028385017067193985, -0.0026749372482299805, -1.9073486328125e-06, -5.7220458984375e-06, -0.0016231536865234375, -7.62939453125e-06, -1.71661376953125e-05, -1.52587890625e-05, 0.0, -0.0011363166850060225, -2.491474151611328e-05, 0.0, -4.9591064453125e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Mana", "Wyrm", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Mana", " ", "Wyrm", "<EOS>", 64, 61, 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 64, 66, 178, 159, "effects", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Effect", "<EOS>", 171, 43, 95, 21, 119, "Spell", "Cast", "<EOS>", 178, 159, "player", "<EOS>", 16, 94, 21, 119, "Enemy", "Player", "<EOS>", 43, 96, 21, 119, "Action", "Tag", "<EOS>", 171, 43, 96, 32, 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 64, 43, 94, 21, 119, "Self", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mana Wyrm"}, {"_type": "Template7"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template9"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "EnemyPlayer"}}, "arg": "player"}], "func": {"_type": "Name", "id": "SpellCast"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template7"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}], "func": {"_type": "Name", "id": "ActionTag"}}], "func": {"_type": "Name", "id": "Effect"}}, {"_type": "Template8_expr_seq"}]}, "arg": "effects"}]}}], "name": "create_minion"}], "name": "ManaWyrm"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.3003410967246225}], "gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}
{"beams": [{"inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [-0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0020293849520385265, -9.703244722913951e-05, -7.867782187531702e-06, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -7.2479248046875e-05, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -6.67572021484375e-05, -7.05718994140625e-05, -0.000240325927734375, -3.814697265625e-06, 0.0, -8.344629350176547e-06, -4.52991334896069e-05, -4.768370445162873e-07, -1.1920928244535389e-07, -0.008612632751464844, -1.52587890625e-05, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, -1.919269561767578e-05, 0.0, 0.0, -8.0108642578125e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -7.629387982888147e-05, -1.3232143828645349e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023651123046875, -4.76837158203125e-05, -0.0001010894775390625, -0.0009288787841796875, -0.0006771087646484375, -0.000408172607421875, -5.7220458984375e-06, -0.029234886169433594, 0.0, -7.05718994140625e-05, -1.71661376953125e-05, -2.300739288330078e-05, -2.3841855067985307e-07, 0.0], "choice_history": [68, 118, 184, 76, 98, "Mogu'shan", "Warden", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Mogu'shan", " ", "Warden", "<EOS>", 57, 61, 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 64, 60, 178, 159, "taunt", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Mogu'shan Warden"}, {"_type": "Template13"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template17"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "taunt"}]}}], "name": "create_minion"}], "name": "Mogu'shanWarden"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.045760354633635814}], "gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n"}
{"beams": [{"inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            RARE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        option = player.agent.<UNK>(targets)\n        target.change_attack(5)\n        target.increase_health(5)\n        target.taunt = True\n", "score_history": [-1.71661376953125e-05, -3.814697265625e-06, -7.05718994140625e-05, -0.000110626220703125, -1.33514404296875e-05, -0.00011336160969221964, -2.741813204920618e-06, -1.9073486328125e-06, -0.000202178955078125, -0.1195526123046875, -1.1444091796875e-05, 0.0, 0.0, -5.841255187988281e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.01035308837890625, 0.0, -0.0007266998291015625, -7.43865966796875e-05, 0.0, -1.1920928244535389e-07, -3.814697265625e-06, -3.62396240234375e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -3.278255098848604e-05, -8.225133205996826e-05, -0.11878824234008789, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, 0.0, -0.0001220703125, 0.0, -0.0015087127685546875, -1.1920928244535389e-07, -1.33514404296875e-05, -7.62939453125e-06, -0.018428802490234375, 0.0, -0.0001163482666015625, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -7.49826431274414e-05, -2.3841855067985307e-07, -3.063678741455078e-05, -7.748603820800781e-06, -0.019557267427444458, -5.1856040954589844e-05, -3.814697265625e-06, 0.0, -9.918212890625e-05, -1.1920928244535389e-07, 0.0, -6.103515625e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.576278118089249e-07, -1.52587890625e-05, -2.86102294921875e-05, -0.0011212825775146484, -6.079665126890177e-06, -0.2642803192138672, -0.006262779235839844, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.29425048828125e-05, -5.7220458984375e-06, -0.0029811859130859375, -0.0002288818359375, 0.0, 0.0, -0.0026583182625472546, -4.41074053014745e-06, -0.000125885009765625, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -4.172325134277344e-06, -2.2649765014648438e-06, -0.0659646987915039, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.3815697431564331, -2.2649765014648438e-06, -9.5367431640625e-06, -0.009063720703125, 0.0, 0.0, -0.0007648468017578125, 0.0, -0.01684856414794922, -0.004410052206367254, -6.079655122448457e-06, -0.6511766314506531, -1.8000440832111053e-05, -0.000354766845703125, -0.000911712646484375, 0.0, -0.03365590050816536, -2.2649765014648438e-06, -0.0009899139404296875, -3.814697265625e-06, 0.0, -9.72747802734375e-05, -8.7738037109375e-05, -1.9073486328125e-06, -0.001003265380859375, 0.0, -0.4461272954940796, 0.0, -0.19340300559997559, -1.9073486328125e-06, -3.814697265625e-05, -0.05252265930175781, -0.2685060501098633, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, -7.62939453125e-06, 0.0, -0.026578903198242188, 0.0, -0.003735184669494629, 0.0, -0.16305172443389893, -1.9073486328125e-06, -1.9073486328125e-06, -0.10219860076904297, -0.00441741943359375, -1.9073486328125e-06, -4.38690185546875e-05, -0.000400543212890625, 0.0, -0.00022125244140625, 0.0, -0.0076541900634765625, 0.0, -0.009392738342285156, 0.0, -0.009926795959472656, -0.0014476776123046875, -0.0004044771194458008, -2.503394853192731e-06, 0.0], "choice_history": [68, 118, 184, 76, 98, "Nourish", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Nourish", "<EOS>", 58, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 187, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 73, 88, 170, 48, 119, "option", "<EOS>", 16, 96, 13, 89, 13, 89, 27, "agent", "<EOS>", "<UNK>", "<EOS>", 170, 48, 119, "targets", "<EOS>", 77, 101, 16, 96, 13, 89, 21, 119, "target", "<EOS>", "change_attack", "<EOS>", 170, 58, 77, 101, 16, 96, 13, 89, 21, 119, "target", "<EOS>", "increase_health", "<EOS>", 170, 58, 73, 88, 170, 40, 89, 21, 119, "target", "<EOS>", "taunt", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Nourish"}, {"_type": "Template15"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "DRUID"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Assign", "value": {"_type": "Call", "args": [{"_type": "Name", "id": "targets"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "agent"}, "attr": "<UNK>"}}, "targets": [{"_type": "Name", "id": "option"}]}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template15"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "change_attack"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template15"}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "increase_health"}}}, {"_type": "Assign", "value": {"_type": "NameConstant", "value": true}, "targets": [{"_type": "Attribute", "value": {"_type": "Name", "id": "target"}, "attr": "taunt"}]}], "name": "use"}], "name": "Nourish"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.0253488557278914}], "gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n"}
{"beams": [{"inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(card):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', BothPlayer.<UNK>())\n        <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-7.62939453125e-06, -7.2479248046875e-05, -3.0517578125e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0012692511081695557, -2.0265579223632812e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0003185272216796875, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.3841855067985307e-07, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0001583099365234375, -1.1444091796875e-05, -0.0043697357177734375, -5.53131103515625e-05, -1.9073486328125e-06, -2.3841855067985307e-07, 0.0, -0.00109100341796875, -5.7220458984375e-06, -2.288815267093014e-05, -8.02247814135626e-05, -0.0003871917724609375, 0.0, -2.288818359375e-05, 0.0, -3.933906555175781e-06, -0.00020933149789925665, -0.13579010963439941, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.020470023155212402, -2.2649765014648438e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.52587890625e-05, 0.0, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.0008119344711303711, -1.156325470219599e-05, -0.6309871673583984, -0.08728790283203125, -0.0002079010009765625, -0.0057375431060791016, -3.302092227386311e-05, -0.0001735687255859375, -0.0027379989624023438, -0.00012969970703125, -1.9073486328125e-06, -0.031344056129455566, -1.0251998901367188e-05, -0.0005712509155273438, -0.004044532775878906, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -0.0003070831298828125, -6.103515625e-05, -0.5737485885620117, 0.0, -0.020804066210985184, -1.859664735093247e-05, -0.0029213428497314453, -1.9073486328125e-06, -0.04408836364746094, -8.58306884765625e-05, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.16102981567382812, -0.005688667297363281, -0.000240325927734375, -7.82012939453125e-05, -0.00023651123046875, -0.0002498626708984375, 0.0, -0.0020154714584350586, -0.001416921615600586, -3.24249267578125e-05, -0.5349216461181641, -0.00272369384765625, -0.0002155303955078125, -0.0004482269287109375, -0.0370941162109375, -0.000164031982421875, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -0.00040435791015625, -9.5367431640625e-05, -0.005450248718261719, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -0.0001753566466504708, -5.7220458984375e-05, -0.031627655029296875, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -2.86102294921875e-05, -0.0002918243408203125, -1.33514404296875e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.003116607666015625, -0.01009988784790039, -2.121925172104966e-05, -0.0005283355712890625, -0.002094268798828125, -3.24249267578125e-05, -0.10362625122070312, -5.14984130859375e-05, -0.3275594711303711, -0.008270263671875, -0.03565692901611328, 0.0, -0.3985109329223633, 0.0, -1.0478163957595825, -0.23441708087921143, 0.0, -1.1933722496032715, 0.0, -0.000926971435546875, 0.0, 0.0, -0.004901885986328125, 0.0, -7.62939453125e-06, -0.48009681701660156, 0.0, -0.1821276843547821, -0.00014495846698991954, -0.03477180004119873, 0.0, -0.0003509521484375, -0.0007877349853515625, -0.021947860717773438, 0.0, -0.0001506805419921875, 0.0, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -0.04825019836425781, 0.0, -3.814697265625e-06, -0.001010894775390625, 0.0, -0.535954475402832, -0.02835690975189209, -3.099436753473128e-06, -2.6702880859375e-05], "choice_history": [68, 118, 184, 76, 98, "Preparation", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Preparation", "<EOS>", 50, 124, "0", "<EOS>", 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 186, 79, 103, "reduce_cost", "<EOS>", 157, 163, 1, 156, "card", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 21, 119, "card", "<EOS>", "add_buff", "<EOS>", 170, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Mana", "Change", "<EOS>", 170, 67, 154, 85, 37, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 27, "<UNK>", "<EOS>", 171, 51, 128, "card_drawn", "<EOS>", 43, 94, 13, 89, 21, 119, "Both", "Player", "<EOS>", "<UNK>", "<EOS>", 77, 101, 16, 96, 13, 89, 21, 119, "<UNK>", "<EOS>", "summon", "<EOS>", 172, 56, 48, 119, "game", "<EOS>", 43, 96, 21, 119, "len", "<EOS>", 170, 40, 89, 27, "minions", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Preparation"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "card"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "UnaryOp", "operand": {"_type": "Template9"}, "op": {"_type": "USub"}}], "func": {"_type": "Name", "id": "ManaChange"}}], "func": {"_type": "Name", "id": "Buff"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "add_buff"}}}], "name": "reduce_cost"}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "card_drawn"}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "BothPlayer"}, "attr": "<UNK>"}}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "<UNK>"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}, {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "minions"}], "func": {"_type": "Name", "id": "len"}}], "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "<UNK>"}, "attr": "summon"}}}], "name": "use"}], "name": "Preparation"}, {"_type": "Template6_stmt_seq"}]}, "score": -7.061154499906195}], "gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n"}
{"beams": [{"inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -6.818538531661034e-05, -2.0265579223632812e-06, -7.62939453125e-06, -0.000118255615234375, -1.9073486328125e-05, -0.0003124218783341348, -0.00014030819875188172, -3.814697265625e-06, -0.01822662353515625, -1.71661376953125e-05, -1.52587890625e-05, -8.0108642578125e-05, -4.768370445162873e-07, -3.4332275390625e-05, -4.57763671875e-05, -0.00099945068359375, -0.19751834869384766, -0.0028533935546875, -8.96453857421875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.0108642578125e-05, -0.0003414154052734375, -3.24249267578125e-05, 0.0, -0.00020585325546562672, -2.1457672119140625e-06, -0.0001125335693359375, -1.52587890625e-05, 0.0, -2.86102294921875e-05, 0.0, -0.00022327898477669805, -0.00010693073272705078, -0.679200291633606, -1.9073486328125e-06, -0.0001010894775390625, -0.000701904296875, -0.0001316070556640625, -0.21065425872802734, -3.218649908376392e-06, 0.0, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.0002880096435546875, -3.576278118089249e-07, -0.03069305419921875, -0.0001163482666015625, 0.0, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.0001068115234375, -4.00543212890625e-05, -2.47955322265625e-05, -2.86102294921875e-05, -0.042438507080078125, -0.015604374930262566, 0.0, -0.016254425048828125, -5.53131103515625e-05, -0.19983959197998047, -0.0001201629638671875, -3.62396240234375e-05, -0.0001678466796875, -0.0013523101806640625, -0.2804374694824219, -1.33514404296875e-05, -0.000980377197265625, -7.62939453125e-06, -0.000324249267578125, -0.000980377197265625, -2.47955322265625e-05, -3.814697265625e-06, -0.0001277923583984375, -0.00201416015625, 0.0, -1.9073486328125e-06, -8.20159912109375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0003415346145629883, -1.9073486328125e-06, -0.03383636474609375, -5.91278076171875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.008777618408203125, -1.9073486328125e-06, -0.0004634857177734375, -4.57763671875e-05, -0.016419410705566406, -0.004250329919159412, 0.0, -0.01927471160888672, -4.982948303222656e-05, -0.03951263427734375, -0.000171661376953125, -2.288818359375e-05, -0.0001316070556640625, -0.0002155303955078125, -0.240678071975708, -1.9073486328125e-05, -0.000644683837890625, -7.62939453125e-06, -0.0001678466796875, -0.00091552734375, -3.62396240234375e-05, -3.814697265625e-06, -0.00012969970703125, -0.0023603439331054688, 0.0, -1.9073486328125e-06, -8.20159912109375e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002841949462890625, -1.9073486328125e-06, -0.04964637756347656, -4.57763671875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -4.1961669921875e-05, -9.5367431640625e-06, -1.1444091796875e-05, -0.008527755737304688, -1.9073486328125e-06, -0.0004405975341796875, -4.57763671875e-05, -0.01723480224609375, -0.004373585805296898, 0.0, -0.019232749938964844, -4.982948303222656e-05, -0.039424896240234375, -0.0001850128173828125, -2.47955322265625e-05, -0.0001316070556640625, -0.00022125244140625, -0.2395622730255127, -1.9073486328125e-05, -0.000640869140625, -7.62939453125e-06, -0.0001659393310546875, -0.0009136199951171875, -3.62396240234375e-05, -2.288818359375e-05], "choice_history": [68, 118, 184, 76, 98, "Repentance", "<EOS>", 170, 48, 119, "Secret", "Card", "<EOS>", 186, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Repentance", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 53, 79, 103, "activate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 171, 51, 128, "minion_played", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 79, 103, "deactivate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 171, 51, 128, "minion_played", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 79, 103, "deactivate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 171, 51, 128, "minion_played", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Name", "id": "SecretCard"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Repentance"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "bind"}}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "minion_played"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}}}], "name": "deactivate"}], "name": "Repentance"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.4548410428240572}], "gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n"}
{"beams": [{"inferred_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>Deathrattle(), PlayerSelector())])\n", "score_history": [-5.7220458984375e-06, -1.52587890625e-05, -6.67572021484375e-05, -2.6702880859375e-05, -1.52587890625e-05, -7.867511158110574e-05, -0.00028084730729460716, -6.615986058022827e-05, -0.001969297882169485, 0.0, -0.0046367645263671875, -0.000110626220703125, -3.24249267578125e-05, -1.9073486328125e-06, -9.536738616588991e-07, -1.1920928244535389e-07, -9.5367431640625e-06, -3.62396240234375e-05, -1.33514404296875e-05, -6.67572021484375e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0004863739013671875, -1.9073486328125e-06, -0.0009975433349609375, -1.9073486328125e-06, -1.9073486328125e-06, -0.00010632923658704385, -2.7418125682743266e-05, -4.804107447853312e-05, -0.0001114604456233792, -0.00106990325730294, 0.0, -0.013021469116210938, -1.9073486328125e-06, -0.01415462139993906, -5.125993993715383e-06, -0.4264850616455078, -3.814697265625e-06, 0.0, -2.6702880859375e-05, -5.7220458984375e-06, -2.9087066650390625e-05, -1.1444091796875e-05, -0.585440993309021, -2.0265579223632812e-06, -1.9073486328125e-05, 0.0, -0.00052642822265625, 0.0, -1.52587890625e-05, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.0003401034919079393, -4.172316494077677e-06, -0.00016021728515625, -1.52587890625e-05, -3.814697265625e-06, -0.0002231597900390625, -3.814697265625e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001953125, -1.1444091796875e-05, -4.196111694909632e-05, -6.914126061019488e-06, -0.0030345916748046875, -0.008878707885742188, 0.0, -0.5141476392745972, 0.0, -0.000225067138671875, -0.0001277923583984375, -0.12153911590576172, -4.38690185546875e-05, -5.340576171875e-05, -5.7220458984375e-06, 0.0, -0.019060134887695312, -1.9311873984406702e-05, -4.9591064453125e-05, 0.0, -0.04050254821777344, 0.0, -7.62939453125e-06, -0.14730381965637207, -0.3254075348377228, -0.00017046926950570196, -0.0004730224609375, -0.008434295654296875, -1.9073486328125e-06, 0.0, -0.0004812479019165039, -2.6941299438476562e-05, -4.768370445162873e-07, -0.008388519287109375, 0.0], "choice_history": [68, 118, 184, 76, 98, "Shadow", "Of", "Nothing", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 50, 124, "0", "<EOS>", 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 50, 124, "0", "<EOS>", 64, 178, 159, "auras", "<EOS>", 19, 114, 171, 43, 96, 21, 119, "Aura", "<EOS>", 171, 43, 94, 21, 119, "<UNK>", "Deathrattle", "<EOS>", 43, 94, 21, 119, "Player", "Selector", "<EOS>", 65, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Shadow of Nothing"}, {"_type": "Num", "n": 0}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 0}, {"_type": "Template7"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "<UNK>Deathrattle"}}, {"_type": "Call", "func": {"_type": "Name", "id": "PlayerSelector"}}], "func": {"_type": "Name", "id": "Aura"}}, {"_type": "Template8_expr_seq"}]}, "arg": "auras"}]}}], "name": "create_minion"}], "name": "ShadowOfNothing"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.2514092098025387}], "gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}
{"beams": [{"inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.increase_health(2)\n", "score_history": [-3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -0.000133514404296875, -3.24249267578125e-05, -1.9073304429184645e-05, -6.198883056640625e-06, -1.71661376953125e-05, -8.96453857421875e-05, -0.0001049041748046875, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001068115234375, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -1.71661376953125e-05, -5.7220458984375e-06, -0.0004978179931640625, -3.814697265625e-06, -0.00019073486328125, -4.9591064453125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -5.7220458984375e-06, -2.288818359375e-05, -4.1961669921875e-05, -3.4332275390625e-05, 0.0, 0.0, -1.7404556274414062e-05, -2.2649765014648438e-06, -0.06758594512939453, -1.9073486328125e-06, -9.5367431640625e-05, -0.0003814697265625, -7.62939453125e-06, -0.0013952255249023438, 0.0, -5.7220458984375e-06, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.00018310546875, 0.0, -3.4332275390625e-05, -1.33514404296875e-05, -0.0008279085159301758, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, -1.33514404296875e-05, -0.0001373291015625, -6.079673767089844e-06, -0.0009508132934570312, -2.47955322265625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -2.0503992345766164e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.19649982452392578, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -0.001003265380859375, -4.76837158203125e-05, 0.0, -0.0013189315795898438, -1.9073486328125e-06, -1.33514404296875e-05, -0.0044097900390625, -0.0002841949462890625, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.00015616416931152344, -3.814697265625e-06, -1.9073486328125e-06, -0.008525848388671875, -0.0001354217529296875, -0.0004215240478515625, -1.9073486328125e-06, -4.57763671875e-05, -0.0095672607421875, 0.0, 0.0, -1.1444091796875e-05, 0.0, -0.07457256317138672, -0.00014495849609375, -3.933906555175781e-06, -0.16031837463378906, -3.814697265625e-06, 0.0, -0.0052509307861328125, 0.0], "choice_history": [68, 118, 184, 76, 98, "Slam", "<EOS>", 170, 54, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Slam", "<EOS>", 63, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 53, 178, 159, "target_func", "<EOS>", 13, 89, 13, 89, 21, 119, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 79, 103, "use", "<EOS>", 157, 165, 0, 1, 156, "player", "<EOS>", 1, 156, "game", "<EOS>", 185, 77, 101, 16, 96, 13, 89, 16, 94, 21, 119, "super", "<EOS>", "use", "<EOS>", 171, 56, 48, 119, "game", "<EOS>", 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "damage", "<EOS>", 171, 43, 96, 13, 89, 27, "effective_spell_damage", "<EOS>", 170, 63, 55, 77, 101, 16, 96, 13, 89, 13, 89, 26, "target", "<EOS>", "increase_health", "<EOS>", 170, 63, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template10"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Slam"}, {"_type": "Template5"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "targeting"}, "attr": "find_minion_spell_target"}, "arg": "target_func"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}, {"_type": "arg", "arg": "game"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template12"}, {"_type": "Name", "id": "game"}], "func": {"_type": "Attribute", "value": {"_type": "Call", "func": {"_type": "Name", "id": "super"}}, "attr": "use"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "effective_spell_damage"}}, {"_type": "Template11"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "damage"}}}, {"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Template5"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "target"}, "attr": "increase_health"}}}], "name": "use"}], "name": "Slam"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.5366274116404384}], "gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n"}
{"beams": [{"inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.0011083895806223154, -2.622604142743512e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.9073486328125e-05, -4.38690185546875e-05, -9.5367431640625e-05, 0.0, -0.059070587158203125, -2.6702880859375e-05, 0.0, -1.6689286894688848e-06, 0.0, -0.014145851135253906, -9.1552734375e-05, -0.003032684326171875, -0.06052684783935547, -6.4849853515625e-05, -0.00011539459228515625, -4.23184028477408e-05, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.450580596923828e-05, -2.3841855067985307e-07, -0.24542808532714844, 0.0, -0.000308990478515625, -0.0024385452270507812, 0.0, -1.9073486328125e-05, -1.33514404296875e-05, -3.0517578125e-05, -0.000301361083984375, -0.000438690185546875, -0.0013484954833984375, 0.0, 0.0, -0.030850233510136604, -0.002301695290952921, -2.09808349609375e-05, -0.0017719268798828125, -0.0020046234130859375, -0.0002880096435546875, -2.86102294921875e-05, -0.021958351135253906, -1.9073486328125e-06, -3.24249267578125e-05, -1.52587890625e-05, 0.0, 0.0, -0.00024044513702392578, -0.00016987323760986328, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007228851318359375, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.014873737469315529, -0.0005446671857498586, -8.344646857949556e-07, 0.0, 0.0, -2.288818359375e-05, 0.0, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.0001850128173828125, -1.9073486328125e-06, -6.198883056640625e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0001678466796875, -3.24249267578125e-05, -1.1444091796875e-05, -2.47955322265625e-05, -5.14984130859375e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Spellbreaker", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Spellbreaker", "<EOS>", 57, 61, 53, 179, 159, "minion_type", "<EOS>", 13, 89, 21, 119, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 94, 21, 119, "Silence", "<EOS>", 43, 95, 33, 179, 159, "players", "<EOS>", 16, 94, 21, 119, "Both", "Player", "<EOS>", 159, "picker", "<EOS>", 16, 94, 21, 119, "User", "Picker", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 57, 66, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Spellbreaker"}, {"_type": "Template13"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Silence"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}, "arg": "picker"}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template13"}, {"_type": "Template9"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "Spellbreaker"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.4653662831750225}], "gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}
{"beams": [{"inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (Taunt()), Buff(Taunt())], MinionSelector()), MinionSelector(\n            condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.52587890625e-05, 0.0, -4.57763671875e-05, -7.62939453125e-06, 0.0, -0.0035109869204461575, -0.00029443384846672416, -0.0006567491800524294, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, 0.0, -2.1457672119140625e-06, -3.576278118089249e-07, 0.0, 0.0, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0001220703125, -1.71661376953125e-05, -5.14984130859375e-05, -0.000431060791015625, -7.62939453125e-06, -0.000930952257476747, -5.137908738106489e-05, -2.074220174108632e-05, -1.9073486328125e-06, -5.340576171875e-05, -0.0004634857177734375, -0.0001125335693359375, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -3.552436828613281e-05, -2.0265579223632812e-06, -0.0007228851318359375, 0.0, -1.52587890625e-05, 0.0, -8.809566497802734e-05, 0.0, -2.86102294921875e-05, -4.38690185546875e-05, -7.2479248046875e-05, -0.006458282470703125, -1.9073486328125e-05, -0.0011444091796875, -0.027418136596679688, -0.35717296600341797, -0.6477499008178711, -6.29425048828125e-05, -0.050972938537597656, -3.62396240234375e-05, -0.00054931640625, -7.62939453125e-06, -1.9073486328125e-06, -0.012076781131327152, -0.10575747489929199, -3.814697265625e-06, -3.814697265625e-06, -0.012165069580078125, -1.52587890625e-05, 0.0, -0.5540074110031128, -0.003913876600563526, -0.0006694793701171875, -0.00688934326171875, -0.0002155303955078125, 0.0, -0.6898408532142639, -9.906273771775886e-05, -1.9073486328125e-05, -7.62939453125e-06, -0.0023670196533203125, -8.96453857421875e-05, -5.7220458984375e-06, -0.08098316192626953, -0.023373575881123543, -0.10342216491699219, -0.0028219223022460938, -0.0008831024169921875, -1.9073486328125e-06, -0.8689722418785095, -3.278253643657081e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0050563812255859375, -9.1552734375e-05, -9.5367431640625e-06, -0.04947936534881592, -0.059916868805885315, -0.06557464599609375, -0.0061283111572265625, -0.04006671905517578, -0.36032962799072266, -0.00040435791015625, -0.02605915069580078, -0.000476837158203125, -0.026964187622070312, -1.33514404296875e-05, -0.5490816831588745, -1.6689286894688848e-06, -6.67572021484375e-05, -0.03003692626953125, -2.6702880859375e-05, -1.33514404296875e-05, -0.4776248335838318, -1.7881295207189396e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -1.0371197276981547e-05, -1.311301275563892e-06, -1.9073486328125e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.00041961669921875, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-05, -8.392333984375e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Sunfury", "Protector", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Sunfury", " ", "Protector", "<EOS>", 63, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 96, 32, 171, 46, 114, 173, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 94, 21, 119, "Taunt", "<EOS>", 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 94, 21, 119, "Taunt", "<EOS>", 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 94, 21, 119, "Taunt", "<EOS>", 65, 43, 94, 33, 43, 95, 33, 178, 159, "condition", "<EOS>", 16, 94, 21, 119, "Adjacent", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 63, 66, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Sunfury Protector"}, {"_type": "Template5"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Taunt"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Template8_expr_seq"}]}, {"_type": "Call", "func": {"_type": "Template19"}}], "func": {"_type": "Template18"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Adjacent"}}, "arg": "condition"}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template9"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "SunfuryProtector"}, {"_type": "Template6_stmt_seq"}]}, "score": -5.2662507930630795}], "gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n"}
{"beams": [{"inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Replace(), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-5.7220458984375e-06, -1.71661376953125e-05, -4.00543212890625e-05, -3.814697265625e-06, 0.0, -0.05516888573765755, -0.006296411156654358, -4.3868138163816184e-05, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -5.602834789897315e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001277923583984375, -1.33514404296875e-05, -3.814697265625e-05, -0.00046539306640625, -1.9073486328125e-06, -0.0008909308817237616, -5.543231236515567e-05, -1.2278503163543064e-05, -3.933906555175781e-06, -8.20159912109375e-05, -0.0001735687255859375, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.4614431858062744, 0.0, -2.86102294921875e-05, 0.0, -0.0030024051666259766, 0.0, -0.0013866424560546875, -1.52587890625e-05, -1.9073486328125e-05, -0.03984832763671875, -6.29425048828125e-05, -0.2717781066894531, -1.9073486328125e-06, -1.9073486328125e-06, -1.0743558406829834, -0.13274386525154114, -2.47955322265625e-05, -0.09166622161865234, -0.00048828125, -0.16593551635742188, -0.0002574920654296875, -0.16827988624572754, -1.9073486328125e-06, -1.9073486328125e-05, -0.0001659393310546875, -7.62939453125e-06, -1.9073486328125e-06, -0.11656343936920166, -1.990795135498047e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000255584716796875, -1.7881377516459906e-06, -2.47955322265625e-05, -0.0001068115234375, -1.9073486328125e-06, 0.0, -0.11735391616821289, -0.0004512909217737615, -2.7775760827353224e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -6.318092346191406e-06, -1.1920928244535389e-07, -2.6702880859375e-05, -7.43865966796875e-05, -0.0002346038818359375, -2.47955322265625e-05, -0.000171661376953125, -0.0001373291015625, -0.00254058837890625, -3.814697265625e-06, -1.71661376953125e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Tinkmaster", "Overspark", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Tinkmaster", " ", "Overspark", "<EOS>", 66, 61, 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 178, 159, "battlecry", "<EOS>", 16, 96, 29, 171, 43, 94, 21, 119, "Replace", "<EOS>", 43, 95, 33, 179, 159, "players", "<EOS>", 16, 94, 21, 119, "Both", "Player", "<EOS>", 159, "picker", "<EOS>", 16, 94, 21, 119, "User", "Picker", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 66, 66, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Tinkmaster Overspark"}, {"_type": "Template9"}, {"_type": "Template2"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Replace"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}, "arg": "picker"}], "func": {"_type": "Template19"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template9"}, {"_type": "Template9"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "TinkmasterOverspark"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.7132587308708125}], "gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}
{"beams": [{"inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def activate(self, player):\n        player.game.current_player.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('character_attack', self._reveal)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00020644917094614357, -5.9604644775390625e-06, -2.09808349609375e-05, -0.0007228851318359375, -2.86102294921875e-05, -0.0019279348198324442, -0.00018095517589244992, -7.987022399902344e-06, -0.6408729553222656, -1.33514404296875e-05, 0.0, -1.3589859008789062e-05, -1.1920928244535389e-07, -5.53131103515625e-05, -0.000141143798828125, -0.0002727508544921875, -0.22166824340820312, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.000102996826171875, -1.1444091796875e-05, -0.00011444091796875, -0.000125885009765625, -1.9073486328125e-06, -7.152555099310121e-07, -2.3841855067985307e-07, -9.72747802734375e-05, -5.7220458984375e-06, -0.00022125244140625, -1.9073486328125e-06, 0.0, -0.00010991092858603224, -5.996217078063637e-05, -0.13885164260864258, -1.1920928244535389e-07, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, 0.0, -9.72747802734375e-05, -1.52587890625e-05, -0.001285552978515625, -1.5497195136049413e-06, -8.0108642578125e-05, -5.7220458984375e-06, -0.07623004913330078, -3.4570680327306036e-06, 0.0, -8.96453857421875e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.748603820800781e-06, -1.9073486328125e-06, -0.0002002716064453125, -5.91278076171875e-05, -3.814697265625e-06, 0.0, -6.29425048828125e-05, -0.0013294219970703125, -2.86102294921875e-05, -0.00057220458984375, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.0050296783447265625, -0.004124045372009277, 0.0, -0.010648250579833984, -2.0265579223632812e-06, -0.06548488140106201, -1.9073486328125e-06, -1.1444091796875e-05, -7.05718994140625e-05, -0.0001163482666015625, -0.43213212490081787, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -0.0005054473876953125, -0.0018825531005859375, -2.47955322265625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.005352973937988281, -3.814697265625e-06, -1.9073486328125e-06, -0.0004215240478515625, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -0.00514984130859375, -0.0001220703125, -3.814697265625e-06, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0010662078857421875, 0.0, -8.20159912109375e-05, -1.52587890625e-05, -0.0010166168212890625, -0.002673387061804533, -3.814697265625e-06, -0.015639781951904297, -9.775161743164062e-06, -0.14718103408813477, -1.9073486328125e-06, -1.71661376953125e-05, -5.14984130859375e-05, -5.340576171875e-05, -0.3807950019836426, -5.7220458984375e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.000583648681640625, -0.0022401809692382812, -2.288818359375e-05, -2.288818359375e-05, -3.814697265625e-06, -0.0062351226806640625, -3.814697265625e-06, -1.9073486328125e-06, -0.000423431396484375, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.00628662109375, -0.0001220703125, -3.814697265625e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0011615753173828125, 0.0, -8.7738037109375e-05, -1.9073486328125e-05, -0.00103759765625, -0.0027691121213138103, -3.814697265625e-06, -0.01566469669342041, -9.775161743164062e-06, -0.13971805572509766, -1.9073486328125e-06, -1.71661376953125e-05, -5.14984130859375e-05, -4.9591064453125e-05, -0.37667036056518555, -5.7220458984375e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.000579833984375, -0.00225830078125, -2.288818359375e-05, -3.814697265625e-06], "choice_history": [68, 118, 184, 76, 98, "Vaporize", "<EOS>", 170, 48, 119, "Secret", "Card", "<EOS>", 186, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Vaporize", "<EOS>", 66, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 40, 89, 21, 119, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 79, 103, "activate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "bind", "<EOS>", 171, 51, 128, "character_attack", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 79, 103, "deactivate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 171, 51, 128, "character_attack", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 79, 103, "deactivate", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 77, 101, 16, 96, 13, 89, 13, 89, 13, 89, 27, "game", "<EOS>", "current_player", "<EOS>", "unbind", "<EOS>", 171, 51, 128, "character_attack", "<EOS>", 40, 89, 26, "_reveal", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Name", "id": "SecretCard"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Vaporize"}, {"_type": "Template9"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "RARE"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "bind"}}}], "name": "activate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}}}], "name": "deactivate"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "character_attack"}, {"_type": "Attribute", "value": {"_type": "Template11"}, "attr": "_reveal"}], "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template12"}, "attr": "game"}, "attr": "current_player"}, "attr": "unbind"}}}], "name": "deactivate"}], "name": "Vaporize"}, {"_type": "Template6_stmt_seq"}]}, "score": -2.722370322186933}], "gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n"}
{"beams": [{"inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -5.7220458984375e-06, 0.0, -0.0006413792725652456, -0.0002882400876842439, -0.0001591317413840443, -3.814697265625e-06, -3.814697265625e-06, -3.0517578125e-05, 0.0, -3.814697265625e-06, -4.768370445162873e-07, 0.0, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -3.62396240234375e-05, -0.00011444091796875, -5.7220458984375e-06, -1.9073486328125e-06, -5.149745265953243e-05, -5.2213435992598534e-05, -1.1444026313256472e-05, 0.0, -0.00022125244140625, -9.34600830078125e-05, -1.71661376953125e-05, -0.0002307891845703125, 0.0, -2.288818359375e-05, 0.0, 0.0, -2.288818359375e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -6.020006549078971e-05, -2.9802276912960224e-06, -4.00543212890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.006000518798828125, -4.76837158203125e-05, -1.71661376953125e-05, -3.0517578125e-05, -0.0001583099365234375, -0.000438690185546875, 0.0, -0.06959283351898193, -4.768370445162873e-07, -9.72747802734375e-05, -3.814697265625e-06, -3.254413604736328e-05, -3.576278118089249e-07, 0.0], "choice_history": [68, 118, 184, 76, 98, "Worgen", "Infiltrator", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 173, 51, 128, "Worgen", " ", "Infiltrator", "<EOS>", 64, 61, 53, 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 97, 31, 171, 63, 64, 178, 159, "stealth", "<EOS>", 22, 120, "True", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Worgen Infiltrator"}, {"_type": "Template7"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template5"}, {"_type": "Template7"}], "func": {"_type": "Template16"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": true}, "arg": "stealth"}]}}], "name": "create_minion"}], "name": "WorgenInfiltrator"}, {"_type": "Template6_stmt_seq"}]}, "score": -0.07872725610167208}], "gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n"}
{"beams": [{"inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.009591703303158283, -0.00043097036541439593, -4.851700214203447e-05, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, 0.0, 0.0, -5.960462772236497e-07, 0.0, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -8.96453857421875e-05, -0.00014495849609375, -3.24249267578125e-05, -0.0004596710205078125, 0.0, -0.0007420589681714773, -0.00013029263936914504, -5.006777428206988e-06, -2.3841855067985307e-07, -0.0001125335693359375, -0.0044841766357421875, -7.2479248046875e-05, -0.00121307373046875, 0.0, -0.0003393888473510742, 0.0, -9.5367431640625e-06, -1.52587890625e-05, -0.000759124755859375, -0.018945693969726562, -5.7220458984375e-06, -0.0037860870361328125, -0.000244140625, -3.814697265625e-06, -0.00030863037682138383, -8.118014375213534e-05, 0.0, -0.132537841796875, -1.52587890625e-05, -0.04725933074951172, -1.9073486328125e-06, 0.0, -0.024450302124023438, -1.537799835205078e-05, -5.7220458984375e-06, -0.0062255859375, -3.814697265625e-06, -0.0015506744384765625, 0.0, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.0010051727294921875, -5.936622619628906e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.000133514404296875, -1.1920928244535389e-07, -5.7220458984375e-06, -0.0001506805419921875, 0.0, 0.0, -0.060114145278930664, -0.0014203786849975586, -4.0531158447265625e-06, -1.9073486328125e-06, -0.48680973052978516, -0.000148773193359375, 0.0, -0.0365447998046875, -0.000558018684387207, -0.0001201629638671875, -3.814697265625e-06, -0.00037384033203125, -3.62396240234375e-05, -3.814697265625e-06, 0.0, -0.10137176513671875, -2.491474151611328e-05, -1.1444091796875e-05, -0.000988006591796875, -0.15994834899902344, -3.814697265625e-06, -1.9073486328125e-05, -0.004595398902893066, -0.00043487548828125, 0.0, -0.0001773834228515625, 0.0, -0.007595062255859375, 0.0, -0.00040721893310546875, -0.009578704833984375, -4.1961669921875e-05, 0.0, -0.0018329620361328125, -0.0019201040267944336, 0.0, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.007472038269042969, 0.0, -8.20159912109375e-05, -2.2649765014648438e-06, -0.12778759002685547, 0.0, -0.000308990478515625, 0.0, -0.011563301086425781, 0.0, -0.0003643035888671875, -1.71661376953125e-05, -0.0002596102422103286, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001239776611328125, -2.2649765014648438e-06, -2.3841855067985307e-07, -2.86102294921875e-05, -0.000576019287109375, -2.47955322265625e-05, -3.814697265625e-06, -7.82012939453125e-05, -9.918212890625e-05, -2.09808349609375e-05, -0.0001392364501953125, -0.0001659393310546875, -5.7220458984375e-06], "choice_history": [68, 118, 184, 76, 98, "Blackwing", "Corruptor", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Blackwing", " ", "Corruptor", "<EOS>", 58, 61, 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 172, 43, 96, 21, 119, "Damage", "<EOS>", 170, 66, 43, 95, 21, 119, "Character", "Selector", "<EOS>", 179, 159, "players", "<EOS>", 16, 94, 21, 119, "Both", "Player", "<EOS>", 159, "picker", "<EOS>", 16, 94, 21, 119, "User", "Picker", "<EOS>", 43, 97, 21, 119, "Greater", "Than", "<EOS>", 170, 43, 96, 21, 119, "Count", "<EOS>", 170, 43, 95, 21, 119, "Card", "Selector", "<EOS>", 178, 159, "condition", "<EOS>", 16, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 178, 159, "value", "<EOS>", 23, 124, "0", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 58, 57, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Blackwing Corruptor"}, {"_type": "Template15"}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "BothPlayer"}}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Name", "id": "UserPicker"}}, "arg": "picker"}], "func": {"_type": "Name", "id": "CharacterSelector"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}, "arg": "condition"}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}, "keywords": [{"_type": "keyword", "value": {"_type": "Num", "n": 0}, "arg": "value"}]}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template15"}, {"_type": "Template13"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "BlackwingCorruptor"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.279961326408504}], "gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n"}
{"beams": [{"inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), Not(GreaterThan(\n            Count(MinionSelector(CardSelector())), value=0))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.00043847484630532563, -0.0008845051634125412, -2.4437606043647975e-05, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -6.866455078125e-05, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0001621246337890625, -0.0001125335693359375, -3.4332275390625e-05, -2.47955322265625e-05, -1.9073486328125e-05, -7.92710343375802e-05, -3.480901796137914e-05, -1.5854815501370467e-05, -2.0265579223632812e-06, -0.0001430511474609375, -7.62939453125e-06, -8.629482181277126e-06, -1.4901146641932428e-05, -0.00017547607421875, -0.008960723876953125, -0.05545234680175781, 0.0, -0.23216629028320312, 0.0, -0.0001392364501953125, -1.9073486328125e-05, -0.0001049041748046875, -0.06757545471191406, 0.0, -0.00251007080078125, -0.0484161376953125, -0.00020599365234375, -0.01858234405517578, -7.05718994140625e-05, -0.000591278076171875, -1.52587890625e-05, -1.33514404296875e-05, 0.0, 0.0, -0.0025807619094848633, 0.0, -3.814697265625e-05, -1.33514404296875e-05, -0.000102996826171875, -5.7220458984375e-06, 0.0, -0.00010788363579194993, -0.022225260734558105, -7.62939453125e-06, -1.1444091796875e-05, -0.0962066650390625, -0.0004100799560546875, -0.0005931854248046875, -3.814697265625e-06, -1.52587890625e-05, -9.72747802734375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.004482269287109375, -4.00543212890625e-05, -3.814697265625e-06, -0.0004057884216308594, -0.02872490882873535, -1.9073486328125e-06, -5.91278076171875e-05, -0.06112957000732422, -0.06921195983886719, -1.71661376953125e-05, -0.0007228851318359375, -3.814697265625e-06, 0.0, -0.0008116958197206259, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.22842884063720703, -0.008600234985351562, 0.0, -0.03996467590332031, -0.021767616271972656, -0.008365631103515625, -0.00016021728515625, -0.3079681396484375, -0.0004405975341796875, -1.33514404296875e-05, -0.010504722595214844, -0.0014600753784179688, 0.0, -1.9073486328125e-06, -0.0011301040649414062, -0.00023651123046875, -3.814697265625e-06, -4.57763671875e-05, -0.0039615631103515625, -0.0003437995910644531, -3.814697265625e-06, -0.0001163482666015625, -0.6233596801757812, -0.011053085327148438, -0.0830841064453125, -0.001049041748046875, -0.08775901794433594, -9.5367431640625e-06, -0.00753021240234375, -0.9340280294418335, -0.0019212961196899414, -3.576278118089249e-07, -4.57763671875e-05, -1.9073486328125e-06, -0.0027608871459960938, 0.0, -0.010006904602050781, -2.47955322265625e-05, -3.1113551813177764e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -5.7220458984375e-06, 0.0, 0.0, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.3378591979271732e-06, -3.576278118089249e-07, -4.38690185546875e-05, -6.4849853515625e-05, -7.62939453125e-06, 0.0, -0.004547119140625, -1.33514404296875e-05, -1.1444091796875e-05, -0.000141143798828125, -3.814697265625e-06, -1.6689609765307978e-06, -1.2516963579400908e-05, -0.000339508056640625, -1.9073486328125e-06, -2.2561580408364534e-05, -7.462237408617511e-05, 0.0], "choice_history": [68, 118, 184, 76, 98, "Drakonid", "Crusher", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Drakonid", " ", "Crusher", "<EOS>", 50, 124, "6", "<EOS>", 61, 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 172, 43, 96, 32, 170, 46, 114, 172, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 66, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 66, 65, 43, 94, 21, 119, "Self", "Selector", "<EOS>", 43, 96, 21, 119, "Not", "<EOS>", 170, 43, 97, 21, 119, "Greater", "Than", "<EOS>", 170, 43, 96, 21, 119, "Count", "<EOS>", 170, 43, 96, 33, 170, 43, 94, 21, 119, "Card", "Selector", "<EOS>", 178, 159, "value", "<EOS>", 23, 124, "0", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 50, 124, "6", "<EOS>", 50, 124, "6", "<EOS>", 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Drakonid Crusher"}, {"_type": "Num", "n": 6}, {"_type": "Template2"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Template8_expr_seq"}]}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Template19"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}, "keywords": [{"_type": "keyword", "value": {"_type": "Num", "n": 0}, "arg": "value"}]}], "func": {"_type": "Name", "id": "Not"}}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Num", "n": 6}, {"_type": "Num", "n": 6}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "DrakonidCrusher"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.126800602591061}], "gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}
{"beams": [{"inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -2.6702880859375e-05, -1.33514404296875e-05, -2.8609820219571702e-05, -4.6491513785440475e-06, -3.814697265625e-06, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001506805419921875, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.33514404296875e-05, -9.5367431640625e-06, 0.0, 0.0, -0.08576202392578125, -0.0001316070556640625, -0.047328948974609375, -0.000507354736328125, -5.91278076171875e-05, -0.00017391123401466757, -3.933906555175781e-06, -0.05728340148925781, -5.7220458984375e-06, -0.002711651613935828, -7.62939453125e-06, -0.08525943756103516, -0.5832061767578125, -0.00138092041015625, -0.058297157287597656, -0.0001392364501953125, -7.62939453125e-06, -0.0014495849609375, 0.0, -0.000102996826171875, -2.288818359375e-05, -0.005603790283203125, -1.52587890625e-05, -0.20540714263916016, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.000110626220703125, -7.05718994140625e-05, -2.47955322265625e-05, -0.001239776611328125, -0.023784279823303223, -1.3232186574896332e-05, -0.0006866455078125, -0.0006275177001953125, -1.52587890625e-05, -3.814697265625e-05, -0.0005035400390625, -0.0002384185791015625, -0.0001678466796875, -0.00019073486328125, -8.7738037109375e-05, -2.47955322265625e-05], "choice_history": [68, 118, 184, 76, 98, "Imp", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 96, 25, 175, 51, 128, "Imp", "<EOS>", 50, 124, "0", "<EOS>", 61, 53, 49, 120, "False", "<EOS>", 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "p", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 64, 64, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Imp"}, {"_type": "Num", "n": 0}, {"_type": "Template2"}, {"_type": "Template1"}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DEMON"}], "func": {"_type": "Template0"}}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "p"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template7"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "Imp"}, {"_type": "Template6_stmt_seq"}]}, "score": -1.1630623163810014}], "gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}
{"beams": [{"inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(\n            Count(CardSelector(condition=IsType(MINION_TYPE.DRAGON))),\n            value=0)))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001419683248968795, -0.2786021828651428, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-05, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.271612412296236e-05, -0.0012935400009155273, -6.318072337307967e-06, 0.0, -0.0005626678466796875, -0.04259300231933594, -5.7220458984375e-06, -7.2479248046875e-05, -1.9073486328125e-06, -2.491474151611328e-05, -3.8504000258399174e-05, -0.7648944854736328, 0.0, -7.62939453125e-06, -0.5524921417236328, 0.0, -0.00038909912109375, 0.0, -1.33514404296875e-05, -5.53131103515625e-05, -0.000438690185546875, -0.0008296966552734375, -2.288818359375e-05, -0.000232696533203125, -0.01551055908203125, -0.001262664794921875, -0.013631820678710938, -0.0001621246337890625, -0.0014362335205078125, -1.9073486328125e-06, -4.00543212890625e-05, -1.9073486328125e-06, 0.0, -0.012623071670532227, -2.1219253540039062e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.00049591064453125, -2.47955322265625e-05, 0.0, -8.833291940391064e-05, -0.014784693717956543, -3.814697265625e-06, -5.7220458984375e-06, -0.20215129852294922, -0.006256103515625, -0.001087188720703125, -2.288818359375e-05, 0.0, -0.00010883808135986328, -9.5367431640625e-06, -1.9073486328125e-06, -2.47955322265625e-05, -0.013444900512695312, -0.0002651214599609375, 0.0, -0.00013625615974888206, -0.0074481964111328125, 0.0, -9.5367431640625e-06, -0.336669921875, -0.0062847137451171875, -3.62396240234375e-05, -0.0003032684326171875, -2.6702880859375e-05, 0.0, -0.0009603499202057719, -7.62939453125e-06, 0.0, -3.814697265625e-06, -0.49494457244873047, -2.09808349609375e-05, 0.0, -0.002572178840637207, -0.0005056858062744141, -4.0531158447265625e-06, -3.814697265625e-06, -0.000244140625, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.015558242797851562, -3.647804260253906e-05, -5.7220458984375e-06, -0.009549140930175781, -0.3808555603027344, -0.00012969970703125, -1.9073486328125e-06, -0.0007709261844865978, -0.0009671449661254883, -1.1920928244535389e-07, -8.96453857421875e-05, 0.0, -0.002567291259765625, 0.0, -0.0012674331665039062, -0.0034694671630859375, -0.000469207763671875, 0.0, -0.08920669555664062, -0.001028418424539268, 0.0, 0.0, -9.5367431640625e-06, 0.0, -0.0026121139526367188, 0.0, -3.4332275390625e-05, -2.622604142743512e-06, -0.07745075225830078, 0.0, -0.0002460479736328125, 0.0, -0.011838912963867188, 0.0, -0.0006008148193359375, -6.29425048828125e-05, -3.588198160286993e-05, 0.0, -1.9073486328125e-06, 0.0, -2.09808349609375e-05, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, -9.298322765971534e-06, -3.576278118089249e-07, -1.71661376953125e-05, -0.000518798828125, -5.7220458984375e-06, -1.9073486328125e-06, -0.00037384033203125, -7.62939453125e-06, -6.29425048828125e-05, -0.34226036071777344, -2.6702880859375e-05, -3.814697265625e-06], "choice_history": [68, 118, 184, 76, 98, "Twilight", "Whelp", "<EOS>", 170, 62, 184, 79, 103, "__init__", "<EOS>", 157, 163, 0, 183, 77, 101, 16, 97, 25, 173, 51, 128, "Twilight", " ", "Whelp", "<EOS>", 64, 40, 89, 21, 119, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 53, 178, 159, "battlecry", "<EOS>", 16, 96, 29, 172, 43, 96, 32, 170, 46, 114, 172, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Attack", "<EOS>", 170, 66, 43, 96, 21, 119, "Buff", "<EOS>", 170, 43, 96, 21, 119, "Change", "Health", "<EOS>", 170, 66, 65, 43, 94, 21, 119, "Self", "Selector", "<EOS>", 43, 97, 21, 119, "Greater", "Than", "<EOS>", 170, 43, 96, 21, 119, "Count", "<EOS>", 170, 43, 95, 21, 119, "Card", "Selector", "<EOS>", 178, 159, "condition", "<EOS>", 16, 96, 21, 119, "Is", "Type", "<EOS>", 170, 40, 89, 21, 119, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 178, 159, "value", "<EOS>", 23, 124, "0", "<EOS>", 79, 103, "create_minion", "<EOS>", 157, 164, 0, 1, 156, "player", "<EOS>", 183, 82, 126, 16, 96, 31, 171, 64, 64, 83], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "bases": [{"_type": "Template4"}], "body": [{"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "args": [{"_type": "Str", "s": "Twilight Whelp"}, {"_type": "Template7"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARRIOR"}, {"_type": "Template1"}], "func": {"_type": "Template0"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "List", "elts": [{"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "ChangeAttack"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Template9"}], "func": {"_type": "Name", "id": "ChangeHealth"}}], "func": {"_type": "Name", "id": "Buff"}}, {"_type": "Template8_expr_seq"}]}], "func": {"_type": "Template18"}}, {"_type": "Call", "func": {"_type": "Name", "id": "SelfSelector"}}, {"_type": "Call", "args": [{"_type": "Call", "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "value": {"_type": "Call", "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "DRAGON"}], "func": {"_type": "Name", "id": "IsType"}}, "arg": "condition"}], "func": {"_type": "Name", "id": "CardSelector"}}], "func": {"_type": "Name", "id": "Count"}}], "func": {"_type": "Name", "id": "GreaterThan"}, "keywords": [{"_type": "keyword", "value": {"_type": "Num", "n": 0}, "arg": "value"}]}], "func": {"_type": "Template14"}}, "arg": "battlecry"}]}}], "name": "__init__"}, {"_type": "FunctionDef", "args": {"_type": "arguments", "args": [{"_type": "Template3"}, {"_type": "arg", "arg": "player"}]}, "body": [{"_type": "Return", "value": {"_type": "Call", "args": [{"_type": "Template7"}, {"_type": "Template7"}], "func": {"_type": "Template16"}}}], "name": "create_minion"}], "name": "TwilightWhelp"}, {"_type": "Template6_stmt_seq"}]}, "score": -3.7190700034731705}], "gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}
